import createClient, { type Middleware } from "openapi-fetch";
import type { paths } from "./prefect.ts"; // generated by openapi-typescript

const throwOnError: Middleware = {
	async onResponse({ response }) {
		if (!response.ok) {
			const body = (await response.clone().json()) as Record<string, unknown>;
			throw new Error(body.detail as string | undefined);
		}
	},
};

let client: ReturnType<typeof createClient<paths>> | null = null;

// TODO: Make the baseUrl configurable
export const getQueryService = () => {
	if (!client) {
		client = createClient<paths>({
			baseUrl:
				(import.meta.env.VITE_API_URL as string) ?? "http://localhost:4200/api",
		});
		client.use(throwOnError);
	}
	return client;
};
