name: Prefect AWS Docker Test Build

on:
  pull_request:
    paths:
      - "src/integrations/prefect-aws/Dockerfile"
      - ".github/workflows/prefect-aws-docker-images.yaml"
      - ".github/workflows/prefect-aws-docker-test.yaml"

jobs:
  get-versions:
    name: Get Prefect and prefect-aws versions
    runs-on: ubuntu-latest
    outputs:
      PREFECT_VERSION: ${{ steps.get_prefect_version.outputs.PREFECT_VERSION }}
      PREFECT_AWS_VERSION: ${{ steps.get_prefect_aws_version.outputs.PREFECT_AWS_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get latest Prefect version
        id: get_prefect_version
        run: |
          PREFECT_VERSION=$(gh api repos/${{ github.repository }}/releases/latest --jq '.tag_name')
          echo "PREFECT_VERSION=$PREFECT_VERSION" >> $GITHUB_OUTPUT

      - name: Get latest prefect-aws version from tags
        id: get_prefect_aws_version
        run: |
          PREFECT_AWS_VERSION=$(git tag --list 'prefect-aws-*' --sort=-version:refname | head -1 | sed 's/^prefect-aws-//')
          if [ -z "$PREFECT_AWS_VERSION" ]; then
            # Fallback to a reasonable default if no tags exist
            PREFECT_AWS_VERSION="0.6.0"
          fi
          echo "PREFECT_AWS_VERSION=$PREFECT_AWS_VERSION" >> $GITHUB_OUTPUT

  test-build:
    name: Test build prefect-aws Docker image
    runs-on: ubuntu-latest
    needs: get-versions

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:v0.12.5

      - name: Test Docker build
        uses: docker/build-push-action@v6
        with:
          context: src/integrations/prefect-aws
          platforms: linux/amd64
          build-args: |
            PYTHON_VERSION=3.12
            PREFECT_VERSION=${{ needs.get-versions.outputs.PREFECT_VERSION }}
            PREFECT_AWS_VERSION=${{ needs.get-versions.outputs.PREFECT_AWS_VERSION }}
          push: false
          pull: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
