name: Integration Tests
on:
  pull_request:
    paths:
      - .github/workflows/integration-tests.yaml
      - "**/*.py"
      - requirements.txt
      - requirements-dev.txt
      - orion-ui/**
      - .nvmrc
      - Dockerfile
  push:
    branches:
      - main

jobs:
  playwright-tests:
    name: "Test UI"
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: "requirements*.txt"

      - name: Install python packages
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --upgrade-strategy eager -e .[dev]
          
      - name: Build orion-ui
        run: |
          prefect dev build-ui
          
      - name: Run Orion in background
        run: |
          prefect orion start&

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache-dependency-path: '**/package-lock.json'
      
      - name: Retrieve Playwright version
        id: playwright-cache-key
        run: |
          echo "::set-output name=version::$(npx playwright -V)"
        
      - name: Retrieve cached Playwright browsers
        id: cache-playwright-browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ steps.playwright-cache-key.outputs.version }}-playwright-browsers

      - name: Install Playwright browsers
        working-directory: ./orion-ui
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: ./orion-ui
        run: npx playwright test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: ./orion-ui/playwright-report/
          retention-days: 30

  compatibility-tests:
    name: "Check backwards compatibility"
    timeout-minutes: 60

    strategy:
      matrix:
        prefect-version:
          - "2.0"
          - "2.1"
          - "2.2"
          - "2.3"
          - "2.4"

      fail-fast: false

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: "requirements*.txt"

      - name: Install python packages
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --upgrade-strategy eager -e .[dev]

      - name: Start Orion server@${{ matrix.prefect-version }}
        run: >
          docker run
          --name "orion-server-${{ matrix.prefect-version }}"
          --detach
          --publish 4200:4200
          prefecthq/prefect:${{ matrix.prefect-version }}-python3.10
          prefect orion start --host 0.0.0.0

      - name: Wait for server
        run: >
          PREFECT_API_URL="http://127.0.0.1:4200/api"
          ./scripts/wait-for-server.py

      - name: Run integration flows with development code
        run: >
          PREFECT_API_URL="http://127.0.0.1:4200/api"
          ./scripts/run-integration-flows.py
