name: Release prefect

on:
  release:
    types: [released, prereleased]

jobs:
  build-pypi-dists:
    name: Build Python package

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          # Versioneer only generates correct versions with a full fetch
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: "pip"
          cache-dependency-path: "requirements*.txt"

      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache-dependency-path: "**/package-lock.json"

      - name: Install python packages
        run: |
          python -m pip install -U pip setuptools wheel
          pip install -U -e .[dev]

      - name: Build orion-ui
        run: |
          prefect dev build-ui

      - name: Build a binary wheel and a source tarball
        run: |
          python setup.py sdist bdist_wheel

      - name: Publish build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pypi-dists
          path: "./dist"

  publish-docs:
    name: Publish documentation
    needs: [build-pypi-dists]
    environment: "prod"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Checkout current docs
        run: git checkout docs-deploy --

      - name: Create a temporary branch
        # the release tag is parsed from the ref
        run: git checkout -b "docs-for-release-${GITHUB_REF#refs/*/}"

      - name: Merge with main
        run: git merge origin/main --no-ff -m "Merge branch 'main' into temporary docs branch"

      - name: Push and open PR
        run: |
          git push --set-upstream origin HEAD
          gh pr create \
            --title "Publish docs from release ${GITHUB_REF#refs/*/}" \
            --body '_automatically created with `gh` cli on release_' \
            --base docs-deploy
          gh pr merge --rebase --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-pypi-dists:
    name: Publish to PyPI
    environment: "prod"
    needs: [build-pypi-dists]
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: pypi-dists
          path: "./dist"

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          name: ci
