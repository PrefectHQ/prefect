name: Release prefect

# Note: Conda support for 3.11 is pending. See https://github.com/ContinuumIO/anaconda-issues/issues/13082

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+rc[0-9]+"
      - "[0-9]+.[0-9]+[ab][0-9]+"
jobs:
  build-release:
    name: Build Python package

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          # Versioneer only generates correct versions with a full fetch
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: "pip"
          cache-dependency-path: "requirements*.txt"

      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache-dependency-path: "**/package-lock.json"

      - name: Install python packages
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --upgrade-strategy eager -e .[dev]

      - name: Build orion-ui
        run: |
          prefect dev build-ui

      - name: Build a binary wheel and a source tarball
        run: |
          python setup.py sdist
          python setup.py bdist_wheel

      - name: Publish build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: built-package
          path: "./dist"

  build-docker-images:
    name: Build Docker images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"

    steps:
      # Not needed until we want multiarchecture builds
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate image metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: prefecthq/prefect
          tags: |
            type=pep440,pattern={{version}},suffix=-python${{ matrix.python-version }}
            type=pep440,pattern={{major}}.{{minor}},suffix=-python${{ matrix.python-version }}
            type=pep440,pattern={{major}},suffix=-python${{ matrix.python-version }}
            type=sha,suffix=-python${{ matrix.python-version }}
            type=raw,value=2-latest,enable=${{ matrix.python-version == '3.10'}}
          flavor: |
            latest=false

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: PYTHON_VERSION=${{ matrix.python-version }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          outputs: type=docker,dest=/tmp/image.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test docker image
        run: |
          docker load --input /tmp/image.tar
          docker run --rm prefecthq/prefect:sha-${GITHUB_SHA::7}-python${{ matrix.python-version }} prefect version

      - name: Upload image artifact
        uses: actions/upload-artifact@v3
        # Images are stashed for publish after approval is given
        with:
          name: release-image-${{ github.sha }}-${{ matrix.python-version }}
          path: /tmp/image.tar

  build-conda-docker-images:
    name: Build Conda Docker images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          # Not yet supported, see note at top
          # - "3.11"

    steps:
      # Not needed until we want multiarchecture builds
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate image metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: prefecthq/prefect
          tags: |
            type=pep440,pattern={{version}},suffix=-python${{ matrix.python-version }}-conda
            type=pep440,pattern={{major}}.{{minor}},suffix=-python${{ matrix.python-version }}-conda
            type=pep440,pattern={{major}},suffix=-python${{ matrix.python-version }}-conda
            type=sha,suffix=-python${{ matrix.python-version }}-conda
            type=raw,value=2-latest-conda,enable=${{ matrix.python-version == '3.10'}}
          flavor: |
            latest=false

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            PYTHON_VERSION=${{ matrix.python-version }}
            BASE_IMAGE=prefect-conda
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          outputs: type=docker,dest=/tmp/image-conda.tar
          cache-from: type=gha
          # We do not cache Conda image layers because they very big and slow to upload
          # cache-to: type=gha,mode=max

      - name: Test docker image
        run: |
          docker load --input /tmp/image-conda.tar
          docker run --rm prefecthq/prefect:sha-${GITHUB_SHA::7}-python${{ matrix.python-version }}-conda prefect version

      - name: Upload image artifact
        uses: actions/upload-artifact@v3
        # Images are stashed for publish after approval is given
        with:
          name: release-image-${{ github.sha }}-${{ matrix.python-version }}-conda
          path: /tmp/image-conda.tar

  publish-release:
    name: Publish to PyPI
    environment: "prod"
    needs: [build-release]
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: built-package
          path: "./dist"

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

          name: ci

  publish-docs:
    name: Publish documentation
    needs: [build-release]
    environment: "prod"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Checkout current docs
        run: git checkout docs-deploy --

      - name: Create a temporary branch
        # the release tag is parsed from the ref
        run: git checkout -b "docs-for-release-${GITHUB_REF#refs/*/}"

      - name: Merge with main
        run: git merge origin/main --no-ff -Xtheirs -m "Merge branch 'main' into temporary docs branch"

      - name: Rebase onto docs-deploy
        run: git rebase docs-deploy -Xours

      - name: Push and open PR
        run: |
          git push --set-upstream origin HEAD
          gh pr create \
            --title "Publish docs from release ${GITHUB_REF#refs/*/}" \
            --body '_automatically created with `gh` cli on release_' \
            --base docs-deploy
          gh pr merge --rebase --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-docker-images:
    name: Publish to DockerHub
    needs: [build-docker-images, build-conda-docker-images, build-release]
    environment: "prod"

    runs-on: ubuntu-latest
    steps:
      - name: Download image artifacts for Python 3.7
        uses: actions/download-artifact@v3
        with:
          name: release-image-${{ github.sha }}-3.7
          path: /tmp/3.7/

      - name: Download image artifacts for Python 3.8
        uses: actions/download-artifact@v3
        with:
          name: release-image-${{ github.sha }}-3.8
          path: /tmp/3.8/

      - name: Download image artifacts for Python 3.9
        uses: actions/download-artifact@v3
        with:
          name: release-image-${{ github.sha }}-3.9
          path: /tmp/3.9/

      - name: Download image artifacts for Python 3.10
        uses: actions/download-artifact@v3
        with:
          name: release-image-${{ github.sha }}-3.10
          path: /tmp/3.10/

      - name: Download image artifacts for Python 3.11
        uses: actions/download-artifact@v3
        with:
          name: release-image-${{ github.sha }}-3.11
          path: /tmp/3.11/

      - name: Download conda image artifacts for Python 3.7
        uses: actions/download-artifact@v3
        with:
          name: release-image-${{ github.sha }}-3.7-conda
          path: /tmp/3.7/

      - name: Download conda image artifacts for Python 3.8
        uses: actions/download-artifact@v3
        with:
          name: release-image-${{ github.sha }}-3.8-conda
          path: /tmp/3.8/

      - name: Download conda image artifacts for Python 3.9
        uses: actions/download-artifact@v3
        with:
          name: release-image-${{ github.sha }}-3.9-conda
          path: /tmp/3.9/

      - name: Download conda image artifacts for Python 3.10
        uses: actions/download-artifact@v3
        with:
          name: release-image-${{ github.sha }}-3.10-conda
          path: /tmp/3.10/

      # Not yet available, see note at top
      # - name: Download conda image artifacts for Python 3.11
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: release-image-${{ github.sha }}-3.11-conda
      #     path: /tmp/3.11/

      - name: Load images
        run: |
          docker load --input /tmp/3.7/image.tar
          docker load --input /tmp/3.8/image.tar
          docker load --input /tmp/3.9/image.tar
          docker load --input /tmp/3.10/image.tar
          docker load --input /tmp/3.11/image.tar
          docker load --input /tmp/3.7/image-conda.tar
          docker load --input /tmp/3.8/image-conda.tar
          docker load --input /tmp/3.9/image-conda.tar
          docker load --input /tmp/3.10/image-conda.tar
          # Not yet available, see note at top
          # docker load --input /tmp/3.11/image-conda.tar

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push images
        run: |
          docker image push --all-tags prefecthq/prefect
