version: 2
jobs:
  # ----------------------------------
  # Check formatting
  # ----------------------------------

  check_black_formatting:
    docker:
      - image: python:3.6
    steps:
      - checkout

      - run:
          name: Install Black
          command: pip install black

      - run:
          name: Run Black
          command: black --check .

  check_mypy_typing:
    docker:
      - image: python:3.6
    steps:
      - checkout

      - run:
          name: Install mypy
          command: pip install mypy mypy_extensions

      - run:
          name: Run mypy
          command: mypy src/

  # test a standard install of prefect
  # is importable in python 3.5.2
  # there was a typing bug in 3.5.2 that this attempts to catch
  test-py352-import-prefect:
    docker:
      - image: python:3.5.2

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install vanilla prefect
          command: pip install .

      - run:
          name: Test Prefect imports cleanly
          command: python -c "import prefect"

  # test a standard install of prefect
  # this ensures we correctly capture all ImportError sitautions
  # caused by many package dependency options
  test-vanilla-prefect:
    docker:
      - image: python:3.6

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install zsh for tests
          command: apt-get update && apt-get install -y zsh

      - run:
          name: Install vanilla prefect
          command: pip install .

      - run:
          name: Install testing packages
          command: pip install black pytest==3.10.1 pytest-cov pytest-env

      - run:
          name: Run tests
          command: pytest -k "not examples" --cov=prefect .

      - run:
          name: Upload Coverage
          command: bash <(curl -s https://codecov.io/bash) -cF python

  # ----------------------------------
  # Run unit tests in Python 3.5-3.7
  # ----------------------------------

  test-3.5:
    docker:
      - image: python:3.5

    # store steps as an alias to reuse them with different python versions
    steps: &run_test_steps
      - checkout
      - setup_remote_docker
      - run:
          name: Install zsh for tests
          command: apt-get update && apt-get install -y zsh

      - run:
          name: Install graphviz
          command: apt-get update && apt-get install -y graphviz

      - run:
          name: Install prefect
          command: pip install ".[all_extras]"

      - run:
          name: Run tests
          command: pytest --cov=prefect .

      - run:
          name: Upload Coverage
          command: bash <(curl -s https://codecov.io/bash) -cF python

  test-3.6:
    docker:
      - image: python:3.6
    steps: *run_test_steps

  test-3.7:
    docker:
      - image: python:3.7
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install zsh for tests
          command: apt-get update && apt-get install -y zsh

      - run:
          name: Install graphviz
          command: apt-get update && apt-get install -y graphviz

      - run:
          name: Install prefect
          command: pip install ".[all_extras]"

      - run:
          name: Run tests
          command: pytest .

  test-airflow:
    docker:
      - image: continuumio/miniconda3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install gcc
          command: apt-get update && apt-get install -y gcc

      - run:
          name: Create Airflow conda environment
          command: conda create -n airflow python=3.6 pip -y

      - run:
          name: Install Airflow
          command: source activate airflow && SLUGIFY_USES_TEXT_UNIDECODE=yes pip install apache-airflow && source deactivate

      - run:
          name: Install prefect
          command: pip install ".[all_extras]"

      - run:
          name: Run tests w/ airflow
          command: pytest --airflow --cov=prefect .

      - run:
          name: Upload Coverage
          command: bash <(curl -s https://codecov.io/bash) -cF python

  build_image:
    docker:
      - image: docker
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Docker Build
          command: docker build -t prefecthq/prefect .
      - run:
          name: Test image
          command: |
            docker run -dit prefecthq/prefect /bin/bash -c 'curl -fL0 https://raw.githubusercontent.com/PrefectHQ/prefect/master/examples/retries_with_mapping.py | python'
      - run:
          name: Authenticate with Docker Hub and push
          command: |
            docker login --username  $DOCKER_HUB_USER --password $DOCKER_HUB_PW
            docker push prefecthq/prefect

workflows:
  version: 2

  'Run unit tests':
    jobs:
      - test-3.5
      - test-3.6
      - test-3.7

  'Check code style':
    jobs:
      - check_black_formatting
      - check_mypy_typing

  'Run specialized tests':
    jobs:
      - test-vanilla-prefect
      - test-py352-import-prefect
      - test-airflow

  'Build docker images':
    jobs:
      - build_image:
          filters:
            branches:
              only: master
