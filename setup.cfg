[tool:pytest]
addopts = -rfEs
norecursedirs = *.egg-info .git .mypy_cache node_modules .pytest_cache .vscode

python_files =
    test_*.py
    bench_*.py

python_functions =
    test_*
    bench_*

markers =
    service(arg): a service integration test. For example 'docker'
    enable_api_log_handler: by default, sending logs to the API is disabled. Tests marked with this use the handler.
    clear_db: marker to clear the database after test completion

env =
    # NOTE: Additional Prefect setting values are set dynamically in conftest.py
    PREFECT_TEST_MODE = 1

asyncio_mode = auto
timeout = 90

# Error on unhandled warnings
filterwarnings =
    error
    # tornado uses deprecated `get_event_loop`
    ignore::DeprecationWarning:tornado.platform.asyncio.*
    ignore::DeprecationWarning:tornado.ioloop
    # ignore these until we have a chance to reimplement in pydantic v2
    ignore:Support for class-based `config` is deprecated
    ignore:The `__fields__` attribute is deprecated
    ignore:The private method `_iter` will be removed
    ignore:The `__fields_set__` attribute is deprecated, use `model_fields_set` instead
    ignore:`__get_validators__` is deprecated and will be removed, use `__get_pydantic_core_schema__`
    ignore:The `dict` method is deprecated; use `model_dump` instead
    ignore:The `schema` method is deprecated; use `model_json_schema` instead
    ignore:Default value default=
    # Temporary directories are cleaned up implicitly on Windows
    # It is unclear if this comes from an external tool or our own usage
    # Here the start of the path is included to only filter warnings on Windows
    ignore:Implicitly cleaning up:ResourceWarning
    # Dask leaves files open when using file locks
    # See https://github.com/dask/distributed/pull/6122
    ignore::ResourceWarning:distributed.diskutils
    # Dask may not close sockets on cluster teardown
    ignore:unclosed:ResourceWarning:distributed.node
    # Google suggests installing a module for better error messages
    ignore::ImportWarning:google.api_core.exceptions
    # SQLAlchemy leaves some cursors unawaited
    ignore:coroutine 'Connection.cursor' was never awaited:RuntimeWarning
    ignore:coroutine 'AsyncAdapt_asyncpg_cursor._prepare_and_execute' was never awaited:RuntimeWarning
    # These task runners will be removed in future release
    ignore:The `RayTaskRunner` has moved:DeprecationWarning
    ignore:The `DaskTaskRunner` has moved:DeprecationWarning
    ignore:`DeploymentSpec` has been replaced by `Deployment`:DeprecationWarning
    # This warning is raised on Windows by Python internals
    ignore:the imp module is deprecated:DeprecationWarning
    # Dockerpy is behind on this one
    ignore:distutils Version classes are deprecated:DeprecationWarning
    # distutils is deprecated, but we are using it directly in prefect/filesystems.py
    ignore:The distutils package is deprecated:DeprecationWarning
    # apprise<=1.1.0 has not been updated to use the new locale functions in Python 3.11
    ignore:Use setlocale:DeprecationWarning
    ignore:Skipped unsupported reflection of expression-based index:sqlalchemy.exc.SAWarning
    # Required to pass --cov-config to pytest
    ignore:The --rsyncdir command line argument and rsyncdirs config variable are deprecated.:DeprecationWarning
    ignore:Prefect will drop support for Python 3.7:FutureWarning
    ignore:`PREFECT_API_URL` uses `/account/` but should use `/accounts/`.:UserWarning
    ignore:`PREFECT_API_URL` should have `/api` after the base URL.:UserWarning
    # datetime.datetime.utcnow() is deprecated as of Python 3.12, waiting on 3rd party fixes in boto3 https://github.com/boto/boto3/issues/3889
    ignore:datetime\.datetime\.utcnow\(\) is deprecated and scheduled for removal in a future version\..*:DeprecationWarning
    ignore:datetime\.datetime\.utcfromtimestamp\(\) is deprecated and scheduled for removal in a future version\..*:DeprecationWarning
    # We know that under certain constraints, SQLAlchemy connections may leak during
    # the test suite before they can be cleaned up properly, but this is not a failure
    # of the tests.
    ignore::sqlalchemy.exc.SAWarning
    ignore::ResourceWarning
    ignore::pytest.PytestUnraisableExceptionWarning
    ignore::pluggy.PluggyTeardownRaisedWarning


[mypy]
# TODO: We will allow definitions to be untyped for now; in the future we will want to
#       toggle these back to True to enforce type checks.
disallow_untyped_defs = False
check_untyped_defs = False

# Empty `mypy` will run on the prefect module
files = ./src/prefect/**/*.py

[mypy-prefect.flows]
# mypy does not support ParamSpec which is used to preserve parameter types
ignore_errors = True

[mypy-prefect.tasks]
# mypy does not support ParamSpec which is used to preserve parameter types
ignore_errors = True

[versioneer]
VCS = git
style = pep440
versionfile_source = src/prefect/_version.py
versionfile_build = prefect/_version.py
tag_prefix =
parentdir_prefix =

[coverage:run]
branch = True

[coverage:report]
exclude_lines =
    # Don't complain about abstract methods, they aren't run:
    @(abc\.)?abstractmethod

omit =
    src/prefect/server/database/migrations/versions/*

ignore_errors = True
