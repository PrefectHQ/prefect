<>
    <meta charSet="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content="pdoc 14.5.0" />
    <title>prefect API documentation</title>
    <style
        dangerouslySetInnerHTML={{
            __html:
                '\n        /*! * Bootstrap Reboot v5.0.0 (https://getbootstrap.com/) * Copyright 2011-2021 The Bootstrap Authors * Copyright 2011-2021 Twitter, Inc. * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE) * Forked from Normalize.css, licensed MIT (https://github.com/necolas/normalize.css/blob/master/LICENSE.md) */\n        *,\n        ::after,\n        ::before {\n            box-sizing: border-box\n        }\n\n        @media (prefers-reduced-motion:no-preference) {\n            :root {\n                scroll-behavior: smooth\n            }\n        }\n\n        body {\n            margin: 0;\n            font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";\n            font-size: 1rem;\n            font-weight: 400;\n            line-height: 1.5;\n            color: #212529;\n            background-color: #fff;\n            -webkit-text-size-adjust: 100%;\n            -webkit-tap-highlight-color: transparent\n        }\n\n        hr {\n            margin: 1rem 0;\n            color: inherit;\n            background-color: currentColor;\n            border: 0;\n            opacity: .25\n        }\n\n        hr:not([size]) {\n            height: 1px\n        }\n\n        h1,\n        h2,\n        h3,\n        h4,\n        h5,\n        h6 {\n            margin-top: 0;\n            margin-bottom: .5rem;\n            font-weight: 500;\n            line-height: 1.2\n        }\n\n        h1 {\n            font-size: calc(1.375rem + 1.5vw)\n        }\n\n        @media (min-width:1200px) {\n            h1 {\n                font-size: 2.5rem\n            }\n        }\n\n        h2 {\n            font-size: calc(1.325rem + .9vw)\n        }\n\n        @media (min-width:1200px) {\n            h2 {\n                font-size: 2rem\n            }\n        }\n\n        h3 {\n            font-size: calc(1.3rem + .6vw)\n        }\n\n        @media (min-width:1200px) {\n            h3 {\n                font-size: 1.75rem\n            }\n        }\n\n        h4 {\n            font-size: calc(1.275rem + .3vw)\n        }\n\n        @media (min-width:1200px) {\n            h4 {\n                font-size: 1.5rem\n            }\n        }\n\n        h5 {\n            font-size: 1.25rem\n        }\n\n        h6 {\n            font-size: 1rem\n        }\n\n        p {\n            margin-top: 0;\n            margin-bottom: 1rem\n        }\n\n        abbr[data-bs-original-title],\n        abbr[title] {\n            -webkit-text-decoration: underline dotted;\n            text-decoration: underline dotted;\n            cursor: help;\n            -webkit-text-decoration-skip-ink: none;\n            text-decoration-skip-ink: none\n        }\n\n        address {\n            margin-bottom: 1rem;\n            font-style: normal;\n            line-height: inherit\n        }\n\n        ol,\n        ul {\n            padding-left: 2rem\n        }\n\n        dl,\n        ol,\n        ul {\n            margin-top: 0;\n            margin-bottom: 1rem\n        }\n\n        ol ol,\n        ol ul,\n        ul ol,\n        ul ul {\n            margin-bottom: 0\n        }\n\n        dt {\n            font-weight: 700\n        }\n\n        dd {\n            margin-bottom: .5rem;\n            margin-left: 0\n        }\n\n        blockquote {\n            margin: 0 0 1rem\n        }\n\n        b,\n        strong {\n            font-weight: bolder\n        }\n\n        small {\n            font-size: .875em\n        }\n\n        mark {\n            padding: .2em;\n            background-color: #fcf8e3\n        }\n\n        sub,\n        sup {\n            position: relative;\n            font-size: .75em;\n            line-height: 0;\n            vertical-align: baseline\n        }\n\n        sub {\n            bottom: -.25em\n        }\n\n        sup {\n            top: -.5em\n        }\n\n        a {\n            color: #0d6efd;\n            text-decoration: underline\n        }\n\n        a:hover {\n            color: #0a58ca\n        }\n\n        a:not([href]):not([class]),\n        a:not([href]):not([class]):hover {\n            color: inherit;\n            text-decoration: none\n        }\n\n        code,\n        kbd,\n        pre,\n        samp {\n            font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;\n            font-size: 1em;\n            direction: ltr;\n            unicode-bidi: bidi-override\n        }\n\n        pre {\n            display: block;\n            margin-top: 0;\n            margin-bottom: 1rem;\n            overflow: auto;\n            font-size: .875em\n        }\n\n        pre code {\n            font-size: inherit;\n            color: inherit;\n            word-break: normal\n        }\n\n        code {\n            font-size: .875em;\n            color: #d63384;\n            word-wrap: break-word\n        }\n\n        a>code {\n            color: inherit\n        }\n\n        kbd {\n            padding: .2rem .4rem;\n            font-size: .875em;\n            color: #fff;\n            background-color: #212529;\n            border-radius: .2rem\n        }\n\n        kbd kbd {\n            padding: 0;\n            font-size: 1em;\n            font-weight: 700\n        }\n\n        figure {\n            margin: 0 0 1rem\n        }\n\n        img,\n        svg {\n            vertical-align: middle\n        }\n\n        table {\n            caption-side: bottom;\n            border-collapse: collapse\n        }\n\n        caption {\n            padding-top: .5rem;\n            padding-bottom: .5rem;\n            color: #6c757d;\n            text-align: left\n        }\n\n        th {\n            text-align: inherit;\n            text-align: -webkit-match-parent\n        }\n\n        tbody,\n        td,\n        tfoot,\n        th,\n        thead,\n        tr {\n            border-color: inherit;\n            border-style: solid;\n            border-width: 0\n        }\n\n        label {\n            display: inline-block\n        }\n\n        button {\n            border-radius: 0\n        }\n\n        button:focus:not(:focus-visible) {\n            outline: 0\n        }\n\n        button,\n        input,\n        optgroup,\n        select,\n        textarea {\n            margin: 0;\n            font-family: inherit;\n            font-size: inherit;\n            line-height: inherit\n        }\n\n        button,\n        select {\n            text-transform: none\n        }\n\n        [role=button] {\n            cursor: pointer\n        }\n\n        select {\n            word-wrap: normal\n        }\n\n        select:disabled {\n            opacity: 1\n        }\n\n        [list]::-webkit-calendar-picker-indicator {\n            display: none\n        }\n\n        [type=button],\n        [type=reset],\n        [type=submit],\n        button {\n            -webkit-appearance: button\n        }\n\n        [type=button]:not(:disabled),\n        [type=reset]:not(:disabled),\n        [type=submit]:not(:disabled),\n        button:not(:disabled) {\n            cursor: pointer\n        }\n\n        ::-moz-focus-inner {\n            padding: 0;\n            border-style: none\n        }\n\n        textarea {\n            resize: vertical\n        }\n\n        fieldset {\n            min-width: 0;\n            padding: 0;\n            margin: 0;\n            border: 0\n        }\n\n        legend {\n            float: left;\n            width: 100%;\n            padding: 0;\n            margin-bottom: .5rem;\n            font-size: calc(1.275rem + .3vw);\n            line-height: inherit\n        }\n\n        @media (min-width:1200px) {\n            legend {\n                font-size: 1.5rem\n            }\n        }\n\n        legend+* {\n            clear: left\n        }\n\n        ::-webkit-datetime-edit-day-field,\n        ::-webkit-datetime-edit-fields-wrapper,\n        ::-webkit-datetime-edit-hour-field,\n        ::-webkit-datetime-edit-minute,\n        ::-webkit-datetime-edit-month-field,\n        ::-webkit-datetime-edit-text,\n        ::-webkit-datetime-edit-year-field {\n            padding: 0\n        }\n\n        ::-webkit-inner-spin-button {\n            height: auto\n        }\n\n        [type=search] {\n            outline-offset: -2px;\n            -webkit-appearance: textfield\n        }\n\n        ::-webkit-search-decoration {\n            -webkit-appearance: none\n        }\n\n        ::-webkit-color-swatch-wrapper {\n            padding: 0\n        }\n\n        ::file-selector-button {\n            font: inherit\n        }\n\n        ::-webkit-file-upload-button {\n            font: inherit;\n            -webkit-appearance: button\n        }\n\n        output {\n            display: inline-block\n        }\n\n        iframe {\n            border: 0\n        }\n\n        summary {\n            display: list-item;\n            cursor: pointer\n        }\n\n        progress {\n            vertical-align: baseline\n        }\n\n        [hidden] {\n            display: none !important\n        }\n    '
        }}
    />
    <style
        dangerouslySetInnerHTML={{
            __html:
                "\n        /*! syntax-highlighting.css */\n        pre {\n            line-height: 125%;\n        }\n\n        span.linenos {\n            color: inherit;\n            background-color: transparent;\n            padding-left: 5px;\n            padding-right: 20px;\n        }\n\n        .pdoc-code .hll {\n            background-color: #ffffcc\n        }\n\n        .pdoc-code {\n            background: #f8f8f8;\n        }\n\n        .pdoc-code .c {\n            color: #3D7B7B;\n            font-style: italic\n        }\n\n        .pdoc-code .err {\n            border: 1px solid #FF0000\n        }\n\n        .pdoc-code .k {\n            color: #008000;\n            font-weight: bold\n        }\n\n        .pdoc-code .o {\n            color: #666666\n        }\n\n        .pdoc-code .ch {\n            color: #3D7B7B;\n            font-style: italic\n        }\n\n        .pdoc-code .cm {\n            color: #3D7B7B;\n            font-style: italic\n        }\n\n        .pdoc-code .cp {\n            color: #9C6500\n        }\n\n        .pdoc-code .cpf {\n            color: #3D7B7B;\n            font-style: italic\n        }\n\n        .pdoc-code .c1 {\n            color: #3D7B7B;\n            font-style: italic\n        }\n\n        .pdoc-code .cs {\n            color: #3D7B7B;\n            font-style: italic\n        }\n\n        .pdoc-code .gd {\n            color: #A00000\n        }\n\n        .pdoc-code .ge {\n            font-style: italic\n        }\n\n        .pdoc-code .gr {\n            color: #E40000\n        }\n\n        .pdoc-code .gh {\n            color: #000080;\n            font-weight: bold\n        }\n\n        .pdoc-code .gi {\n            color: #008400\n        }\n\n        .pdoc-code .go {\n            color: #717171\n        }\n\n        .pdoc-code .gp {\n            color: #000080;\n            font-weight: bold\n        }\n\n        .pdoc-code .gs {\n            font-weight: bold\n        }\n\n        .pdoc-code .gu {\n            color: #800080;\n            font-weight: bold\n        }\n\n        .pdoc-code .gt {\n            color: #0044DD\n        }\n\n        .pdoc-code .kc {\n            color: #008000;\n            font-weight: bold\n        }\n\n        .pdoc-code .kd {\n            color: #008000;\n            font-weight: bold\n        }\n\n        .pdoc-code .kn {\n            color: #008000;\n            font-weight: bold\n        }\n\n        .pdoc-code .kp {\n            color: #008000\n        }\n\n        .pdoc-code .kr {\n            color: #008000;\n            font-weight: bold\n        }\n\n        .pdoc-code .kt {\n            color: #B00040\n        }\n\n        .pdoc-code .m {\n            color: #666666\n        }\n\n        .pdoc-code .s {\n            color: #BA2121\n        }\n\n        .pdoc-code .na {\n            color: #687822\n        }\n\n        .pdoc-code .nb {\n            color: #008000\n        }\n\n        .pdoc-code .nc {\n            color: #0000FF;\n            font-weight: bold\n        }\n\n        .pdoc-code .no {\n            color: #880000\n        }\n\n        .pdoc-code .nd {\n            color: #AA22FF\n        }\n\n        .pdoc-code .ni {\n            color: #717171;\n            font-weight: bold\n        }\n\n        .pdoc-code .ne {\n            color: #CB3F38;\n            font-weight: bold\n        }\n\n        .pdoc-code .nf {\n            color: #0000FF\n        }\n\n        .pdoc-code .nl {\n            color: #767600\n        }\n\n        .pdoc-code .nn {\n            color: #0000FF;\n            font-weight: bold\n        }\n\n        .pdoc-code .nt {\n            color: #008000;\n            font-weight: bold\n        }\n\n        .pdoc-code .nv {\n            color: #19177C\n        }\n\n        .pdoc-code .ow {\n            color: #AA22FF;\n            font-weight: bold\n        }\n\n        .pdoc-code .w {\n            color: #bbbbbb\n        }\n\n        .pdoc-code .mb {\n            color: #666666\n        }\n\n        .pdoc-code .mf {\n            color: #666666\n        }\n\n        .pdoc-code .mh {\n            color: #666666\n        }\n\n        .pdoc-code .mi {\n            color: #666666\n        }\n\n        .pdoc-code .mo {\n            color: #666666\n        }\n\n        .pdoc-code .sa {\n            color: #BA2121\n        }\n\n        .pdoc-code .sb {\n            color: #BA2121\n        }\n\n        .pdoc-code .sc {\n            color: #BA2121\n        }\n\n        .pdoc-code .dl {\n            color: #BA2121\n        }\n\n        .pdoc-code .sd {\n            color: #BA2121;\n            font-style: italic\n        }\n\n        .pdoc-code .s2 {\n            color: #BA2121\n        }\n\n        .pdoc-code .se {\n            color: #AA5D1F;\n            font-weight: bold\n        }\n\n        .pdoc-code .sh {\n            color: #BA2121\n        }\n\n        .pdoc-code .si {\n            color: #A45A77;\n            font-weight: bold\n        }\n\n        .pdoc-code .sx {\n            color: #008000\n        }\n\n        .pdoc-code .sr {\n            color: #A45A77\n        }\n\n        .pdoc-code .s1 {\n            color: #BA2121\n        }\n\n        .pdoc-code .ss {\n            color: #19177C\n        }\n\n        .pdoc-code .bp {\n            color: #008000\n        }\n\n        .pdoc-code .fm {\n            color: #0000FF\n        }\n\n        .pdoc-code .vc {\n            color: #19177C\n        }\n\n        .pdoc-code .vg {\n            color: #19177C\n        }\n\n        .pdoc-code .vi {\n            color: #19177C\n        }\n\n        .pdoc-code .vm {\n            color: #19177C\n        }\n\n        .pdoc-code .il {\n            color: #666666\n        }\n    "
        }}
    />
    <style
        dangerouslySetInnerHTML={{
            __html:
                "\n        /*! theme.css */\n        :root {\n            --pdoc-background: #fff;\n        }\n\n        .pdoc {\n            --text: #212529;\n            --muted: #6c757d;\n            --link: #3660a5;\n            --link-hover: #1659c5;\n            --code: #f8f8f8;\n            --active: #fff598;\n            --accent: #eee;\n            --accent2: #c1c1c1;\n            --nav-hover: rgba(255, 255, 255, 0.5);\n            --name: #0066BB;\n            --def: #008800;\n            --annotation: #007020;\n        }\n    "
        }}
    />
    <style
        dangerouslySetInnerHTML={{
            __html:
                '\n        /*! layout.css */\n        html,\n        body {\n            width: 100%;\n            height: 100%;\n        }\n\n        html,\n        main {\n            scroll-behavior: smooth;\n        }\n\n        body {\n            background-color: var(--pdoc-background);\n        }\n\n        @media (max-width:769px) {\n            #navtoggle {\n                cursor: pointer;\n                position: absolute;\n                width: 50px;\n                height: 40px;\n                top: 1rem;\n                right: 1rem;\n                border-color: var(--text);\n                color: var(--text);\n                display: flex;\n                opacity: 0.8;\n                z-index: 999;\n            }\n\n            #navtoggle:hover {\n                opacity: 1;\n            }\n\n            #togglestate+div {\n                display: none;\n            }\n\n            #togglestate:checked+div {\n                display: inherit;\n            }\n\n            main,\n            header {\n                padding: 2rem 3vw;\n            }\n\n            header+main {\n                margin-top: -3rem;\n            }\n\n            .git-button {\n                display: none !important;\n            }\n\n            nav input[type="search"] {\n                max-width: 77%;\n            }\n\n            nav input[type="search"]:first-child {\n                margin-top: -6px;\n            }\n\n            nav input[type="search"]:valid~* {\n                display: none !important;\n            }\n        }\n\n        @media (min-width:770px) {\n            :root {\n                --sidebar-width: clamp(12.5rem, 28vw, 22rem);\n            }\n\n            nav {\n                position: fixed;\n                overflow: auto;\n                height: 100vh;\n                width: var(--sidebar-width);\n            }\n\n            main,\n            header {\n                padding: 3rem 2rem 3rem calc(var(--sidebar-width) + 3rem);\n                width: calc(54rem + var(--sidebar-width));\n                max-width: 100%;\n            }\n\n            header+main {\n                margin-top: -4rem;\n            }\n\n            #navtoggle {\n                display: none;\n            }\n        }\n\n        #togglestate {\n            position: absolute;\n            height: 0;\n            opacity: 0;\n        }\n\n        nav.pdoc {\n            --pad: clamp(0.5rem, 2vw, 1.75rem);\n            --indent: 1.5rem;\n            background-color: var(--accent);\n            border-right: 1px solid var(--accent2);\n            box-shadow: 0 0 20px rgba(50, 50, 50, .2) inset;\n            padding: 0 0 0 var(--pad);\n            overflow-wrap: anywhere;\n            scrollbar-width: thin;\n            scrollbar-color: var(--accent2) transparent;\n            z-index: 1\n        }\n\n        nav.pdoc::-webkit-scrollbar {\n            width: .4rem;\n        }\n\n        nav.pdoc::-webkit-scrollbar-thumb {\n            background-color: var(--accent2);\n        }\n\n        nav.pdoc>div {\n            padding: var(--pad) 0;\n        }\n\n        nav.pdoc .module-list-button {\n            display: inline-flex;\n            align-items: center;\n            color: var(--text);\n            border-color: var(--muted);\n            margin-bottom: 1rem;\n        }\n\n        nav.pdoc .module-list-button:hover {\n            border-color: var(--text);\n        }\n\n        nav.pdoc input[type=search] {\n            display: block;\n            outline-offset: 0;\n            width: calc(100% - var(--pad));\n        }\n\n        nav.pdoc .logo {\n            max-width: calc(100% - var(--pad));\n            max-height: 35vh;\n            display: block;\n            margin: 0 auto 1rem;\n            transform: translate(calc(-.5 * var(--pad)), 0);\n        }\n\n        nav.pdoc ul {\n            list-style: none;\n            padding-left: 0;\n        }\n\n        nav.pdoc>div>ul {\n            margin-left: calc(0px - var(--pad));\n        }\n\n        nav.pdoc li a {\n            padding: .2rem 0 .2rem calc(var(--pad) + var(--indent));\n        }\n\n        nav.pdoc>div>ul>li>a {\n            padding-left: var(--pad);\n        }\n\n        nav.pdoc li {\n            transition: all 100ms;\n        }\n\n        nav.pdoc li:hover {\n            background-color: var(--nav-hover);\n        }\n\n        nav.pdoc a,\n        nav.pdoc a:hover {\n            color: var(--text);\n        }\n\n        nav.pdoc a {\n            display: block;\n        }\n\n        nav.pdoc>h2:first-of-type {\n            margin-top: 1.5rem;\n        }\n\n        nav.pdoc .class:before {\n            content: "class ";\n            color: var(--muted);\n        }\n\n        nav.pdoc .function:after {\n            content: "()";\n            color: var(--muted);\n        }\n\n        nav.pdoc footer:before {\n            content: "";\n            display: block;\n            width: calc(100% - var(--pad));\n            border-top: solid var(--accent2) 1px;\n            margin-top: 1.5rem;\n            padding-top: .5rem;\n        }\n\n        nav.pdoc footer {\n            font-size: small;\n        }\n    '
        }}
    />
    <style
        dangerouslySetInnerHTML={{
            __html:
                '\n        /*! content.css */\n        .pdoc {\n            color: var(--text);\n            box-sizing: border-box;\n            line-height: 1.5;\n            background: none;\n        }\n\n        .pdoc .pdoc-button {\n            cursor: pointer;\n            display: inline-block;\n            border: solid black 1px;\n            border-radius: 2px;\n            font-size: .75rem;\n            padding: calc(0.5em - 1px) 1em;\n            transition: 100ms all;\n        }\n\n        .pdoc .pdoc-alert {\n            padding: 1rem 1rem 1rem calc(1.5rem + 24px);\n            border: 1px solid transparent;\n            border-radius: .25rem;\n            background-repeat: no-repeat;\n            background-position: 1rem center;\n            margin-bottom: 1rem;\n        }\n\n        .pdoc .pdoc-alert>*:last-child {\n            margin-bottom: 0;\n        }\n\n        .pdoc .pdoc-alert-note {\n            color: #084298;\n            background-color: #cfe2ff;\n            border-color: #b6d4fe;\n            background-image: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2224%22%20height%3D%2224%22%20fill%3D%22%23084298%22%20viewBox%3D%220%200%2016%2016%22%3E%3Cpath%20d%3D%22M8%2016A8%208%200%201%200%208%200a8%208%200%200%200%200%2016zm.93-9.412-1%204.705c-.07.34.029.533.304.533.194%200%20.487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703%200-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381%202.29-.287zM8%205.5a1%201%200%201%201%200-2%201%201%200%200%201%200%202z%22/%3E%3C/svg%3E");\n        }\n\n        .pdoc .pdoc-alert-warning {\n            color: #664d03;\n            background-color: #fff3cd;\n            border-color: #ffecb5;\n            background-image: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2224%22%20height%3D%2224%22%20fill%3D%22%23664d03%22%20viewBox%3D%220%200%2016%2016%22%3E%3Cpath%20d%3D%22M8.982%201.566a1.13%201.13%200%200%200-1.96%200L.165%2013.233c-.457.778.091%201.767.98%201.767h13.713c.889%200%201.438-.99.98-1.767L8.982%201.566zM8%205c.535%200%20.954.462.9.995l-.35%203.507a.552.552%200%200%201-1.1%200L7.1%205.995A.905.905%200%200%201%208%205zm.002%206a1%201%200%201%201%200%202%201%201%200%200%201%200-2z%22/%3E%3C/svg%3E");\n        }\n\n        .pdoc .pdoc-alert-danger {\n            color: #842029;\n            background-color: #f8d7da;\n            border-color: #f5c2c7;\n            background-image: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2224%22%20height%3D%2224%22%20fill%3D%22%23842029%22%20viewBox%3D%220%200%2016%2016%22%3E%3Cpath%20d%3D%22M5.52.359A.5.5%200%200%201%206%200h4a.5.5%200%200%201%20.474.658L8.694%206H12.5a.5.5%200%200%201%20.395.807l-7%209a.5.5%200%200%201-.873-.454L6.823%209.5H3.5a.5.5%200%200%201-.48-.641l2.5-8.5z%22/%3E%3C/svg%3E");\n        }\n\n        .pdoc .visually-hidden {\n            position: absolute !important;\n            width: 1px !important;\n            height: 1px !important;\n            padding: 0 !important;\n            margin: -1px !important;\n            overflow: hidden !important;\n            clip: rect(0, 0, 0, 0) !important;\n            white-space: nowrap !important;\n            border: 0 !important;\n        }\n\n        .pdoc h1,\n        .pdoc h2,\n        .pdoc h3 {\n            font-weight: 300;\n            margin: .3em 0;\n            padding: .2em 0;\n        }\n\n        .pdoc>section:not(.module-info) h1 {\n            font-size: 1.5rem;\n            font-weight: 500;\n        }\n\n        .pdoc>section:not(.module-info) h2 {\n            font-size: 1.4rem;\n            font-weight: 500;\n        }\n\n        .pdoc>section:not(.module-info) h3 {\n            font-size: 1.3rem;\n            font-weight: 500;\n        }\n\n        .pdoc>section:not(.module-info) h4 {\n            font-size: 1.2rem;\n        }\n\n        .pdoc>section:not(.module-info) h5 {\n            font-size: 1.1rem;\n        }\n\n        .pdoc a {\n            text-decoration: none;\n            color: var(--link);\n        }\n\n        .pdoc a:hover {\n            color: var(--link-hover);\n        }\n\n        .pdoc blockquote {\n            margin-left: 2rem;\n        }\n\n        .pdoc pre {\n            border-top: 1px solid var(--accent2);\n            border-bottom: 1px solid var(--accent2);\n            margin-top: 0;\n            margin-bottom: 1em;\n            padding: .5rem 0 .5rem .5rem;\n            overflow-x: auto;\n            background-color: var(--code);\n        }\n\n        .pdoc code {\n            color: var(--text);\n            padding: .2em .4em;\n            margin: 0;\n            font-size: 85%;\n            background-color: var(--accent);\n            border-radius: 6px;\n        }\n\n        .pdoc a>code {\n            color: inherit;\n        }\n\n        .pdoc pre>code {\n            display: inline-block;\n            font-size: inherit;\n            background: none;\n            border: none;\n            padding: 0;\n        }\n\n        .pdoc>section:not(.module-info) {\n            margin-bottom: 1.5rem;\n        }\n\n        .pdoc .modulename {\n            margin-top: 0;\n            font-weight: bold;\n        }\n\n        .pdoc .modulename a {\n            color: var(--link);\n            transition: 100ms all;\n        }\n\n        .pdoc .git-button {\n            float: right;\n            border: solid var(--link) 1px;\n        }\n\n        .pdoc .git-button:hover {\n            background-color: var(--link);\n            color: var(--pdoc-background);\n        }\n\n        .view-source-toggle-state,\n        .view-source-toggle-state~.pdoc-code {\n            display: none;\n        }\n\n        .view-source-toggle-state:checked~.pdoc-code {\n            display: block;\n        }\n\n        .view-source-button {\n            display: inline-block;\n            float: right;\n            font-size: .75rem;\n            line-height: 1.5rem;\n            color: var(--muted);\n            padding: 0 .4rem 0 1.3rem;\n            cursor: pointer;\n            text-indent: -2px;\n        }\n\n        .view-source-button>span {\n            visibility: hidden;\n        }\n\n        .module-info .view-source-button {\n            float: none;\n            display: flex;\n            justify-content: flex-end;\n            margin: -1.2rem .4rem -.2rem 0;\n        }\n\n        .view-source-button::before {\n            position: absolute;\n            content: "View Source";\n            display: list-item;\n            list-style-type: disclosure-closed;\n        }\n\n        .view-source-toggle-state:checked~.attr .view-source-button::before,\n        .view-source-toggle-state:checked~.view-source-button::before {\n            list-style-type: disclosure-open;\n        }\n\n        .pdoc .docstring {\n            margin-bottom: 1.5rem;\n        }\n\n        .pdoc section:not(.module-info) .docstring {\n            margin-left: clamp(0rem, 5vw - 2rem, 1rem);\n        }\n\n        .pdoc .docstring .pdoc-code {\n            margin-left: 1em;\n            margin-right: 1em;\n        }\n\n        .pdoc h1:target,\n        .pdoc h2:target,\n        .pdoc h3:target,\n        .pdoc h4:target,\n        .pdoc h5:target,\n        .pdoc h6:target,\n        .pdoc .pdoc-code>pre>span:target {\n            background-color: var(--active);\n            box-shadow: -1rem 0 0 0 var(--active);\n        }\n\n        .pdoc .pdoc-code>pre>span:target {\n            display: block;\n        }\n\n        .pdoc div:target>.attr,\n        .pdoc section:target>.attr,\n        .pdoc dd:target>a {\n            background-color: var(--active);\n        }\n\n        .pdoc * {\n            scroll-margin: 2rem;\n        }\n\n        .pdoc .pdoc-code .linenos {\n            user-select: none;\n        }\n\n        .pdoc .attr:hover {\n            filter: contrast(0.95);\n        }\n\n        .pdoc section,\n        .pdoc .classattr {\n            position: relative;\n        }\n\n        .pdoc .headerlink {\n            --width: clamp(1rem, 3vw, 2rem);\n            position: absolute;\n            top: 0;\n            left: calc(0rem - var(--width));\n            transition: all 100ms ease-in-out;\n            opacity: 0;\n        }\n\n        .pdoc .headerlink::before {\n            content: "#";\n            display: block;\n            text-align: center;\n            width: var(--width);\n            height: 2.3rem;\n            line-height: 2.3rem;\n            font-size: 1.5rem;\n        }\n\n        .pdoc .attr:hover~.headerlink,\n        .pdoc *:target>.headerlink,\n        .pdoc .headerlink:hover {\n            opacity: 1;\n        }\n\n        .pdoc .attr {\n            display: block;\n            margin: .5rem 0 .5rem;\n            padding: .4rem .4rem .4rem 1rem;\n            background-color: var(--accent);\n            overflow-x: auto;\n        }\n\n        .pdoc .classattr {\n            margin-left: 2rem;\n        }\n\n        .pdoc .name {\n            color: var(--name);\n            font-weight: bold;\n        }\n\n        .pdoc .def {\n            color: var(--def);\n            font-weight: bold;\n        }\n\n        .pdoc .signature {\n            background-color: transparent;\n        }\n\n        .pdoc .param,\n        .pdoc .return-annotation {\n            white-space: pre;\n        }\n\n        .pdoc .signature.multiline .param {\n            display: block;\n        }\n\n        .pdoc .signature.condensed .param {\n            display: inline-block;\n        }\n\n        .pdoc .annotation {\n            color: var(--annotation);\n        }\n\n        .pdoc .view-value-toggle-state,\n        .pdoc .view-value-toggle-state~.default_value {\n            display: none;\n        }\n\n        .pdoc .view-value-toggle-state:checked~.default_value {\n            display: inherit;\n        }\n\n        .pdoc .view-value-button {\n            font-size: .5rem;\n            vertical-align: middle;\n            border-style: dashed;\n            margin-top: -0.1rem;\n        }\n\n        .pdoc .view-value-button:hover {\n            background: white;\n        }\n\n        .pdoc .view-value-button::before {\n            content: "show";\n            text-align: center;\n            width: 2.2em;\n            display: inline-block;\n        }\n\n        .pdoc .view-value-toggle-state:checked~.view-value-button::before {\n            content: "hide";\n        }\n\n        .pdoc .inherited {\n            margin-left: 2rem;\n        }\n\n        .pdoc .inherited dt {\n            font-weight: 700;\n        }\n\n        .pdoc .inherited dt,\n        .pdoc .inherited dd {\n            display: inline;\n            margin-left: 0;\n            margin-bottom: .5rem;\n        }\n\n        .pdoc .inherited dd:not(:last-child):after {\n            content: ", ";\n        }\n\n        .pdoc .inherited .class:before {\n            content: "class ";\n        }\n\n        .pdoc .inherited .function a:after {\n            content: "()";\n        }\n\n        .pdoc .search-result .docstring {\n            overflow: auto;\n            max-height: 25vh;\n        }\n\n        .pdoc .search-result.focused>.attr {\n            background-color: var(--active);\n        }\n\n        .pdoc .attribution {\n            margin-top: 2rem;\n            display: block;\n            opacity: 0.5;\n            transition: all 200ms;\n            filter: grayscale(100%);\n        }\n\n        .pdoc .attribution:hover {\n            opacity: 1;\n            filter: grayscale(0%);\n        }\n\n        .pdoc .attribution img {\n            margin-left: 5px;\n            height: 35px;\n            vertical-align: middle;\n            width: 70px;\n            transition: all 200ms;\n        }\n\n        .pdoc table {\n            display: block;\n            width: max-content;\n            max-width: 100%;\n            overflow: auto;\n            margin-bottom: 1rem;\n        }\n\n        .pdoc table th {\n            font-weight: 600;\n        }\n\n        .pdoc table th,\n        .pdoc table td {\n            padding: 6px 13px;\n            border: 1px solid var(--accent2);\n        }\n    '
        }}
    />
    <style
        dangerouslySetInnerHTML={{ __html: "\n        /*! custom.css */\n    " }}
    />
    <nav className="pdoc">
        <label id="navtoggle" htmlFor="togglestate" className="pdoc-button">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30">
                <path
                    strokeLinecap="round"
                    stroke="currentColor"
                    strokeMiterlimit={10}
                    strokeWidth={2}
                    d="M4 7h22M4 15h22M4 23h22"
                />
            </svg>
        </label>
        <input id="togglestate" type="checkbox" aria-hidden="true" tabIndex={-1} />
        <div>
            <h2>API Documentation</h2>
            <ul className="memberlist">
                <li>
                    <a className="class" href="#allow_failure">
                        allow_failure
                    </a>
                    <ul className="memberlist">
                        <li>
                            <a className="function" href="#allow_failure.__init__">
                                allow_failure
                            </a>
                        </li>
                    </ul>
                </li>
                <li>
                    <a className="function" href="#flow">
                        flow
                    </a>
                </li>
                <li>
                    <a className="class" href="#Flow">
                        Flow
                    </a>
                    <ul className="memberlist">
                        <li>
                            <a className="function" href="#Flow.__init__">
                                Flow
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.name">
                                name
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.flow_run_name">
                                flow_run_name
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.task_runner">
                                task_runner
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.log_prints">
                                log_prints
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.description">
                                description
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.fn">
                                fn
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.isasync">
                                isasync
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.version">
                                version
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.timeout_seconds">
                                timeout_seconds
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.retries">
                                retries
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.retry_delay_seconds">
                                retry_delay_seconds
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.parameters">
                                parameters
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.should_validate_parameters">
                                should_validate_parameters
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.persist_result">
                                persist_result
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.result_storage">
                                result_storage
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.result_serializer">
                                result_serializer
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.cache_result_in_memory">
                                cache_result_in_memory
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.on_completion">
                                on_completion
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.on_failure">
                                on_failure
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.on_cancellation">
                                on_cancellation
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.on_crashed">
                                on_crashed
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Flow.on_running">
                                on_running
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#Flow.with_options">
                                with_options
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#Flow.validate_parameters">
                                validate_parameters
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#Flow.serialize_parameters">
                                serialize_parameters
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#Flow.to_deployment">
                                to_deployment
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#Flow.serve">
                                serve
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#Flow.from_source">
                                from_source
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#Flow.deploy">
                                deploy
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#Flow.visualize">
                                visualize
                            </a>
                        </li>
                    </ul>
                </li>
                <li>
                    <a className="function" href="#get_client">
                        get_client
                    </a>
                </li>
                <li>
                    <a className="function" href="#get_run_logger">
                        get_run_logger
                    </a>
                </li>
                <li>
                    <a className="class" href="#Manifest">
                        Manifest
                    </a>
                    <ul className="memberlist">
                        <li>
                            <a className="variable" href="#Manifest.model_config">
                                model_config
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Manifest.flow_name">
                                flow_name
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Manifest.import_path">
                                import_path
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Manifest.parameter_openapi_schema">
                                parameter_openapi_schema
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Manifest.model_fields">
                                model_fields
                            </a>
                        </li>
                    </ul>
                </li>
                <li>
                    <a className="class" href="#State">
                        State
                    </a>
                    <ul className="memberlist">
                        <li>
                            <a className="variable" href="#State.type">
                                type
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#State.name">
                                name
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#State.timestamp">
                                timestamp
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#State.message">
                                message
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#State.state_details">
                                state_details
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#State.data">
                                data
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#State.result">
                                result
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#State.to_state_create">
                                to_state_create
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#State.default_name_from_type">
                                default_name_from_type
                            </a>
                        </li>
                        <li>
                            <a
                                className="function"
                                href="#State.default_scheduled_start_time"
                            >
                                default_scheduled_start_time
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#State.is_scheduled">
                                is_scheduled
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#State.is_pending">
                                is_pending
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#State.is_running">
                                is_running
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#State.is_completed">
                                is_completed
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#State.is_failed">
                                is_failed
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#State.is_crashed">
                                is_crashed
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#State.is_cancelled">
                                is_cancelled
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#State.is_cancelling">
                                is_cancelling
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#State.is_final">
                                is_final
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#State.is_paused">
                                is_paused
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#State.copy">
                                copy
                            </a>
                        </li>
                    </ul>
                </li>
                <li>
                    <a className="function" href="#tags">
                        tags
                    </a>
                </li>
                <li>
                    <a className="function" href="#task">
                        task
                    </a>
                </li>
                <li>
                    <a className="class" href="#Task">
                        Task
                    </a>
                    <ul className="memberlist">
                        <li>
                            <a className="function" href="#Task.__init__">
                                Task
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.description">
                                description
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.fn">
                                fn
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.isasync">
                                isasync
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.task_run_name">
                                task_run_name
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.version">
                                version
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.log_prints">
                                log_prints
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.tags">
                                tags
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.cache_key_fn">
                                cache_key_fn
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.cache_expiration">
                                cache_expiration
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.refresh_cache">
                                refresh_cache
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.retries">
                                retries
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.retry_jitter_factor">
                                retry_jitter_factor
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.persist_result">
                                persist_result
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.result_storage">
                                result_storage
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.result_serializer">
                                result_serializer
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.result_storage_key">
                                result_storage_key
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.cache_result_in_memory">
                                cache_result_in_memory
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.timeout_seconds">
                                timeout_seconds
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.on_completion">
                                on_completion
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.on_failure">
                                on_failure
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.retry_condition_fn">
                                retry_condition_fn
                            </a>
                        </li>
                        <li>
                            <a className="variable" href="#Task.viz_return_value">
                                viz_return_value
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#Task.with_options">
                                with_options
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#Task.create_run">
                                create_run
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#Task.submit">
                                submit
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#Task.map">
                                map
                            </a>
                        </li>
                        <li>
                            <a className="function" href="#Task.serve">
                                serve
                            </a>
                        </li>
                    </ul>
                </li>
                <li>
                    <a className="class" href="#unmapped">
                        unmapped
                    </a>
                    <ul className="memberlist">
                        <li>
                            <a className="function" href="#unmapped.__init__">
                                unmapped
                            </a>
                        </li>
                    </ul>
                </li>
                <li>
                    <a className="function" href="#serve">
                        serve
                    </a>
                </li>
                <li>
                    <a className="function" href="#deploy">
                        deploy
                    </a>
                </li>
                <li>
                    <a className="function" href="#pause_flow_run">
                        pause_flow_run
                    </a>
                </li>
                <li>
                    <a className="function" href="#resume_flow_run">
                        resume_flow_run
                    </a>
                </li>
                <li>
                    <a className="function" href="#suspend_flow_run">
                        suspend_flow_run
                    </a>
                </li>
            </ul>
            <a
                className="attribution"
                title="pdoc: Python API documentation generator"
                href="https://pdoc.dev"
                target="_blank"
            >
                built with <span className="visually-hidden">pdoc</span>
                <img
                    alt="pdoc logo"
                    src="data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20role%3D%22img%22%20aria-label%3D%22pdoc%20logo%22%20width%3D%22300%22%20height%3D%22150%22%20viewBox%3D%22-1%200%2060%2030%22%3E%3Ctitle%3Epdoc%3C/title%3E%3Cpath%20d%3D%22M29.621%2021.293c-.011-.273-.214-.475-.511-.481a.5.5%200%200%200-.489.503l-.044%201.393c-.097.551-.695%201.215-1.566%201.704-.577.428-1.306.486-2.193.182-1.426-.617-2.467-1.654-3.304-2.487l-.173-.172a3.43%203.43%200%200%200-.365-.306.49.49%200%200%200-.286-.196c-1.718-1.06-4.931-1.47-7.353.191l-.219.15c-1.707%201.187-3.413%202.131-4.328%201.03-.02-.027-.49-.685-.141-1.763.233-.721.546-2.408.772-4.076.042-.09.067-.187.046-.288.166-1.347.277-2.625.241-3.351%201.378-1.008%202.271-2.586%202.271-4.362%200-.976-.272-1.935-.788-2.774-.057-.094-.122-.18-.184-.268.033-.167.052-.339.052-.516%200-1.477-1.202-2.679-2.679-2.679-.791%200-1.496.352-1.987.9a6.3%206.3%200%200%200-1.001.029c-.492-.564-1.207-.929-2.012-.929-1.477%200-2.679%201.202-2.679%202.679A2.65%202.65%200%200%200%20.97%206.554c-.383.747-.595%201.572-.595%202.41%200%202.311%201.507%204.29%203.635%205.107-.037.699-.147%202.27-.423%203.294l-.137.461c-.622%202.042-2.515%208.257%201.727%2010.643%201.614.908%203.06%201.248%204.317%201.248%202.665%200%204.492-1.524%205.322-2.401%201.476-1.559%202.886-1.854%206.491.82%201.877%201.393%203.514%201.753%204.861%201.068%202.223-1.713%202.811-3.867%203.399-6.374.077-.846.056-1.469.054-1.537zm-4.835%204.313c-.054.305-.156.586-.242.629-.034-.007-.131-.022-.307-.157-.145-.111-.314-.478-.456-.908.221.121.432.25.675.355.115.039.219.051.33.081zm-2.251-1.238c-.05.33-.158.648-.252.694-.022.001-.125-.018-.307-.157-.217-.166-.488-.906-.639-1.573.358.344.754.693%201.198%201.036zm-3.887-2.337c-.006-.116-.018-.231-.041-.342.635.145%201.189.368%201.599.625.097.231.166.481.174.642-.03.049-.055.101-.067.158-.046.013-.128.026-.298.004-.278-.037-.901-.57-1.367-1.087zm-1.127-.497c.116.306.176.625.12.71-.019.014-.117.045-.345.016-.206-.027-.604-.332-.986-.695.41-.051.816-.056%201.211-.031zm-4.535%201.535c.209.22.379.47.358.598-.006.041-.088.138-.351.234-.144.055-.539-.063-.979-.259a11.66%2011.66%200%200%200%20.972-.573zm.983-.664c.359-.237.738-.418%201.126-.554.25.237.479.548.457.694-.006.042-.087.138-.351.235-.174.064-.694-.105-1.232-.375zm-3.381%201.794c-.022.145-.061.29-.149.401-.133.166-.358.248-.69.251h-.002c-.133%200-.306-.26-.45-.621.417.091.854.07%201.291-.031zm-2.066-8.077a4.78%204.78%200%200%201-.775-.584c.172-.115.505-.254.88-.378l-.105.962zm-.331%202.302a10.32%2010.32%200%200%201-.828-.502c.202-.143.576-.328.984-.49l-.156.992zm-.45%202.157l-.701-.403c.214-.115.536-.249.891-.376a11.57%2011.57%200%200%201-.19.779zm-.181%201.716c.064.398.194.702.298.893-.194-.051-.435-.162-.736-.398.061-.119.224-.3.438-.495zM8.87%204.141c0%20.152-.123.276-.276.276s-.275-.124-.275-.276.123-.276.276-.276.275.124.275.276zm-.735-.389a1.15%201.15%200%200%200-.314.783%201.16%201.16%200%200%200%201.162%201.162c.457%200%20.842-.27%201.032-.653.026.117.042.238.042.362a1.68%201.68%200%200%201-1.679%201.679%201.68%201.68%200%200%201-1.679-1.679c0-.843.626-1.535%201.436-1.654zM5.059%205.406A1.68%201.68%200%200%201%203.38%207.085a1.68%201.68%200%200%201-1.679-1.679c0-.037.009-.072.011-.109.21.3.541.508.935.508a1.16%201.16%200%200%200%201.162-1.162%201.14%201.14%200%200%200-.474-.912c.015%200%20.03-.005.045-.005.926.001%201.679.754%201.679%201.68zM3.198%204.141c0%20.152-.123.276-.276.276s-.275-.124-.275-.276.123-.276.276-.276.275.124.275.276zM1.375%208.964c0-.52.103-1.035.288-1.52.466.394%201.06.64%201.717.64%201.144%200%202.116-.725%202.499-1.738.383%201.012%201.355%201.738%202.499%201.738.867%200%201.631-.421%202.121-1.062.307.605.478%201.267.478%201.942%200%202.486-2.153%204.51-4.801%204.51s-4.801-2.023-4.801-4.51zm24.342%2019.349c-.985.498-2.267.168-3.813-.979-3.073-2.281-5.453-3.199-7.813-.705-1.315%201.391-4.163%203.365-8.423.97-3.174-1.786-2.239-6.266-1.261-9.479l.146-.492c.276-1.02.395-2.457.444-3.268a6.11%206.11%200%200%200%201.18.115%206.01%206.01%200%200%200%202.536-.562l-.006.175c-.802.215-1.848.612-2.021%201.25-.079.295.021.601.274.837.219.203.415.364.598.501-.667.304-1.243.698-1.311%201.179-.02.144-.022.507.393.787.213.144.395.26.564.365-1.285.521-1.361.96-1.381%201.126-.018.142-.011.496.427.746l.854.489c-.473.389-.971.914-.999%201.429-.018.278.095.532.316.713.675.556%201.231.721%201.653.721.059%200%20.104-.014.158-.02.207.707.641%201.64%201.513%201.64h.013c.8-.008%201.236-.345%201.462-.626.173-.216.268-.457.325-.692.424.195.93.374%201.372.374.151%200%20.294-.021.423-.068.732-.27.944-.704.993-1.021.009-.061.003-.119.002-.179.266.086.538.147.789.147.15%200%20.294-.021.423-.069.542-.2.797-.489.914-.754.237.147.478.258.704.288.106.014.205.021.296.021.356%200%20.595-.101.767-.229.438.435%201.094.992%201.656%201.067.106.014.205.021.296.021a1.56%201.56%200%200%200%20.323-.035c.17.575.453%201.289.866%201.605.358.273.665.362.914.362a.99.99%200%200%200%20.421-.093%201.03%201.03%200%200%200%20.245-.164c.168.428.39.846.68%201.068.358.273.665.362.913.362a.99.99%200%200%200%20.421-.093c.317-.148.512-.448.639-.762.251.157.495.257.726.257.127%200%20.25-.024.37-.071.427-.17.706-.617.841-1.314.022-.015.047-.022.068-.038.067-.051.133-.104.196-.159-.443%201.486-1.107%202.761-2.086%203.257zM8.66%209.925a.5.5%200%201%200-1%200c0%20.653-.818%201.205-1.787%201.205s-1.787-.552-1.787-1.205a.5.5%200%201%200-1%200c0%201.216%201.25%202.205%202.787%202.205s2.787-.989%202.787-2.205zm4.4%2015.965l-.208.097c-2.661%201.258-4.708%201.436-6.086.527-1.542-1.017-1.88-3.19-1.844-4.198a.4.4%200%200%200-.385-.414c-.242-.029-.406.164-.414.385-.046%201.249.367%203.686%202.202%204.896.708.467%201.547.7%202.51.7%201.248%200%202.706-.392%204.362-1.174l.185-.086a.4.4%200%200%200%20.205-.527c-.089-.204-.326-.291-.527-.206zM9.547%202.292c.093.077.205.114.317.114a.5.5%200%200%200%20.318-.886L8.817.397a.5.5%200%200%200-.703.068.5.5%200%200%200%20.069.703l1.364%201.124zm-7.661-.065c.086%200%20.173-.022.253-.068l1.523-.893a.5.5%200%200%200-.506-.863l-1.523.892a.5.5%200%200%200-.179.685c.094.158.261.247.432.247z%22%20transform%3D%22matrix%28-1%200%200%201%2058%200%29%22%20fill%3D%22%233bb300%22/%3E%3Cpath%20d%3D%22M.3%2021.86V10.18q0-.46.02-.68.04-.22.18-.5.28-.54%201.34-.54%201.06%200%201.42.28.38.26.44.78.76-1.04%202.38-1.04%201.64%200%203.1%201.54%201.46%201.54%201.46%203.58%200%202.04-1.46%203.58-1.44%201.54-3.08%201.54-1.64%200-2.38-.92v4.04q0%20.46-.04.68-.02.22-.18.5-.14.3-.5.42-.36.12-.98.12-.62%200-1-.12-.36-.12-.52-.4-.14-.28-.18-.5-.02-.22-.02-.68zm3.96-9.42q-.46.54-.46%201.18%200%20.64.46%201.18.48.52%201.2.52.74%200%201.24-.52.52-.52.52-1.18%200-.66-.48-1.18-.48-.54-1.26-.54-.76%200-1.22.54zm14.741-8.36q.16-.3.54-.42.38-.12%201-.12.64%200%201.02.12.38.12.52.42.16.3.18.54.04.22.04.68v11.94q0%20.46-.04.7-.02.22-.18.5-.3.54-1.7.54-1.38%200-1.54-.98-.84.96-2.34.96-1.8%200-3.28-1.56-1.48-1.58-1.48-3.66%200-2.1%201.48-3.68%201.5-1.58%203.28-1.58%201.48%200%202.3%201v-4.2q0-.46.02-.68.04-.24.18-.52zm-3.24%2010.86q.52.54%201.26.54.74%200%201.22-.54.5-.54.5-1.18%200-.66-.48-1.22-.46-.56-1.26-.56-.8%200-1.28.56-.48.54-.48%201.2%200%20.66.52%201.2zm7.833-1.2q0-2.4%201.68-3.96%201.68-1.56%203.84-1.56%202.16%200%203.82%201.56%201.66%201.54%201.66%203.94%200%201.66-.86%202.96-.86%201.28-2.1%201.9-1.22.6-2.54.6-1.32%200-2.56-.64-1.24-.66-2.1-1.92-.84-1.28-.84-2.88zm4.18%201.44q.64.48%201.3.48.66%200%201.32-.5.66-.5.66-1.48%200-.98-.62-1.46-.62-.48-1.34-.48-.72%200-1.34.5-.62.5-.62%201.48%200%20.96.64%201.46zm11.412-1.44q0%20.84.56%201.32.56.46%201.18.46.64%200%201.18-.36.56-.38.9-.38.6%200%201.46%201.06.46.58.46%201.04%200%20.76-1.1%201.42-1.14.8-2.8.8-1.86%200-3.58-1.34-.82-.64-1.34-1.7-.52-1.08-.52-2.36%200-1.3.52-2.34.52-1.06%201.34-1.7%201.66-1.32%203.54-1.32.76%200%201.48.22.72.2%201.06.4l.32.2q.36.24.56.38.52.4.52.92%200%20.5-.42%201.14-.72%201.1-1.38%201.1-.38%200-1.08-.44-.36-.34-1.04-.34-.66%200-1.24.48-.58.48-.58%201.34z%22%20fill%3D%22green%22/%3E%3C/svg%3E"
                />
            </a>
        </div>
    </nav>
    <main className="pdoc">
        <section className="module-info">
            <h1 className="modulename">prefect </h1>
            <input
                id="mod-prefect-view-source"
                className="view-source-toggle-state"
                type="checkbox"
                aria-hidden="true"
                tabIndex={-1}
            />
            <label className="view-source-button" htmlFor="mod-prefect-view-source">
                <span>View Source</span>
            </label>
            <div className="pdoc-code codehilite">
                <pre>
                    <span />
                    <span id="L-1">
                        <a href="#L-1">
                            <span className="linenos">{"  "}1</span>
                        </a>
                        <span className="c1"># isort: skip_file</span>
                        {"\n"}
                    </span>
                    <span id="L-2">
                        <a href="#L-2">
                            <span className="linenos">{"  "}2</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-3">
                        <a href="#L-3">
                            <span className="linenos">{"  "}3</span>
                        </a>
                        <span className="c1"># Setup version and path constants</span>
                        {"\n"}
                    </span>
                    <span id="L-4">
                        <a href="#L-4">
                            <span className="linenos">{"  "}4</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-5">
                        <a href="#L-5">
                            <span className="linenos">{"  "}5</span>
                        </a>
                        <span className="kn">from</span> <span className="nn">.</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">_version</span>
                        {"\n"}
                    </span>
                    <span id="L-6">
                        <a href="#L-6">
                            <span className="linenos">{"  "}6</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">importlib</span>
                        {"\n"}
                    </span>
                    <span id="L-7">
                        <a href="#L-7">
                            <span className="linenos">{"  "}7</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">pathlib</span>
                        {"\n"}
                    </span>
                    <span id="L-8">
                        <a href="#L-8">
                            <span className="linenos">{"  "}8</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">warnings</span>
                        {"\n"}
                    </span>
                    <span id="L-9">
                        <a href="#L-9">
                            <span className="linenos">{"  "}9</span>
                        </a>
                        <span className="kn">import</span> <span className="nn">sys</span>
                        {"\n"}
                    </span>
                    <span id="L-10">
                        <a href="#L-10">
                            <span className="linenos"> 10</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-11">
                        <a href="#L-11">
                            <span className="linenos"> 11</span>
                        </a>
                        <span className="n">__version_info__</span>{" "}
                        <span className="o">=</span> <span className="n">_version</span>
                        <span className="o">.</span>
                        <span className="n">get_versions</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="L-12">
                        <a href="#L-12">
                            <span className="linenos"> 12</span>
                        </a>
                        <span className="n">__version__</span> <span className="o">=</span>{" "}
                        <span className="n">__version_info__</span>
                        <span className="p">[</span>
                        <span className="s2">"version"</span>
                        <span className="p">]</span>
                        {"\n"}
                    </span>
                    <span id="L-13">
                        <a href="#L-13">
                            <span className="linenos"> 13</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-14">
                        <a href="#L-14">
                            <span className="linenos"> 14</span>
                        </a>
                        <span className="c1"># The absolute path to this module</span>
                        {"\n"}
                    </span>
                    <span id="L-15">
                        <a href="#L-15">
                            <span className="linenos"> 15</span>
                        </a>
                        <span className="n">__module_path__</span>{" "}
                        <span className="o">=</span> <span className="n">pathlib</span>
                        <span className="o">.</span>
                        <span className="n">Path</span>
                        <span className="p">(</span>
                        <span className="vm">__file__</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="n">parent</span>
                        {"\n"}
                    </span>
                    <span id="L-16">
                        <a href="#L-16">
                            <span className="linenos"> 16</span>
                        </a>
                        <span className="c1">
                            # The absolute path to the root of the repository, only valid for
                            use during development
                        </span>
                        {"\n"}
                    </span>
                    <span id="L-17">
                        <a href="#L-17">
                            <span className="linenos"> 17</span>
                        </a>
                        <span className="n">__development_base_path__</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">__module_path__</span>
                        <span className="o">.</span>
                        <span className="n">parents</span>
                        <span className="p">[</span>
                        <span className="mi">1</span>
                        <span className="p">]</span>
                        {"\n"}
                    </span>
                    <span id="L-18">
                        <a href="#L-18">
                            <span className="linenos"> 18</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-19">
                        <a href="#L-19">
                            <span className="linenos"> 19</span>
                        </a>
                        <span className="c1">
                            # The absolute path to the built UI within the Python module, used
                            by
                        </span>
                        {"\n"}
                    </span>
                    <span id="L-20">
                        <a href="#L-20">
                            <span className="linenos"> 20</span>
                        </a>
                        <span className="c1">
                            # `prefect server start` to serve a dynamic build of the UI
                        </span>
                        {"\n"}
                    </span>
                    <span id="L-21">
                        <a href="#L-21">
                            <span className="linenos"> 21</span>
                        </a>
                        <span className="n">__ui_static_subpath__</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">__module_path__</span>{" "}
                        <span className="o">/</span> <span className="s2">"server"</span>{" "}
                        <span className="o">/</span> <span className="s2">"ui_build"</span>
                        {"\n"}
                    </span>
                    <span id="L-22">
                        <a href="#L-22">
                            <span className="linenos"> 22</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-23">
                        <a href="#L-23">
                            <span className="linenos"> 23</span>
                        </a>
                        <span className="c1">
                            # The absolute path to the built UI within the Python module
                        </span>
                        {"\n"}
                    </span>
                    <span id="L-24">
                        <a href="#L-24">
                            <span className="linenos"> 24</span>
                        </a>
                        <span className="n">__ui_static_path__</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">__module_path__</span>{" "}
                        <span className="o">/</span> <span className="s2">"server"</span>{" "}
                        <span className="o">/</span> <span className="s2">"ui"</span>
                        {"\n"}
                    </span>
                    <span id="L-25">
                        <a href="#L-25">
                            <span className="linenos"> 25</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-26">
                        <a href="#L-26">
                            <span className="linenos"> 26</span>
                        </a>
                        <span className="k">del</span> <span className="n">_version</span>
                        <span className="p">,</span> <span className="n">pathlib</span>
                        {"\n"}
                    </span>
                    <span id="L-27">
                        <a href="#L-27">
                            <span className="linenos"> 27</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-28">
                        <a href="#L-28">
                            <span className="linenos"> 28</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-29">
                        <a href="#L-29">
                            <span className="linenos"> 29</span>
                        </a>
                        <span className="c1"># Import user-facing API</span>
                        {"\n"}
                    </span>
                    <span id="L-30">
                        <a href="#L-30">
                            <span className="linenos"> 30</span>
                        </a>
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.deployments</span>{" "}
                        <span className="kn">import</span> <span className="n">deploy</span>
                        {"\n"}
                    </span>
                    <span id="L-31">
                        <a href="#L-31">
                            <span className="linenos"> 31</span>
                        </a>
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.states</span>{" "}
                        <span className="kn">import</span> <span className="n">State</span>
                        {"\n"}
                    </span>
                    <span id="L-32">
                        <a href="#L-32">
                            <span className="linenos"> 32</span>
                        </a>
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.logging</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">get_run_logger</span>
                        {"\n"}
                    </span>
                    <span id="L-33">
                        <a href="#L-33">
                            <span className="linenos"> 33</span>
                        </a>
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.flows</span>{" "}
                        <span className="kn">import</span> <span className="n">flow</span>
                        <span className="p">,</span> <span className="n">Flow</span>
                        <span className="p">,</span> <span className="n">serve</span>
                        {"\n"}
                    </span>
                    <span id="L-34">
                        <a href="#L-34">
                            <span className="linenos"> 34</span>
                        </a>
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.tasks</span>{" "}
                        <span className="kn">import</span> <span className="n">task</span>
                        <span className="p">,</span> <span className="n">Task</span>
                        {"\n"}
                    </span>
                    <span id="L-35">
                        <a href="#L-35">
                            <span className="linenos"> 35</span>
                        </a>
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.context</span>{" "}
                        <span className="kn">import</span> <span className="n">tags</span>
                        {"\n"}
                    </span>
                    <span id="L-36">
                        <a href="#L-36">
                            <span className="linenos"> 36</span>
                        </a>
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.manifests</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">Manifest</span>
                        {"\n"}
                    </span>
                    <span id="L-37">
                        <a href="#L-37">
                            <span className="linenos"> 37</span>
                        </a>
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.utilities.annotations</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">unmapped</span>
                        <span className="p">,</span>{" "}
                        <span className="n">allow_failure</span>
                        {"\n"}
                    </span>
                    <span id="L-38">
                        <a href="#L-38">
                            <span className="linenos"> 38</span>
                        </a>
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.results</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">BaseResult</span>
                        {"\n"}
                    </span>
                    <span id="L-39">
                        <a href="#L-39">
                            <span className="linenos"> 39</span>
                        </a>
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.engine</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">pause_flow_run</span>
                        <span className="p">,</span>{" "}
                        <span className="n">resume_flow_run</span>
                        <span className="p">,</span>{" "}
                        <span className="n">suspend_flow_run</span>
                        {"\n"}
                    </span>
                    <span id="L-40">
                        <a href="#L-40">
                            <span className="linenos"> 40</span>
                        </a>
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.client.orchestration</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">get_client</span>
                        <span className="p">,</span>{" "}
                        <span className="n">PrefectClient</span>
                        {"\n"}
                    </span>
                    <span id="L-41">
                        <a href="#L-41">
                            <span className="linenos"> 41</span>
                        </a>
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.client.cloud</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">get_cloud_client</span>
                        <span className="p">,</span> <span className="n">CloudClient</span>
                        {"\n"}
                    </span>
                    <span id="L-42">
                        <a href="#L-42">
                            <span className="linenos"> 42</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">prefect.variables</span>
                        {"\n"}
                    </span>
                    <span id="L-43">
                        <a href="#L-43">
                            <span className="linenos"> 43</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">prefect.runtime</span>
                        {"\n"}
                    </span>
                    <span id="L-44">
                        <a href="#L-44">
                            <span className="linenos"> 44</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-45">
                        <a href="#L-45">
                            <span className="linenos"> 45</span>
                        </a>
                        <span className="c1"># Import modules that register types</span>
                        {"\n"}
                    </span>
                    <span id="L-46">
                        <a href="#L-46">
                            <span className="linenos"> 46</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">prefect.serializers</span>
                        {"\n"}
                    </span>
                    <span id="L-47">
                        <a href="#L-47">
                            <span className="linenos"> 47</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">prefect.deprecated.data_documents</span>
                        {"\n"}
                    </span>
                    <span id="L-48">
                        <a href="#L-48">
                            <span className="linenos"> 48</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">prefect.deprecated.packaging</span>
                        {"\n"}
                    </span>
                    <span id="L-49">
                        <a href="#L-49">
                            <span className="linenos"> 49</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">prefect.blocks.kubernetes</span>
                        {"\n"}
                    </span>
                    <span id="L-50">
                        <a href="#L-50">
                            <span className="linenos"> 50</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">prefect.blocks.notifications</span>
                        {"\n"}
                    </span>
                    <span id="L-51">
                        <a href="#L-51">
                            <span className="linenos"> 51</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">prefect.blocks.system</span>
                        {"\n"}
                    </span>
                    <span id="L-52">
                        <a href="#L-52">
                            <span className="linenos"> 52</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">prefect.infrastructure.process</span>
                        {"\n"}
                    </span>
                    <span id="L-53">
                        <a href="#L-53">
                            <span className="linenos"> 53</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">prefect.infrastructure.kubernetes</span>
                        {"\n"}
                    </span>
                    <span id="L-54">
                        <a href="#L-54">
                            <span className="linenos"> 54</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">prefect.infrastructure.container</span>
                        {"\n"}
                    </span>
                    <span id="L-55">
                        <a href="#L-55">
                            <span className="linenos"> 55</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-56">
                        <a href="#L-56">
                            <span className="linenos"> 56</span>
                        </a>
                        <span className="c1">
                            # Initialize the process-wide profile and registry at import time
                        </span>
                        {"\n"}
                    </span>
                    <span id="L-57">
                        <a href="#L-57">
                            <span className="linenos"> 57</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">prefect.context</span>
                        {"\n"}
                    </span>
                    <span id="L-58">
                        <a href="#L-58">
                            <span className="linenos"> 58</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-59">
                        <a href="#L-59">
                            <span className="linenos"> 59</span>
                        </a>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">context</span>
                        <span className="o">.</span>
                        <span className="n">initialize_object_registry</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="L-60">
                        <a href="#L-60">
                            <span className="linenos"> 60</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-61">
                        <a href="#L-61">
                            <span className="linenos"> 61</span>
                        </a>
                        <span className="c1">
                            # Perform any forward-ref updates needed for Pydantic models
                        </span>
                        {"\n"}
                    </span>
                    <span id="L-62">
                        <a href="#L-62">
                            <span className="linenos"> 62</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">prefect.client.schemas</span>
                        {"\n"}
                    </span>
                    <span id="L-63">
                        <a href="#L-63">
                            <span className="linenos"> 63</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-64">
                        <a href="#L-64">
                            <span className="linenos"> 64</span>
                        </a>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">context</span>
                        <span className="o">.</span>
                        <span className="n">FlowRunContext</span>
                        <span className="o">.</span>
                        <span className="n">update_forward_refs</span>
                        <span className="p">(</span>
                        <span className="n">Flow</span>
                        <span className="o">=</span>
                        <span className="n">Flow</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="L-65">
                        <a href="#L-65">
                            <span className="linenos"> 65</span>
                        </a>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">context</span>
                        <span className="o">.</span>
                        <span className="n">TaskRunContext</span>
                        <span className="o">.</span>
                        <span className="n">update_forward_refs</span>
                        <span className="p">(</span>
                        <span className="n">Task</span>
                        <span className="o">=</span>
                        <span className="n">Task</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="L-66">
                        <a href="#L-66">
                            <span className="linenos"> 66</span>
                        </a>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">schemas</span>
                        <span className="o">.</span>
                        <span className="n">State</span>
                        <span className="o">.</span>
                        <span className="n">update_forward_refs</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="L-67">
                        <a href="#L-67">
                            <span className="linenos"> 67</span>
                        </a>
                        {"    "}
                        <span className="n">BaseResult</span>
                        <span className="o">=</span>
                        <span className="n">BaseResult</span>
                        <span className="p">,</span> <span className="n">DataDocument</span>
                        <span className="o">=</span>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">deprecated</span>
                        <span className="o">.</span>
                        <span className="n">data_documents</span>
                        <span className="o">.</span>
                        <span className="n">DataDocument</span>
                        {"\n"}
                    </span>
                    <span id="L-68">
                        <a href="#L-68">
                            <span className="linenos"> 68</span>
                        </a>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="L-69">
                        <a href="#L-69">
                            <span className="linenos"> 69</span>
                        </a>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">schemas</span>
                        <span className="o">.</span>
                        <span className="n">StateCreate</span>
                        <span className="o">.</span>
                        <span className="n">update_forward_refs</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="L-70">
                        <a href="#L-70">
                            <span className="linenos"> 70</span>
                        </a>
                        {"    "}
                        <span className="n">BaseResult</span>
                        <span className="o">=</span>
                        <span className="n">BaseResult</span>
                        <span className="p">,</span> <span className="n">DataDocument</span>
                        <span className="o">=</span>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">deprecated</span>
                        <span className="o">.</span>
                        <span className="n">data_documents</span>
                        <span className="o">.</span>
                        <span className="n">DataDocument</span>
                        {"\n"}
                    </span>
                    <span id="L-71">
                        <a href="#L-71">
                            <span className="linenos"> 71</span>
                        </a>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="L-72">
                        <a href="#L-72">
                            <span className="linenos"> 72</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-73">
                        <a href="#L-73">
                            <span className="linenos"> 73</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-74">
                        <a href="#L-74">
                            <span className="linenos"> 74</span>
                        </a>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">plugins</span>
                        <span className="o">.</span>
                        <span className="n">load_extra_entrypoints</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="L-75">
                        <a href="#L-75">
                            <span className="linenos"> 75</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-76">
                        <a href="#L-76">
                            <span className="linenos"> 76</span>
                        </a>
                        <span className="c1"># Configure logging</span>
                        {"\n"}
                    </span>
                    <span id="L-77">
                        <a href="#L-77">
                            <span className="linenos"> 77</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">prefect.logging.configuration</span>
                        {"\n"}
                    </span>
                    <span id="L-78">
                        <a href="#L-78">
                            <span className="linenos"> 78</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-79">
                        <a href="#L-79">
                            <span className="linenos"> 79</span>
                        </a>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">logging</span>
                        <span className="o">.</span>
                        <span className="n">configuration</span>
                        <span className="o">.</span>
                        <span className="n">setup_logging</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="L-80">
                        <a href="#L-80">
                            <span className="linenos"> 80</span>
                        </a>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">logging</span>
                        <span className="o">.</span>
                        <span className="n">get_logger</span>
                        <span className="p">(</span>
                        <span className="s2">"profiles"</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="n">debug</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="L-81">
                        <a href="#L-81">
                            <span className="linenos"> 81</span>
                        </a>
                        {"    "}
                        <span className="sa">f</span>
                        <span className="s2">"Using profile </span>
                        <span className="si">{"{"}</span>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">context</span>
                        <span className="o">.</span>
                        <span className="n">get_settings_context</span>
                        <span className="p">()</span>
                        <span className="o">.</span>
                        <span className="n">profile</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2">"</span>
                        {"\n"}
                    </span>
                    <span id="L-82">
                        <a href="#L-82">
                            <span className="linenos"> 82</span>
                        </a>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="L-83">
                        <a href="#L-83">
                            <span className="linenos"> 83</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-84">
                        <a href="#L-84">
                            <span className="linenos"> 84</span>
                        </a>
                        <span className="c1">
                            # Ensure moved names are accessible at old locations
                        </span>
                        {"\n"}
                    </span>
                    <span id="L-85">
                        <a href="#L-85">
                            <span className="linenos"> 85</span>
                        </a>
                        <span className="kn">import</span>{" "}
                        <span className="nn">prefect.client</span>
                        {"\n"}
                    </span>
                    <span id="L-86">
                        <a href="#L-86">
                            <span className="linenos"> 86</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-87">
                        <a href="#L-87">
                            <span className="linenos"> 87</span>
                        </a>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">
                            get_client
                        </span> 
                        <span className="o">=</span>{" "}
                        <span className="n">get_client</span>
                        {"\n"}
                    </span>
                    <span id="L-88">
                        <a href="#L-88">
                            <span className="linenos"> 88</span>
                        </a>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">PrefectClient</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">PrefectClient</span>
                        {"\n"}
                    </span>
                    <span id="L-89">
                        <a href="#L-89">
                            <span className="linenos"> 89</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-90">
                        <a href="#L-90">
                            <span className="linenos"> 90</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-91">
                        <a href="#L-91">
                            <span className="linenos"> 91</span>
                        </a>
                        <span className="kn">from</span>{" "}
                        <span className="nn">
                            prefect._internal.compatibility.deprecated
                        </span>{" "}
                        <span className="kn">import</span> <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="L-92">
                        <a href="#L-92">
                            <span className="linenos"> 92</span>
                        </a>
                        {"    "}
                        <span className="n">inject_renamed_module_alias_finder</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-93">
                        <a href="#L-93">
                            <span className="linenos"> 93</span>
                        </a>
                        {"    "}
                        <span className="n">register_renamed_module</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-94">
                        <a href="#L-94">
                            <span className="linenos"> 94</span>
                        </a>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="L-95">
                        <a href="#L-95">
                            <span className="linenos"> 95</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-96">
                        <a href="#L-96">
                            <span className="linenos"> 96</span>
                        </a>
                        <span className="n">register_renamed_module</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="L-97">
                        <a href="#L-97">
                            <span className="linenos"> 97</span>
                        </a>
                        {"    "}
                        <span className="s2">"prefect.packaging"</span>
                        <span className="p">,</span>{" "}
                        <span className="s2">"prefect.deprecated.packaging"</span>
                        <span className="p">,</span> <span className="n">start_date</span>
                        <span className="o">=</span>
                        <span className="s2">"Mar 2024"</span>
                        {"\n"}
                    </span>
                    <span id="L-98">
                        <a href="#L-98">
                            <span className="linenos"> 98</span>
                        </a>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="L-99">
                        <a href="#L-99">
                            <span className="linenos"> 99</span>
                        </a>
                        <span className="n">inject_renamed_module_alias_finder</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="L-100">
                        <a href="#L-100">
                            <span className="linenos">100</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-101">
                        <a href="#L-101">
                            <span className="linenos">101</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-102">
                        <a href="#L-102">
                            <span className="linenos">102</span>
                        </a>
                        <span className="c1">
                            # Attempt to warn users who are importing Prefect 1.x attributes
                            that they may
                        </span>
                        {"\n"}
                    </span>
                    <span id="L-103">
                        <a href="#L-103">
                            <span className="linenos">103</span>
                        </a>
                        <span className="c1">
                            # have accidentally installed Prefect 2.x
                        </span>
                        {"\n"}
                    </span>
                    <span id="L-104">
                        <a href="#L-104">
                            <span className="linenos">104</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-105">
                        <a href="#L-105">
                            <span className="linenos">105</span>
                        </a>
                        <span className="n">PREFECT_1_ATTRIBUTES</span>{" "}
                        <span className="o">=</span> <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="L-106">
                        <a href="#L-106">
                            <span className="linenos">106</span>
                        </a>
                        {"    "}
                        <span className="s2">"prefect.Client"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-107">
                        <a href="#L-107">
                            <span className="linenos">107</span>
                        </a>
                        {"    "}
                        <span className="s2">"prefect.Parameter"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-108">
                        <a href="#L-108">
                            <span className="linenos">108</span>
                        </a>
                        {"    "}
                        <span className="s2">"prefect.api"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-109">
                        <a href="#L-109">
                            <span className="linenos">109</span>
                        </a>
                        {"    "}
                        <span className="s2">"prefect.apply_map"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-110">
                        <a href="#L-110">
                            <span className="linenos">110</span>
                        </a>
                        {"    "}
                        <span className="s2">"prefect.case"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-111">
                        <a href="#L-111">
                            <span className="linenos">111</span>
                        </a>
                        {"    "}
                        <span className="s2">"prefect.config"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-112">
                        <a href="#L-112">
                            <span className="linenos">112</span>
                        </a>
                        {"    "}
                        <span className="s2">"prefect.context"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-113">
                        <a href="#L-113">
                            <span className="linenos">113</span>
                        </a>
                        {"    "}
                        <span className="s2">"prefect.flatten"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-114">
                        <a href="#L-114">
                            <span className="linenos">114</span>
                        </a>
                        {"    "}
                        <span className="s2">"prefect.mapped"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-115">
                        <a href="#L-115">
                            <span className="linenos">115</span>
                        </a>
                        {"    "}
                        <span className="s2">"prefect.models"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-116">
                        <a href="#L-116">
                            <span className="linenos">116</span>
                        </a>
                        {"    "}
                        <span className="s2">"prefect.resource_manager"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-117">
                        <a href="#L-117">
                            <span className="linenos">117</span>
                        </a>
                        <span className="p">]</span>
                        {"\n"}
                    </span>
                    <span id="L-118">
                        <a href="#L-118">
                            <span className="linenos">118</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-119">
                        <a href="#L-119">
                            <span className="linenos">119</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-120">
                        <a href="#L-120">
                            <span className="linenos">120</span>
                        </a>
                        <span className="k">class</span>{" "}
                        <span className="nc">Prefect1ImportInterceptor</span>
                        <span className="p">(</span>
                        <span className="n">importlib</span>
                        <span className="o">.</span>
                        <span className="n">abc</span>
                        <span className="o">.</span>
                        <span className="n">Loader</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="L-121">
                        <a href="#L-121">
                            <span className="linenos">121</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">find_spec</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">,</span> <span className="n">fullname</span>
                        <span className="p">,</span> <span className="n">path</span>
                        <span className="p">,</span> <span className="n">target</span>
                        <span className="o">=</span>
                        <span className="kc">None</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="L-122">
                        <a href="#L-122">
                            <span className="linenos">122</span>
                        </a>
                        {"        "}
                        <span className="k">
                            if
                        </span> 
                        <span className="n">fullname</span>{" "}
                        <span className="ow">in</span>{" "}
                        <span className="n">PREFECT_1_ATTRIBUTES</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="L-123">
                        <a href="#L-123">
                            <span className="linenos">123</span>
                        </a>
                        {"            "}
                        <span className="n">warnings</span>
                        <span className="o">.</span>
                        <span className="n">warn</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="L-124">
                        <a href="#L-124">
                            <span className="linenos">124</span>
                        </a>
                        {"                "}
                        <span className="sa">f</span>
                        <span className="s2">"Attempted import of </span>
                        <span className="si">{"{"}</span>
                        <span className="n">fullname</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2">, which is part of Prefect 1.x, while"</span>
                        {"\n"}
                    </span>
                    <span id="L-125">
                        <a href="#L-125">
                            <span className="linenos">125</span>
                        </a>
                        {"                "}
                        <span className="sa">f</span>
                        <span className="s2">" Prefect </span>
                        <span className="si">{"{"}</span>
                        <span className="n">__version__</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">
                            {" "}
                            is installed. If you're upgrading you'll need"
                        </span>
                        {"\n"}
                    </span>
                    <span id="L-126">
                        <a href="#L-126">
                            <span className="linenos">126</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            " to update your code, see the Prefect 2.x migration guide:"
                        </span>
                        {"\n"}
                    </span>
                    <span id="L-127">
                        <a href="#L-127">
                            <span className="linenos">127</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            " `https://orion-docs.prefect.io/migration_guide/`. Otherwise
                            ensure"
                        </span>
                        {"\n"}
                    </span>
                    <span id="L-128">
                        <a href="#L-128">
                            <span className="linenos">128</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            " that your code is pinned to the expected version."
                        </span>
                        {"\n"}
                    </span>
                    <span id="L-129">
                        <a href="#L-129">
                            <span className="linenos">129</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="L-130">
                        <a href="#L-130">
                            <span className="linenos">130</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-131">
                        <a href="#L-131">
                            <span className="linenos">131</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-132">
                        <a href="#L-132">
                            <span className="linenos">132</span>
                        </a>
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="nb">hasattr</span>
                        <span className="p">(</span>
                        <span className="n">sys</span>
                        <span className="p">,</span> <span className="s2">"frozen"</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="L-133">
                        <a href="#L-133">
                            <span className="linenos">133</span>
                        </a>
                        {"    "}
                        <span className="n">sys</span>
                        <span className="o">.</span>
                        <span className="n">meta_path</span>
                        <span className="o">.</span>
                        <span className="n">insert</span>
                        <span className="p">(</span>
                        <span className="mi">0</span>
                        <span className="p">,</span>{" "}
                        <span className="n">Prefect1ImportInterceptor</span>
                        <span className="p">())</span>
                        {"\n"}
                    </span>
                    <span id="L-134">
                        <a href="#L-134">
                            <span className="linenos">134</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-135">
                        <a href="#L-135">
                            <span className="linenos">135</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="L-136">
                        <a href="#L-136">
                            <span className="linenos">136</span>
                        </a>
                        <span className="c1"># Declare API for type-checkers</span>
                        {"\n"}
                    </span>
                    <span id="L-137">
                        <a href="#L-137">
                            <span className="linenos">137</span>
                        </a>
                        <span className="n">__all__</span> <span className="o">=</span>{" "}
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="L-138">
                        <a href="#L-138">
                            <span className="linenos">138</span>
                        </a>
                        {"    "}
                        <span className="s2">"allow_failure"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-139">
                        <a href="#L-139">
                            <span className="linenos">139</span>
                        </a>
                        {"    "}
                        <span className="s2">"flow"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-140">
                        <a href="#L-140">
                            <span className="linenos">140</span>
                        </a>
                        {"    "}
                        <span className="s2">"Flow"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-141">
                        <a href="#L-141">
                            <span className="linenos">141</span>
                        </a>
                        {"    "}
                        <span className="s2">"get_client"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-142">
                        <a href="#L-142">
                            <span className="linenos">142</span>
                        </a>
                        {"    "}
                        <span className="s2">"get_run_logger"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-143">
                        <a href="#L-143">
                            <span className="linenos">143</span>
                        </a>
                        {"    "}
                        <span className="s2">"Manifest"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-144">
                        <a href="#L-144">
                            <span className="linenos">144</span>
                        </a>
                        {"    "}
                        <span className="s2">"State"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-145">
                        <a href="#L-145">
                            <span className="linenos">145</span>
                        </a>
                        {"    "}
                        <span className="s2">"tags"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-146">
                        <a href="#L-146">
                            <span className="linenos">146</span>
                        </a>
                        {"    "}
                        <span className="s2">"task"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-147">
                        <a href="#L-147">
                            <span className="linenos">147</span>
                        </a>
                        {"    "}
                        <span className="s2">"Task"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-148">
                        <a href="#L-148">
                            <span className="linenos">148</span>
                        </a>
                        {"    "}
                        <span className="s2">"unmapped"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-149">
                        <a href="#L-149">
                            <span className="linenos">149</span>
                        </a>
                        {"    "}
                        <span className="s2">"serve"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-150">
                        <a href="#L-150">
                            <span className="linenos">150</span>
                        </a>
                        {"    "}
                        <span className="s2">"deploy"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-151">
                        <a href="#L-151">
                            <span className="linenos">151</span>
                        </a>
                        {"    "}
                        <span className="s2">"pause_flow_run"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-152">
                        <a href="#L-152">
                            <span className="linenos">152</span>
                        </a>
                        {"    "}
                        <span className="s2">"resume_flow_run"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-153">
                        <a href="#L-153">
                            <span className="linenos">153</span>
                        </a>
                        {"    "}
                        <span className="s2">"suspend_flow_run"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="L-154">
                        <a href="#L-154">
                            <span className="linenos">154</span>
                        </a>
                        <span className="p">]</span>
                        {"\n"}
                    </span>
                </pre>
            </div>
        </section>
        <section id="allow_failure">
            <input
                id="allow_failure-view-source"
                className="view-source-toggle-state"
                type="checkbox"
                aria-hidden="true"
                tabIndex={-1}
            />
            <div className="attr class">
                <span className="def">class</span>
                <span className="name">allow_failure</span>
                <wbr />(
                <span className="base">
                    prefect.utilities.annotations.BaseAnnotation[~T]
                </span>
                ):
                <label
                    className="view-source-button"
                    htmlFor="allow_failure-view-source"
                >
                    <span>View Source</span>
                </label>
            </div>
            <a className="headerlink" href="#allow_failure" />
            <div className="pdoc-code codehilite">
                <pre>
                    <span />
                    <span id="allow_failure-47">
                        <a href="#allow_failure-47">
                            <span className="linenos">47</span>
                        </a>
                        <span className="k">class</span>{" "}
                        <span className="nc">allow_failure</span>
                        <span className="p">(</span>
                        <span className="n">BaseAnnotation</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">]):</span>
                        {"\n"}
                    </span>
                    <span id="allow_failure-48">
                        <a href="#allow_failure-48">
                            <span className="linenos">48</span>
                        </a>
                        <span className="w">{"    "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="allow_failure-49">
                        <a href="#allow_failure-49">
                            <span className="linenos">49</span>
                        </a>
                        <span className="sd">{"    "}Wrapper for states or futures.</span>
                        {"\n"}
                    </span>
                    <span id="allow_failure-50">
                        <a href="#allow_failure-50">
                            <span className="linenos">50</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="allow_failure-51">
                        <a href="#allow_failure-51">
                            <span className="linenos">51</span>
                        </a>
                        <span className="sd">
                            {"    "}Indicates that the upstream run for this input can be
                            failed.
                        </span>
                        {"\n"}
                    </span>
                    <span id="allow_failure-52">
                        <a href="#allow_failure-52">
                            <span className="linenos">52</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="allow_failure-53">
                        <a href="#allow_failure-53">
                            <span className="linenos">53</span>
                        </a>
                        <span className="sd">
                            {"    "}Generally, Prefect will not allow a downstream run to
                            start if any of its inputs
                        </span>
                        {"\n"}
                    </span>
                    <span id="allow_failure-54">
                        <a href="#allow_failure-54">
                            <span className="linenos">54</span>
                        </a>
                        <span className="sd">
                            {"    "}are failed. This annotation allows you to opt into
                            receiving a failed input
                        </span>
                        {"\n"}
                    </span>
                    <span id="allow_failure-55">
                        <a href="#allow_failure-55">
                            <span className="linenos">55</span>
                        </a>
                        <span className="sd">{"    "}downstream.</span>
                        {"\n"}
                    </span>
                    <span id="allow_failure-56">
                        <a href="#allow_failure-56">
                            <span className="linenos">56</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="allow_failure-57">
                        <a href="#allow_failure-57">
                            <span className="linenos">57</span>
                        </a>
                        <span className="sd">
                            {"    "}If the input is from a failed run, the attached exception
                            will be passed to your
                        </span>
                        {"\n"}
                    </span>
                    <span id="allow_failure-58">
                        <a href="#allow_failure-58">
                            <span className="linenos">58</span>
                        </a>
                        <span className="sd">{"    "}function.</span>
                        {"\n"}
                    </span>
                    <span id="allow_failure-59">
                        <a href="#allow_failure-59">
                            <span className="linenos">59</span>
                        </a>
                        <span className="sd">{"    "}"""</span>
                        {"\n"}
                    </span>
                </pre>
            </div>
            <div className="docstring">
                <p>Wrapper for states or futures.</p>
                <p>Indicates that the upstream run for this input can be failed.</p>
                <p>
                    Generally, Prefect will not allow a downstream run to start if any of
                    its inputs are failed. This annotation allows you to opt into
                    receiving a failed input downstream.
                </p>
                <p>
                    If the input is from a failed run, the attached exception will be
                    passed to your function.
                </p>
            </div>
            <div id="allow_failure.__init__" className="classattr">
                <div className="attr function">
                    <span className="name">allow_failure</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="n">value</span>
                        </span>
                        )
                    </span>
                </div>
                <a className="headerlink" href="#allow_failure.__init__" />
                <div className="docstring">
                    <p>Create new instance of BaseAnnotation(value,)</p>
                </div>
            </div>
            <div className="inherited">
                <h5>Inherited Members</h5>
                <dl>
                    <div>
                        <dt>prefect.utilities.annotations.BaseAnnotation</dt>
                        <dd id="allow_failure.unwrap" className="function">
                            unwrap
                        </dd>
                        <dd id="allow_failure.rewrap" className="function">
                            rewrap
                        </dd>
                        <dd id="allow_failure.value" className="variable">
                            value
                        </dd>
                    </div>
                    <div>
                        <dt>builtins.tuple</dt>
                        <dd id="allow_failure.index" className="function">
                            index
                        </dd>
                        <dd id="allow_failure.count" className="function">
                            count
                        </dd>
                    </div>
                </dl>
            </div>
        </section>
        <section id="flow">
            <input
                id="flow-view-source"
                className="view-source-toggle-state"
                type="checkbox"
                aria-hidden="true"
                tabIndex={-1}
            />
            <div className="attr function">
                <span className="def">def</span>
                <span className="name">flow</span>
                <span className="signature pdoc-code multiline">
                    (
                    <span className="param">
                        {" "}
                        <span className="n">__fn</span>
                        <span className="o">=</span>
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="o">*</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">version</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">flow_run_name</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[],</span> <span className="nb">str</span>
                        <span className="p">],</span> <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">NoneType</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">retries</span>
                        <span className="p">:</span> <span className="nb">int</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">retry_delay_seconds</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">,</span> <span className="nb">float</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        task_runner: prefect.task_runners.BaseTaskRunner = &lt;class
                        'prefect.task_runners.ConcurrentTaskRunner'&gt;,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">description</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">timeout_seconds</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">,</span> <span className="nb">float</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">validate_parameters</span>
                        <span className="p">:</span> <span className="nb">bool</span>
                        <span className="o">=</span> <span className="kc">True</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">persist_result</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">result_storage</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">filesystems</span>
                        <span className="o">.</span>
                        <span className="n">WritableFileSystem</span>
                        <span className="p">,</span> <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">NoneType</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">result_serializer</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">serializers</span>
                        <span className="o">.</span>
                        <span className="n">Serializer</span>
                        <span className="p">,</span> <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">NoneType</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">cache_result_in_memory</span>
                        <span className="p">:</span> <span className="nb">bool</span>
                        <span className="o">=</span> <span className="kc">True</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">log_prints</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">on_completion</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">schemas</span>
                        <span className="o">.</span>
                        <span className="n">objects</span>
                        <span className="o">.</span>
                        <span className="n">Flow</span>
                        <span className="p">,</span> <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">schemas</span>
                        <span className="o">.</span>
                        <span className="n">objects</span>
                        <span className="o">.</span>
                        <span className="n">FlowRun</span>
                        <span className="p">,</span>{" "}
                        <span className="n">
                            <a href="#State">State</a>
                        </span>
                        <span className="p">],</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Awaitable</span>
                        <span className="p">[</span>
                        <span className="n">NoneType</span>
                        <span className="p">]]]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">on_failure</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">schemas</span>
                        <span className="o">.</span>
                        <span className="n">objects</span>
                        <span className="o">.</span>
                        <span className="n">Flow</span>
                        <span className="p">,</span> <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">schemas</span>
                        <span className="o">.</span>
                        <span className="n">objects</span>
                        <span className="o">.</span>
                        <span className="n">FlowRun</span>
                        <span className="p">,</span>{" "}
                        <span className="n">
                            <a href="#State">State</a>
                        </span>
                        <span className="p">],</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Awaitable</span>
                        <span className="p">[</span>
                        <span className="n">NoneType</span>
                        <span className="p">]]]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">on_cancellation</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">schemas</span>
                        <span className="o">.</span>
                        <span className="n">objects</span>
                        <span className="o">.</span>
                        <span className="n">Flow</span>
                        <span className="p">,</span> <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">schemas</span>
                        <span className="o">.</span>
                        <span className="n">objects</span>
                        <span className="o">.</span>
                        <span className="n">FlowRun</span>
                        <span className="p">,</span>{" "}
                        <span className="n">
                            <a href="#State">State</a>
                        </span>
                        <span className="p">],</span> <span className="n">NoneType</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">on_crashed</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">schemas</span>
                        <span className="o">.</span>
                        <span className="n">objects</span>
                        <span className="o">.</span>
                        <span className="n">Flow</span>
                        <span className="p">,</span> <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">schemas</span>
                        <span className="o">.</span>
                        <span className="n">objects</span>
                        <span className="o">.</span>
                        <span className="n">FlowRun</span>
                        <span className="p">,</span>{" "}
                        <span className="n">
                            <a href="#State">State</a>
                        </span>
                        <span className="p">],</span> <span className="n">NoneType</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">on_running</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">schemas</span>
                        <span className="o">.</span>
                        <span className="n">objects</span>
                        <span className="o">.</span>
                        <span className="n">Flow</span>
                        <span className="p">,</span> <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">schemas</span>
                        <span className="o">.</span>
                        <span className="n">objects</span>
                        <span className="o">.</span>
                        <span className="n">FlowRun</span>
                        <span className="p">,</span>{" "}
                        <span className="n">
                            <a href="#State">State</a>
                        </span>
                        <span className="p">],</span> <span className="n">NoneType</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                    </span>
                    <span className="return-annotation">):</span>
                </span>
                <label className="view-source-button" htmlFor="flow-view-source">
                    <span>View Source</span>
                </label>
            </div>
            <a className="headerlink" href="#flow" />
            <div className="pdoc-code codehilite">
                <pre>
                    <span />
                    <span id="flow-1369">
                        <a href="#flow-1369">
                            <span className="linenos">1369</span>
                        </a>
                        <span className="k">def</span> <span className="nf">flow</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="flow-1370">
                        <a href="#flow-1370">
                            <span className="linenos">1370</span>
                        </a>
                        {"    "}
                        <span className="n">__fn</span>
                        <span className="o">=</span>
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1371">
                        <a href="#flow-1371">
                            <span className="linenos">1371</span>
                        </a>
                        {"    "}
                        <span className="o">*</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1372">
                        <a href="#flow-1372">
                            <span className="linenos">1372</span>
                        </a>
                        {"    "}
                        <span className="n">name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1373">
                        <a href="#flow-1373">
                            <span className="linenos">1373</span>
                        </a>
                        {"    "}
                        <span className="n">version</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1374">
                        <a href="#flow-1374">
                            <span className="linenos">1374</span>
                        </a>
                        {"    "}
                        <span className="n">flow_run_name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[],</span> <span className="nb">str</span>
                        <span className="p">],</span> <span className="nb">str</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1375">
                        <a href="#flow-1375">
                            <span className="linenos">1375</span>
                        </a>
                        {"    "}
                        <span className="n">retries</span>
                        <span className="p">:</span> <span className="nb">int</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1376">
                        <a href="#flow-1376">
                            <span className="linenos">1376</span>
                        </a>
                        {"    "}
                        <span className="n">retry_delay_seconds</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">,</span> <span className="nb">float</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1377">
                        <a href="#flow-1377">
                            <span className="linenos">1377</span>
                        </a>
                        {"    "}
                        <span className="n">task_runner</span>
                        <span className="p">:</span>{" "}
                        <span className="n">BaseTaskRunner</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">ConcurrentTaskRunner</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1378">
                        <a href="#flow-1378">
                            <span className="linenos">1378</span>
                        </a>
                        {"    "}
                        <span className="n">description</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1379">
                        <a href="#flow-1379">
                            <span className="linenos">1379</span>
                        </a>
                        {"    "}
                        <span className="n">timeout_seconds</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">,</span> <span className="nb">float</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1380">
                        <a href="#flow-1380">
                            <span className="linenos">1380</span>
                        </a>
                        {"    "}
                        <span className="n">validate_parameters</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1381">
                        <a href="#flow-1381">
                            <span className="linenos">1381</span>
                        </a>
                        {"    "}
                        <span className="n">persist_result</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1382">
                        <a href="#flow-1382">
                            <span className="linenos">1382</span>
                        </a>
                        {"    "}
                        <span className="n">result_storage</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">ResultStorage</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1383">
                        <a href="#flow-1383">
                            <span className="linenos">1383</span>
                        </a>
                        {"    "}
                        <span className="n">result_serializer</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">ResultSerializer</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1384">
                        <a href="#flow-1384">
                            <span className="linenos">1384</span>
                        </a>
                        {"    "}
                        <span className="n">cache_result_in_memory</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1385">
                        <a href="#flow-1385">
                            <span className="linenos">1385</span>
                        </a>
                        {"    "}
                        <span className="n">log_prints</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1386">
                        <a href="#flow-1386">
                            <span className="linenos">1386</span>
                        </a>
                        {"    "}
                        <span className="n">on_completion</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="flow-1387">
                        <a href="#flow-1387">
                            <span className="linenos">1387</span>
                        </a>
                        {"        "}
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">FlowSchema</span>
                        <span className="p">,</span> <span className="n">FlowRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Awaitable</span>
                        <span className="p">[</span>
                        <span className="kc">None</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]]</span>
                        {"\n"}
                    </span>
                    <span id="flow-1388">
                        <a href="#flow-1388">
                            <span className="linenos">1388</span>
                        </a>
                        {"    "}
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1389">
                        <a href="#flow-1389">
                            <span className="linenos">1389</span>
                        </a>
                        {"    "}
                        <span className="n">on_failure</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="flow-1390">
                        <a href="#flow-1390">
                            <span className="linenos">1390</span>
                        </a>
                        {"        "}
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">FlowSchema</span>
                        <span className="p">,</span> <span className="n">FlowRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Awaitable</span>
                        <span className="p">[</span>
                        <span className="kc">None</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]]</span>
                        {"\n"}
                    </span>
                    <span id="flow-1391">
                        <a href="#flow-1391">
                            <span className="linenos">1391</span>
                        </a>
                        {"    "}
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1392">
                        <a href="#flow-1392">
                            <span className="linenos">1392</span>
                        </a>
                        {"    "}
                        <span className="n">on_cancellation</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="flow-1393">
                        <a href="#flow-1393">
                            <span className="linenos">1393</span>
                        </a>
                        {"        "}
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">FlowSchema</span>
                        <span className="p">,</span> <span className="n">FlowRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]</span>
                        {"\n"}
                    </span>
                    <span id="flow-1394">
                        <a href="#flow-1394">
                            <span className="linenos">1394</span>
                        </a>
                        {"    "}
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1395">
                        <a href="#flow-1395">
                            <span className="linenos">1395</span>
                        </a>
                        {"    "}
                        <span className="n">on_crashed</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">FlowSchema</span>
                        <span className="p">,</span> <span className="n">FlowRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1396">
                        <a href="#flow-1396">
                            <span className="linenos">1396</span>
                        </a>
                        {"    "}
                        <span className="n">on_running</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">FlowSchema</span>
                        <span className="p">,</span> <span className="n">FlowRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1397">
                        <a href="#flow-1397">
                            <span className="linenos">1397</span>
                        </a>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="flow-1398">
                        <a href="#flow-1398">
                            <span className="linenos">1398</span>
                        </a>
                        <span className="w">{"    "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="flow-1399">
                        <a href="#flow-1399">
                            <span className="linenos">1399</span>
                        </a>
                        <span className="sd">
                            {"    "}Decorator to designate a function as a Prefect workflow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1400">
                        <a href="#flow-1400">
                            <span className="linenos">1400</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="flow-1401">
                        <a href="#flow-1401">
                            <span className="linenos">1401</span>
                        </a>
                        <span className="sd">
                            {"    "}This decorator may be used for asynchronous or synchronous
                            functions.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1402">
                        <a href="#flow-1402">
                            <span className="linenos">1402</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="flow-1403">
                        <a href="#flow-1403">
                            <span className="linenos">1403</span>
                        </a>
                        <span className="sd">
                            {"    "}Flow parameters must be serializable by Pydantic.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1404">
                        <a href="#flow-1404">
                            <span className="linenos">1404</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="flow-1405">
                        <a href="#flow-1405">
                            <span className="linenos">1405</span>
                        </a>
                        <span className="sd">{"    "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="flow-1406">
                        <a href="#flow-1406">
                            <span className="linenos">1406</span>
                        </a>
                        <span className="sd">
                            {"        "}name: An optional name for the flow; if not provided,
                            the name will be inferred
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1407">
                        <a href="#flow-1407">
                            <span className="linenos">1407</span>
                        </a>
                        <span className="sd">{"            "}from the given function.</span>
                        {"\n"}
                    </span>
                    <span id="flow-1408">
                        <a href="#flow-1408">
                            <span className="linenos">1408</span>
                        </a>
                        <span className="sd">
                            {"        "}version: An optional version string for the flow; if
                            not provided, we will
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1409">
                        <a href="#flow-1409">
                            <span className="linenos">1409</span>
                        </a>
                        <span className="sd">
                            {"            "}attempt to create a version string as a hash of
                            the file containing the
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1410">
                        <a href="#flow-1410">
                            <span className="linenos">1410</span>
                        </a>
                        <span className="sd">
                            {"            "}wrapped function; if the file cannot be located,
                            the version will be null.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1411">
                        <a href="#flow-1411">
                            <span className="linenos">1411</span>
                        </a>
                        <span className="sd">
                            {"        "}flow_run_name: An optional name to distinguish runs of
                            this flow; this name can
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1412">
                        <a href="#flow-1412">
                            <span className="linenos">1412</span>
                        </a>
                        <span className="sd">
                            {"            "}be provided as a string template with the flow's
                            parameters as variables,
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1413">
                        <a href="#flow-1413">
                            <span className="linenos">1413</span>
                        </a>
                        <span className="sd">
                            {"            "}or a function that returns a string.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1414">
                        <a href="#flow-1414">
                            <span className="linenos">1414</span>
                        </a>
                        <span className="sd">
                            {"        "}retries: An optional number of times to retry on flow
                            run failure.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1415">
                        <a href="#flow-1415">
                            <span className="linenos">1415</span>
                        </a>
                        <span className="sd">
                            {"        "}retry_delay_seconds: An optional number of seconds to
                            wait before retrying the
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1416">
                        <a href="#flow-1416">
                            <span className="linenos">1416</span>
                        </a>
                        <span className="sd">
                            {"            "}flow after failure. This is only applicable if
                            `retries` is nonzero.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1417">
                        <a href="#flow-1417">
                            <span className="linenos">1417</span>
                        </a>
                        <span className="sd">
                            {"        "}task_runner: An optional task runner to use for task
                            execution within the flow; if
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1418">
                        <a href="#flow-1418">
                            <span className="linenos">1418</span>
                        </a>
                        <span className="sd">
                            {"            "}not provided, a `ConcurrentTaskRunner` will be
                            instantiated.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1419">
                        <a href="#flow-1419">
                            <span className="linenos">1419</span>
                        </a>
                        <span className="sd">
                            {"        "}description: An optional string description for the
                            flow; if not provided, the
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1420">
                        <a href="#flow-1420">
                            <span className="linenos">1420</span>
                        </a>
                        <span className="sd">
                            {"            "}description will be pulled from the docstring for
                            the decorated function.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1421">
                        <a href="#flow-1421">
                            <span className="linenos">1421</span>
                        </a>
                        <span className="sd">
                            {"        "}timeout_seconds: An optional number of seconds
                            indicating a maximum runtime for
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1422">
                        <a href="#flow-1422">
                            <span className="linenos">1422</span>
                        </a>
                        <span className="sd">
                            {"            "}the flow. If the flow exceeds this runtime, it
                            will be marked as failed.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1423">
                        <a href="#flow-1423">
                            <span className="linenos">1423</span>
                        </a>
                        <span className="sd">
                            {"            "}Flow execution may continue until the next task is
                            called.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1424">
                        <a href="#flow-1424">
                            <span className="linenos">1424</span>
                        </a>
                        <span className="sd">
                            {"        "}validate_parameters: By default, parameters passed to
                            flows are validated by
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1425">
                        <a href="#flow-1425">
                            <span className="linenos">1425</span>
                        </a>
                        <span className="sd">
                            {"            "}Pydantic. This will check that input values
                            conform to the annotated types
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1426">
                        <a href="#flow-1426">
                            <span className="linenos">1426</span>
                        </a>
                        <span className="sd">
                            {"            "}on the function. Where possible, values will be
                            coerced into the correct
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1427">
                        <a href="#flow-1427">
                            <span className="linenos">1427</span>
                        </a>
                        <span className="sd">
                            {"            "}type; for example, if a parameter is defined as
                            `x: int` and "5" is passed,
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1428">
                        <a href="#flow-1428">
                            <span className="linenos">1428</span>
                        </a>
                        <span className="sd">
                            {"            "}it will be resolved to `5`. If set to `False`, no
                            validation will be
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1429">
                        <a href="#flow-1429">
                            <span className="linenos">1429</span>
                        </a>
                        <span className="sd">
                            {"            "}performed on flow parameters.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1430">
                        <a href="#flow-1430">
                            <span className="linenos">1430</span>
                        </a>
                        <span className="sd">
                            {"        "}persist_result: An optional toggle indicating whether
                            the result of this flow
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1431">
                        <a href="#flow-1431">
                            <span className="linenos">1431</span>
                        </a>
                        <span className="sd">
                            {"            "}should be persisted to result storage. Defaults to
                            `None`, which indicates
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1432">
                        <a href="#flow-1432">
                            <span className="linenos">1432</span>
                        </a>
                        <span className="sd">
                            {"            "}that Prefect should choose whether the result
                            should be persisted depending on
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1433">
                        <a href="#flow-1433">
                            <span className="linenos">1433</span>
                        </a>
                        <span className="sd">{"            "}the features being used.</span>
                        {"\n"}
                    </span>
                    <span id="flow-1434">
                        <a href="#flow-1434">
                            <span className="linenos">1434</span>
                        </a>
                        <span className="sd">
                            {"        "}result_storage: An optional block to use to persist
                            the result of this flow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1435">
                        <a href="#flow-1435">
                            <span className="linenos">1435</span>
                        </a>
                        <span className="sd">
                            {"            "}This value will be used as the default for any
                            tasks in this flow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1436">
                        <a href="#flow-1436">
                            <span className="linenos">1436</span>
                        </a>
                        <span className="sd">
                            {"            "}If not provided, the local file system will be
                            used unless called as
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1437">
                        <a href="#flow-1437">
                            <span className="linenos">1437</span>
                        </a>
                        <span className="sd">
                            {"            "}a subflow, at which point the default will be
                            loaded from the parent flow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1438">
                        <a href="#flow-1438">
                            <span className="linenos">1438</span>
                        </a>
                        <span className="sd">
                            {"        "}result_serializer: An optional serializer to use to
                            serialize the result of this
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1439">
                        <a href="#flow-1439">
                            <span className="linenos">1439</span>
                        </a>
                        <span className="sd">
                            {"            "}flow for persistence. This value will be used as
                            the default for any tasks
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1440">
                        <a href="#flow-1440">
                            <span className="linenos">1440</span>
                        </a>
                        <span className="sd">
                            {"            "}in this flow. If not provided, the value of
                            `PREFECT_RESULTS_DEFAULT_SERIALIZER`
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1441">
                        <a href="#flow-1441">
                            <span className="linenos">1441</span>
                        </a>
                        <span className="sd">
                            {"            "}will be used unless called as a subflow, at which
                            point the default will be
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1442">
                        <a href="#flow-1442">
                            <span className="linenos">1442</span>
                        </a>
                        <span className="sd">
                            {"            "}loaded from the parent flow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1443">
                        <a href="#flow-1443">
                            <span className="linenos">1443</span>
                        </a>
                        <span className="sd">
                            {"        "}cache_result_in_memory: An optional toggle indicating
                            whether the cached result of
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1444">
                        <a href="#flow-1444">
                            <span className="linenos">1444</span>
                        </a>
                        <span className="sd">
                            {"            "}a running the flow should be stored in memory.
                            Defaults to `True`.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1445">
                        <a href="#flow-1445">
                            <span className="linenos">1445</span>
                        </a>
                        <span className="sd">
                            {"        "}log_prints: If set, `print` statements in the flow
                            will be redirected to the
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1446">
                        <a href="#flow-1446">
                            <span className="linenos">1446</span>
                        </a>
                        <span className="sd">
                            {"            "}Prefect logger for the flow run. Defaults to
                            `None`, which indicates that
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1447">
                        <a href="#flow-1447">
                            <span className="linenos">1447</span>
                        </a>
                        <span className="sd">
                            {"            "}the value from the parent flow should be used. If
                            this is a parent flow,
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1448">
                        <a href="#flow-1448">
                            <span className="linenos">1448</span>
                        </a>
                        <span className="sd">
                            {"            "}the default is pulled from the
                            `PREFECT_LOGGING_LOG_PRINTS` setting.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1449">
                        <a href="#flow-1449">
                            <span className="linenos">1449</span>
                        </a>
                        <span className="sd">
                            {"        "}on_completion: An optional list of functions to call
                            when the flow run is
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1450">
                        <a href="#flow-1450">
                            <span className="linenos">1450</span>
                        </a>
                        <span className="sd">
                            {"            "}completed. Each function should accept three
                            arguments: the flow, the flow
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1451">
                        <a href="#flow-1451">
                            <span className="linenos">1451</span>
                        </a>
                        <span className="sd">
                            {"            "}run, and the final state of the flow run.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1452">
                        <a href="#flow-1452">
                            <span className="linenos">1452</span>
                        </a>
                        <span className="sd">
                            {"        "}on_failure: An optional list of functions to call when
                            the flow run fails. Each
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1453">
                        <a href="#flow-1453">
                            <span className="linenos">1453</span>
                        </a>
                        <span className="sd">
                            {"            "}function should accept three arguments: the flow,
                            the flow run, and the
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1454">
                        <a href="#flow-1454">
                            <span className="linenos">1454</span>
                        </a>
                        <span className="sd">
                            {"            "}final state of the flow run.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1455">
                        <a href="#flow-1455">
                            <span className="linenos">1455</span>
                        </a>
                        <span className="sd">
                            {"        "}on_cancellation: An optional list of functions to call
                            when the flow run is
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1456">
                        <a href="#flow-1456">
                            <span className="linenos">1456</span>
                        </a>
                        <span className="sd">
                            {"            "}cancelled. These functions will be passed the
                            flow, flow run, and final state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1457">
                        <a href="#flow-1457">
                            <span className="linenos">1457</span>
                        </a>
                        <span className="sd">
                            {"        "}on_crashed: An optional list of functions to call when
                            the flow run crashes. Each
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1458">
                        <a href="#flow-1458">
                            <span className="linenos">1458</span>
                        </a>
                        <span className="sd">
                            {"            "}function should accept three arguments: the flow,
                            the flow run, and the
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1459">
                        <a href="#flow-1459">
                            <span className="linenos">1459</span>
                        </a>
                        <span className="sd">
                            {"            "}final state of the flow run.
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1460">
                        <a href="#flow-1460">
                            <span className="linenos">1460</span>
                        </a>
                        <span className="sd">
                            {"        "}on_running: An optional list of functions to call when
                            the flow run is started. Each
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1461">
                        <a href="#flow-1461">
                            <span className="linenos">1461</span>
                        </a>
                        <span className="sd">
                            {"            "}function should accept three arguments: the flow,
                            the flow run, and the current state
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1462">
                        <a href="#flow-1462">
                            <span className="linenos">1462</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="flow-1463">
                        <a href="#flow-1463">
                            <span className="linenos">1463</span>
                        </a>
                        <span className="sd">{"    "}Returns:</span>
                        {"\n"}
                    </span>
                    <span id="flow-1464">
                        <a href="#flow-1464">
                            <span className="linenos">1464</span>
                        </a>
                        <span className="sd">
                            {"        "}A callable `Flow` object which, when called, will run
                            the flow and return its
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1465">
                        <a href="#flow-1465">
                            <span className="linenos">1465</span>
                        </a>
                        <span className="sd">{"        "}final state.</span>
                        {"\n"}
                    </span>
                    <span id="flow-1466">
                        <a href="#flow-1466">
                            <span className="linenos">1466</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="flow-1467">
                        <a href="#flow-1467">
                            <span className="linenos">1467</span>
                        </a>
                        <span className="sd">{"    "}Examples:</span>
                        {"\n"}
                    </span>
                    <span id="flow-1468">
                        <a href="#flow-1468">
                            <span className="linenos">1468</span>
                        </a>
                        <span className="sd">{"        "}Define a simple flow</span>
                        {"\n"}
                    </span>
                    <span id="flow-1469">
                        <a href="#flow-1469">
                            <span className="linenos">1469</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="flow-1470">
                        <a href="#flow-1470">
                            <span className="linenos">1470</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt; from prefect import flow
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1471">
                        <a href="#flow-1471">
                            <span className="linenos">1471</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="flow-1472">
                        <a href="#flow-1472">
                            <span className="linenos">1472</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; def add(x, y):</span>
                        {"\n"}
                    </span>
                    <span id="flow-1473">
                        <a href="#flow-1473">
                            <span className="linenos">1473</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}return x + y
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1474">
                        <a href="#flow-1474">
                            <span className="linenos">1474</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="flow-1475">
                        <a href="#flow-1475">
                            <span className="linenos">1475</span>
                        </a>
                        <span className="sd">{"        "}Define an async flow</span>
                        {"\n"}
                    </span>
                    <span id="flow-1476">
                        <a href="#flow-1476">
                            <span className="linenos">1476</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="flow-1477">
                        <a href="#flow-1477">
                            <span className="linenos">1477</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="flow-1478">
                        <a href="#flow-1478">
                            <span className="linenos">1478</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt; async def add(x, y):
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1479">
                        <a href="#flow-1479">
                            <span className="linenos">1479</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}return x + y
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1480">
                        <a href="#flow-1480">
                            <span className="linenos">1480</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="flow-1481">
                        <a href="#flow-1481">
                            <span className="linenos">1481</span>
                        </a>
                        <span className="sd">
                            {"        "}Define a flow with a version and description
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1482">
                        <a href="#flow-1482">
                            <span className="linenos">1482</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="flow-1483">
                        <a href="#flow-1483">
                            <span className="linenos">1483</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt; @flow(version="first-flow",
                            description="This flow is empty!")
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1484">
                        <a href="#flow-1484">
                            <span className="linenos">1484</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; def my_flow():</span>
                        {"\n"}
                    </span>
                    <span id="flow-1485">
                        <a href="#flow-1485">
                            <span className="linenos">1485</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}pass
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1486">
                        <a href="#flow-1486">
                            <span className="linenos">1486</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="flow-1487">
                        <a href="#flow-1487">
                            <span className="linenos">1487</span>
                        </a>
                        <span className="sd">
                            {"        "}Define a flow with a custom name
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1488">
                        <a href="#flow-1488">
                            <span className="linenos">1488</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="flow-1489">
                        <a href="#flow-1489">
                            <span className="linenos">1489</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt; @flow(name="The Ultimate Flow")
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1490">
                        <a href="#flow-1490">
                            <span className="linenos">1490</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; def my_flow():</span>
                        {"\n"}
                    </span>
                    <span id="flow-1491">
                        <a href="#flow-1491">
                            <span className="linenos">1491</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}pass
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1492">
                        <a href="#flow-1492">
                            <span className="linenos">1492</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="flow-1493">
                        <a href="#flow-1493">
                            <span className="linenos">1493</span>
                        </a>
                        <span className="sd">
                            {"        "}Define a flow that submits its tasks to dask
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1494">
                        <a href="#flow-1494">
                            <span className="linenos">1494</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="flow-1495">
                        <a href="#flow-1495">
                            <span className="linenos">1495</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt; from prefect_dask.task_runners import
                            DaskTaskRunner
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1496">
                        <a href="#flow-1496">
                            <span className="linenos">1496</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="flow-1497">
                        <a href="#flow-1497">
                            <span className="linenos">1497</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt; @flow(task_runner=DaskTaskRunner)
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1498">
                        <a href="#flow-1498">
                            <span className="linenos">1498</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; def my_flow():</span>
                        {"\n"}
                    </span>
                    <span id="flow-1499">
                        <a href="#flow-1499">
                            <span className="linenos">1499</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}pass
                        </span>
                        {"\n"}
                    </span>
                    <span id="flow-1500">
                        <a href="#flow-1500">
                            <span className="linenos">1500</span>
                        </a>
                        <span className="sd">{"    "}"""</span>
                        {"\n"}
                    </span>
                    <span id="flow-1501">
                        <a href="#flow-1501">
                            <span className="linenos">1501</span>
                        </a>
                        {"    "}
                        <span className="k">if</span> <span className="n">__fn</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="flow-1502">
                        <a href="#flow-1502">
                            <span className="linenos">1502</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="n">cast</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="flow-1503">
                        <a href="#flow-1503">
                            <span className="linenos">1503</span>
                        </a>
                        {"            "}
                        <span className="n">Flow</span>
                        <span className="p">[</span>
                        <span className="n">P</span>
                        <span className="p">,</span> <span className="n">R</span>
                        <span className="p">],</span>
                        {"\n"}
                    </span>
                    <span id="flow-1504">
                        <a href="#flow-1504">
                            <span className="linenos">1504</span>
                        </a>
                        {"            "}
                        <span className="n">Flow</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="flow-1505">
                        <a href="#flow-1505">
                            <span className="linenos">1505</span>
                        </a>
                        {"                "}
                        <span className="n">fn</span>
                        <span className="o">=</span>
                        <span className="n">__fn</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1506">
                        <a href="#flow-1506">
                            <span className="linenos">1506</span>
                        </a>
                        {"                "}
                        <span className="n">name</span>
                        <span className="o">=</span>
                        <span className="n">name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1507">
                        <a href="#flow-1507">
                            <span className="linenos">1507</span>
                        </a>
                        {"                "}
                        <span className="n">version</span>
                        <span className="o">=</span>
                        <span className="n">version</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1508">
                        <a href="#flow-1508">
                            <span className="linenos">1508</span>
                        </a>
                        {"                "}
                        <span className="n">flow_run_name</span>
                        <span className="o">=</span>
                        <span className="n">flow_run_name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1509">
                        <a href="#flow-1509">
                            <span className="linenos">1509</span>
                        </a>
                        {"                "}
                        <span className="n">task_runner</span>
                        <span className="o">=</span>
                        <span className="n">task_runner</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1510">
                        <a href="#flow-1510">
                            <span className="linenos">1510</span>
                        </a>
                        {"                "}
                        <span className="n">description</span>
                        <span className="o">=</span>
                        <span className="n">description</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1511">
                        <a href="#flow-1511">
                            <span className="linenos">1511</span>
                        </a>
                        {"                "}
                        <span className="n">timeout_seconds</span>
                        <span className="o">=</span>
                        <span className="n">timeout_seconds</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1512">
                        <a href="#flow-1512">
                            <span className="linenos">1512</span>
                        </a>
                        {"                "}
                        <span className="n">validate_parameters</span>
                        <span className="o">=</span>
                        <span className="n">validate_parameters</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1513">
                        <a href="#flow-1513">
                            <span className="linenos">1513</span>
                        </a>
                        {"                "}
                        <span className="n">retries</span>
                        <span className="o">=</span>
                        <span className="n">retries</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1514">
                        <a href="#flow-1514">
                            <span className="linenos">1514</span>
                        </a>
                        {"                "}
                        <span className="n">retry_delay_seconds</span>
                        <span className="o">=</span>
                        <span className="n">retry_delay_seconds</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1515">
                        <a href="#flow-1515">
                            <span className="linenos">1515</span>
                        </a>
                        {"                "}
                        <span className="n">persist_result</span>
                        <span className="o">=</span>
                        <span className="n">persist_result</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1516">
                        <a href="#flow-1516">
                            <span className="linenos">1516</span>
                        </a>
                        {"                "}
                        <span className="n">result_storage</span>
                        <span className="o">=</span>
                        <span className="n">result_storage</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1517">
                        <a href="#flow-1517">
                            <span className="linenos">1517</span>
                        </a>
                        {"                "}
                        <span className="n">result_serializer</span>
                        <span className="o">=</span>
                        <span className="n">result_serializer</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1518">
                        <a href="#flow-1518">
                            <span className="linenos">1518</span>
                        </a>
                        {"                "}
                        <span className="n">cache_result_in_memory</span>
                        <span className="o">=</span>
                        <span className="n">cache_result_in_memory</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1519">
                        <a href="#flow-1519">
                            <span className="linenos">1519</span>
                        </a>
                        {"                "}
                        <span className="n">log_prints</span>
                        <span className="o">=</span>
                        <span className="n">log_prints</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1520">
                        <a href="#flow-1520">
                            <span className="linenos">1520</span>
                        </a>
                        {"                "}
                        <span className="n">on_completion</span>
                        <span className="o">=</span>
                        <span className="n">on_completion</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1521">
                        <a href="#flow-1521">
                            <span className="linenos">1521</span>
                        </a>
                        {"                "}
                        <span className="n">on_failure</span>
                        <span className="o">=</span>
                        <span className="n">on_failure</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1522">
                        <a href="#flow-1522">
                            <span className="linenos">1522</span>
                        </a>
                        {"                "}
                        <span className="n">on_cancellation</span>
                        <span className="o">=</span>
                        <span className="n">on_cancellation</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1523">
                        <a href="#flow-1523">
                            <span className="linenos">1523</span>
                        </a>
                        {"                "}
                        <span className="n">on_crashed</span>
                        <span className="o">=</span>
                        <span className="n">on_crashed</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1524">
                        <a href="#flow-1524">
                            <span className="linenos">1524</span>
                        </a>
                        {"                "}
                        <span className="n">on_running</span>
                        <span className="o">=</span>
                        <span className="n">on_running</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1525">
                        <a href="#flow-1525">
                            <span className="linenos">1525</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="flow-1526">
                        <a href="#flow-1526">
                            <span className="linenos">1526</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="flow-1527">
                        <a href="#flow-1527">
                            <span className="linenos">1527</span>
                        </a>
                        {"    "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="flow-1528">
                        <a href="#flow-1528">
                            <span className="linenos">1528</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="n">cast</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="flow-1529">
                        <a href="#flow-1529">
                            <span className="linenos">1529</span>
                        </a>
                        {"            "}
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">Callable</span>
                        <span className="p">[</span>
                        <span className="n">P</span>
                        <span className="p">,</span> <span className="n">R</span>
                        <span className="p">]],</span> <span className="n">Flow</span>
                        <span className="p">[</span>
                        <span className="n">P</span>
                        <span className="p">,</span> <span className="n">R</span>
                        <span className="p">]],</span>
                        {"\n"}
                    </span>
                    <span id="flow-1530">
                        <a href="#flow-1530">
                            <span className="linenos">1530</span>
                        </a>
                        {"            "}
                        <span className="n">partial</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="flow-1531">
                        <a href="#flow-1531">
                            <span className="linenos">1531</span>
                        </a>
                        {"                "}
                        <span className="n">flow</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1532">
                        <a href="#flow-1532">
                            <span className="linenos">1532</span>
                        </a>
                        {"                "}
                        <span className="n">name</span>
                        <span className="o">=</span>
                        <span className="n">name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1533">
                        <a href="#flow-1533">
                            <span className="linenos">1533</span>
                        </a>
                        {"                "}
                        <span className="n">version</span>
                        <span className="o">=</span>
                        <span className="n">version</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1534">
                        <a href="#flow-1534">
                            <span className="linenos">1534</span>
                        </a>
                        {"                "}
                        <span className="n">flow_run_name</span>
                        <span className="o">=</span>
                        <span className="n">flow_run_name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1535">
                        <a href="#flow-1535">
                            <span className="linenos">1535</span>
                        </a>
                        {"                "}
                        <span className="n">task_runner</span>
                        <span className="o">=</span>
                        <span className="n">task_runner</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1536">
                        <a href="#flow-1536">
                            <span className="linenos">1536</span>
                        </a>
                        {"                "}
                        <span className="n">description</span>
                        <span className="o">=</span>
                        <span className="n">description</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1537">
                        <a href="#flow-1537">
                            <span className="linenos">1537</span>
                        </a>
                        {"                "}
                        <span className="n">timeout_seconds</span>
                        <span className="o">=</span>
                        <span className="n">timeout_seconds</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1538">
                        <a href="#flow-1538">
                            <span className="linenos">1538</span>
                        </a>
                        {"                "}
                        <span className="n">validate_parameters</span>
                        <span className="o">=</span>
                        <span className="n">validate_parameters</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1539">
                        <a href="#flow-1539">
                            <span className="linenos">1539</span>
                        </a>
                        {"                "}
                        <span className="n">retries</span>
                        <span className="o">=</span>
                        <span className="n">retries</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1540">
                        <a href="#flow-1540">
                            <span className="linenos">1540</span>
                        </a>
                        {"                "}
                        <span className="n">retry_delay_seconds</span>
                        <span className="o">=</span>
                        <span className="n">retry_delay_seconds</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1541">
                        <a href="#flow-1541">
                            <span className="linenos">1541</span>
                        </a>
                        {"                "}
                        <span className="n">persist_result</span>
                        <span className="o">=</span>
                        <span className="n">persist_result</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1542">
                        <a href="#flow-1542">
                            <span className="linenos">1542</span>
                        </a>
                        {"                "}
                        <span className="n">result_storage</span>
                        <span className="o">=</span>
                        <span className="n">result_storage</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1543">
                        <a href="#flow-1543">
                            <span className="linenos">1543</span>
                        </a>
                        {"                "}
                        <span className="n">result_serializer</span>
                        <span className="o">=</span>
                        <span className="n">result_serializer</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1544">
                        <a href="#flow-1544">
                            <span className="linenos">1544</span>
                        </a>
                        {"                "}
                        <span className="n">cache_result_in_memory</span>
                        <span className="o">=</span>
                        <span className="n">cache_result_in_memory</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1545">
                        <a href="#flow-1545">
                            <span className="linenos">1545</span>
                        </a>
                        {"                "}
                        <span className="n">log_prints</span>
                        <span className="o">=</span>
                        <span className="n">log_prints</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1546">
                        <a href="#flow-1546">
                            <span className="linenos">1546</span>
                        </a>
                        {"                "}
                        <span className="n">on_completion</span>
                        <span className="o">=</span>
                        <span className="n">on_completion</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1547">
                        <a href="#flow-1547">
                            <span className="linenos">1547</span>
                        </a>
                        {"                "}
                        <span className="n">on_failure</span>
                        <span className="o">=</span>
                        <span className="n">on_failure</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1548">
                        <a href="#flow-1548">
                            <span className="linenos">1548</span>
                        </a>
                        {"                "}
                        <span className="n">on_cancellation</span>
                        <span className="o">=</span>
                        <span className="n">on_cancellation</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1549">
                        <a href="#flow-1549">
                            <span className="linenos">1549</span>
                        </a>
                        {"                "}
                        <span className="n">on_crashed</span>
                        <span className="o">=</span>
                        <span className="n">on_crashed</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1550">
                        <a href="#flow-1550">
                            <span className="linenos">1550</span>
                        </a>
                        {"                "}
                        <span className="n">on_running</span>
                        <span className="o">=</span>
                        <span className="n">on_running</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="flow-1551">
                        <a href="#flow-1551">
                            <span className="linenos">1551</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="flow-1552">
                        <a href="#flow-1552">
                            <span className="linenos">1552</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                </pre>
            </div>
            <div className="docstring">
                <p>Decorator to designate a function as a Prefect workflow.</p>
                <p>
                    This decorator may be used for asynchronous or synchronous functions.
                </p>
                <p>Flow parameters must be serializable by Pydantic.</p>
                <p>
                    Args: name: An optional name for the flow; if not provided, the name
                    will be inferred from the given function. version: An optional version
                    string for the flow; if not provided, we will attempt to create a
                    version string as a hash of the file containing the wrapped function;
                    if the file cannot be located, the version will be null.
                    flow_run_name: An optional name to distinguish runs of this flow; this
                    name can be provided as a string template with the flow's parameters
                    as variables, or a function that returns a string. retries: An
                    optional number of times to retry on flow run failure.
                    retry_delay_seconds: An optional number of seconds to wait before
                    retrying the flow after failure. This is only applicable if{" "}
                    <code>retries</code> is nonzero. task_runner: An optional task runner
                    to use for task execution within the flow; if not provided, a{" "}
                    <code>ConcurrentTaskRunner</code> will be instantiated. description:
                    An optional string description for the flow; if not provided, the
                    description will be pulled from the docstring for the decorated
                    function. timeout_seconds: An optional number of seconds indicating a
                    maximum runtime for the flow. If the flow exceeds this runtime, it
                    will be marked as failed. Flow execution may continue until the next
                    task is called. validate_parameters: By default, parameters passed to
                    flows are validated by Pydantic. This will check that input values
                    conform to the annotated types on the function. Where possible, values
                    will be coerced into the correct type; for example, if a parameter is
                    defined as <code>x: int</code> and "5" is passed, it will be resolved
                    to <code>5</code>. If set to <code>False</code>, no validation will be
                    performed on flow parameters. persist_result: An optional toggle
                    indicating whether the result of this flow should be persisted to
                    result storage. Defaults to <code>None</code>, which indicates that
                    Prefect should choose whether the result should be persisted depending
                    on the features being used. result_storage: An optional block to use
                    to persist the result of this flow. This value will be used as the
                    default for any tasks in this flow. If not provided, the local file
                    system will be used unless called as a subflow, at which point the
                    default will be loaded from the parent flow. result_serializer: An
                    optional serializer to use to serialize the result of this flow for
                    persistence. This value will be used as the default for any tasks in
                    this flow. If not provided, the value of{" "}
                    <code>PREFECT_RESULTS_DEFAULT_SERIALIZER</code>
                    will be used unless called as a subflow, at which point the default
                    will be loaded from the parent flow. cache_result_in_memory: An
                    optional toggle indicating whether the cached result of a running the
                    flow should be stored in memory. Defaults to <code>True</code>.
                    log_prints: If set, <code>print</code> statements in the flow will be
                    redirected to the Prefect logger for the flow run. Defaults to{" "}
                    <code>None</code>, which indicates that the value from the parent flow
                    should be used. If this is a parent flow, the default is pulled from
                    the <code>PREFECT_LOGGING_LOG_PRINTS</code> setting. on_completion: An
                    optional list of functions to call when the flow run is completed.
                    Each function should accept three arguments: the flow, the flow run,
                    and the final state of the flow run. on_failure: An optional list of
                    functions to call when the flow run fails. Each function should accept
                    three arguments: the flow, the flow run, and the final state of the
                    flow run. on_cancellation: An optional list of functions to call when
                    the flow run is cancelled. These functions will be passed the flow,
                    flow run, and final state. on_crashed: An optional list of functions
                    to call when the flow run crashes. Each function should accept three
                    arguments: the flow, the flow run, and the final state of the flow
                    run. on_running: An optional list of functions to call when the flow
                    run is started. Each function should accept three arguments: the flow,
                    the flow run, and the current state
                </p>
                <p>
                    Returns: A callable{" "}
                    <code>
                        <a href="#Flow">Flow</a>
                    </code>{" "}
                    object which, when called, will run the flow and return its final
                    state.
                </p>
                <p>Examples: Define a simple flow</p>
                <pre>
                    <code>
                        &gt;&gt;&gt; from prefect import flow{"\n"}&gt;&gt;&gt; @flow{"\n"}
                        &gt;&gt;&gt; def add(x, y):{"\n"}&gt;&gt;&gt;{"     "}return x + y
                        {"\n"}
                        {"\n"}Define an async flow{"\n"}
                        {"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; async def add(x, y):
                        {"\n"}&gt;&gt;&gt;{"     "}return x + y{"\n"}
                        {"\n"}Define a flow with a version and description{"\n"}
                        {"\n"}&gt;&gt;&gt; @flow(version="first-flow", description="This
                        flow is empty!"){"\n"}&gt;&gt;&gt; def my_flow():{"\n"}&gt;&gt;&gt;
                        {"     "}pass{"\n"}
                        {"\n"}Define a flow with a custom name{"\n"}
                        {"\n"}&gt;&gt;&gt; @flow(name="The Ultimate Flow"){"\n"}&gt;&gt;&gt;
                        def my_flow():{"\n"}&gt;&gt;&gt;{"     "}pass{"\n"}
                        {"\n"}Define a flow that submits its tasks to dask{"\n"}
                        {"\n"}&gt;&gt;&gt; from prefect_dask.task_runners import
                        DaskTaskRunner{"\n"}&gt;&gt;&gt;{"\n"}&gt;&gt;&gt;
                        @flow(task_runner=DaskTaskRunner){"\n"}&gt;&gt;&gt; def my_flow():
                        {"\n"}&gt;&gt;&gt;{"     "}pass{"\n"}
                    </code>
                </pre>
            </div>
        </section>
        <section id="Flow">
            <input
                id="Flow-view-source"
                className="view-source-toggle-state"
                type="checkbox"
                aria-hidden="true"
                tabIndex={-1}
            />
            <div className="attr class">
                <div className="decorator">
                    @PrefectObjectRegistry.register_instances
                </div>
                <span className="def">class</span>
                <span className="name">Flow</span>
                <wbr />(<span className="base">typing.Generic[~P, ~R]</span>):
                <label className="view-source-button" htmlFor="Flow-view-source">
                    <span>View Source</span>
                </label>
            </div>
            <a className="headerlink" href="#Flow" />
            <div className="pdoc-code codehilite">
                <pre>
                    <span />
                    <span id="Flow-132">
                        <a href="#Flow-132">
                            <span className="linenos"> 132</span>
                        </a>
                        <span className="nd">@PrefectObjectRegistry</span>
                        <span className="o">.</span>
                        <span className="n">register_instances</span>
                        {"\n"}
                    </span>
                    <span id="Flow-133">
                        <a href="#Flow-133">
                            <span className="linenos"> 133</span>
                        </a>
                        <span className="k">class</span> <span className="nc">Flow</span>
                        <span className="p">(</span>
                        <span className="n">Generic</span>
                        <span className="p">[</span>
                        <span className="n">P</span>
                        <span className="p">,</span> <span className="n">R</span>
                        <span className="p">]):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-134">
                        <a href="#Flow-134">
                            <span className="linenos"> 134</span>
                        </a>
                        <span className="w">{"    "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-135">
                        <a href="#Flow-135">
                            <span className="linenos"> 135</span>
                        </a>
                        <span className="sd">{"    "}A Prefect workflow definition.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-136">
                        <a href="#Flow-136">
                            <span className="linenos"> 136</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-137">
                        <a href="#Flow-137">
                            <span className="linenos"> 137</span>
                        </a>
                        <span className="sd">{"    "}!!! note</span>
                        {"\n"}
                    </span>
                    <span id="Flow-138">
                        <a href="#Flow-138">
                            <span className="linenos"> 138</span>
                        </a>
                        <span className="sd">
                            {"        "}We recommend using the [`@flow`
                            decorator][prefect.flows.flow] for most use-cases.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-139">
                        <a href="#Flow-139">
                            <span className="linenos"> 139</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-140">
                        <a href="#Flow-140">
                            <span className="linenos"> 140</span>
                        </a>
                        <span className="sd">
                            {"    "}Wraps a function with an entrypoint to the Prefect engine.
                            To preserve the input
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-141">
                        <a href="#Flow-141">
                            <span className="linenos"> 141</span>
                        </a>
                        <span className="sd">
                            {"    "}and output types, we use the generic type variables `P`
                            and `R` for "Parameters" and
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-142">
                        <a href="#Flow-142">
                            <span className="linenos"> 142</span>
                        </a>
                        <span className="sd">{"    "}"Returns" respectively.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-143">
                        <a href="#Flow-143">
                            <span className="linenos"> 143</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-144">
                        <a href="#Flow-144">
                            <span className="linenos"> 144</span>
                        </a>
                        <span className="sd">{"    "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-145">
                        <a href="#Flow-145">
                            <span className="linenos"> 145</span>
                        </a>
                        <span className="sd">
                            {"        "}fn: The function defining the workflow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-146">
                        <a href="#Flow-146">
                            <span className="linenos"> 146</span>
                        </a>
                        <span className="sd">
                            {"        "}name: An optional name for the flow; if not provided,
                            the name will be inferred
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-147">
                        <a href="#Flow-147">
                            <span className="linenos"> 147</span>
                        </a>
                        <span className="sd">{"            "}from the given function.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-148">
                        <a href="#Flow-148">
                            <span className="linenos"> 148</span>
                        </a>
                        <span className="sd">
                            {"        "}version: An optional version string for the flow; if
                            not provided, we will
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-149">
                        <a href="#Flow-149">
                            <span className="linenos"> 149</span>
                        </a>
                        <span className="sd">
                            {"            "}attempt to create a version string as a hash of
                            the file containing the
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-150">
                        <a href="#Flow-150">
                            <span className="linenos"> 150</span>
                        </a>
                        <span className="sd">
                            {"            "}wrapped function; if the file cannot be located,
                            the version will be null.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-151">
                        <a href="#Flow-151">
                            <span className="linenos"> 151</span>
                        </a>
                        <span className="sd">
                            {"        "}flow_run_name: An optional name to distinguish runs of
                            this flow; this name can
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-152">
                        <a href="#Flow-152">
                            <span className="linenos"> 152</span>
                        </a>
                        <span className="sd">
                            {"            "}be provided as a string template with the flow's
                            parameters as variables,
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-153">
                        <a href="#Flow-153">
                            <span className="linenos"> 153</span>
                        </a>
                        <span className="sd">
                            {"            "}or a function that returns a string.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-154">
                        <a href="#Flow-154">
                            <span className="linenos"> 154</span>
                        </a>
                        <span className="sd">
                            {"        "}task_runner: An optional task runner to use for task
                            execution within the flow;
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-155">
                        <a href="#Flow-155">
                            <span className="linenos"> 155</span>
                        </a>
                        <span className="sd">
                            {"            "}if not provided, a `ConcurrentTaskRunner` will be
                            used.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-156">
                        <a href="#Flow-156">
                            <span className="linenos"> 156</span>
                        </a>
                        <span className="sd">
                            {"        "}description: An optional string description for the
                            flow; if not provided, the
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-157">
                        <a href="#Flow-157">
                            <span className="linenos"> 157</span>
                        </a>
                        <span className="sd">
                            {"            "}description will be pulled from the docstring for
                            the decorated function.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-158">
                        <a href="#Flow-158">
                            <span className="linenos"> 158</span>
                        </a>
                        <span className="sd">
                            {"        "}timeout_seconds: An optional number of seconds
                            indicating a maximum runtime for
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-159">
                        <a href="#Flow-159">
                            <span className="linenos"> 159</span>
                        </a>
                        <span className="sd">
                            {"            "}the flow. If the flow exceeds this runtime, it
                            will be marked as failed.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-160">
                        <a href="#Flow-160">
                            <span className="linenos"> 160</span>
                        </a>
                        <span className="sd">
                            {"            "}Flow execution may continue until the next task is
                            called.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-161">
                        <a href="#Flow-161">
                            <span className="linenos"> 161</span>
                        </a>
                        <span className="sd">
                            {"        "}validate_parameters: By default, parameters passed to
                            flows are validated by
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-162">
                        <a href="#Flow-162">
                            <span className="linenos"> 162</span>
                        </a>
                        <span className="sd">
                            {"            "}Pydantic. This will check that input values
                            conform to the annotated types
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-163">
                        <a href="#Flow-163">
                            <span className="linenos"> 163</span>
                        </a>
                        <span className="sd">
                            {"            "}on the function. Where possible, values will be
                            coerced into the correct
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-164">
                        <a href="#Flow-164">
                            <span className="linenos"> 164</span>
                        </a>
                        <span className="sd">
                            {"            "}type; for example, if a parameter is defined as
                            `x: int` and "5" is passed,
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-165">
                        <a href="#Flow-165">
                            <span className="linenos"> 165</span>
                        </a>
                        <span className="sd">
                            {"            "}it will be resolved to `5`. If set to `False`, no
                            validation will be
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-166">
                        <a href="#Flow-166">
                            <span className="linenos"> 166</span>
                        </a>
                        <span className="sd">
                            {"            "}performed on flow parameters.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-167">
                        <a href="#Flow-167">
                            <span className="linenos"> 167</span>
                        </a>
                        <span className="sd">
                            {"        "}retries: An optional number of times to retry on flow
                            run failure.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-168">
                        <a href="#Flow-168">
                            <span className="linenos"> 168</span>
                        </a>
                        <span className="sd">
                            {"        "}retry_delay_seconds: An optional number of seconds to
                            wait before retrying the
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-169">
                        <a href="#Flow-169">
                            <span className="linenos"> 169</span>
                        </a>
                        <span className="sd">
                            {"            "}flow after failure. This is only applicable if
                            `retries` is nonzero.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-170">
                        <a href="#Flow-170">
                            <span className="linenos"> 170</span>
                        </a>
                        <span className="sd">
                            {"        "}persist_result: An optional toggle indicating whether
                            the result of this flow
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-171">
                        <a href="#Flow-171">
                            <span className="linenos"> 171</span>
                        </a>
                        <span className="sd">
                            {"            "}should be persisted to result storage. Defaults to
                            `None`, which indicates
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-172">
                        <a href="#Flow-172">
                            <span className="linenos"> 172</span>
                        </a>
                        <span className="sd">
                            {"            "}that Prefect should choose whether the result
                            should be persisted depending on
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-173">
                        <a href="#Flow-173">
                            <span className="linenos"> 173</span>
                        </a>
                        <span className="sd">{"            "}the features being used.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-174">
                        <a href="#Flow-174">
                            <span className="linenos"> 174</span>
                        </a>
                        <span className="sd">
                            {"        "}result_storage: An optional block to use to persist
                            the result of this flow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-175">
                        <a href="#Flow-175">
                            <span className="linenos"> 175</span>
                        </a>
                        <span className="sd">
                            {"            "}This value will be used as the default for any
                            tasks in this flow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-176">
                        <a href="#Flow-176">
                            <span className="linenos"> 176</span>
                        </a>
                        <span className="sd">
                            {"            "}If not provided, the local file system will be
                            used unless called as
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-177">
                        <a href="#Flow-177">
                            <span className="linenos"> 177</span>
                        </a>
                        <span className="sd">
                            {"            "}a subflow, at which point the default will be
                            loaded from the parent flow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-178">
                        <a href="#Flow-178">
                            <span className="linenos"> 178</span>
                        </a>
                        <span className="sd">
                            {"        "}result_serializer: An optional serializer to use to
                            serialize the result of this
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-179">
                        <a href="#Flow-179">
                            <span className="linenos"> 179</span>
                        </a>
                        <span className="sd">
                            {"            "}flow for persistence. This value will be used as
                            the default for any tasks
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-180">
                        <a href="#Flow-180">
                            <span className="linenos"> 180</span>
                        </a>
                        <span className="sd">
                            {"            "}in this flow. If not provided, the value of
                            `PREFECT_RESULTS_DEFAULT_SERIALIZER`
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-181">
                        <a href="#Flow-181">
                            <span className="linenos"> 181</span>
                        </a>
                        <span className="sd">
                            {"            "}will be used unless called as a subflow, at which
                            point the default will be
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-182">
                        <a href="#Flow-182">
                            <span className="linenos"> 182</span>
                        </a>
                        <span className="sd">
                            {"            "}loaded from the parent flow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-183">
                        <a href="#Flow-183">
                            <span className="linenos"> 183</span>
                        </a>
                        <span className="sd">
                            {"        "}on_failure: An optional list of callables to run when
                            the flow enters a failed state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-184">
                        <a href="#Flow-184">
                            <span className="linenos"> 184</span>
                        </a>
                        <span className="sd">
                            {"        "}on_completion: An optional list of callables to run
                            when the flow enters a completed state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-185">
                        <a href="#Flow-185">
                            <span className="linenos"> 185</span>
                        </a>
                        <span className="sd">
                            {"        "}on_cancellation: An optional list of callables to run
                            when the flow enters a cancelling state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-186">
                        <a href="#Flow-186">
                            <span className="linenos"> 186</span>
                        </a>
                        <span className="sd">
                            {"        "}on_crashed: An optional list of callables to run when
                            the flow enters a crashed state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-187">
                        <a href="#Flow-187">
                            <span className="linenos"> 187</span>
                        </a>
                        <span className="sd">
                            {"        "}on_running: An optional list of callables to run when
                            the flow enters a running state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-188">
                        <a href="#Flow-188">
                            <span className="linenos"> 188</span>
                        </a>
                        <span className="sd">{"    "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-189">
                        <a href="#Flow-189">
                            <span className="linenos"> 189</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-190">
                        <a href="#Flow-190">
                            <span className="linenos"> 190</span>
                        </a>
                        {"    "}
                        <span className="c1">
                            # NOTE: These parameters (types, defaults, and docstrings) should
                            be duplicated
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-191">
                        <a href="#Flow-191">
                            <span className="linenos"> 191</span>
                        </a>
                        {"    "}
                        <span className="c1">
                            #{"       "}exactly in the @flow decorator
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-192">
                        <a href="#Flow-192">
                            <span className="linenos"> 192</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="fm">__init__</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-193">
                        <a href="#Flow-193">
                            <span className="linenos"> 193</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-194">
                        <a href="#Flow-194">
                            <span className="linenos"> 194</span>
                        </a>
                        {"        "}
                        <span className="n">fn</span>
                        <span className="p">:</span> <span className="n">Callable</span>
                        <span className="p">[</span>
                        <span className="n">P</span>
                        <span className="p">,</span> <span className="n">R</span>
                        <span className="p">],</span>
                        {"\n"}
                    </span>
                    <span id="Flow-195">
                        <a href="#Flow-195">
                            <span className="linenos"> 195</span>
                        </a>
                        {"        "}
                        <span className="n">name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-196">
                        <a href="#Flow-196">
                            <span className="linenos"> 196</span>
                        </a>
                        {"        "}
                        <span className="n">version</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-197">
                        <a href="#Flow-197">
                            <span className="linenos"> 197</span>
                        </a>
                        {"        "}
                        <span className="n">flow_run_name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[],</span> <span className="nb">str</span>
                        <span className="p">],</span> <span className="nb">str</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-198">
                        <a href="#Flow-198">
                            <span className="linenos"> 198</span>
                        </a>
                        {"        "}
                        <span className="n">retries</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-199">
                        <a href="#Flow-199">
                            <span className="linenos"> 199</span>
                        </a>
                        {"        "}
                        <span className="n">retry_delay_seconds</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">,</span> <span className="nb">float</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-200">
                        <a href="#Flow-200">
                            <span className="linenos"> 200</span>
                        </a>
                        {"        "}
                        <span className="n">task_runner</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Type</span>
                        <span className="p">[</span>
                        <span className="n">BaseTaskRunner</span>
                        <span className="p">],</span>{" "}
                        <span className="n">BaseTaskRunner</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">ConcurrentTaskRunner</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-201">
                        <a href="#Flow-201">
                            <span className="linenos"> 201</span>
                        </a>
                        {"        "}
                        <span className="n">description</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-202">
                        <a href="#Flow-202">
                            <span className="linenos"> 202</span>
                        </a>
                        {"        "}
                        <span className="n">timeout_seconds</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">,</span> <span className="nb">float</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-203">
                        <a href="#Flow-203">
                            <span className="linenos"> 203</span>
                        </a>
                        {"        "}
                        <span className="n">validate_parameters</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-204">
                        <a href="#Flow-204">
                            <span className="linenos"> 204</span>
                        </a>
                        {"        "}
                        <span className="n">persist_result</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-205">
                        <a href="#Flow-205">
                            <span className="linenos"> 205</span>
                        </a>
                        {"        "}
                        <span className="n">result_storage</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">ResultStorage</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-206">
                        <a href="#Flow-206">
                            <span className="linenos"> 206</span>
                        </a>
                        {"        "}
                        <span className="n">result_serializer</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">ResultSerializer</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-207">
                        <a href="#Flow-207">
                            <span className="linenos"> 207</span>
                        </a>
                        {"        "}
                        <span className="n">cache_result_in_memory</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-208">
                        <a href="#Flow-208">
                            <span className="linenos"> 208</span>
                        </a>
                        {"        "}
                        <span className="n">log_prints</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-209">
                        <a href="#Flow-209">
                            <span className="linenos"> 209</span>
                        </a>
                        {"        "}
                        <span className="n">on_completion</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Flow-210">
                        <a href="#Flow-210">
                            <span className="linenos"> 210</span>
                        </a>
                        {"            "}
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">FlowSchema</span>
                        <span className="p">,</span> <span className="n">FlowRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]</span>
                        {"\n"}
                    </span>
                    <span id="Flow-211">
                        <a href="#Flow-211">
                            <span className="linenos"> 211</span>
                        </a>
                        {"        "}
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-212">
                        <a href="#Flow-212">
                            <span className="linenos"> 212</span>
                        </a>
                        {"        "}
                        <span className="n">on_failure</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">FlowSchema</span>
                        <span className="p">,</span> <span className="n">FlowRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-213">
                        <a href="#Flow-213">
                            <span className="linenos"> 213</span>
                        </a>
                        {"        "}
                        <span className="n">on_cancellation</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Flow-214">
                        <a href="#Flow-214">
                            <span className="linenos"> 214</span>
                        </a>
                        {"            "}
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">FlowSchema</span>
                        <span className="p">,</span> <span className="n">FlowRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]</span>
                        {"\n"}
                    </span>
                    <span id="Flow-215">
                        <a href="#Flow-215">
                            <span className="linenos"> 215</span>
                        </a>
                        {"        "}
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-216">
                        <a href="#Flow-216">
                            <span className="linenos"> 216</span>
                        </a>
                        {"        "}
                        <span className="n">on_crashed</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">FlowSchema</span>
                        <span className="p">,</span> <span className="n">FlowRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-217">
                        <a href="#Flow-217">
                            <span className="linenos"> 217</span>
                        </a>
                        {"        "}
                        <span className="n">on_running</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">FlowSchema</span>
                        <span className="p">,</span> <span className="n">FlowRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-218">
                        <a href="#Flow-218">
                            <span className="linenos"> 218</span>
                        </a>
                        {"    "}
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-219">
                        <a href="#Flow-219">
                            <span className="linenos"> 219</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="n">name</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span> <span className="ow">and</span>{" "}
                        <span className="ow">not</span>{" "}
                        <span className="nb">isinstance</span>
                        <span className="p">(</span>
                        <span className="n">name</span>
                        <span className="p">,</span> <span className="nb">str</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-220">
                        <a href="#Flow-220">
                            <span className="linenos"> 220</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">TypeError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-221">
                        <a href="#Flow-221">
                            <span className="linenos"> 221</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            "Expected string for flow parameter 'name'; got{" "}
                        </span>
                        <span className="si">
                            {"{"}
                            {"}"}
                        </span>
                        <span className="s2"> instead. </span>
                        <span className="si">
                            {"{"}
                            {"}"}
                        </span>
                        <span className="s2">"</span>
                        <span className="o">.</span>
                        <span className="n">format</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-222">
                        <a href="#Flow-222">
                            <span className="linenos"> 222</span>
                        </a>
                        {"                    "}
                        <span className="nb">type</span>
                        <span className="p">(</span>
                        <span className="n">name</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="vm">__name__</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-223">
                        <a href="#Flow-223">
                            <span className="linenos"> 223</span>
                        </a>
                        {"                    "}
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-224">
                        <a href="#Flow-224">
                            <span className="linenos"> 224</span>
                        </a>
                        {"                        "}
                        <span className="s2">"Perhaps you meant to call it? e.g."</span>
                        {"\n"}
                    </span>
                    <span id="Flow-225">
                        <a href="#Flow-225">
                            <span className="linenos"> 225</span>
                        </a>
                        {"                        "}
                        <span className="s2">" '@flow(name=get_flow_run_name())'"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-226">
                        <a href="#Flow-226">
                            <span className="linenos"> 226</span>
                        </a>
                        {"                        "}
                        <span className="k">if</span> <span className="nb">callable</span>
                        <span className="p">(</span>
                        <span className="n">name</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-227">
                        <a href="#Flow-227">
                            <span className="linenos"> 227</span>
                        </a>
                        {"                        "}
                        <span className="k">else</span> <span className="s2">""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-228">
                        <a href="#Flow-228">
                            <span className="linenos"> 228</span>
                        </a>
                        {"                    "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Flow-229">
                        <a href="#Flow-229">
                            <span className="linenos"> 229</span>
                        </a>
                        {"                "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-230">
                        <a href="#Flow-230">
                            <span className="linenos"> 230</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-231">
                        <a href="#Flow-231">
                            <span className="linenos"> 231</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-232">
                        <a href="#Flow-232">
                            <span className="linenos"> 232</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # Validate if hook passed is list and contains callables
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-233">
                        <a href="#Flow-233">
                            <span className="linenos"> 233</span>
                        </a>
                        {"        "}
                        <span className="n">hook_categories</span>{" "}
                        <span className="o">=</span> <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Flow-234">
                        <a href="#Flow-234">
                            <span className="linenos"> 234</span>
                        </a>
                        {"            "}
                        <span className="n">on_completion</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-235">
                        <a href="#Flow-235">
                            <span className="linenos"> 235</span>
                        </a>
                        {"            "}
                        <span className="n">on_failure</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-236">
                        <a href="#Flow-236">
                            <span className="linenos"> 236</span>
                        </a>
                        {"            "}
                        <span className="n">on_cancellation</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-237">
                        <a href="#Flow-237">
                            <span className="linenos"> 237</span>
                        </a>
                        {"            "}
                        <span className="n">on_crashed</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-238">
                        <a href="#Flow-238">
                            <span className="linenos"> 238</span>
                        </a>
                        {"            "}
                        <span className="n">on_running</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-239">
                        <a href="#Flow-239">
                            <span className="linenos"> 239</span>
                        </a>
                        {"        "}
                        <span className="p">]</span>
                        {"\n"}
                    </span>
                    <span id="Flow-240">
                        <a href="#Flow-240">
                            <span className="linenos"> 240</span>
                        </a>
                        {"        "}
                        <span className="n">
                            hook_names
                        </span> 
                        <span className="o">=</span> <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Flow-241">
                        <a href="#Flow-241">
                            <span className="linenos"> 241</span>
                        </a>
                        {"            "}
                        <span className="s2">"on_completion"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-242">
                        <a href="#Flow-242">
                            <span className="linenos"> 242</span>
                        </a>
                        {"            "}
                        <span className="s2">"on_failure"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-243">
                        <a href="#Flow-243">
                            <span className="linenos"> 243</span>
                        </a>
                        {"            "}
                        <span className="s2">"on_cancellation"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-244">
                        <a href="#Flow-244">
                            <span className="linenos"> 244</span>
                        </a>
                        {"            "}
                        <span className="s2">"on_crashed"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-245">
                        <a href="#Flow-245">
                            <span className="linenos"> 245</span>
                        </a>
                        {"            "}
                        <span className="s2">"on_running"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-246">
                        <a href="#Flow-246">
                            <span className="linenos"> 246</span>
                        </a>
                        {"        "}
                        <span className="p">]</span>
                        {"\n"}
                    </span>
                    <span id="Flow-247">
                        <a href="#Flow-247">
                            <span className="linenos"> 247</span>
                        </a>
                        {"        "}
                        <span className="k">for</span> <span className="n">hooks</span>
                        <span className="p">
                            ,
                        </span> 
                        <span className="n">hook_name</span>{" "}
                        <span className="ow">in</span> <span className="nb">zip</span>
                        <span className="p">(</span>
                        <span className="n">hook_categories</span>
                        <span className="p">,</span> <span className="n">hook_names</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-248">
                        <a href="#Flow-248">
                            <span className="linenos"> 248</span>
                        </a>
                        {"            "}
                        <span className="k">if</span> <span className="n">hooks</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-249">
                        <a href="#Flow-249">
                            <span className="linenos"> 249</span>
                        </a>
                        {"                "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">hooks</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-250">
                        <a href="#Flow-250">
                            <span className="linenos"> 250</span>
                        </a>
                        {"                    "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">ValueError</span>
                        <span className="p">(</span>
                        <span className="sa">f</span>
                        <span className="s2">"Empty list passed for '</span>
                        <span className="si">{"{"}</span>
                        <span className="n">hook_name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">'"</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-251">
                        <a href="#Flow-251">
                            <span className="linenos"> 251</span>
                        </a>
                        {"                "}
                        <span className="k">try</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-252">
                        <a href="#Flow-252">
                            <span className="linenos"> 252</span>
                        </a>
                        {"                    "}
                        <span className="n">hooks</span> <span className="o">=</span>{" "}
                        <span className="nb">list</span>
                        <span className="p">(</span>
                        <span className="n">hooks</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-253">
                        <a href="#Flow-253">
                            <span className="linenos"> 253</span>
                        </a>
                        {"                "}
                        <span className="k">except</span>{" "}
                        <span className="ne">TypeError</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-254">
                        <a href="#Flow-254">
                            <span className="linenos"> 254</span>
                        </a>
                        {"                    "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">TypeError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-255">
                        <a href="#Flow-255">
                            <span className="linenos"> 255</span>
                        </a>
                        {"                        "}
                        <span className="sa">f</span>
                        <span className="s2">"Expected iterable for '</span>
                        <span className="si">{"{"}</span>
                        <span className="n">hook_name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">'; got"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-256">
                        <a href="#Flow-256">
                            <span className="linenos"> 256</span>
                        </a>
                        {"                        "}
                        <span className="sa">f</span>
                        <span className="s2">" </span>
                        <span className="si">{"{"}</span>
                        <span className="nb">type</span>
                        <span className="p">(</span>
                        <span className="n">hooks</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="vm">__name__</span>
                        <span className="si">{"}"}</span>
                        <span className="s2"> instead. Please provide a list of"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-257">
                        <a href="#Flow-257">
                            <span className="linenos"> 257</span>
                        </a>
                        {"                        "}
                        <span className="sa">f</span>
                        <span className="s2">" hooks to '</span>
                        <span className="si">{"{"}</span>
                        <span className="n">hook_name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">':</span>
                        <span className="se">\n\n</span>
                        <span className="s2">"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-258">
                        <a href="#Flow-258">
                            <span className="linenos"> 258</span>
                        </a>
                        {"                        "}
                        <span className="sa">f</span>
                        <span className="s2">"@flow(</span>
                        <span className="si">{"{"}</span>
                        <span className="n">hook_name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">=[hook1, hook2])</span>
                        <span className="se">\n</span>
                        <span className="s2">def"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-259">
                        <a href="#Flow-259">
                            <span className="linenos"> 259</span>
                        </a>
                        {"                        "}
                        <span className="s2">" my_flow():</span>
                        <span className="se">\n\t</span>
                        <span className="s2">pass"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-260">
                        <a href="#Flow-260">
                            <span className="linenos"> 260</span>
                        </a>
                        {"                    "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-261">
                        <a href="#Flow-261">
                            <span className="linenos"> 261</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-262">
                        <a href="#Flow-262">
                            <span className="linenos"> 262</span>
                        </a>
                        {"                "}
                        <span className="k">for</span> <span className="n">hook</span>{" "}
                        <span className="ow">in</span> <span className="n">hooks</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-263">
                        <a href="#Flow-263">
                            <span className="linenos"> 263</span>
                        </a>
                        {"                    "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="nb">callable</span>
                        <span className="p">(</span>
                        <span className="n">hook</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-264">
                        <a href="#Flow-264">
                            <span className="linenos"> 264</span>
                        </a>
                        {"                        "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">TypeError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-265">
                        <a href="#Flow-265">
                            <span className="linenos"> 265</span>
                        </a>
                        {"                            "}
                        <span className="sa">f</span>
                        <span className="s2">"Expected callables in '</span>
                        <span className="si">{"{"}</span>
                        <span className="n">hook_name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">'; got"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-266">
                        <a href="#Flow-266">
                            <span className="linenos"> 266</span>
                        </a>
                        {"                            "}
                        <span className="sa">f</span>
                        <span className="s2">" </span>
                        <span className="si">{"{"}</span>
                        <span className="nb">type</span>
                        <span className="p">(</span>
                        <span className="n">hook</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="vm">__name__</span>
                        <span className="si">{"}"}</span>
                        <span className="s2"> instead. Please provide a list of"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-267">
                        <a href="#Flow-267">
                            <span className="linenos"> 267</span>
                        </a>
                        {"                            "}
                        <span className="sa">f</span>
                        <span className="s2">" hooks to '</span>
                        <span className="si">{"{"}</span>
                        <span className="n">hook_name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">':</span>
                        <span className="se">\n\n</span>
                        <span className="s2">"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-268">
                        <a href="#Flow-268">
                            <span className="linenos"> 268</span>
                        </a>
                        {"                            "}
                        <span className="sa">f</span>
                        <span className="s2">"@flow(</span>
                        <span className="si">{"{"}</span>
                        <span className="n">hook_name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">=[hook1, hook2])</span>
                        <span className="se">\n</span>
                        <span className="s2">def"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-269">
                        <a href="#Flow-269">
                            <span className="linenos"> 269</span>
                        </a>
                        {"                            "}
                        <span className="s2">" my_flow():</span>
                        <span className="se">\n\t</span>
                        <span className="s2">pass"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-270">
                        <a href="#Flow-270">
                            <span className="linenos"> 270</span>
                        </a>
                        {"                        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-271">
                        <a href="#Flow-271">
                            <span className="linenos"> 271</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-272">
                        <a href="#Flow-272">
                            <span className="linenos"> 272</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="nb">callable</span>
                        <span className="p">(</span>
                        <span className="n">fn</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-273">
                        <a href="#Flow-273">
                            <span className="linenos"> 273</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">TypeError</span>
                        <span className="p">(</span>
                        <span className="s2">"'fn' must be callable"</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-274">
                        <a href="#Flow-274">
                            <span className="linenos"> 274</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-275">
                        <a href="#Flow-275">
                            <span className="linenos"> 275</span>
                        </a>
                        {"        "}
                        <span className="c1"># Validate name if given</span>
                        {"\n"}
                    </span>
                    <span id="Flow-276">
                        <a href="#Flow-276">
                            <span className="linenos"> 276</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="n">name</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-277">
                        <a href="#Flow-277">
                            <span className="linenos"> 277</span>
                        </a>
                        {"            "}
                        <span className="n">raise_on_name_with_banned_characters</span>
                        <span className="p">(</span>
                        <span className="n">name</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-278">
                        <a href="#Flow-278">
                            <span className="linenos"> 278</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-279">
                        <a href="#Flow-279">
                            <span className="linenos"> 279</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span> <span className="o">=</span>{" "}
                        <span className="n">name</span> <span className="ow">or</span>{" "}
                        <span className="n">fn</span>
                        <span className="o">.</span>
                        <span className="vm">__name__</span>
                        <span className="o">.</span>
                        <span className="n">replace</span>
                        <span className="p">(</span>
                        <span className="s2">"_"</span>
                        <span className="p">,</span> <span className="s2">"-"</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-280">
                        <a href="#Flow-280">
                            <span className="linenos"> 280</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-281">
                        <a href="#Flow-281">
                            <span className="linenos"> 281</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">flow_run_name</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-282">
                        <a href="#Flow-282">
                            <span className="linenos"> 282</span>
                        </a>
                        {"            "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="nb">isinstance</span>
                        <span className="p">(</span>
                        <span className="n">flow_run_name</span>
                        <span className="p">,</span> <span className="nb">str</span>
                        <span className="p">)</span> <span className="ow">and</span>{" "}
                        <span className="ow">not</span> <span className="nb">callable</span>
                        <span className="p">(</span>
                        <span className="n">flow_run_name</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-283">
                        <a href="#Flow-283">
                            <span className="linenos"> 283</span>
                        </a>
                        {"                "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">TypeError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-284">
                        <a href="#Flow-284">
                            <span className="linenos"> 284</span>
                        </a>
                        {"                    "}
                        <span className="s2">
                            "Expected string or callable for 'flow_run_name'; got"
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-285">
                        <a href="#Flow-285">
                            <span className="linenos"> 285</span>
                        </a>
                        {"                    "}
                        <span className="sa">f</span>
                        <span className="s2">" </span>
                        <span className="si">{"{"}</span>
                        <span className="nb">type</span>
                        <span className="p">(</span>
                        <span className="n">flow_run_name</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="vm">__name__</span>
                        <span className="si">{"}"}</span>
                        <span className="s2"> instead."</span>
                        {"\n"}
                    </span>
                    <span id="Flow-286">
                        <a href="#Flow-286">
                            <span className="linenos"> 286</span>
                        </a>
                        {"                "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-287">
                        <a href="#Flow-287">
                            <span className="linenos"> 287</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">flow_run_name</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">flow_run_name</span>
                        {"\n"}
                    </span>
                    <span id="Flow-288">
                        <a href="#Flow-288">
                            <span className="linenos"> 288</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-289">
                        <a href="#Flow-289">
                            <span className="linenos"> 289</span>
                        </a>
                        {"        "}
                        <span className="n">
                            task_runner
                        </span> 
                        <span className="o">=</span>{" "}
                        <span className="n">task_runner</span>{" "}
                        <span className="ow">or</span>{" "}
                        <span className="n">ConcurrentTaskRunner</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Flow-290">
                        <a href="#Flow-290">
                            <span className="linenos"> 290</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">
                            task_runner
                        </span> 
                        <span className="o">=</span> <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-291">
                        <a href="#Flow-291">
                            <span className="linenos"> 291</span>
                        </a>
                        {"            "}
                        <span className="n">task_runner</span>
                        <span className="p">()</span> <span className="k">if</span>{" "}
                        <span className="nb">isinstance</span>
                        <span className="p">(</span>
                        <span className="n">task_runner</span>
                        <span className="p">,</span> <span className="nb">type</span>
                        <span className="p">)</span> <span className="k">else</span>{" "}
                        <span className="n">task_runner</span>
                        {"\n"}
                    </span>
                    <span id="Flow-292">
                        <a href="#Flow-292">
                            <span className="linenos"> 292</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-293">
                        <a href="#Flow-293">
                            <span className="linenos"> 293</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-294">
                        <a href="#Flow-294">
                            <span className="linenos"> 294</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">
                            log_prints
                        </span> 
                        <span className="o">=</span>{" "}
                        <span className="n">log_prints</span>
                        {"\n"}
                    </span>
                    <span id="Flow-295">
                        <a href="#Flow-295">
                            <span className="linenos"> 295</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-296">
                        <a href="#Flow-296">
                            <span className="linenos"> 296</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">
                            description
                        </span> 
                        <span className="o">=</span>{" "}
                        <span className="n">description</span>{" "}
                        <span className="ow">or</span> <span className="n">inspect</span>
                        <span className="o">.</span>
                        <span className="n">getdoc</span>
                        <span className="p">(</span>
                        <span className="n">fn</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-297">
                        <a href="#Flow-297">
                            <span className="linenos"> 297</span>
                        </a>
                        {"        "}
                        <span className="n">update_wrapper</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">,</span> <span className="n">fn</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-298">
                        <a href="#Flow-298">
                            <span className="linenos"> 298</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span> <span className="o">=</span>{" "}
                        <span className="n">fn</span>
                        {"\n"}
                    </span>
                    <span id="Flow-299">
                        <a href="#Flow-299">
                            <span className="linenos"> 299</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">isasync</span> <span className="o">=</span>{" "}
                        <span className="n">is_async_fn</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-300">
                        <a href="#Flow-300">
                            <span className="linenos"> 300</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-301">
                        <a href="#Flow-301">
                            <span className="linenos"> 301</span>
                        </a>
                        {"        "}
                        <span className="n">raise_for_reserved_arguments</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">,</span> <span className="p">[</span>
                        <span className="s2">"return_state"</span>
                        <span className="p">,</span> <span className="s2">"wait_for"</span>
                        <span className="p">])</span>
                        {"\n"}
                    </span>
                    <span id="Flow-302">
                        <a href="#Flow-302">
                            <span className="linenos"> 302</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-303">
                        <a href="#Flow-303">
                            <span className="linenos"> 303</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # Version defaults to a hash of the function's file
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-304">
                        <a href="#Flow-304">
                            <span className="linenos"> 304</span>
                        </a>
                        {"        "}
                        <span className="n">
                            flow_file
                        </span> 
                        <span className="o">=</span>{" "}
                        <span className="n">inspect</span>
                        <span className="o">.</span>
                        <span className="n">getsourcefile</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-305">
                        <a href="#Flow-305">
                            <span className="linenos"> 305</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">version</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-306">
                        <a href="#Flow-306">
                            <span className="linenos"> 306</span>
                        </a>
                        {"            "}
                        <span className="k">try</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-307">
                        <a href="#Flow-307">
                            <span className="linenos"> 307</span>
                        </a>
                        {"                "}
                        <span className="n">version</span> <span className="o">=</span>{" "}
                        <span className="n">file_hash</span>
                        <span className="p">(</span>
                        <span className="n">flow_file</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-308">
                        <a href="#Flow-308">
                            <span className="linenos"> 308</span>
                        </a>
                        {"            "}
                        <span className="k">except</span> <span className="p">(</span>
                        <span className="ne">FileNotFoundError</span>
                        <span className="p">,</span> <span className="ne">TypeError</span>
                        <span className="p">,</span> <span className="ne">OSError</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-309">
                        <a href="#Flow-309">
                            <span className="linenos"> 309</span>
                        </a>
                        {"                "}
                        <span className="k">pass</span>
                        {"  "}
                        <span className="c1">
                            # `getsourcefile` can return null values and "&lt;stdin&gt;" for
                            objects in repls
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-310">
                        <a href="#Flow-310">
                            <span className="linenos"> 310</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">version</span> <span className="o">=</span>{" "}
                        <span className="n">version</span>
                        {"\n"}
                    </span>
                    <span id="Flow-311">
                        <a href="#Flow-311">
                            <span className="linenos"> 311</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-312">
                        <a href="#Flow-312">
                            <span className="linenos"> 312</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">timeout_seconds</span>{" "}
                        <span className="o">=</span> <span className="nb">float</span>
                        <span className="p">(</span>
                        <span className="n">timeout_seconds</span>
                        <span className="p">)</span> <span className="k">if</span>{" "}
                        <span className="n">timeout_seconds</span>{" "}
                        <span className="k">else</span> <span className="kc">None</span>
                        {"\n"}
                    </span>
                    <span id="Flow-313">
                        <a href="#Flow-313">
                            <span className="linenos"> 313</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-314">
                        <a href="#Flow-314">
                            <span className="linenos"> 314</span>
                        </a>
                        {"        "}
                        <span className="c1"># FlowRunPolicy settings</span>
                        {"\n"}
                    </span>
                    <span id="Flow-315">
                        <a href="#Flow-315">
                            <span className="linenos"> 315</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # TODO: We can instantiate a `FlowRunPolicy` and add Pydantic
                            bound checks to
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-316">
                        <a href="#Flow-316">
                            <span className="linenos"> 316</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            #{"       "}validate that the user passes positive numbers here
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-317">
                        <a href="#Flow-317">
                            <span className="linenos"> 317</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">retries</span> <span className="o">=</span>{" "}
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-318">
                        <a href="#Flow-318">
                            <span className="linenos"> 318</span>
                        </a>
                        {"            "}
                        <span className="n">
                            retries
                        </span> 
                        <span className="k">if</span>{" "}
                        <span className="n">retries</span> <span className="ow">is</span>{" "}
                        <span className="ow">not</span> <span className="kc">None</span>{" "}
                        <span className="k">else</span>{" "}
                        <span className="n">PREFECT_FLOW_DEFAULT_RETRIES</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Flow-319">
                        <a href="#Flow-319">
                            <span className="linenos"> 319</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-320">
                        <a href="#Flow-320">
                            <span className="linenos"> 320</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-321">
                        <a href="#Flow-321">
                            <span className="linenos"> 321</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">retry_delay_seconds</span>{" "}
                        <span className="o">=</span> <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-322">
                        <a href="#Flow-322">
                            <span className="linenos"> 322</span>
                        </a>
                        {"            "}
                        <span className="n">retry_delay_seconds</span>
                        {"\n"}
                    </span>
                    <span id="Flow-323">
                        <a href="#Flow-323">
                            <span className="linenos"> 323</span>
                        </a>
                        {"            "}
                        <span className="k">if</span>{" "}
                        <span className="n">retry_delay_seconds</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span>
                        {"\n"}
                    </span>
                    <span id="Flow-324">
                        <a href="#Flow-324">
                            <span className="linenos"> 324</span>
                        </a>
                        {"            "}
                        <span className="k">else</span>{" "}
                        <span className="n">PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDS</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Flow-325">
                        <a href="#Flow-325">
                            <span className="linenos"> 325</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-326">
                        <a href="#Flow-326">
                            <span className="linenos"> 326</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-327">
                        <a href="#Flow-327">
                            <span className="linenos"> 327</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">
                            parameters
                        </span> 
                        <span className="o">=</span>{" "}
                        <span className="n">parameter_schema</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-328">
                        <a href="#Flow-328">
                            <span className="linenos"> 328</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">should_validate_parameters</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">validate_parameters</span>
                        {"\n"}
                    </span>
                    <span id="Flow-329">
                        <a href="#Flow-329">
                            <span className="linenos"> 329</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-330">
                        <a href="#Flow-330">
                            <span className="linenos"> 330</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">should_validate_parameters</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-331">
                        <a href="#Flow-331">
                            <span className="linenos"> 331</span>
                        </a>
                        {"            "}
                        <span className="c1">
                            # Try to create the validated function now so that incompatibility
                            can be
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-332">
                        <a href="#Flow-332">
                            <span className="linenos"> 332</span>
                        </a>
                        {"            "}
                        <span className="c1">
                            # raised at declaration time rather than at runtime
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-333">
                        <a href="#Flow-333">
                            <span className="linenos"> 333</span>
                        </a>
                        {"            "}
                        <span className="c1">
                            # We cannot, however, store the validated function on the flow
                            because it
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-334">
                        <a href="#Flow-334">
                            <span className="linenos"> 334</span>
                        </a>
                        {"            "}
                        <span className="c1"># is not picklable in some environments</span>
                        {"\n"}
                    </span>
                    <span id="Flow-335">
                        <a href="#Flow-335">
                            <span className="linenos"> 335</span>
                        </a>
                        {"            "}
                        <span className="k">try</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-336">
                        <a href="#Flow-336">
                            <span className="linenos"> 336</span>
                        </a>
                        {"                "}
                        <span className="n">ValidatedFunction</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">,</span> <span className="n">config</span>
                        <span className="o">=</span>
                        <span className="p">{"{"}</span>
                        <span className="s2">"arbitrary_types_allowed"</span>
                        <span className="p">:</span> <span className="kc">True</span>
                        <span className="p">{"}"})</span>
                        {"\n"}
                    </span>
                    <span id="Flow-337">
                        <a href="#Flow-337">
                            <span className="linenos"> 337</span>
                        </a>
                        {"            "}
                        <span className="k">except</span>{" "}
                        <span className="n">pydantic</span>
                        <span className="o">.</span>
                        <span className="n">
                            ConfigError
                        </span> 
                        <span className="k">as</span> <span className="n">exc</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-338">
                        <a href="#Flow-338">
                            <span className="linenos"> 338</span>
                        </a>
                        {"                "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">ValueError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-339">
                        <a href="#Flow-339">
                            <span className="linenos"> 339</span>
                        </a>
                        {"                    "}
                        <span className="s2">
                            "Flow function is not compatible with `validate_parameters`. "
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-340">
                        <a href="#Flow-340">
                            <span className="linenos"> 340</span>
                        </a>
                        {"                    "}
                        <span className="s2">
                            "Disable validation or change the argument names."
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-341">
                        <a href="#Flow-341">
                            <span className="linenos"> 341</span>
                        </a>
                        {"                "}
                        <span className="p">)</span> <span className="kn">from</span>{" "}
                        <span className="nn">exc</span>
                        {"\n"}
                    </span>
                    <span id="Flow-342">
                        <a href="#Flow-342">
                            <span className="linenos"> 342</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-343">
                        <a href="#Flow-343">
                            <span className="linenos"> 343</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">persist_result</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">persist_result</span>
                        {"\n"}
                    </span>
                    <span id="Flow-344">
                        <a href="#Flow-344">
                            <span className="linenos"> 344</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">result_storage</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">result_storage</span>
                        {"\n"}
                    </span>
                    <span id="Flow-345">
                        <a href="#Flow-345">
                            <span className="linenos"> 345</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">result_serializer</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">result_serializer</span>
                        {"\n"}
                    </span>
                    <span id="Flow-346">
                        <a href="#Flow-346">
                            <span className="linenos"> 346</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">cache_result_in_memory</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">cache_result_in_memory</span>
                        {"\n"}
                    </span>
                    <span id="Flow-347">
                        <a href="#Flow-347">
                            <span className="linenos"> 347</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">on_completion</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">on_completion</span>
                        {"\n"}
                    </span>
                    <span id="Flow-348">
                        <a href="#Flow-348">
                            <span className="linenos"> 348</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">
                            on_failure
                        </span> 
                        <span className="o">=</span>{" "}
                        <span className="n">on_failure</span>
                        {"\n"}
                    </span>
                    <span id="Flow-349">
                        <a href="#Flow-349">
                            <span className="linenos"> 349</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">on_cancellation</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">on_cancellation</span>
                        {"\n"}
                    </span>
                    <span id="Flow-350">
                        <a href="#Flow-350">
                            <span className="linenos"> 350</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">
                            on_crashed
                        </span> <span className="o">=</span>{" "}
                        <span className="n">on_crashed</span>
                        {"\n"}
                    </span>
                    <span id="Flow-351">
                        <a href="#Flow-351">
                            <span className="linenos"> 351</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">
                            on_running
                        </span> <span className="o">=</span>{" "}
                        <span className="n">on_running</span>
                        {"\n"}
                    </span>
                    <span id="Flow-352">
                        <a href="#Flow-352">
                            <span className="linenos"> 352</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-353">
                        <a href="#Flow-353">
                            <span className="linenos"> 353</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # Used for flows loaded from remote storage
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-354">
                        <a href="#Flow-354">
                            <span className="linenos"> 354</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">_storage</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">RunnerStorage</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        {"\n"}
                    </span>
                    <span id="Flow-355">
                        <a href="#Flow-355">
                            <span className="linenos"> 355</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">_entrypoint</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        {"\n"}
                    </span>
                    <span id="Flow-356">
                        <a href="#Flow-356">
                            <span className="linenos"> 356</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-357">
                        <a href="#Flow-357">
                            <span className="linenos"> 357</span>
                        </a>
                        {"        "}
                        <span className="n">module</span> <span className="o">=</span>{" "}
                        <span className="n">fn</span>
                        <span className="o">.</span>
                        <span className="vm">__module__</span>
                        {"\n"}
                    </span>
                    <span id="Flow-358">
                        <a href="#Flow-358">
                            <span className="linenos"> 358</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="n">module</span>{" "}
                        <span className="ow">in</span> <span className="p">(</span>
                        <span className="s2">"__main__"</span>
                        <span className="p">,</span>{" "}
                        <span className="s2">"__prefect_loader__"</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-359">
                        <a href="#Flow-359">
                            <span className="linenos"> 359</span>
                        </a>
                        {"            "}
                        <span className="n">
                            module_name
                        </span> <span className="o">=</span>{" "}
                        <span className="n">inspect</span>
                        <span className="o">.</span>
                        <span className="n">getfile</span>
                        <span className="p">(</span>
                        <span className="n">fn</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-360">
                        <a href="#Flow-360">
                            <span className="linenos"> 360</span>
                        </a>
                        {"            "}
                        <span className="n">module</span> <span className="o">=</span>{" "}
                        <span className="n">module_name</span> <span className="k">if</span>{" "}
                        <span className="n">module_name</span> <span className="o">!=</span>{" "}
                        <span className="s2">"__main__"</span>{" "}
                        <span className="k">else</span> <span className="n">module</span>
                        {"\n"}
                    </span>
                    <span id="Flow-361">
                        <a href="#Flow-361">
                            <span className="linenos"> 361</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-362">
                        <a href="#Flow-362">
                            <span className="linenos"> 362</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">
                            _entrypoint
                        </span> <span className="o">=</span> <span className="sa">f</span>
                        <span className="s2">"</span>
                        <span className="si">{"{"}</span>
                        <span className="n">module</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">:</span>
                        <span className="si">{"{"}</span>
                        <span className="n">fn</span>
                        <span className="o">.</span>
                        <span className="vm">__name__</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-363">
                        <a href="#Flow-363">
                            <span className="linenos"> 363</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-364">
                        <a href="#Flow-364">
                            <span className="linenos"> 364</span>
                        </a>
                        {"    "}
                        <span className="k">def</span>{" "}
                        <span className="nf">with_options</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-365">
                        <a href="#Flow-365">
                            <span className="linenos"> 365</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-366">
                        <a href="#Flow-366">
                            <span className="linenos"> 366</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-367">
                        <a href="#Flow-367">
                            <span className="linenos"> 367</span>
                        </a>
                        {"        "}
                        <span className="n">name</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-368">
                        <a href="#Flow-368">
                            <span className="linenos"> 368</span>
                        </a>
                        {"        "}
                        <span className="n">version</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-369">
                        <a href="#Flow-369">
                            <span className="linenos"> 369</span>
                        </a>
                        {"        "}
                        <span className="n">retries</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-370">
                        <a href="#Flow-370">
                            <span className="linenos"> 370</span>
                        </a>
                        {"        "}
                        <span className="n">retry_delay_seconds</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">,</span> <span className="nb">float</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-371">
                        <a href="#Flow-371">
                            <span className="linenos"> 371</span>
                        </a>
                        {"        "}
                        <span className="n">description</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-372">
                        <a href="#Flow-372">
                            <span className="linenos"> 372</span>
                        </a>
                        {"        "}
                        <span className="n">flow_run_name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[],</span> <span className="nb">str</span>
                        <span className="p">],</span> <span className="nb">str</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-373">
                        <a href="#Flow-373">
                            <span className="linenos"> 373</span>
                        </a>
                        {"        "}
                        <span className="n">task_runner</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Type</span>
                        <span className="p">[</span>
                        <span className="n">BaseTaskRunner</span>
                        <span className="p">],</span>{" "}
                        <span className="n">BaseTaskRunner</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-374">
                        <a href="#Flow-374">
                            <span className="linenos"> 374</span>
                        </a>
                        {"        "}
                        <span className="n">timeout_seconds</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">,</span> <span className="nb">float</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-375">
                        <a href="#Flow-375">
                            <span className="linenos"> 375</span>
                        </a>
                        {"        "}
                        <span className="n">validate_parameters</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-376">
                        <a href="#Flow-376">
                            <span className="linenos"> 376</span>
                        </a>
                        {"        "}
                        <span className="n">persist_result</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">NotSet</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-377">
                        <a href="#Flow-377">
                            <span className="linenos"> 377</span>
                        </a>
                        {"        "}
                        <span className="n">result_storage</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">ResultStorage</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">NotSet</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-378">
                        <a href="#Flow-378">
                            <span className="linenos"> 378</span>
                        </a>
                        {"        "}
                        <span className="n">result_serializer</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">ResultSerializer</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">NotSet</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-379">
                        <a href="#Flow-379">
                            <span className="linenos"> 379</span>
                        </a>
                        {"        "}
                        <span className="n">cache_result_in_memory</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-380">
                        <a href="#Flow-380">
                            <span className="linenos"> 380</span>
                        </a>
                        {"        "}
                        <span className="n">log_prints</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">NotSet</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-381">
                        <a href="#Flow-381">
                            <span className="linenos"> 381</span>
                        </a>
                        {"        "}
                        <span className="n">on_completion</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Flow-382">
                        <a href="#Flow-382">
                            <span className="linenos"> 382</span>
                        </a>
                        {"            "}
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">FlowSchema</span>
                        <span className="p">,</span> <span className="n">FlowRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]</span>
                        {"\n"}
                    </span>
                    <span id="Flow-383">
                        <a href="#Flow-383">
                            <span className="linenos"> 383</span>
                        </a>
                        {"        "}
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-384">
                        <a href="#Flow-384">
                            <span className="linenos"> 384</span>
                        </a>
                        {"        "}
                        <span className="n">on_failure</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">FlowSchema</span>
                        <span className="p">,</span> <span className="n">FlowRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-385">
                        <a href="#Flow-385">
                            <span className="linenos"> 385</span>
                        </a>
                        {"        "}
                        <span className="n">on_cancellation</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Flow-386">
                        <a href="#Flow-386">
                            <span className="linenos"> 386</span>
                        </a>
                        {"            "}
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">FlowSchema</span>
                        <span className="p">,</span> <span className="n">FlowRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]</span>
                        {"\n"}
                    </span>
                    <span id="Flow-387">
                        <a href="#Flow-387">
                            <span className="linenos"> 387</span>
                        </a>
                        {"        "}
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-388">
                        <a href="#Flow-388">
                            <span className="linenos"> 388</span>
                        </a>
                        {"        "}
                        <span className="n">on_crashed</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">FlowSchema</span>
                        <span className="p">,</span> <span className="n">FlowRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-389">
                        <a href="#Flow-389">
                            <span className="linenos"> 389</span>
                        </a>
                        {"        "}
                        <span className="n">on_running</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">FlowSchema</span>
                        <span className="p">,</span> <span className="n">FlowRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-390">
                        <a href="#Flow-390">
                            <span className="linenos"> 390</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Self</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-391">
                        <a href="#Flow-391">
                            <span className="linenos"> 391</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-392">
                        <a href="#Flow-392">
                            <span className="linenos"> 392</span>
                        </a>
                        <span className="sd">
                            {"        "}Create a new flow from the current object, updating
                            provided options.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-393">
                        <a href="#Flow-393">
                            <span className="linenos"> 393</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-394">
                        <a href="#Flow-394">
                            <span className="linenos"> 394</span>
                        </a>
                        <span className="sd">{"        "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-395">
                        <a href="#Flow-395">
                            <span className="linenos"> 395</span>
                        </a>
                        <span className="sd">
                            {"            "}name: A new name for the flow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-396">
                        <a href="#Flow-396">
                            <span className="linenos"> 396</span>
                        </a>
                        <span className="sd">
                            {"            "}version: A new version for the flow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-397">
                        <a href="#Flow-397">
                            <span className="linenos"> 397</span>
                        </a>
                        <span className="sd">
                            {"            "}description: A new description for the flow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-398">
                        <a href="#Flow-398">
                            <span className="linenos"> 398</span>
                        </a>
                        <span className="sd">
                            {"            "}flow_run_name: An optional name to distinguish
                            runs of this flow; this name
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-399">
                        <a href="#Flow-399">
                            <span className="linenos"> 399</span>
                        </a>
                        <span className="sd">
                            {"                "}can be provided as a string template with the
                            flow's parameters as variables,
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-400">
                        <a href="#Flow-400">
                            <span className="linenos"> 400</span>
                        </a>
                        <span className="sd">
                            {"                "}or a function that returns a string.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-401">
                        <a href="#Flow-401">
                            <span className="linenos"> 401</span>
                        </a>
                        <span className="sd">
                            {"            "}task_runner: A new task runner for the flow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-402">
                        <a href="#Flow-402">
                            <span className="linenos"> 402</span>
                        </a>
                        <span className="sd">
                            {"            "}timeout_seconds: A new number of seconds to fail
                            the flow after if still
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-403">
                        <a href="#Flow-403">
                            <span className="linenos"> 403</span>
                        </a>
                        <span className="sd">{"                "}running.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-404">
                        <a href="#Flow-404">
                            <span className="linenos"> 404</span>
                        </a>
                        <span className="sd">
                            {"            "}validate_parameters: A new value indicating if
                            flow calls should validate
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-405">
                        <a href="#Flow-405">
                            <span className="linenos"> 405</span>
                        </a>
                        <span className="sd">{"                "}given parameters.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-406">
                        <a href="#Flow-406">
                            <span className="linenos"> 406</span>
                        </a>
                        <span className="sd">
                            {"            "}retries: A new number of times to retry on flow
                            run failure.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-407">
                        <a href="#Flow-407">
                            <span className="linenos"> 407</span>
                        </a>
                        <span className="sd">
                            {"            "}retry_delay_seconds: A new number of seconds to
                            wait before retrying the
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-408">
                        <a href="#Flow-408">
                            <span className="linenos"> 408</span>
                        </a>
                        <span className="sd">
                            {"                "}flow after failure. This is only applicable if
                            `retries` is nonzero.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-409">
                        <a href="#Flow-409">
                            <span className="linenos"> 409</span>
                        </a>
                        <span className="sd">
                            {"            "}persist_result: A new option for enabling or
                            disabling result persistence.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-410">
                        <a href="#Flow-410">
                            <span className="linenos"> 410</span>
                        </a>
                        <span className="sd">
                            {"            "}result_storage: A new storage type to use for
                            results.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-411">
                        <a href="#Flow-411">
                            <span className="linenos"> 411</span>
                        </a>
                        <span className="sd">
                            {"            "}result_serializer: A new serializer to use for
                            results.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-412">
                        <a href="#Flow-412">
                            <span className="linenos"> 412</span>
                        </a>
                        <span className="sd">
                            {"            "}cache_result_in_memory: A new value indicating if
                            the flow's result should
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-413">
                        <a href="#Flow-413">
                            <span className="linenos"> 413</span>
                        </a>
                        <span className="sd">{"                "}be cached in memory.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-414">
                        <a href="#Flow-414">
                            <span className="linenos"> 414</span>
                        </a>
                        <span className="sd">
                            {"            "}on_failure: A new list of callables to run when
                            the flow enters a failed state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-415">
                        <a href="#Flow-415">
                            <span className="linenos"> 415</span>
                        </a>
                        <span className="sd">
                            {"            "}on_completion: A new list of callables to run when
                            the flow enters a completed state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-416">
                        <a href="#Flow-416">
                            <span className="linenos"> 416</span>
                        </a>
                        <span className="sd">
                            {"            "}on_cancellation: A new list of callables to run
                            when the flow enters a cancelling state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-417">
                        <a href="#Flow-417">
                            <span className="linenos"> 417</span>
                        </a>
                        <span className="sd">
                            {"            "}on_crashed: A new list of callables to run when
                            the flow enters a crashed state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-418">
                        <a href="#Flow-418">
                            <span className="linenos"> 418</span>
                        </a>
                        <span className="sd">
                            {"            "}on_running: A new list of callables to run when
                            the flow enters a running state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-419">
                        <a href="#Flow-419">
                            <span className="linenos"> 419</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-420">
                        <a href="#Flow-420">
                            <span className="linenos"> 420</span>
                        </a>
                        <span className="sd">{"        "}Returns:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-421">
                        <a href="#Flow-421">
                            <span className="linenos"> 421</span>
                        </a>
                        <span className="sd">{"            "}A new `Flow` instance.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-422">
                        <a href="#Flow-422">
                            <span className="linenos"> 422</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-423">
                        <a href="#Flow-423">
                            <span className="linenos"> 423</span>
                        </a>
                        <span className="sd">{"        "}Examples:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-424">
                        <a href="#Flow-424">
                            <span className="linenos"> 424</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-425">
                        <a href="#Flow-425">
                            <span className="linenos"> 425</span>
                        </a>
                        <span className="sd">
                            {"            "}Create a new flow from an existing flow and update
                            the name:
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-426">
                        <a href="#Flow-426">
                            <span className="linenos"> 426</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-427">
                        <a href="#Flow-427">
                            <span className="linenos"> 427</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; @flow(name="My flow")
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-428">
                        <a href="#Flow-428">
                            <span className="linenos"> 428</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-429">
                        <a href="#Flow-429">
                            <span className="linenos"> 429</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}return 1
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-430">
                        <a href="#Flow-430">
                            <span className="linenos"> 430</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Flow-431">
                        <a href="#Flow-431">
                            <span className="linenos"> 431</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; new_flow =
                            my_flow.with_options(name="My new flow")
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-432">
                        <a href="#Flow-432">
                            <span className="linenos"> 432</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-433">
                        <a href="#Flow-433">
                            <span className="linenos"> 433</span>
                        </a>
                        <span className="sd">
                            {"            "}Create a new flow from an existing flow, update
                            the task runner, and call
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-434">
                        <a href="#Flow-434">
                            <span className="linenos"> 434</span>
                        </a>
                        <span className="sd">
                            {"            "}it without an intermediate variable:
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-435">
                        <a href="#Flow-435">
                            <span className="linenos"> 435</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-436">
                        <a href="#Flow-436">
                            <span className="linenos"> 436</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; from prefect.task_runners import
                            SequentialTaskRunner
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-437">
                        <a href="#Flow-437">
                            <span className="linenos"> 437</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Flow-438">
                        <a href="#Flow-438">
                            <span className="linenos"> 438</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="Flow-439">
                        <a href="#Flow-439">
                            <span className="linenos"> 439</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_flow(x, y):
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-440">
                        <a href="#Flow-440">
                            <span className="linenos"> 440</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}return x + y
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-441">
                        <a href="#Flow-441">
                            <span className="linenos"> 441</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Flow-442">
                        <a href="#Flow-442">
                            <span className="linenos"> 442</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; state =
                            my_flow.with_options(task_runner=SequentialTaskRunner)(1, 3)
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-443">
                        <a href="#Flow-443">
                            <span className="linenos"> 443</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; assert state.result() == 4
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-444">
                        <a href="#Flow-444">
                            <span className="linenos"> 444</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-445">
                        <a href="#Flow-445">
                            <span className="linenos"> 445</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-446">
                        <a href="#Flow-446">
                            <span className="linenos"> 446</span>
                        </a>
                        {"        "}
                        <span className="n">
                            new_flow
                        </span> <span className="o">=</span> <span className="n">Flow</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-447">
                        <a href="#Flow-447">
                            <span className="linenos"> 447</span>
                        </a>
                        {"            "}
                        <span className="n">fn</span>
                        <span className="o">=</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-448">
                        <a href="#Flow-448">
                            <span className="linenos"> 448</span>
                        </a>
                        {"            "}
                        <span className="n">name</span>
                        <span className="o">=</span>
                        <span className="n">name</span> <span className="ow">or</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-449">
                        <a href="#Flow-449">
                            <span className="linenos"> 449</span>
                        </a>
                        {"            "}
                        <span className="n">description</span>
                        <span className="o">=</span>
                        <span className="n">description</span>{" "}
                        <span className="ow">or</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">description</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-450">
                        <a href="#Flow-450">
                            <span className="linenos"> 450</span>
                        </a>
                        {"            "}
                        <span className="n">flow_run_name</span>
                        <span className="o">=</span>
                        <span className="n">flow_run_name</span>{" "}
                        <span className="ow">or</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">flow_run_name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-451">
                        <a href="#Flow-451">
                            <span className="linenos"> 451</span>
                        </a>
                        {"            "}
                        <span className="n">version</span>
                        <span className="o">=</span>
                        <span className="n">
                            version
                        </span> <span className="ow">or</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">version</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-452">
                        <a href="#Flow-452">
                            <span className="linenos"> 452</span>
                        </a>
                        {"            "}
                        <span className="n">task_runner</span>
                        <span className="o">=</span>
                        <span className="n">task_runner</span>{" "}
                        <span className="ow">or</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">task_runner</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-453">
                        <a href="#Flow-453">
                            <span className="linenos"> 453</span>
                        </a>
                        {"            "}
                        <span className="n">retries</span>
                        <span className="o">=</span>
                        <span className="n">
                            retries
                        </span> <span className="k">if</span>{" "}
                        <span className="n">retries</span> <span className="ow">is</span>{" "}
                        <span className="ow">not</span> <span className="kc">None</span>{" "}
                        <span className="k">else</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">retries</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-454">
                        <a href="#Flow-454">
                            <span className="linenos"> 454</span>
                        </a>
                        {"            "}
                        <span className="n">retry_delay_seconds</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-455">
                        <a href="#Flow-455">
                            <span className="linenos"> 455</span>
                        </a>
                        {"                "}
                        <span className="n">retry_delay_seconds</span>
                        {"\n"}
                    </span>
                    <span id="Flow-456">
                        <a href="#Flow-456">
                            <span className="linenos"> 456</span>
                        </a>
                        {"                "}
                        <span className="k">if</span>{" "}
                        <span className="n">retry_delay_seconds</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span>
                        {"\n"}
                    </span>
                    <span id="Flow-457">
                        <a href="#Flow-457">
                            <span className="linenos"> 457</span>
                        </a>
                        {"                "}
                        <span className="k">else</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">retry_delay_seconds</span>
                        {"\n"}
                    </span>
                    <span id="Flow-458">
                        <a href="#Flow-458">
                            <span className="linenos"> 458</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Flow-459">
                        <a href="#Flow-459">
                            <span className="linenos"> 459</span>
                        </a>
                        {"            "}
                        <span className="n">timeout_seconds</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-460">
                        <a href="#Flow-460">
                            <span className="linenos"> 460</span>
                        </a>
                        {"                "}
                        <span className="n">timeout_seconds</span>{" "}
                        <span className="k">if</span>{" "}
                        <span className="n">timeout_seconds</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span> <span className="k">else</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">timeout_seconds</span>
                        {"\n"}
                    </span>
                    <span id="Flow-461">
                        <a href="#Flow-461">
                            <span className="linenos"> 461</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Flow-462">
                        <a href="#Flow-462">
                            <span className="linenos"> 462</span>
                        </a>
                        {"            "}
                        <span className="n">validate_parameters</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-463">
                        <a href="#Flow-463">
                            <span className="linenos"> 463</span>
                        </a>
                        {"                "}
                        <span className="n">validate_parameters</span>
                        {"\n"}
                    </span>
                    <span id="Flow-464">
                        <a href="#Flow-464">
                            <span className="linenos"> 464</span>
                        </a>
                        {"                "}
                        <span className="k">if</span>{" "}
                        <span className="n">validate_parameters</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span>
                        {"\n"}
                    </span>
                    <span id="Flow-465">
                        <a href="#Flow-465">
                            <span className="linenos"> 465</span>
                        </a>
                        {"                "}
                        <span className="k">else</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">should_validate_parameters</span>
                        {"\n"}
                    </span>
                    <span id="Flow-466">
                        <a href="#Flow-466">
                            <span className="linenos"> 466</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Flow-467">
                        <a href="#Flow-467">
                            <span className="linenos"> 467</span>
                        </a>
                        {"            "}
                        <span className="n">persist_result</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-468">
                        <a href="#Flow-468">
                            <span className="linenos"> 468</span>
                        </a>
                        {"                "}
                        <span className="n">persist_result</span>{" "}
                        <span className="k">if</span>{" "}
                        <span className="n">persist_result</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="n">NotSet</span> <span className="k">else</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">persist_result</span>
                        {"\n"}
                    </span>
                    <span id="Flow-469">
                        <a href="#Flow-469">
                            <span className="linenos"> 469</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Flow-470">
                        <a href="#Flow-470">
                            <span className="linenos"> 470</span>
                        </a>
                        {"            "}
                        <span className="n">result_storage</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-471">
                        <a href="#Flow-471">
                            <span className="linenos"> 471</span>
                        </a>
                        {"                "}
                        <span className="n">result_storage</span>{" "}
                        <span className="k">if</span>{" "}
                        <span className="n">result_storage</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="n">NotSet</span> <span className="k">else</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">result_storage</span>
                        {"\n"}
                    </span>
                    <span id="Flow-472">
                        <a href="#Flow-472">
                            <span className="linenos"> 472</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Flow-473">
                        <a href="#Flow-473">
                            <span className="linenos"> 473</span>
                        </a>
                        {"            "}
                        <span className="n">result_serializer</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-474">
                        <a href="#Flow-474">
                            <span className="linenos"> 474</span>
                        </a>
                        {"                "}
                        <span className="n">result_serializer</span>
                        {"\n"}
                    </span>
                    <span id="Flow-475">
                        <a href="#Flow-475">
                            <span className="linenos"> 475</span>
                        </a>
                        {"                "}
                        <span className="k">if</span>{" "}
                        <span className="n">result_serializer</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="n">NotSet</span>
                        {"\n"}
                    </span>
                    <span id="Flow-476">
                        <a href="#Flow-476">
                            <span className="linenos"> 476</span>
                        </a>
                        {"                "}
                        <span className="k">else</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">result_serializer</span>
                        {"\n"}
                    </span>
                    <span id="Flow-477">
                        <a href="#Flow-477">
                            <span className="linenos"> 477</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Flow-478">
                        <a href="#Flow-478">
                            <span className="linenos"> 478</span>
                        </a>
                        {"            "}
                        <span className="n">cache_result_in_memory</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-479">
                        <a href="#Flow-479">
                            <span className="linenos"> 479</span>
                        </a>
                        {"                "}
                        <span className="n">cache_result_in_memory</span>
                        {"\n"}
                    </span>
                    <span id="Flow-480">
                        <a href="#Flow-480">
                            <span className="linenos"> 480</span>
                        </a>
                        {"                "}
                        <span className="k">if</span>{" "}
                        <span className="n">cache_result_in_memory</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span>
                        {"\n"}
                    </span>
                    <span id="Flow-481">
                        <a href="#Flow-481">
                            <span className="linenos"> 481</span>
                        </a>
                        {"                "}
                        <span className="k">else</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">cache_result_in_memory</span>
                        {"\n"}
                    </span>
                    <span id="Flow-482">
                        <a href="#Flow-482">
                            <span className="linenos"> 482</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Flow-483">
                        <a href="#Flow-483">
                            <span className="linenos"> 483</span>
                        </a>
                        {"            "}
                        <span className="n">log_prints</span>
                        <span className="o">=</span>
                        <span className="n">
                            log_prints
                        </span> <span className="k">if</span>{" "}
                        <span className="n">log_prints</span> <span className="ow">is</span>{" "}
                        <span className="ow">not</span> <span className="n">NotSet</span>{" "}
                        <span className="k">else</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">log_prints</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-484">
                        <a href="#Flow-484">
                            <span className="linenos"> 484</span>
                        </a>
                        {"            "}
                        <span className="n">on_completion</span>
                        <span className="o">=</span>
                        <span className="n">on_completion</span>{" "}
                        <span className="ow">or</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">on_completion</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-485">
                        <a href="#Flow-485">
                            <span className="linenos"> 485</span>
                        </a>
                        {"            "}
                        <span className="n">on_failure</span>
                        <span className="o">=</span>
                        <span className="n">
                            on_failure
                        </span> <span className="ow">or</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">on_failure</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-486">
                        <a href="#Flow-486">
                            <span className="linenos"> 486</span>
                        </a>
                        {"            "}
                        <span className="n">on_cancellation</span>
                        <span className="o">=</span>
                        <span className="n">on_cancellation</span>{" "}
                        <span className="ow">or</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">on_cancellation</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-487">
                        <a href="#Flow-487">
                            <span className="linenos"> 487</span>
                        </a>
                        {"            "}
                        <span className="n">on_crashed</span>
                        <span className="o">=</span>
                        <span className="n">
                            on_crashed
                        </span> <span className="ow">or</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">on_crashed</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-488">
                        <a href="#Flow-488">
                            <span className="linenos"> 488</span>
                        </a>
                        {"            "}
                        <span className="n">on_running</span>
                        <span className="o">=</span>
                        <span className="n">
                            on_running
                        </span> <span className="ow">or</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">on_running</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-489">
                        <a href="#Flow-489">
                            <span className="linenos"> 489</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-490">
                        <a href="#Flow-490">
                            <span className="linenos"> 490</span>
                        </a>
                        {"        "}
                        <span className="n">new_flow</span>
                        <span className="o">.</span>
                        <span className="n">
                            _storage
                        </span> <span className="o">=</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">_storage</span>
                        {"\n"}
                    </span>
                    <span id="Flow-491">
                        <a href="#Flow-491">
                            <span className="linenos"> 491</span>
                        </a>
                        {"        "}
                        <span className="n">new_flow</span>
                        <span className="o">.</span>
                        <span className="n">
                            _entrypoint
                        </span> <span className="o">=</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">_entrypoint</span>
                        {"\n"}
                    </span>
                    <span id="Flow-492">
                        <a href="#Flow-492">
                            <span className="linenos"> 492</span>
                        </a>
                        {"        "}
                        <span className="k">return</span>{" "}
                        <span className="n">new_flow</span>
                        {"\n"}
                    </span>
                    <span id="Flow-493">
                        <a href="#Flow-493">
                            <span className="linenos"> 493</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-494">
                        <a href="#Flow-494">
                            <span className="linenos"> 494</span>
                        </a>
                        {"    "}
                        <span className="k">def</span>{" "}
                        <span className="nf">validate_parameters</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">,</span> <span className="n">parameters</span>
                        <span className="p">:</span> <span className="n">Dict</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">Any</span>
                        <span className="p">])</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Dict</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">Any</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-495">
                        <a href="#Flow-495">
                            <span className="linenos"> 495</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-496">
                        <a href="#Flow-496">
                            <span className="linenos"> 496</span>
                        </a>
                        <span className="sd">
                            {"        "}Validate parameters for compatibility with the flow by
                            attempting to cast the inputs to the
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-497">
                        <a href="#Flow-497">
                            <span className="linenos"> 497</span>
                        </a>
                        <span className="sd">
                            {"        "}associated types specified by the function's type
                            annotations.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-498">
                        <a href="#Flow-498">
                            <span className="linenos"> 498</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-499">
                        <a href="#Flow-499">
                            <span className="linenos"> 499</span>
                        </a>
                        <span className="sd">{"        "}Returns:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-500">
                        <a href="#Flow-500">
                            <span className="linenos"> 500</span>
                        </a>
                        <span className="sd">
                            {"            "}A new dict of parameters that have been cast to
                            the appropriate types
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-501">
                        <a href="#Flow-501">
                            <span className="linenos"> 501</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-502">
                        <a href="#Flow-502">
                            <span className="linenos"> 502</span>
                        </a>
                        <span className="sd">{"        "}Raises:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-503">
                        <a href="#Flow-503">
                            <span className="linenos"> 503</span>
                        </a>
                        <span className="sd">
                            {"            "}ParameterTypeError: if the provided parameters are
                            not valid
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-504">
                        <a href="#Flow-504">
                            <span className="linenos"> 504</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-505">
                        <a href="#Flow-505">
                            <span className="linenos"> 505</span>
                        </a>
                        {"        "}
                        <span className="n">args</span>
                        <span className="p">,</span> <span className="n">kwargs</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">parameters_to_args_kwargs</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">,</span> <span className="n">parameters</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-506">
                        <a href="#Flow-506">
                            <span className="linenos"> 506</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-507">
                        <a href="#Flow-507">
                            <span className="linenos"> 507</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">HAS_PYDANTIC_V2</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-508">
                        <a href="#Flow-508">
                            <span className="linenos"> 508</span>
                        </a>
                        {"            "}
                        <span className="n">has_v1_models</span>{" "}
                        <span className="o">=</span> <span className="nb">any</span>
                        <span className="p">(</span>
                        <span className="nb">isinstance</span>
                        <span className="p">(</span>
                        <span className="n">o</span>
                        <span className="p">,</span> <span className="n">V1BaseModel</span>
                        <span className="p">)</span> <span className="k">for</span>{" "}
                        <span className="n">o</span> <span className="ow">in</span>{" "}
                        <span className="n">args</span>
                        <span className="p">)</span> <span className="ow">or</span>{" "}
                        <span className="nb">any</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-509">
                        <a href="#Flow-509">
                            <span className="linenos"> 509</span>
                        </a>
                        {"                "}
                        <span className="nb">isinstance</span>
                        <span className="p">(</span>
                        <span className="n">o</span>
                        <span className="p">,</span> <span className="n">V1BaseModel</span>
                        <span className="p">)</span> <span className="k">for</span>{" "}
                        <span className="n">o</span> <span className="ow">in</span>{" "}
                        <span className="n">kwargs</span>
                        <span className="o">.</span>
                        <span className="n">values</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Flow-510">
                        <a href="#Flow-510">
                            <span className="linenos"> 510</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-511">
                        <a href="#Flow-511">
                            <span className="linenos"> 511</span>
                        </a>
                        {"            "}
                        <span className="n">
                            has_v2_types
                        </span> <span className="o">=</span> <span className="nb">any</span>
                        <span className="p">(</span>
                        <span className="n">is_v2_type</span>
                        <span className="p">(</span>
                        <span className="n">o</span>
                        <span className="p">)</span> <span className="k">for</span>{" "}
                        <span className="n">o</span> <span className="ow">in</span>{" "}
                        <span className="n">args</span>
                        <span className="p">)</span> <span className="ow">or</span>{" "}
                        <span className="nb">any</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-512">
                        <a href="#Flow-512">
                            <span className="linenos"> 512</span>
                        </a>
                        {"                "}
                        <span className="n">is_v2_type</span>
                        <span className="p">(</span>
                        <span className="n">o</span>
                        <span className="p">)</span> <span className="k">for</span>{" "}
                        <span className="n">o</span> <span className="ow">in</span>{" "}
                        <span className="n">kwargs</span>
                        <span className="o">.</span>
                        <span className="n">values</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Flow-513">
                        <a href="#Flow-513">
                            <span className="linenos"> 513</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-514">
                        <a href="#Flow-514">
                            <span className="linenos"> 514</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-515">
                        <a href="#Flow-515">
                            <span className="linenos"> 515</span>
                        </a>
                        {"            "}
                        <span className="k">if</span>{" "}
                        <span className="n">has_v1_models</span>{" "}
                        <span className="ow">and</span>{" "}
                        <span className="n">has_v2_types</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-516">
                        <a href="#Flow-516">
                            <span className="linenos"> 516</span>
                        </a>
                        {"                "}
                        <span className="k">raise</span>{" "}
                        <span className="n">ParameterTypeError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-517">
                        <a href="#Flow-517">
                            <span className="linenos"> 517</span>
                        </a>
                        {"                    "}
                        <span className="s2">
                            "Cannot mix Pydantic v1 and v2 types as arguments to a flow."
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-518">
                        <a href="#Flow-518">
                            <span className="linenos"> 518</span>
                        </a>
                        {"                "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-519">
                        <a href="#Flow-519">
                            <span className="linenos"> 519</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-520">
                        <a href="#Flow-520">
                            <span className="linenos"> 520</span>
                        </a>
                        {"            "}
                        <span className="k">if</span>{" "}
                        <span className="n">has_v1_models</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-521">
                        <a href="#Flow-521">
                            <span className="linenos"> 521</span>
                        </a>
                        {"                "}
                        <span className="n">
                            validated_fn
                        </span> <span className="o">=</span>{" "}
                        <span className="n">V1ValidatedFunction</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-522">
                        <a href="#Flow-522">
                            <span className="linenos"> 522</span>
                        </a>
                        {"                    "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">,</span> <span className="n">config</span>
                        <span className="o">=</span>
                        <span className="p">{"{"}</span>
                        <span className="s2">"arbitrary_types_allowed"</span>
                        <span className="p">:</span> <span className="kc">True</span>
                        <span className="p">{"}"}</span>
                        {"\n"}
                    </span>
                    <span id="Flow-523">
                        <a href="#Flow-523">
                            <span className="linenos"> 523</span>
                        </a>
                        {"                "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-524">
                        <a href="#Flow-524">
                            <span className="linenos"> 524</span>
                        </a>
                        {"            "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-525">
                        <a href="#Flow-525">
                            <span className="linenos"> 525</span>
                        </a>
                        {"                "}
                        <span className="n">
                            validated_fn
                        </span> <span className="o">=</span>{" "}
                        <span className="n">V2ValidatedFunction</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-526">
                        <a href="#Flow-526">
                            <span className="linenos"> 526</span>
                        </a>
                        {"                    "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">,</span> <span className="n">config</span>
                        <span className="o">=</span>
                        <span className="p">{"{"}</span>
                        <span className="s2">"arbitrary_types_allowed"</span>
                        <span className="p">:</span> <span className="kc">True</span>
                        <span className="p">{"}"}</span>
                        {"\n"}
                    </span>
                    <span id="Flow-527">
                        <a href="#Flow-527">
                            <span className="linenos"> 527</span>
                        </a>
                        {"                "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-528">
                        <a href="#Flow-528">
                            <span className="linenos"> 528</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-529">
                        <a href="#Flow-529">
                            <span className="linenos"> 529</span>
                        </a>
                        {"        "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-530">
                        <a href="#Flow-530">
                            <span className="linenos"> 530</span>
                        </a>
                        {"            "}
                        <span className="n">
                            validated_fn
                        </span> <span className="o">=</span>{" "}
                        <span className="n">ValidatedFunction</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-531">
                        <a href="#Flow-531">
                            <span className="linenos"> 531</span>
                        </a>
                        {"                "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">,</span> <span className="n">config</span>
                        <span className="o">=</span>
                        <span className="p">{"{"}</span>
                        <span className="s2">"arbitrary_types_allowed"</span>
                        <span className="p">:</span> <span className="kc">True</span>
                        <span className="p">{"}"}</span>
                        {"\n"}
                    </span>
                    <span id="Flow-532">
                        <a href="#Flow-532">
                            <span className="linenos"> 532</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-533">
                        <a href="#Flow-533">
                            <span className="linenos"> 533</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-534">
                        <a href="#Flow-534">
                            <span className="linenos"> 534</span>
                        </a>
                        {"        "}
                        <span className="k">try</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-535">
                        <a href="#Flow-535">
                            <span className="linenos"> 535</span>
                        </a>
                        {"            "}
                        <span className="n">model</span> <span className="o">=</span>{" "}
                        <span className="n">validated_fn</span>
                        <span className="o">.</span>
                        <span className="n">init_model_instance</span>
                        <span className="p">(</span>
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">,</span> <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-536">
                        <a href="#Flow-536">
                            <span className="linenos"> 536</span>
                        </a>
                        {"        "}
                        <span className="k">except</span>{" "}
                        <span className="n">pydantic</span>
                        <span className="o">.</span>
                        <span className="n">ValidationError</span>{" "}
                        <span className="k">as</span> <span className="n">exc</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-537">
                        <a href="#Flow-537">
                            <span className="linenos"> 537</span>
                        </a>
                        {"            "}
                        <span className="c1">
                            # We capture the pydantic exception and raise our own because the
                            pydantic
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-538">
                        <a href="#Flow-538">
                            <span className="linenos"> 538</span>
                        </a>
                        {"            "}
                        <span className="c1">
                            # exception is not picklable when using a cythonized pydantic
                            installation
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-539">
                        <a href="#Flow-539">
                            <span className="linenos"> 539</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="n">ParameterTypeError</span>
                        <span className="o">.</span>
                        <span className="n">from_validation_error</span>
                        <span className="p">(</span>
                        <span className="n">exc</span>
                        <span className="p">)</span> <span className="kn">from</span>{" "}
                        <span className="kc">None</span>
                        {"\n"}
                    </span>
                    <span id="Flow-540">
                        <a href="#Flow-540">
                            <span className="linenos"> 540</span>
                        </a>
                        {"        "}
                        <span className="k">except</span>{" "}
                        <span className="n">V2ValidationError</span>{" "}
                        <span className="k">as</span> <span className="n">exc</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-541">
                        <a href="#Flow-541">
                            <span className="linenos"> 541</span>
                        </a>
                        {"            "}
                        <span className="c1">
                            # We capture the pydantic exception and raise our own because the
                            pydantic
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-542">
                        <a href="#Flow-542">
                            <span className="linenos"> 542</span>
                        </a>
                        {"            "}
                        <span className="c1">
                            # exception is not picklable when using a cythonized pydantic
                            installation
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-543">
                        <a href="#Flow-543">
                            <span className="linenos"> 543</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="n">ParameterTypeError</span>
                        <span className="o">.</span>
                        <span className="n">from_validation_error</span>
                        <span className="p">(</span>
                        <span className="n">exc</span>
                        <span className="p">)</span> <span className="kn">from</span>{" "}
                        <span className="kc">None</span>
                        {"\n"}
                    </span>
                    <span id="Flow-544">
                        <a href="#Flow-544">
                            <span className="linenos"> 544</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-545">
                        <a href="#Flow-545">
                            <span className="linenos"> 545</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # Get the updated parameter dict with cast values from the model
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-546">
                        <a href="#Flow-546">
                            <span className="linenos"> 546</span>
                        </a>
                        {"        "}
                        <span className="n">cast_parameters</span>{" "}
                        <span className="o">=</span> <span className="p">{"{"}</span>
                        {"\n"}
                    </span>
                    <span id="Flow-547">
                        <a href="#Flow-547">
                            <span className="linenos"> 547</span>
                        </a>
                        {"            "}
                        <span className="n">k</span>
                        <span className="p">:</span> <span className="n">v</span>
                        {"\n"}
                    </span>
                    <span id="Flow-548">
                        <a href="#Flow-548">
                            <span className="linenos"> 548</span>
                        </a>
                        {"            "}
                        <span className="k">for</span> <span className="n">k</span>
                        <span className="p">,</span> <span className="n">v</span>{" "}
                        <span className="ow">in</span> <span className="n">model</span>
                        <span className="o">.</span>
                        <span className="n">_iter</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Flow-549">
                        <a href="#Flow-549">
                            <span className="linenos"> 549</span>
                        </a>
                        {"            "}
                        <span className="k">if</span> <span className="n">k</span>{" "}
                        <span className="ow">in</span> <span className="n">model</span>
                        <span className="o">.</span>
                        <span className="n">__fields_set__</span>{" "}
                        <span className="ow">or</span> <span className="n">model</span>
                        <span className="o">.</span>
                        <span className="n">__fields__</span>
                        <span className="p">[</span>
                        <span className="n">k</span>
                        <span className="p">]</span>
                        <span className="o">.</span>
                        <span className="n">default_factory</span>
                        {"\n"}
                    </span>
                    <span id="Flow-550">
                        <a href="#Flow-550">
                            <span className="linenos"> 550</span>
                        </a>
                        {"        "}
                        <span className="p">{"}"}</span>
                        {"\n"}
                    </span>
                    <span id="Flow-551">
                        <a href="#Flow-551">
                            <span className="linenos"> 551</span>
                        </a>
                        {"        "}
                        <span className="k">return</span>{" "}
                        <span className="n">cast_parameters</span>
                        {"\n"}
                    </span>
                    <span id="Flow-552">
                        <a href="#Flow-552">
                            <span className="linenos"> 552</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-553">
                        <a href="#Flow-553">
                            <span className="linenos"> 553</span>
                        </a>
                        {"    "}
                        <span className="k">def</span>{" "}
                        <span className="nf">serialize_parameters</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">,</span> <span className="n">parameters</span>
                        <span className="p">:</span> <span className="n">Dict</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">Any</span>
                        <span className="p">])</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Dict</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">Any</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-554">
                        <a href="#Flow-554">
                            <span className="linenos"> 554</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-555">
                        <a href="#Flow-555">
                            <span className="linenos"> 555</span>
                        </a>
                        <span className="sd">
                            {"        "}Convert parameters to a serializable form.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-556">
                        <a href="#Flow-556">
                            <span className="linenos"> 556</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-557">
                        <a href="#Flow-557">
                            <span className="linenos"> 557</span>
                        </a>
                        <span className="sd">
                            {"        "}Uses FastAPI's `jsonable_encoder` to convert to JSON
                            compatible objects without
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-558">
                        <a href="#Flow-558">
                            <span className="linenos"> 558</span>
                        </a>
                        <span className="sd">
                            {"        "}converting everything directly to a string. This
                            maintains basic types like
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-559">
                        <a href="#Flow-559">
                            <span className="linenos"> 559</span>
                        </a>
                        <span className="sd">
                            {"        "}integers during API roundtrips.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-560">
                        <a href="#Flow-560">
                            <span className="linenos"> 560</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-561">
                        <a href="#Flow-561">
                            <span className="linenos"> 561</span>
                        </a>
                        {"        "}
                        <span className="n">serialized_parameters</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="p">
                            {"{"}
                            {"}"}
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-562">
                        <a href="#Flow-562">
                            <span className="linenos"> 562</span>
                        </a>
                        {"        "}
                        <span className="k">for</span> <span className="n">key</span>
                        <span className="p">,</span> <span className="n">value</span>{" "}
                        <span className="ow">in</span> <span className="n">parameters</span>
                        <span className="o">.</span>
                        <span className="n">items</span>
                        <span className="p">():</span>
                        {"\n"}
                    </span>
                    <span id="Flow-563">
                        <a href="#Flow-563">
                            <span className="linenos"> 563</span>
                        </a>
                        {"            "}
                        <span className="k">try</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-564">
                        <a href="#Flow-564">
                            <span className="linenos"> 564</span>
                        </a>
                        {"                "}
                        <span className="n">serialized_parameters</span>
                        <span className="p">[</span>
                        <span className="n">key</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">jsonable_encoder</span>
                        <span className="p">(</span>
                        <span className="n">value</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-565">
                        <a href="#Flow-565">
                            <span className="linenos"> 565</span>
                        </a>
                        {"            "}
                        <span className="k">except</span> <span className="p">(</span>
                        <span className="ne">TypeError</span>
                        <span className="p">,</span> <span className="ne">ValueError</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-566">
                        <a href="#Flow-566">
                            <span className="linenos"> 566</span>
                        </a>
                        {"                "}
                        <span className="n">logger</span>
                        <span className="o">.</span>
                        <span className="n">debug</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-567">
                        <a href="#Flow-567">
                            <span className="linenos"> 567</span>
                        </a>
                        {"                    "}
                        <span className="sa">f</span>
                        <span className="s2">"Parameter </span>
                        <span className="si">{"{"}</span>
                        <span className="n">key</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2"> for flow </span>
                        <span className="si">{"{"}</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2"> is of unserializable "</span>
                        {"\n"}
                    </span>
                    <span id="Flow-568">
                        <a href="#Flow-568">
                            <span className="linenos"> 568</span>
                        </a>
                        {"                    "}
                        <span className="sa">f</span>
                        <span className="s2">"type </span>
                        <span className="si">{"{"}</span>
                        <span className="nb">type</span>
                        <span className="p">(</span>
                        <span className="n">value</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="vm">__name__</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2"> and will not be stored "</span>
                        {"\n"}
                    </span>
                    <span id="Flow-569">
                        <a href="#Flow-569">
                            <span className="linenos"> 569</span>
                        </a>
                        {"                    "}
                        <span className="s2">"in the backend."</span>
                        {"\n"}
                    </span>
                    <span id="Flow-570">
                        <a href="#Flow-570">
                            <span className="linenos"> 570</span>
                        </a>
                        {"                "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-571">
                        <a href="#Flow-571">
                            <span className="linenos"> 571</span>
                        </a>
                        {"                "}
                        <span className="n">serialized_parameters</span>
                        <span className="p">[</span>
                        <span className="n">key</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="sa">f</span>
                        <span className="s2">"&lt;</span>
                        <span className="si">{"{"}</span>
                        <span className="nb">type</span>
                        <span className="p">(</span>
                        <span className="n">value</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="vm">__name__</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">&gt;"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-572">
                        <a href="#Flow-572">
                            <span className="linenos"> 572</span>
                        </a>
                        {"        "}
                        <span className="k">return</span>{" "}
                        <span className="n">serialized_parameters</span>
                        {"\n"}
                    </span>
                    <span id="Flow-573">
                        <a href="#Flow-573">
                            <span className="linenos"> 573</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-574">
                        <a href="#Flow-574">
                            <span className="linenos"> 574</span>
                        </a>
                        {"    "}
                        <span className="nd">@sync_compatible</span>
                        {"\n"}
                    </span>
                    <span id="Flow-575">
                        <a href="#Flow-575">
                            <span className="linenos"> 575</span>
                        </a>
                        {"    "}
                        <span className="nd">@deprecated_parameter</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-576">
                        <a href="#Flow-576">
                            <span className="linenos"> 576</span>
                        </a>
                        {"        "}
                        <span className="s2">"schedule"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-577">
                        <a href="#Flow-577">
                            <span className="linenos"> 577</span>
                        </a>
                        {"        "}
                        <span className="n">start_date</span>
                        <span className="o">=</span>
                        <span className="s2">"Mar 2024"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-578">
                        <a href="#Flow-578">
                            <span className="linenos"> 578</span>
                        </a>
                        {"        "}
                        <span className="n">when</span>
                        <span className="o">=</span>
                        <span className="k">lambda</span> <span className="n">p</span>
                        <span className="p">:</span> <span className="n">p</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-579">
                        <a href="#Flow-579">
                            <span className="linenos"> 579</span>
                        </a>
                        {"        "}
                        <span className="n">help</span>
                        <span className="o">=</span>
                        <span className="s2">"Use `schedules` instead."</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-580">
                        <a href="#Flow-580">
                            <span className="linenos"> 580</span>
                        </a>
                        {"    "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-581">
                        <a href="#Flow-581">
                            <span className="linenos"> 581</span>
                        </a>
                        {"    "}
                        <span className="nd">@deprecated_parameter</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-582">
                        <a href="#Flow-582">
                            <span className="linenos"> 582</span>
                        </a>
                        {"        "}
                        <span className="s2">"is_schedule_active"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-583">
                        <a href="#Flow-583">
                            <span className="linenos"> 583</span>
                        </a>
                        {"        "}
                        <span className="n">start_date</span>
                        <span className="o">=</span>
                        <span className="s2">"Mar 2024"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-584">
                        <a href="#Flow-584">
                            <span className="linenos"> 584</span>
                        </a>
                        {"        "}
                        <span className="n">when</span>
                        <span className="o">=</span>
                        <span className="k">lambda</span> <span className="n">p</span>
                        <span className="p">:</span> <span className="n">p</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-585">
                        <a href="#Flow-585">
                            <span className="linenos"> 585</span>
                        </a>
                        {"        "}
                        <span className="n">help</span>
                        <span className="o">=</span>
                        <span className="s2">"Use `paused` instead."</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-586">
                        <a href="#Flow-586">
                            <span className="linenos"> 586</span>
                        </a>
                        {"    "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-587">
                        <a href="#Flow-587">
                            <span className="linenos"> 587</span>
                        </a>
                        {"    "}
                        <span className="k">async</span> <span className="k">def</span>{" "}
                        <span className="nf">to_deployment</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-588">
                        <a href="#Flow-588">
                            <span className="linenos"> 588</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-589">
                        <a href="#Flow-589">
                            <span className="linenos"> 589</span>
                        </a>
                        {"        "}
                        <span className="n">name</span>
                        <span className="p">:</span> <span className="nb">str</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-590">
                        <a href="#Flow-590">
                            <span className="linenos"> 590</span>
                        </a>
                        {"        "}
                        <span className="n">interval</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Flow-591">
                        <a href="#Flow-591">
                            <span className="linenos"> 591</span>
                        </a>
                        {"            "}
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Flow-592">
                        <a href="#Flow-592">
                            <span className="linenos"> 592</span>
                        </a>
                        {"                "}
                        <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">,</span> <span className="nb">float</span>
                        <span className="p">,</span> <span className="n">datetime</span>
                        <span className="o">.</span>
                        <span className="n">timedelta</span>
                        <span className="p">]],</span>
                        {"\n"}
                    </span>
                    <span id="Flow-593">
                        <a href="#Flow-593">
                            <span className="linenos"> 593</span>
                        </a>
                        {"                "}
                        <span className="nb">int</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-594">
                        <a href="#Flow-594">
                            <span className="linenos"> 594</span>
                        </a>
                        {"                "}
                        <span className="nb">float</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-595">
                        <a href="#Flow-595">
                            <span className="linenos"> 595</span>
                        </a>
                        {"                "}
                        <span className="n">datetime</span>
                        <span className="o">.</span>
                        <span className="n">timedelta</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-596">
                        <a href="#Flow-596">
                            <span className="linenos"> 596</span>
                        </a>
                        {"            "}
                        <span className="p">]</span>
                        {"\n"}
                    </span>
                    <span id="Flow-597">
                        <a href="#Flow-597">
                            <span className="linenos"> 597</span>
                        </a>
                        {"        "}
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-598">
                        <a href="#Flow-598">
                            <span className="linenos"> 598</span>
                        </a>
                        {"        "}
                        <span className="n">cron</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">],</span> <span className="nb">str</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-599">
                        <a href="#Flow-599">
                            <span className="linenos"> 599</span>
                        </a>
                        {"        "}
                        <span className="n">rrule</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">],</span> <span className="nb">str</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-600">
                        <a href="#Flow-600">
                            <span className="linenos"> 600</span>
                        </a>
                        {"        "}
                        <span className="n">paused</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-601">
                        <a href="#Flow-601">
                            <span className="linenos"> 601</span>
                        </a>
                        {"        "}
                        <span className="n">schedules</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="s2">"FlexibleScheduleList"</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-602">
                        <a href="#Flow-602">
                            <span className="linenos"> 602</span>
                        </a>
                        {"        "}
                        <span className="n">schedule</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">SCHEDULE_TYPES</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-603">
                        <a href="#Flow-603">
                            <span className="linenos"> 603</span>
                        </a>
                        {"        "}
                        <span className="n">is_schedule_active</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-604">
                        <a href="#Flow-604">
                            <span className="linenos"> 604</span>
                        </a>
                        {"        "}
                        <span className="n">parameters</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">dict</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-605">
                        <a href="#Flow-605">
                            <span className="linenos"> 605</span>
                        </a>
                        {"        "}
                        <span className="n">triggers</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">DeploymentTriggerTypes</span>
                        <span className="p">,</span> <span className="n">TriggerTypes</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-606">
                        <a href="#Flow-606">
                            <span className="linenos"> 606</span>
                        </a>
                        {"        "}
                        <span className="n">description</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-607">
                        <a href="#Flow-607">
                            <span className="linenos"> 607</span>
                        </a>
                        {"        "}
                        <span className="n">tags</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-608">
                        <a href="#Flow-608">
                            <span className="linenos"> 608</span>
                        </a>
                        {"        "}
                        <span className="n">version</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-609">
                        <a href="#Flow-609">
                            <span className="linenos"> 609</span>
                        </a>
                        {"        "}
                        <span className="n">enforce_parameter_schema</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-610">
                        <a href="#Flow-610">
                            <span className="linenos"> 610</span>
                        </a>
                        {"        "}
                        <span className="n">work_pool_name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-611">
                        <a href="#Flow-611">
                            <span className="linenos"> 611</span>
                        </a>
                        {"        "}
                        <span className="n">work_queue_name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-612">
                        <a href="#Flow-612">
                            <span className="linenos"> 612</span>
                        </a>
                        {"        "}
                        <span className="n">job_variables</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Dict</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">Any</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-613">
                        <a href="#Flow-613">
                            <span className="linenos"> 613</span>
                        </a>
                        {"        "}
                        <span className="n">entrypoint_type</span>
                        <span className="p">:</span>{" "}
                        <span className="n">EntrypointType</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">EntrypointType</span>
                        <span className="o">.</span>
                        <span className="n">FILE_PATH</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-614">
                        <a href="#Flow-614">
                            <span className="linenos"> 614</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="s2">"RunnerDeployment"</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-615">
                        <a href="#Flow-615">
                            <span className="linenos"> 615</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-616">
                        <a href="#Flow-616">
                            <span className="linenos"> 616</span>
                        </a>
                        <span className="sd">
                            {"        "}Creates a runner deployment object for this flow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-617">
                        <a href="#Flow-617">
                            <span className="linenos"> 617</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-618">
                        <a href="#Flow-618">
                            <span className="linenos"> 618</span>
                        </a>
                        <span className="sd">{"        "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-619">
                        <a href="#Flow-619">
                            <span className="linenos"> 619</span>
                        </a>
                        <span className="sd">
                            {"            "}name: The name to give the created deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-620">
                        <a href="#Flow-620">
                            <span className="linenos"> 620</span>
                        </a>
                        <span className="sd">
                            {"            "}interval: An interval on which to execute the new
                            deployment. Accepts either a number
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-621">
                        <a href="#Flow-621">
                            <span className="linenos"> 621</span>
                        </a>
                        <span className="sd">
                            {"                "}or a timedelta object. If a number is given,
                            it will be interpreted as seconds.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-622">
                        <a href="#Flow-622">
                            <span className="linenos"> 622</span>
                        </a>
                        <span className="sd">
                            {"            "}cron: A cron schedule of when to execute runs of
                            this deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-623">
                        <a href="#Flow-623">
                            <span className="linenos"> 623</span>
                        </a>
                        <span className="sd">
                            {"            "}rrule: An rrule schedule of when to execute runs
                            of this deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-624">
                        <a href="#Flow-624">
                            <span className="linenos"> 624</span>
                        </a>
                        <span className="sd">
                            {"            "}paused: Whether or not to set this deployment as
                            paused.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-625">
                        <a href="#Flow-625">
                            <span className="linenos"> 625</span>
                        </a>
                        <span className="sd">
                            {"            "}schedules: A list of schedule objects defining
                            when to execute runs of this deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-626">
                        <a href="#Flow-626">
                            <span className="linenos"> 626</span>
                        </a>
                        <span className="sd">
                            {"                "}Used to define multiple schedules or
                            additional scheduling options such as `timezone`.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-627">
                        <a href="#Flow-627">
                            <span className="linenos"> 627</span>
                        </a>
                        <span className="sd">
                            {"            "}schedule: A schedule object defining when to
                            execute runs of this deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-628">
                        <a href="#Flow-628">
                            <span className="linenos"> 628</span>
                        </a>
                        <span className="sd">
                            {"            "}is_schedule_active: Whether or not to set the
                            schedule for this deployment as active. If
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-629">
                        <a href="#Flow-629">
                            <span className="linenos"> 629</span>
                        </a>
                        <span className="sd">
                            {"                "}not provided when creating a deployment, the
                            schedule will be set as active. If not
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-630">
                        <a href="#Flow-630">
                            <span className="linenos"> 630</span>
                        </a>
                        <span className="sd">
                            {"                "}provided when updating a deployment, the
                            schedule's activation will not be changed.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-631">
                        <a href="#Flow-631">
                            <span className="linenos"> 631</span>
                        </a>
                        <span className="sd">
                            {"            "}parameters: A dictionary of default parameter
                            values to pass to runs of this deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-632">
                        <a href="#Flow-632">
                            <span className="linenos"> 632</span>
                        </a>
                        <span className="sd">
                            {"            "}triggers: A list of triggers that will kick off
                            runs of this deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-633">
                        <a href="#Flow-633">
                            <span className="linenos"> 633</span>
                        </a>
                        <span className="sd">
                            {"            "}description: A description for the created
                            deployment. Defaults to the flow's
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-634">
                        <a href="#Flow-634">
                            <span className="linenos"> 634</span>
                        </a>
                        <span className="sd">
                            {"                "}description if not provided.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-635">
                        <a href="#Flow-635">
                            <span className="linenos"> 635</span>
                        </a>
                        <span className="sd">
                            {"            "}tags: A list of tags to associate with the created
                            deployment for organizational
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-636">
                        <a href="#Flow-636">
                            <span className="linenos"> 636</span>
                        </a>
                        <span className="sd">{"                "}purposes.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-637">
                        <a href="#Flow-637">
                            <span className="linenos"> 637</span>
                        </a>
                        <span className="sd">
                            {"            "}version: A version for the created deployment.
                            Defaults to the flow's version.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-638">
                        <a href="#Flow-638">
                            <span className="linenos"> 638</span>
                        </a>
                        <span className="sd">
                            {"            "}enforce_parameter_schema: Whether or not the
                            Prefect API should enforce the
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-639">
                        <a href="#Flow-639">
                            <span className="linenos"> 639</span>
                        </a>
                        <span className="sd">
                            {"                "}parameter schema for the created deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-640">
                        <a href="#Flow-640">
                            <span className="linenos"> 640</span>
                        </a>
                        <span className="sd">
                            {"            "}work_pool_name: The name of the work pool to use
                            for this deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-641">
                        <a href="#Flow-641">
                            <span className="linenos"> 641</span>
                        </a>
                        <span className="sd">
                            {"            "}work_queue_name: The name of the work queue to use
                            for this deployment's scheduled runs.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-642">
                        <a href="#Flow-642">
                            <span className="linenos"> 642</span>
                        </a>
                        <span className="sd">
                            {"                "}If not provided the default work queue for the
                            work pool will be used.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-643">
                        <a href="#Flow-643">
                            <span className="linenos"> 643</span>
                        </a>
                        <span className="sd">
                            {"            "}job_variables: Settings used to override the
                            values specified default base job template
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-644">
                        <a href="#Flow-644">
                            <span className="linenos"> 644</span>
                        </a>
                        <span className="sd">
                            {"                "}of the chosen work pool. Refer to the base job
                            template of the chosen work pool for
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-645">
                        <a href="#Flow-645">
                            <span className="linenos"> 645</span>
                        </a>
                        <span className="sd">
                            {"            "}entrypoint_type: Type of entrypoint to use for the
                            deployment. When using a module path
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-646">
                        <a href="#Flow-646">
                            <span className="linenos"> 646</span>
                        </a>
                        <span className="sd">
                            {"                "}entrypoint, ensure that the module will be
                            importable in the execution environment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-647">
                        <a href="#Flow-647">
                            <span className="linenos"> 647</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-648">
                        <a href="#Flow-648">
                            <span className="linenos"> 648</span>
                        </a>
                        <span className="sd">{"        "}Examples:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-649">
                        <a href="#Flow-649">
                            <span className="linenos"> 649</span>
                        </a>
                        <span className="sd">
                            {"            "}Prepare two deployments and serve them:
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-650">
                        <a href="#Flow-650">
                            <span className="linenos"> 650</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-651">
                        <a href="#Flow-651">
                            <span className="linenos"> 651</span>
                        </a>
                        <span className="sd">{"            "}```python</span>
                        {"\n"}
                    </span>
                    <span id="Flow-652">
                        <a href="#Flow-652">
                            <span className="linenos"> 652</span>
                        </a>
                        <span className="sd">
                            {"            "}from prefect import flow, serve
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-653">
                        <a href="#Flow-653">
                            <span className="linenos"> 653</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-654">
                        <a href="#Flow-654">
                            <span className="linenos"> 654</span>
                        </a>
                        <span className="sd">{"            "}@flow</span>
                        {"\n"}
                    </span>
                    <span id="Flow-655">
                        <a href="#Flow-655">
                            <span className="linenos"> 655</span>
                        </a>
                        <span className="sd">{"            "}def my_flow(name):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-656">
                        <a href="#Flow-656">
                            <span className="linenos"> 656</span>
                        </a>
                        <span className="sd">
                            {"                "}print(f"hello {"{"}name{"}"}")
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-657">
                        <a href="#Flow-657">
                            <span className="linenos"> 657</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-658">
                        <a href="#Flow-658">
                            <span className="linenos"> 658</span>
                        </a>
                        <span className="sd">{"            "}@flow</span>
                        {"\n"}
                    </span>
                    <span id="Flow-659">
                        <a href="#Flow-659">
                            <span className="linenos"> 659</span>
                        </a>
                        <span className="sd">{"            "}def my_other_flow(name):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-660">
                        <a href="#Flow-660">
                            <span className="linenos"> 660</span>
                        </a>
                        <span className="sd">
                            {"                "}print(f"goodbye {"{"}name{"}"}")
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-661">
                        <a href="#Flow-661">
                            <span className="linenos"> 661</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-662">
                        <a href="#Flow-662">
                            <span className="linenos"> 662</span>
                        </a>
                        <span className="sd">
                            {"            "}if __name__ == "__main__":
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-663">
                        <a href="#Flow-663">
                            <span className="linenos"> 663</span>
                        </a>
                        <span className="sd">
                            {"                "}hello_deploy = my_flow.to_deployment("hello",
                            tags=["dev"])
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-664">
                        <a href="#Flow-664">
                            <span className="linenos"> 664</span>
                        </a>
                        <span className="sd">
                            {"                "}bye_deploy =
                            my_other_flow.to_deployment("goodbye", tags=["dev"])
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-665">
                        <a href="#Flow-665">
                            <span className="linenos"> 665</span>
                        </a>
                        <span className="sd">
                            {"                "}serve(hello_deploy, bye_deploy)
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-666">
                        <a href="#Flow-666">
                            <span className="linenos"> 666</span>
                        </a>
                        <span className="sd">{"            "}```</span>
                        {"\n"}
                    </span>
                    <span id="Flow-667">
                        <a href="#Flow-667">
                            <span className="linenos"> 667</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-668">
                        <a href="#Flow-668">
                            <span className="linenos"> 668</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.deployments.runner</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">RunnerDeployment</span>
                        {"\n"}
                    </span>
                    <span id="Flow-669">
                        <a href="#Flow-669">
                            <span className="linenos"> 669</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-670">
                        <a href="#Flow-670">
                            <span className="linenos"> 670</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">name</span>
                        <span className="o">.</span>
                        <span className="n">endswith</span>
                        <span className="p">(</span>
                        <span className="s2">".py"</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-671">
                        <a href="#Flow-671">
                            <span className="linenos"> 671</span>
                        </a>
                        {"            "}
                        <span className="n">raise_on_name_with_banned_characters</span>
                        <span className="p">(</span>
                        <span className="n">name</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-672">
                        <a href="#Flow-672">
                            <span className="linenos"> 672</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">
                            _storage
                        </span> <span className="ow">and</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">_entrypoint</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-673">
                        <a href="#Flow-673">
                            <span className="linenos"> 673</span>
                        </a>
                        {"            "}
                        <span className="k">
                            return
                        </span> <span className="k">await</span>{" "}
                        <span className="n">RunnerDeployment</span>
                        <span className="o">.</span>
                        <span className="n">from_storage</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-674">
                        <a href="#Flow-674">
                            <span className="linenos"> 674</span>
                        </a>
                        {"                "}
                        <span className="n">storage</span>
                        <span className="o">=</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">_storage</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-675">
                        <a href="#Flow-675">
                            <span className="linenos"> 675</span>
                        </a>
                        {"                "}
                        <span className="n">entrypoint</span>
                        <span className="o">=</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">_entrypoint</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-676">
                        <a href="#Flow-676">
                            <span className="linenos"> 676</span>
                        </a>
                        {"                "}
                        <span className="n">name</span>
                        <span className="o">=</span>
                        <span className="n">name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-677">
                        <a href="#Flow-677">
                            <span className="linenos"> 677</span>
                        </a>
                        {"                "}
                        <span className="n">interval</span>
                        <span className="o">=</span>
                        <span className="n">interval</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-678">
                        <a href="#Flow-678">
                            <span className="linenos"> 678</span>
                        </a>
                        {"                "}
                        <span className="n">cron</span>
                        <span className="o">=</span>
                        <span className="n">cron</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-679">
                        <a href="#Flow-679">
                            <span className="linenos"> 679</span>
                        </a>
                        {"                "}
                        <span className="n">rrule</span>
                        <span className="o">=</span>
                        <span className="n">rrule</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-680">
                        <a href="#Flow-680">
                            <span className="linenos"> 680</span>
                        </a>
                        {"                "}
                        <span className="n">paused</span>
                        <span className="o">=</span>
                        <span className="n">paused</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-681">
                        <a href="#Flow-681">
                            <span className="linenos"> 681</span>
                        </a>
                        {"                "}
                        <span className="n">schedules</span>
                        <span className="o">=</span>
                        <span className="n">schedules</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-682">
                        <a href="#Flow-682">
                            <span className="linenos"> 682</span>
                        </a>
                        {"                "}
                        <span className="n">schedule</span>
                        <span className="o">=</span>
                        <span className="n">schedule</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-683">
                        <a href="#Flow-683">
                            <span className="linenos"> 683</span>
                        </a>
                        {"                "}
                        <span className="n">is_schedule_active</span>
                        <span className="o">=</span>
                        <span className="n">is_schedule_active</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-684">
                        <a href="#Flow-684">
                            <span className="linenos"> 684</span>
                        </a>
                        {"                "}
                        <span className="n">tags</span>
                        <span className="o">=</span>
                        <span className="n">tags</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-685">
                        <a href="#Flow-685">
                            <span className="linenos"> 685</span>
                        </a>
                        {"                "}
                        <span className="n">triggers</span>
                        <span className="o">=</span>
                        <span className="n">triggers</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-686">
                        <a href="#Flow-686">
                            <span className="linenos"> 686</span>
                        </a>
                        {"                "}
                        <span className="n">parameters</span>
                        <span className="o">=</span>
                        <span className="n">
                            parameters
                        </span> <span className="ow">or</span>{" "}
                        <span className="p">
                            {"{"}
                            {"}"},
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-687">
                        <a href="#Flow-687">
                            <span className="linenos"> 687</span>
                        </a>
                        {"                "}
                        <span className="n">description</span>
                        <span className="o">=</span>
                        <span className="n">description</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-688">
                        <a href="#Flow-688">
                            <span className="linenos"> 688</span>
                        </a>
                        {"                "}
                        <span className="n">version</span>
                        <span className="o">=</span>
                        <span className="n">version</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-689">
                        <a href="#Flow-689">
                            <span className="linenos"> 689</span>
                        </a>
                        {"                "}
                        <span className="n">enforce_parameter_schema</span>
                        <span className="o">=</span>
                        <span className="n">enforce_parameter_schema</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-690">
                        <a href="#Flow-690">
                            <span className="linenos"> 690</span>
                        </a>
                        {"                "}
                        <span className="n">work_pool_name</span>
                        <span className="o">=</span>
                        <span className="n">work_pool_name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-691">
                        <a href="#Flow-691">
                            <span className="linenos"> 691</span>
                        </a>
                        {"                "}
                        <span className="n">work_queue_name</span>
                        <span className="o">=</span>
                        <span className="n">work_queue_name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-692">
                        <a href="#Flow-692">
                            <span className="linenos"> 692</span>
                        </a>
                        {"                "}
                        <span className="n">job_variables</span>
                        <span className="o">=</span>
                        <span className="n">job_variables</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-693">
                        <a href="#Flow-693">
                            <span className="linenos"> 693</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-694">
                        <a href="#Flow-694">
                            <span className="linenos"> 694</span>
                        </a>
                        {"        "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-695">
                        <a href="#Flow-695">
                            <span className="linenos"> 695</span>
                        </a>
                        {"            "}
                        <span className="k">return</span>{" "}
                        <span className="n">RunnerDeployment</span>
                        <span className="o">.</span>
                        <span className="n">from_flow</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-696">
                        <a href="#Flow-696">
                            <span className="linenos"> 696</span>
                        </a>
                        {"                "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-697">
                        <a href="#Flow-697">
                            <span className="linenos"> 697</span>
                        </a>
                        {"                "}
                        <span className="n">name</span>
                        <span className="o">=</span>
                        <span className="n">name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-698">
                        <a href="#Flow-698">
                            <span className="linenos"> 698</span>
                        </a>
                        {"                "}
                        <span className="n">interval</span>
                        <span className="o">=</span>
                        <span className="n">interval</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-699">
                        <a href="#Flow-699">
                            <span className="linenos"> 699</span>
                        </a>
                        {"                "}
                        <span className="n">cron</span>
                        <span className="o">=</span>
                        <span className="n">cron</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-700">
                        <a href="#Flow-700">
                            <span className="linenos"> 700</span>
                        </a>
                        {"                "}
                        <span className="n">rrule</span>
                        <span className="o">=</span>
                        <span className="n">rrule</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-701">
                        <a href="#Flow-701">
                            <span className="linenos"> 701</span>
                        </a>
                        {"                "}
                        <span className="n">paused</span>
                        <span className="o">=</span>
                        <span className="n">paused</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-702">
                        <a href="#Flow-702">
                            <span className="linenos"> 702</span>
                        </a>
                        {"                "}
                        <span className="n">schedules</span>
                        <span className="o">=</span>
                        <span className="n">schedules</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-703">
                        <a href="#Flow-703">
                            <span className="linenos"> 703</span>
                        </a>
                        {"                "}
                        <span className="n">schedule</span>
                        <span className="o">=</span>
                        <span className="n">schedule</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-704">
                        <a href="#Flow-704">
                            <span className="linenos"> 704</span>
                        </a>
                        {"                "}
                        <span className="n">is_schedule_active</span>
                        <span className="o">=</span>
                        <span className="n">is_schedule_active</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-705">
                        <a href="#Flow-705">
                            <span className="linenos"> 705</span>
                        </a>
                        {"                "}
                        <span className="n">tags</span>
                        <span className="o">=</span>
                        <span className="n">tags</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-706">
                        <a href="#Flow-706">
                            <span className="linenos"> 706</span>
                        </a>
                        {"                "}
                        <span className="n">triggers</span>
                        <span className="o">=</span>
                        <span className="n">triggers</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-707">
                        <a href="#Flow-707">
                            <span className="linenos"> 707</span>
                        </a>
                        {"                "}
                        <span className="n">parameters</span>
                        <span className="o">=</span>
                        <span className="n">
                            parameters
                        </span> <span className="ow">or</span>{" "}
                        <span className="p">
                            {"{"}
                            {"}"},
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-708">
                        <a href="#Flow-708">
                            <span className="linenos"> 708</span>
                        </a>
                        {"                "}
                        <span className="n">description</span>
                        <span className="o">=</span>
                        <span className="n">description</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-709">
                        <a href="#Flow-709">
                            <span className="linenos"> 709</span>
                        </a>
                        {"                "}
                        <span className="n">version</span>
                        <span className="o">=</span>
                        <span className="n">version</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-710">
                        <a href="#Flow-710">
                            <span className="linenos"> 710</span>
                        </a>
                        {"                "}
                        <span className="n">enforce_parameter_schema</span>
                        <span className="o">=</span>
                        <span className="n">enforce_parameter_schema</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-711">
                        <a href="#Flow-711">
                            <span className="linenos"> 711</span>
                        </a>
                        {"                "}
                        <span className="n">work_pool_name</span>
                        <span className="o">=</span>
                        <span className="n">work_pool_name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-712">
                        <a href="#Flow-712">
                            <span className="linenos"> 712</span>
                        </a>
                        {"                "}
                        <span className="n">work_queue_name</span>
                        <span className="o">=</span>
                        <span className="n">work_queue_name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-713">
                        <a href="#Flow-713">
                            <span className="linenos"> 713</span>
                        </a>
                        {"                "}
                        <span className="n">job_variables</span>
                        <span className="o">=</span>
                        <span className="n">job_variables</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-714">
                        <a href="#Flow-714">
                            <span className="linenos"> 714</span>
                        </a>
                        {"                "}
                        <span className="n">entrypoint_type</span>
                        <span className="o">=</span>
                        <span className="n">entrypoint_type</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-715">
                        <a href="#Flow-715">
                            <span className="linenos"> 715</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-716">
                        <a href="#Flow-716">
                            <span className="linenos"> 716</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-717">
                        <a href="#Flow-717">
                            <span className="linenos"> 717</span>
                        </a>
                        {"    "}
                        <span className="nd">@sync_compatible</span>
                        {"\n"}
                    </span>
                    <span id="Flow-718">
                        <a href="#Flow-718">
                            <span className="linenos"> 718</span>
                        </a>
                        {"    "}
                        <span className="k">async</span> <span className="k">def</span>{" "}
                        <span className="nf">serve</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-719">
                        <a href="#Flow-719">
                            <span className="linenos"> 719</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-720">
                        <a href="#Flow-720">
                            <span className="linenos"> 720</span>
                        </a>
                        {"        "}
                        <span className="n">name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-721">
                        <a href="#Flow-721">
                            <span className="linenos"> 721</span>
                        </a>
                        {"        "}
                        <span className="n">interval</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Flow-722">
                        <a href="#Flow-722">
                            <span className="linenos"> 722</span>
                        </a>
                        {"            "}
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Flow-723">
                        <a href="#Flow-723">
                            <span className="linenos"> 723</span>
                        </a>
                        {"                "}
                        <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">,</span> <span className="nb">float</span>
                        <span className="p">,</span> <span className="n">datetime</span>
                        <span className="o">.</span>
                        <span className="n">timedelta</span>
                        <span className="p">]],</span>
                        {"\n"}
                    </span>
                    <span id="Flow-724">
                        <a href="#Flow-724">
                            <span className="linenos"> 724</span>
                        </a>
                        {"                "}
                        <span className="nb">int</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-725">
                        <a href="#Flow-725">
                            <span className="linenos"> 725</span>
                        </a>
                        {"                "}
                        <span className="nb">float</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-726">
                        <a href="#Flow-726">
                            <span className="linenos"> 726</span>
                        </a>
                        {"                "}
                        <span className="n">datetime</span>
                        <span className="o">.</span>
                        <span className="n">timedelta</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-727">
                        <a href="#Flow-727">
                            <span className="linenos"> 727</span>
                        </a>
                        {"            "}
                        <span className="p">]</span>
                        {"\n"}
                    </span>
                    <span id="Flow-728">
                        <a href="#Flow-728">
                            <span className="linenos"> 728</span>
                        </a>
                        {"        "}
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-729">
                        <a href="#Flow-729">
                            <span className="linenos"> 729</span>
                        </a>
                        {"        "}
                        <span className="n">cron</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">],</span> <span className="nb">str</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-730">
                        <a href="#Flow-730">
                            <span className="linenos"> 730</span>
                        </a>
                        {"        "}
                        <span className="n">rrule</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">],</span> <span className="nb">str</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-731">
                        <a href="#Flow-731">
                            <span className="linenos"> 731</span>
                        </a>
                        {"        "}
                        <span className="n">paused</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-732">
                        <a href="#Flow-732">
                            <span className="linenos"> 732</span>
                        </a>
                        {"        "}
                        <span className="n">schedules</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="s2">"FlexibleScheduleList"</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-733">
                        <a href="#Flow-733">
                            <span className="linenos"> 733</span>
                        </a>
                        {"        "}
                        <span className="n">schedule</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">SCHEDULE_TYPES</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-734">
                        <a href="#Flow-734">
                            <span className="linenos"> 734</span>
                        </a>
                        {"        "}
                        <span className="n">is_schedule_active</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-735">
                        <a href="#Flow-735">
                            <span className="linenos"> 735</span>
                        </a>
                        {"        "}
                        <span className="n">triggers</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">DeploymentTriggerTypes</span>
                        <span className="p">,</span> <span className="n">TriggerTypes</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-736">
                        <a href="#Flow-736">
                            <span className="linenos"> 736</span>
                        </a>
                        {"        "}
                        <span className="n">parameters</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">dict</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-737">
                        <a href="#Flow-737">
                            <span className="linenos"> 737</span>
                        </a>
                        {"        "}
                        <span className="n">description</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-738">
                        <a href="#Flow-738">
                            <span className="linenos"> 738</span>
                        </a>
                        {"        "}
                        <span className="n">tags</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-739">
                        <a href="#Flow-739">
                            <span className="linenos"> 739</span>
                        </a>
                        {"        "}
                        <span className="n">version</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-740">
                        <a href="#Flow-740">
                            <span className="linenos"> 740</span>
                        </a>
                        {"        "}
                        <span className="n">enforce_parameter_schema</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-741">
                        <a href="#Flow-741">
                            <span className="linenos"> 741</span>
                        </a>
                        {"        "}
                        <span className="n">pause_on_shutdown</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-742">
                        <a href="#Flow-742">
                            <span className="linenos"> 742</span>
                        </a>
                        {"        "}
                        <span className="n">print_starting_message</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-743">
                        <a href="#Flow-743">
                            <span className="linenos"> 743</span>
                        </a>
                        {"        "}
                        <span className="n">limit</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-744">
                        <a href="#Flow-744">
                            <span className="linenos"> 744</span>
                        </a>
                        {"        "}
                        <span className="n">webserver</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-745">
                        <a href="#Flow-745">
                            <span className="linenos"> 745</span>
                        </a>
                        {"        "}
                        <span className="n">entrypoint_type</span>
                        <span className="p">:</span>{" "}
                        <span className="n">EntrypointType</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">EntrypointType</span>
                        <span className="o">.</span>
                        <span className="n">FILE_PATH</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-746">
                        <a href="#Flow-746">
                            <span className="linenos"> 746</span>
                        </a>
                        {"    "}
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-747">
                        <a href="#Flow-747">
                            <span className="linenos"> 747</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-748">
                        <a href="#Flow-748">
                            <span className="linenos"> 748</span>
                        </a>
                        <span className="sd">
                            {"        "}Creates a deployment for this flow and starts a runner
                            to monitor for scheduled work.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-749">
                        <a href="#Flow-749">
                            <span className="linenos"> 749</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-750">
                        <a href="#Flow-750">
                            <span className="linenos"> 750</span>
                        </a>
                        <span className="sd">{"        "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-751">
                        <a href="#Flow-751">
                            <span className="linenos"> 751</span>
                        </a>
                        <span className="sd">
                            {"            "}name: The name to give the created deployment.
                            Defaults to the name of the flow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-752">
                        <a href="#Flow-752">
                            <span className="linenos"> 752</span>
                        </a>
                        <span className="sd">
                            {"            "}interval: An interval on which to execute the
                            deployment. Accepts a number or a
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-753">
                        <a href="#Flow-753">
                            <span className="linenos"> 753</span>
                        </a>
                        <span className="sd">
                            {"                "}timedelta object to create a single schedule.
                            If a number is given, it will be
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-754">
                        <a href="#Flow-754">
                            <span className="linenos"> 754</span>
                        </a>
                        <span className="sd">
                            {"                "}interpreted as seconds. Also accepts an
                            iterable of numbers or timedelta to create
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-755">
                        <a href="#Flow-755">
                            <span className="linenos"> 755</span>
                        </a>
                        <span className="sd">{"                "}multiple schedules.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-756">
                        <a href="#Flow-756">
                            <span className="linenos"> 756</span>
                        </a>
                        <span className="sd">
                            {"            "}cron: A cron schedule string of when to execute
                            runs of this deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-757">
                        <a href="#Flow-757">
                            <span className="linenos"> 757</span>
                        </a>
                        <span className="sd">
                            {"                "}Also accepts an iterable of cron schedule
                            strings to create multiple schedules.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-758">
                        <a href="#Flow-758">
                            <span className="linenos"> 758</span>
                        </a>
                        <span className="sd">
                            {"            "}rrule: An rrule schedule string of when to execute
                            runs of this deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-759">
                        <a href="#Flow-759">
                            <span className="linenos"> 759</span>
                        </a>
                        <span className="sd">
                            {"                "}Also accepts an iterable of rrule schedule
                            strings to create multiple schedules.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-760">
                        <a href="#Flow-760">
                            <span className="linenos"> 760</span>
                        </a>
                        <span className="sd">
                            {"            "}triggers: A list of triggers that will kick off
                            runs of this deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-761">
                        <a href="#Flow-761">
                            <span className="linenos"> 761</span>
                        </a>
                        <span className="sd">
                            {"            "}paused: Whether or not to set this deployment as
                            paused.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-762">
                        <a href="#Flow-762">
                            <span className="linenos"> 762</span>
                        </a>
                        <span className="sd">
                            {"            "}schedules: A list of schedule objects defining
                            when to execute runs of this deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-763">
                        <a href="#Flow-763">
                            <span className="linenos"> 763</span>
                        </a>
                        <span className="sd">
                            {"                "}Used to define multiple schedules or
                            additional scheduling options like `timezone`.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-764">
                        <a href="#Flow-764">
                            <span className="linenos"> 764</span>
                        </a>
                        <span className="sd">
                            {"            "}schedule: A schedule object defining when to
                            execute runs of this deployment. Used to
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-765">
                        <a href="#Flow-765">
                            <span className="linenos"> 765</span>
                        </a>
                        <span className="sd">
                            {"                "}define additional scheduling options such as
                            `timezone`.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-766">
                        <a href="#Flow-766">
                            <span className="linenos"> 766</span>
                        </a>
                        <span className="sd">
                            {"            "}is_schedule_active: Whether or not to set the
                            schedule for this deployment as active. If
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-767">
                        <a href="#Flow-767">
                            <span className="linenos"> 767</span>
                        </a>
                        <span className="sd">
                            {"                "}not provided when creating a deployment, the
                            schedule will be set as active. If not
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-768">
                        <a href="#Flow-768">
                            <span className="linenos"> 768</span>
                        </a>
                        <span className="sd">
                            {"                "}provided when updating a deployment, the
                            schedule's activation will not be changed.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-769">
                        <a href="#Flow-769">
                            <span className="linenos"> 769</span>
                        </a>
                        <span className="sd">
                            {"            "}parameters: A dictionary of default parameter
                            values to pass to runs of this deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-770">
                        <a href="#Flow-770">
                            <span className="linenos"> 770</span>
                        </a>
                        <span className="sd">
                            {"            "}description: A description for the created
                            deployment. Defaults to the flow's
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-771">
                        <a href="#Flow-771">
                            <span className="linenos"> 771</span>
                        </a>
                        <span className="sd">
                            {"                "}description if not provided.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-772">
                        <a href="#Flow-772">
                            <span className="linenos"> 772</span>
                        </a>
                        <span className="sd">
                            {"            "}tags: A list of tags to associate with the created
                            deployment for organizational
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-773">
                        <a href="#Flow-773">
                            <span className="linenos"> 773</span>
                        </a>
                        <span className="sd">{"                "}purposes.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-774">
                        <a href="#Flow-774">
                            <span className="linenos"> 774</span>
                        </a>
                        <span className="sd">
                            {"            "}version: A version for the created deployment.
                            Defaults to the flow's version.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-775">
                        <a href="#Flow-775">
                            <span className="linenos"> 775</span>
                        </a>
                        <span className="sd">
                            {"            "}enforce_parameter_schema: Whether or not the
                            Prefect API should enforce the
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-776">
                        <a href="#Flow-776">
                            <span className="linenos"> 776</span>
                        </a>
                        <span className="sd">
                            {"                "}parameter schema for the created deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-777">
                        <a href="#Flow-777">
                            <span className="linenos"> 777</span>
                        </a>
                        <span className="sd">
                            {"            "}pause_on_shutdown: If True, provided schedule will
                            be paused when the serve function is stopped.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-778">
                        <a href="#Flow-778">
                            <span className="linenos"> 778</span>
                        </a>
                        <span className="sd">
                            {"                "}If False, the schedules will continue running.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-779">
                        <a href="#Flow-779">
                            <span className="linenos"> 779</span>
                        </a>
                        <span className="sd">
                            {"            "}print_starting_message: Whether or not to print
                            the starting message when flow is served.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-780">
                        <a href="#Flow-780">
                            <span className="linenos"> 780</span>
                        </a>
                        <span className="sd">
                            {"            "}limit: The maximum number of runs that can be
                            executed concurrently.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-781">
                        <a href="#Flow-781">
                            <span className="linenos"> 781</span>
                        </a>
                        <span className="sd">
                            {"            "}webserver: Whether or not to start a monitoring
                            webserver for this flow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-782">
                        <a href="#Flow-782">
                            <span className="linenos"> 782</span>
                        </a>
                        <span className="sd">
                            {"            "}entrypoint_type: Type of entrypoint to use for the
                            deployment. When using a module path
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-783">
                        <a href="#Flow-783">
                            <span className="linenos"> 783</span>
                        </a>
                        <span className="sd">
                            {"                "}entrypoint, ensure that the module will be
                            importable in the execution environment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-784">
                        <a href="#Flow-784">
                            <span className="linenos"> 784</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-785">
                        <a href="#Flow-785">
                            <span className="linenos"> 785</span>
                        </a>
                        <span className="sd">{"        "}Examples:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-786">
                        <a href="#Flow-786">
                            <span className="linenos"> 786</span>
                        </a>
                        <span className="sd">{"            "}Serve a flow:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-787">
                        <a href="#Flow-787">
                            <span className="linenos"> 787</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-788">
                        <a href="#Flow-788">
                            <span className="linenos"> 788</span>
                        </a>
                        <span className="sd">{"            "}```python</span>
                        {"\n"}
                    </span>
                    <span id="Flow-789">
                        <a href="#Flow-789">
                            <span className="linenos"> 789</span>
                        </a>
                        <span className="sd">{"            "}from prefect import flow</span>
                        {"\n"}
                    </span>
                    <span id="Flow-790">
                        <a href="#Flow-790">
                            <span className="linenos"> 790</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-791">
                        <a href="#Flow-791">
                            <span className="linenos"> 791</span>
                        </a>
                        <span className="sd">{"            "}@flow</span>
                        {"\n"}
                    </span>
                    <span id="Flow-792">
                        <a href="#Flow-792">
                            <span className="linenos"> 792</span>
                        </a>
                        <span className="sd">{"            "}def my_flow(name):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-793">
                        <a href="#Flow-793">
                            <span className="linenos"> 793</span>
                        </a>
                        <span className="sd">
                            {"                "}print(f"hello {"{"}name{"}"}")
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-794">
                        <a href="#Flow-794">
                            <span className="linenos"> 794</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-795">
                        <a href="#Flow-795">
                            <span className="linenos"> 795</span>
                        </a>
                        <span className="sd">
                            {"            "}if __name__ == "__main__":
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-796">
                        <a href="#Flow-796">
                            <span className="linenos"> 796</span>
                        </a>
                        <span className="sd">
                            {"                "}my_flow.serve("example-deployment")
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-797">
                        <a href="#Flow-797">
                            <span className="linenos"> 797</span>
                        </a>
                        <span className="sd">{"            "}```</span>
                        {"\n"}
                    </span>
                    <span id="Flow-798">
                        <a href="#Flow-798">
                            <span className="linenos"> 798</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-799">
                        <a href="#Flow-799">
                            <span className="linenos"> 799</span>
                        </a>
                        <span className="sd">
                            {"            "}Serve a flow and run it every hour:
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-800">
                        <a href="#Flow-800">
                            <span className="linenos"> 800</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-801">
                        <a href="#Flow-801">
                            <span className="linenos"> 801</span>
                        </a>
                        <span className="sd">{"            "}```python</span>
                        {"\n"}
                    </span>
                    <span id="Flow-802">
                        <a href="#Flow-802">
                            <span className="linenos"> 802</span>
                        </a>
                        <span className="sd">{"            "}from prefect import flow</span>
                        {"\n"}
                    </span>
                    <span id="Flow-803">
                        <a href="#Flow-803">
                            <span className="linenos"> 803</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-804">
                        <a href="#Flow-804">
                            <span className="linenos"> 804</span>
                        </a>
                        <span className="sd">{"            "}@flow</span>
                        {"\n"}
                    </span>
                    <span id="Flow-805">
                        <a href="#Flow-805">
                            <span className="linenos"> 805</span>
                        </a>
                        <span className="sd">{"            "}def my_flow(name):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-806">
                        <a href="#Flow-806">
                            <span className="linenos"> 806</span>
                        </a>
                        <span className="sd">
                            {"                "}print(f"hello {"{"}name{"}"}")
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-807">
                        <a href="#Flow-807">
                            <span className="linenos"> 807</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-808">
                        <a href="#Flow-808">
                            <span className="linenos"> 808</span>
                        </a>
                        <span className="sd">
                            {"            "}if __name__ == "__main__":
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-809">
                        <a href="#Flow-809">
                            <span className="linenos"> 809</span>
                        </a>
                        <span className="sd">
                            {"                "}my_flow.serve("example-deployment",
                            interval=3600)
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-810">
                        <a href="#Flow-810">
                            <span className="linenos"> 810</span>
                        </a>
                        <span className="sd">{"            "}```</span>
                        {"\n"}
                    </span>
                    <span id="Flow-811">
                        <a href="#Flow-811">
                            <span className="linenos"> 811</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-812">
                        <a href="#Flow-812">
                            <span className="linenos"> 812</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.runner</span>{" "}
                        <span className="kn">import</span> <span className="n">Runner</span>
                        {"\n"}
                    </span>
                    <span id="Flow-813">
                        <a href="#Flow-813">
                            <span className="linenos"> 813</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-814">
                        <a href="#Flow-814">
                            <span className="linenos"> 814</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">name</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-815">
                        <a href="#Flow-815">
                            <span className="linenos"> 815</span>
                        </a>
                        {"            "}
                        <span className="n">name</span> <span className="o">=</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        {"\n"}
                    </span>
                    <span id="Flow-816">
                        <a href="#Flow-816">
                            <span className="linenos"> 816</span>
                        </a>
                        {"        "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-817">
                        <a href="#Flow-817">
                            <span className="linenos"> 817</span>
                        </a>
                        {"            "}
                        <span className="c1"># Handling for my_flow.serve(__file__)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-818">
                        <a href="#Flow-818">
                            <span className="linenos"> 818</span>
                        </a>
                        {"            "}
                        <span className="c1">
                            # Will set name to name of file where my_flow.serve() without the
                            extension
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-819">
                        <a href="#Flow-819">
                            <span className="linenos"> 819</span>
                        </a>
                        {"            "}
                        <span className="c1">
                            # Non filepath strings will pass through unchanged
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-820">
                        <a href="#Flow-820">
                            <span className="linenos"> 820</span>
                        </a>
                        {"            "}
                        <span className="n">name</span> <span className="o">=</span>{" "}
                        <span className="n">Path</span>
                        <span className="p">(</span>
                        <span className="n">name</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="n">stem</span>
                        {"\n"}
                    </span>
                    <span id="Flow-821">
                        <a href="#Flow-821">
                            <span className="linenos"> 821</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-822">
                        <a href="#Flow-822">
                            <span className="linenos"> 822</span>
                        </a>
                        {"        "}
                        <span className="n">runner</span> <span className="o">=</span>{" "}
                        <span className="n">Runner</span>
                        <span className="p">(</span>
                        <span className="n">name</span>
                        <span className="o">=</span>
                        <span className="n">name</span>
                        <span className="p">,</span>{" "}
                        <span className="n">pause_on_shutdown</span>
                        <span className="o">=</span>
                        <span className="n">pause_on_shutdown</span>
                        <span className="p">,</span> <span className="n">limit</span>
                        <span className="o">=</span>
                        <span className="n">limit</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-823">
                        <a href="#Flow-823">
                            <span className="linenos"> 823</span>
                        </a>
                        {"        "}
                        <span className="n">deployment_id</span>{" "}
                        <span className="o">=</span> <span className="k">await</span>{" "}
                        <span className="n">runner</span>
                        <span className="o">.</span>
                        <span className="n">add_flow</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-824">
                        <a href="#Flow-824">
                            <span className="linenos"> 824</span>
                        </a>
                        {"            "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-825">
                        <a href="#Flow-825">
                            <span className="linenos"> 825</span>
                        </a>
                        {"            "}
                        <span className="n">name</span>
                        <span className="o">=</span>
                        <span className="n">name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-826">
                        <a href="#Flow-826">
                            <span className="linenos"> 826</span>
                        </a>
                        {"            "}
                        <span className="n">triggers</span>
                        <span className="o">=</span>
                        <span className="n">triggers</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-827">
                        <a href="#Flow-827">
                            <span className="linenos"> 827</span>
                        </a>
                        {"            "}
                        <span className="n">interval</span>
                        <span className="o">=</span>
                        <span className="n">interval</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-828">
                        <a href="#Flow-828">
                            <span className="linenos"> 828</span>
                        </a>
                        {"            "}
                        <span className="n">cron</span>
                        <span className="o">=</span>
                        <span className="n">cron</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-829">
                        <a href="#Flow-829">
                            <span className="linenos"> 829</span>
                        </a>
                        {"            "}
                        <span className="n">rrule</span>
                        <span className="o">=</span>
                        <span className="n">rrule</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-830">
                        <a href="#Flow-830">
                            <span className="linenos"> 830</span>
                        </a>
                        {"            "}
                        <span className="n">paused</span>
                        <span className="o">=</span>
                        <span className="n">paused</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-831">
                        <a href="#Flow-831">
                            <span className="linenos"> 831</span>
                        </a>
                        {"            "}
                        <span className="n">schedules</span>
                        <span className="o">=</span>
                        <span className="n">schedules</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-832">
                        <a href="#Flow-832">
                            <span className="linenos"> 832</span>
                        </a>
                        {"            "}
                        <span className="n">schedule</span>
                        <span className="o">=</span>
                        <span className="n">schedule</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-833">
                        <a href="#Flow-833">
                            <span className="linenos"> 833</span>
                        </a>
                        {"            "}
                        <span className="n">is_schedule_active</span>
                        <span className="o">=</span>
                        <span className="n">is_schedule_active</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-834">
                        <a href="#Flow-834">
                            <span className="linenos"> 834</span>
                        </a>
                        {"            "}
                        <span className="n">parameters</span>
                        <span className="o">=</span>
                        <span className="n">parameters</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-835">
                        <a href="#Flow-835">
                            <span className="linenos"> 835</span>
                        </a>
                        {"            "}
                        <span className="n">description</span>
                        <span className="o">=</span>
                        <span className="n">description</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-836">
                        <a href="#Flow-836">
                            <span className="linenos"> 836</span>
                        </a>
                        {"            "}
                        <span className="n">tags</span>
                        <span className="o">=</span>
                        <span className="n">tags</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-837">
                        <a href="#Flow-837">
                            <span className="linenos"> 837</span>
                        </a>
                        {"            "}
                        <span className="n">version</span>
                        <span className="o">=</span>
                        <span className="n">version</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-838">
                        <a href="#Flow-838">
                            <span className="linenos"> 838</span>
                        </a>
                        {"            "}
                        <span className="n">enforce_parameter_schema</span>
                        <span className="o">=</span>
                        <span className="n">enforce_parameter_schema</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-839">
                        <a href="#Flow-839">
                            <span className="linenos"> 839</span>
                        </a>
                        {"            "}
                        <span className="n">entrypoint_type</span>
                        <span className="o">=</span>
                        <span className="n">entrypoint_type</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-840">
                        <a href="#Flow-840">
                            <span className="linenos"> 840</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-841">
                        <a href="#Flow-841">
                            <span className="linenos"> 841</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">print_starting_message</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-842">
                        <a href="#Flow-842">
                            <span className="linenos"> 842</span>
                        </a>
                        {"            "}
                        <span className="n">
                            help_message
                        </span> <span className="o">=</span> <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-843">
                        <a href="#Flow-843">
                            <span className="linenos"> 843</span>
                        </a>
                        {"                "}
                        <span className="sa">f</span>
                        <span className="s2">"[green]Your flow </span>
                        <span className="si">{"{"}</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2"> is being served and polling for"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-844">
                        <a href="#Flow-844">
                            <span className="linenos"> 844</span>
                        </a>
                        {"                "}
                        <span className="s2">" scheduled runs!</span>
                        <span className="se">\n</span>
                        <span className="s2">[/]</span>
                        <span className="se">\n</span>
                        <span className="s2">To trigger a run for this flow, use the"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-845">
                        <a href="#Flow-845">
                            <span className="linenos"> 845</span>
                        </a>
                        {"                "}
                        <span className="s2">" following command:</span>
                        <span className="se">\n</span>
                        <span className="s2">[blue]</span>
                        <span className="se">\n\t</span>
                        <span className="s2">$ prefect deployment run"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-846">
                        <a href="#Flow-846">
                            <span className="linenos"> 846</span>
                        </a>
                        {"                "}
                        <span className="sa">f</span>
                        <span className="s2">" '</span>
                        <span className="si">{"{"}</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">/</span>
                        <span className="si">{"{"}</span>
                        <span className="n">name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">'</span>
                        <span className="se">\n</span>
                        <span className="s2">[/]"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-847">
                        <a href="#Flow-847">
                            <span className="linenos"> 847</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-848">
                        <a href="#Flow-848">
                            <span className="linenos"> 848</span>
                        </a>
                        {"            "}
                        <span className="k">if</span>{" "}
                        <span className="n">PREFECT_UI_URL</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-849">
                        <a href="#Flow-849">
                            <span className="linenos"> 849</span>
                        </a>
                        {"                "}
                        <span className="n">help_message</span>{" "}
                        <span className="o">+=</span> <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-850">
                        <a href="#Flow-850">
                            <span className="linenos"> 850</span>
                        </a>
                        {"                    "}
                        <span className="s2">"</span>
                        <span className="se">\n</span>
                        <span className="s2">
                            You can also run your flow via the Prefect UI:"
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-851">
                        <a href="#Flow-851">
                            <span className="linenos"> 851</span>
                        </a>
                        {"                    "}
                        <span className="sa">f</span>
                        <span className="s2">" [blue]</span>
                        <span className="si">{"{"}</span>
                        <span className="n">PREFECT_UI_URL</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">()</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">/deployments/deployment/</span>
                        <span className="si">{"{"}</span>
                        <span className="n">deployment_id</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">[/]</span>
                        <span className="se">\n</span>
                        <span className="s2">"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-852">
                        <a href="#Flow-852">
                            <span className="linenos"> 852</span>
                        </a>
                        {"                "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-853">
                        <a href="#Flow-853">
                            <span className="linenos"> 853</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-854">
                        <a href="#Flow-854">
                            <span className="linenos"> 854</span>
                        </a>
                        {"            "}
                        <span className="n">console</span> <span className="o">=</span>{" "}
                        <span className="n">Console</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Flow-855">
                        <a href="#Flow-855">
                            <span className="linenos"> 855</span>
                        </a>
                        {"            "}
                        <span className="n">console</span>
                        <span className="o">.</span>
                        <span className="n">print</span>
                        <span className="p">(</span>
                        <span className="n">help_message</span>
                        <span className="p">,</span> <span className="n">soft_wrap</span>
                        <span className="o">=</span>
                        <span className="kc">True</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-856">
                        <a href="#Flow-856">
                            <span className="linenos"> 856</span>
                        </a>
                        {"        "}
                        <span className="k">await</span> <span className="n">runner</span>
                        <span className="o">.</span>
                        <span className="n">start</span>
                        <span className="p">(</span>
                        <span className="n">webserver</span>
                        <span className="o">=</span>
                        <span className="n">webserver</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-857">
                        <a href="#Flow-857">
                            <span className="linenos"> 857</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-858">
                        <a href="#Flow-858">
                            <span className="linenos"> 858</span>
                        </a>
                        {"    "}
                        <span className="nd">@classmethod</span>
                        {"\n"}
                    </span>
                    <span id="Flow-859">
                        <a href="#Flow-859">
                            <span className="linenos"> 859</span>
                        </a>
                        {"    "}
                        <span className="nd">@sync_compatible</span>
                        {"\n"}
                    </span>
                    <span id="Flow-860">
                        <a href="#Flow-860">
                            <span className="linenos"> 860</span>
                        </a>
                        {"    "}
                        <span className="k">async</span> <span className="k">def</span>{" "}
                        <span className="nf">from_source</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-861">
                        <a href="#Flow-861">
                            <span className="linenos"> 861</span>
                        </a>
                        {"        "}
                        <span className="bp">cls</span>
                        <span className="p">:</span> <span className="n">Type</span>
                        <span className="p">[</span>
                        <span className="n">F</span>
                        <span className="p">],</span>
                        {"\n"}
                    </span>
                    <span id="Flow-862">
                        <a href="#Flow-862">
                            <span className="linenos"> 862</span>
                        </a>
                        {"        "}
                        <span className="n">source</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span>{" "}
                        <span className="n">RunnerStorage</span>
                        <span className="p">,</span>{" "}
                        <span className="n">ReadableDeploymentStorage</span>
                        <span className="p">],</span>
                        {"\n"}
                    </span>
                    <span id="Flow-863">
                        <a href="#Flow-863">
                            <span className="linenos"> 863</span>
                        </a>
                        {"        "}
                        <span className="n">entrypoint</span>
                        <span className="p">:</span> <span className="nb">str</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-864">
                        <a href="#Flow-864">
                            <span className="linenos"> 864</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">F</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-865">
                        <a href="#Flow-865">
                            <span className="linenos"> 865</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-866">
                        <a href="#Flow-866">
                            <span className="linenos"> 866</span>
                        </a>
                        <span className="sd">
                            {"        "}Loads a flow from a remote source.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-867">
                        <a href="#Flow-867">
                            <span className="linenos"> 867</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-868">
                        <a href="#Flow-868">
                            <span className="linenos"> 868</span>
                        </a>
                        <span className="sd">{"        "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-869">
                        <a href="#Flow-869">
                            <span className="linenos"> 869</span>
                        </a>
                        <span className="sd">
                            {"            "}source: Either a URL to a git repository or a
                            storage object.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-870">
                        <a href="#Flow-870">
                            <span className="linenos"> 870</span>
                        </a>
                        <span className="sd">
                            {"            "}entrypoint:{"  "}The path to a file containing a
                            flow and the name of the flow function in
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-871">
                        <a href="#Flow-871">
                            <span className="linenos"> 871</span>
                        </a>
                        <span className="sd">
                            {"                "}the format `./path/to/file.py:flow_func_name`.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-872">
                        <a href="#Flow-872">
                            <span className="linenos"> 872</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-873">
                        <a href="#Flow-873">
                            <span className="linenos"> 873</span>
                        </a>
                        <span className="sd">{"        "}Returns:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-874">
                        <a href="#Flow-874">
                            <span className="linenos"> 874</span>
                        </a>
                        <span className="sd">{"            "}A new `Flow` instance.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-875">
                        <a href="#Flow-875">
                            <span className="linenos"> 875</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-876">
                        <a href="#Flow-876">
                            <span className="linenos"> 876</span>
                        </a>
                        <span className="sd">{"        "}Examples:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-877">
                        <a href="#Flow-877">
                            <span className="linenos"> 877</span>
                        </a>
                        <span className="sd">
                            {"            "}Load a flow from a public git repository:
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-878">
                        <a href="#Flow-878">
                            <span className="linenos"> 878</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-879">
                        <a href="#Flow-879">
                            <span className="linenos"> 879</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-880">
                        <a href="#Flow-880">
                            <span className="linenos"> 880</span>
                        </a>
                        <span className="sd">{"            "}```python</span>
                        {"\n"}
                    </span>
                    <span id="Flow-881">
                        <a href="#Flow-881">
                            <span className="linenos"> 881</span>
                        </a>
                        <span className="sd">{"            "}from prefect import flow</span>
                        {"\n"}
                    </span>
                    <span id="Flow-882">
                        <a href="#Flow-882">
                            <span className="linenos"> 882</span>
                        </a>
                        <span className="sd">
                            {"            "}from prefect.runner.storage import GitRepository
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-883">
                        <a href="#Flow-883">
                            <span className="linenos"> 883</span>
                        </a>
                        <span className="sd">
                            {"            "}from prefect.blocks.system import Secret
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-884">
                        <a href="#Flow-884">
                            <span className="linenos"> 884</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-885">
                        <a href="#Flow-885">
                            <span className="linenos"> 885</span>
                        </a>
                        <span className="sd">
                            {"            "}my_flow = flow.from_source(
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-886">
                        <a href="#Flow-886">
                            <span className="linenos"> 886</span>
                        </a>
                        <span className="sd">
                            {"                "}source="https://github.com/org/repo.git",
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-887">
                        <a href="#Flow-887">
                            <span className="linenos"> 887</span>
                        </a>
                        <span className="sd">
                            {"                "}entrypoint="flows.py:my_flow",
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-888">
                        <a href="#Flow-888">
                            <span className="linenos"> 888</span>
                        </a>
                        <span className="sd">{"            "})</span>
                        {"\n"}
                    </span>
                    <span id="Flow-889">
                        <a href="#Flow-889">
                            <span className="linenos"> 889</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-890">
                        <a href="#Flow-890">
                            <span className="linenos"> 890</span>
                        </a>
                        <span className="sd">{"            "}my_flow()</span>
                        {"\n"}
                    </span>
                    <span id="Flow-891">
                        <a href="#Flow-891">
                            <span className="linenos"> 891</span>
                        </a>
                        <span className="sd">{"            "}```</span>
                        {"\n"}
                    </span>
                    <span id="Flow-892">
                        <a href="#Flow-892">
                            <span className="linenos"> 892</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-893">
                        <a href="#Flow-893">
                            <span className="linenos"> 893</span>
                        </a>
                        <span className="sd">
                            {"            "}Load a flow from a private git repository using an
                            access token stored in a `Secret` block:
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-894">
                        <a href="#Flow-894">
                            <span className="linenos"> 894</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-895">
                        <a href="#Flow-895">
                            <span className="linenos"> 895</span>
                        </a>
                        <span className="sd">{"            "}```python</span>
                        {"\n"}
                    </span>
                    <span id="Flow-896">
                        <a href="#Flow-896">
                            <span className="linenos"> 896</span>
                        </a>
                        <span className="sd">{"            "}from prefect import flow</span>
                        {"\n"}
                    </span>
                    <span id="Flow-897">
                        <a href="#Flow-897">
                            <span className="linenos"> 897</span>
                        </a>
                        <span className="sd">
                            {"            "}from prefect.runner.storage import GitRepository
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-898">
                        <a href="#Flow-898">
                            <span className="linenos"> 898</span>
                        </a>
                        <span className="sd">
                            {"            "}from prefect.blocks.system import Secret
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-899">
                        <a href="#Flow-899">
                            <span className="linenos"> 899</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-900">
                        <a href="#Flow-900">
                            <span className="linenos"> 900</span>
                        </a>
                        <span className="sd">
                            {"            "}my_flow = flow.from_source(
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-901">
                        <a href="#Flow-901">
                            <span className="linenos"> 901</span>
                        </a>
                        <span className="sd">
                            {"                "}source=GitRepository(
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-902">
                        <a href="#Flow-902">
                            <span className="linenos"> 902</span>
                        </a>
                        <span className="sd">
                            {"                    "}url="https://github.com/org/repo.git",
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-903">
                        <a href="#Flow-903">
                            <span className="linenos"> 903</span>
                        </a>
                        <span className="sd">
                            {"                    "}credentials={"{"}"access_token":
                            Secret.load("github-access-token"){"}"}
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-904">
                        <a href="#Flow-904">
                            <span className="linenos"> 904</span>
                        </a>
                        <span className="sd">{"                "}),</span>
                        {"\n"}
                    </span>
                    <span id="Flow-905">
                        <a href="#Flow-905">
                            <span className="linenos"> 905</span>
                        </a>
                        <span className="sd">
                            {"                "}entrypoint="flows.py:my_flow",
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-906">
                        <a href="#Flow-906">
                            <span className="linenos"> 906</span>
                        </a>
                        <span className="sd">{"            "})</span>
                        {"\n"}
                    </span>
                    <span id="Flow-907">
                        <a href="#Flow-907">
                            <span className="linenos"> 907</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-908">
                        <a href="#Flow-908">
                            <span className="linenos"> 908</span>
                        </a>
                        <span className="sd">{"            "}my_flow()</span>
                        {"\n"}
                    </span>
                    <span id="Flow-909">
                        <a href="#Flow-909">
                            <span className="linenos"> 909</span>
                        </a>
                        <span className="sd">{"            "}```</span>
                        {"\n"}
                    </span>
                    <span id="Flow-910">
                        <a href="#Flow-910">
                            <span className="linenos"> 910</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-911">
                        <a href="#Flow-911">
                            <span className="linenos"> 911</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="nb">isinstance</span>
                        <span className="p">(</span>
                        <span className="n">source</span>
                        <span className="p">,</span> <span className="nb">str</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-912">
                        <a href="#Flow-912">
                            <span className="linenos"> 912</span>
                        </a>
                        {"            "}
                        <span className="n">storage</span> <span className="o">=</span>{" "}
                        <span className="n">create_storage_from_url</span>
                        <span className="p">(</span>
                        <span className="n">source</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-913">
                        <a href="#Flow-913">
                            <span className="linenos"> 913</span>
                        </a>
                        {"        "}
                        <span className="k">elif</span>{" "}
                        <span className="nb">isinstance</span>
                        <span className="p">(</span>
                        <span className="n">source</span>
                        <span className="p">,</span>{" "}
                        <span className="n">RunnerStorage</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-914">
                        <a href="#Flow-914">
                            <span className="linenos"> 914</span>
                        </a>
                        {"            "}
                        <span className="n">storage</span> <span className="o">=</span>{" "}
                        <span className="n">source</span>
                        {"\n"}
                    </span>
                    <span id="Flow-915">
                        <a href="#Flow-915">
                            <span className="linenos"> 915</span>
                        </a>
                        {"        "}
                        <span className="k">elif</span> <span className="nb">hasattr</span>
                        <span className="p">(</span>
                        <span className="n">source</span>
                        <span className="p">,</span>{" "}
                        <span className="s2">"get_directory"</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-916">
                        <a href="#Flow-916">
                            <span className="linenos"> 916</span>
                        </a>
                        {"            "}
                        <span className="n">storage</span> <span className="o">=</span>{" "}
                        <span className="n">BlockStorageAdapter</span>
                        <span className="p">(</span>
                        <span className="n">source</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-917">
                        <a href="#Flow-917">
                            <span className="linenos"> 917</span>
                        </a>
                        {"        "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-918">
                        <a href="#Flow-918">
                            <span className="linenos"> 918</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">TypeError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-919">
                        <a href="#Flow-919">
                            <span className="linenos"> 919</span>
                        </a>
                        {"                "}
                        <span className="sa">f</span>
                        <span className="s2">"Unsupported source type </span>
                        <span className="si">{"{"}</span>
                        <span className="nb">type</span>
                        <span className="p">(</span>
                        <span className="n">source</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="vm">__name__</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2">. Please provide a"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-920">
                        <a href="#Flow-920">
                            <span className="linenos"> 920</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            " URL to remote storage or a storage object."
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-921">
                        <a href="#Flow-921">
                            <span className="linenos"> 921</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-922">
                        <a href="#Flow-922">
                            <span className="linenos"> 922</span>
                        </a>
                        {"        "}
                        <span className="k">with</span> <span className="n">tempfile</span>
                        <span className="o">.</span>
                        <span className="n">TemporaryDirectory</span>
                        <span className="p">()</span> <span className="k">as</span>{" "}
                        <span className="n">tmpdir</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-923">
                        <a href="#Flow-923">
                            <span className="linenos"> 923</span>
                        </a>
                        {"            "}
                        <span className="n">storage</span>
                        <span className="o">.</span>
                        <span className="n">set_base_path</span>
                        <span className="p">(</span>
                        <span className="n">Path</span>
                        <span className="p">(</span>
                        <span className="n">tmpdir</span>
                        <span className="p">))</span>
                        {"\n"}
                    </span>
                    <span id="Flow-924">
                        <a href="#Flow-924">
                            <span className="linenos"> 924</span>
                        </a>
                        {"            "}
                        <span className="k">await</span> <span className="n">storage</span>
                        <span className="o">.</span>
                        <span className="n">pull_code</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Flow-925">
                        <a href="#Flow-925">
                            <span className="linenos"> 925</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-926">
                        <a href="#Flow-926">
                            <span className="linenos"> 926</span>
                        </a>
                        {"            "}
                        <span className="n">full_entrypoint</span>{" "}
                        <span className="o">=</span> <span className="nb">str</span>
                        <span className="p">(</span>
                        <span className="n">storage</span>
                        <span className="o">.</span>
                        <span className="n">
                            destination
                        </span> <span className="o">/</span>{" "}
                        <span className="n">entrypoint</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-927">
                        <a href="#Flow-927">
                            <span className="linenos"> 927</span>
                        </a>
                        {"            "}
                        <span className="n">flow</span>
                        <span className="p">:</span> <span className="s2">"Flow"</span>{" "}
                        <span className="o">=</span> <span className="k">await</span>{" "}
                        <span className="n">from_async</span>
                        <span className="o">.</span>
                        <span className="n">wait_for_call_in_new_thread</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-928">
                        <a href="#Flow-928">
                            <span className="linenos"> 928</span>
                        </a>
                        {"                "}
                        <span className="n">create_call</span>
                        <span className="p">(</span>
                        <span className="n">load_flow_from_entrypoint</span>
                        <span className="p">,</span>{" "}
                        <span className="n">full_entrypoint</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-929">
                        <a href="#Flow-929">
                            <span className="linenos"> 929</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-930">
                        <a href="#Flow-930">
                            <span className="linenos"> 930</span>
                        </a>
                        {"            "}
                        <span className="n">flow</span>
                        <span className="o">.</span>
                        <span className="n">
                            _storage
                        </span> <span className="o">=</span>{" "}
                        <span className="n">storage</span>
                        {"\n"}
                    </span>
                    <span id="Flow-931">
                        <a href="#Flow-931">
                            <span className="linenos"> 931</span>
                        </a>
                        {"            "}
                        <span className="n">flow</span>
                        <span className="o">.</span>
                        <span className="n">
                            _entrypoint
                        </span> <span className="o">=</span>{" "}
                        <span className="n">entrypoint</span>
                        {"\n"}
                    </span>
                    <span id="Flow-932">
                        <a href="#Flow-932">
                            <span className="linenos"> 932</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-933">
                        <a href="#Flow-933">
                            <span className="linenos"> 933</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="n">flow</span>
                        {"\n"}
                    </span>
                    <span id="Flow-934">
                        <a href="#Flow-934">
                            <span className="linenos"> 934</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-935">
                        <a href="#Flow-935">
                            <span className="linenos"> 935</span>
                        </a>
                        {"    "}
                        <span className="nd">@sync_compatible</span>
                        {"\n"}
                    </span>
                    <span id="Flow-936">
                        <a href="#Flow-936">
                            <span className="linenos"> 936</span>
                        </a>
                        {"    "}
                        <span className="k">async</span> <span className="k">def</span>{" "}
                        <span className="nf">deploy</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-937">
                        <a href="#Flow-937">
                            <span className="linenos"> 937</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-938">
                        <a href="#Flow-938">
                            <span className="linenos"> 938</span>
                        </a>
                        {"        "}
                        <span className="n">name</span>
                        <span className="p">:</span> <span className="nb">str</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-939">
                        <a href="#Flow-939">
                            <span className="linenos"> 939</span>
                        </a>
                        {"        "}
                        <span className="n">work_pool_name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-940">
                        <a href="#Flow-940">
                            <span className="linenos"> 940</span>
                        </a>
                        {"        "}
                        <span className="n">image</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span>{" "}
                        <span className="n">DeploymentImage</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-941">
                        <a href="#Flow-941">
                            <span className="linenos"> 941</span>
                        </a>
                        {"        "}
                        <span className="n">build</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-942">
                        <a href="#Flow-942">
                            <span className="linenos"> 942</span>
                        </a>
                        {"        "}
                        <span className="n">push</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-943">
                        <a href="#Flow-943">
                            <span className="linenos"> 943</span>
                        </a>
                        {"        "}
                        <span className="n">work_queue_name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-944">
                        <a href="#Flow-944">
                            <span className="linenos"> 944</span>
                        </a>
                        {"        "}
                        <span className="n">job_variables</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">dict</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-945">
                        <a href="#Flow-945">
                            <span className="linenos"> 945</span>
                        </a>
                        {"        "}
                        <span className="n">interval</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">,</span> <span className="nb">float</span>
                        <span className="p">,</span> <span className="n">datetime</span>
                        <span className="o">.</span>
                        <span className="n">timedelta</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-946">
                        <a href="#Flow-946">
                            <span className="linenos"> 946</span>
                        </a>
                        {"        "}
                        <span className="n">cron</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-947">
                        <a href="#Flow-947">
                            <span className="linenos"> 947</span>
                        </a>
                        {"        "}
                        <span className="n">rrule</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-948">
                        <a href="#Flow-948">
                            <span className="linenos"> 948</span>
                        </a>
                        {"        "}
                        <span className="n">paused</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-949">
                        <a href="#Flow-949">
                            <span className="linenos"> 949</span>
                        </a>
                        {"        "}
                        <span className="n">schedules</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">MinimalDeploymentSchedule</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-950">
                        <a href="#Flow-950">
                            <span className="linenos"> 950</span>
                        </a>
                        {"        "}
                        <span className="n">schedule</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">SCHEDULE_TYPES</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-951">
                        <a href="#Flow-951">
                            <span className="linenos"> 951</span>
                        </a>
                        {"        "}
                        <span className="n">is_schedule_active</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-952">
                        <a href="#Flow-952">
                            <span className="linenos"> 952</span>
                        </a>
                        {"        "}
                        <span className="n">triggers</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">DeploymentTriggerTypes</span>
                        <span className="p">,</span> <span className="n">TriggerTypes</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-953">
                        <a href="#Flow-953">
                            <span className="linenos"> 953</span>
                        </a>
                        {"        "}
                        <span className="n">parameters</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">dict</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-954">
                        <a href="#Flow-954">
                            <span className="linenos"> 954</span>
                        </a>
                        {"        "}
                        <span className="n">description</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-955">
                        <a href="#Flow-955">
                            <span className="linenos"> 955</span>
                        </a>
                        {"        "}
                        <span className="n">tags</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-956">
                        <a href="#Flow-956">
                            <span className="linenos"> 956</span>
                        </a>
                        {"        "}
                        <span className="n">version</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-957">
                        <a href="#Flow-957">
                            <span className="linenos"> 957</span>
                        </a>
                        {"        "}
                        <span className="n">enforce_parameter_schema</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-958">
                        <a href="#Flow-958">
                            <span className="linenos"> 958</span>
                        </a>
                        {"        "}
                        <span className="n">entrypoint_type</span>
                        <span className="p">:</span>{" "}
                        <span className="n">EntrypointType</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">EntrypointType</span>
                        <span className="o">.</span>
                        <span className="n">FILE_PATH</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-959">
                        <a href="#Flow-959">
                            <span className="linenos"> 959</span>
                        </a>
                        {"        "}
                        <span className="n">print_next_steps</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-960">
                        <a href="#Flow-960">
                            <span className="linenos"> 960</span>
                        </a>
                        {"        "}
                        <span className="n">ignore_warnings</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-961">
                        <a href="#Flow-961">
                            <span className="linenos"> 961</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">UUID</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-962">
                        <a href="#Flow-962">
                            <span className="linenos"> 962</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-963">
                        <a href="#Flow-963">
                            <span className="linenos"> 963</span>
                        </a>
                        <span className="sd">
                            {"        "}Deploys a flow to run on dynamic infrastructure via a
                            work pool.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-964">
                        <a href="#Flow-964">
                            <span className="linenos"> 964</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-965">
                        <a href="#Flow-965">
                            <span className="linenos"> 965</span>
                        </a>
                        <span className="sd">
                            {"        "}By default, calling this method will build a Docker
                            image for the flow, push it to a registry,
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-966">
                        <a href="#Flow-966">
                            <span className="linenos"> 966</span>
                        </a>
                        <span className="sd">
                            {"        "}and create a deployment via the Prefect API that will
                            run the flow on the given schedule.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-967">
                        <a href="#Flow-967">
                            <span className="linenos"> 967</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-968">
                        <a href="#Flow-968">
                            <span className="linenos"> 968</span>
                        </a>
                        <span className="sd">
                            {"        "}If you want to use an existing image, you can pass
                            `build=False` to skip building and pushing
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-969">
                        <a href="#Flow-969">
                            <span className="linenos"> 969</span>
                        </a>
                        <span className="sd">{"        "}an image.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-970">
                        <a href="#Flow-970">
                            <span className="linenos"> 970</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-971">
                        <a href="#Flow-971">
                            <span className="linenos"> 971</span>
                        </a>
                        <span className="sd">{"        "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-972">
                        <a href="#Flow-972">
                            <span className="linenos"> 972</span>
                        </a>
                        <span className="sd">
                            {"            "}name: The name to give the created deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-973">
                        <a href="#Flow-973">
                            <span className="linenos"> 973</span>
                        </a>
                        <span className="sd">
                            {"            "}work_pool_name: The name of the work pool to use
                            for this deployment. Defaults to
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-974">
                        <a href="#Flow-974">
                            <span className="linenos"> 974</span>
                        </a>
                        <span className="sd">
                            {"                "}the value of `PREFECT_DEFAULT_WORK_POOL_NAME`.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-975">
                        <a href="#Flow-975">
                            <span className="linenos"> 975</span>
                        </a>
                        <span className="sd">
                            {"            "}image: The name of the Docker image to build,
                            including the registry and
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-976">
                        <a href="#Flow-976">
                            <span className="linenos"> 976</span>
                        </a>
                        <span className="sd">
                            {"                "}repository. Pass a DeploymentImage instance to
                            customize the Dockerfile used
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-977">
                        <a href="#Flow-977">
                            <span className="linenos"> 977</span>
                        </a>
                        <span className="sd">{"                "}and build arguments.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-978">
                        <a href="#Flow-978">
                            <span className="linenos"> 978</span>
                        </a>
                        <span className="sd">
                            {"            "}build: Whether or not to build a new image for the
                            flow. If False, the provided
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-979">
                        <a href="#Flow-979">
                            <span className="linenos"> 979</span>
                        </a>
                        <span className="sd">
                            {"                "}image will be used as-is and pulled at
                            runtime.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-980">
                        <a href="#Flow-980">
                            <span className="linenos"> 980</span>
                        </a>
                        <span className="sd">
                            {"            "}push: Whether or not to skip pushing the built
                            image to a registry.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-981">
                        <a href="#Flow-981">
                            <span className="linenos"> 981</span>
                        </a>
                        <span className="sd">
                            {"            "}work_queue_name: The name of the work queue to use
                            for this deployment's scheduled runs.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-982">
                        <a href="#Flow-982">
                            <span className="linenos"> 982</span>
                        </a>
                        <span className="sd">
                            {"                "}If not provided the default work queue for the
                            work pool will be used.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-983">
                        <a href="#Flow-983">
                            <span className="linenos"> 983</span>
                        </a>
                        <span className="sd">
                            {"            "}job_variables: Settings used to override the
                            values specified default base job template
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-984">
                        <a href="#Flow-984">
                            <span className="linenos"> 984</span>
                        </a>
                        <span className="sd">
                            {"                "}of the chosen work pool. Refer to the base job
                            template of the chosen work pool for
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-985">
                        <a href="#Flow-985">
                            <span className="linenos"> 985</span>
                        </a>
                        <span className="sd">{"                "}available settings.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-986">
                        <a href="#Flow-986">
                            <span className="linenos"> 986</span>
                        </a>
                        <span className="sd">
                            {"            "}interval: An interval on which to execute the
                            deployment. Accepts a number or a
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-987">
                        <a href="#Flow-987">
                            <span className="linenos"> 987</span>
                        </a>
                        <span className="sd">
                            {"                "}timedelta object to create a single schedule.
                            If a number is given, it will be
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-988">
                        <a href="#Flow-988">
                            <span className="linenos"> 988</span>
                        </a>
                        <span className="sd">
                            {"                "}interpreted as seconds. Also accepts an
                            iterable of numbers or timedelta to create
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-989">
                        <a href="#Flow-989">
                            <span className="linenos"> 989</span>
                        </a>
                        <span className="sd">{"                "}multiple schedules.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-990">
                        <a href="#Flow-990">
                            <span className="linenos"> 990</span>
                        </a>
                        <span className="sd">
                            {"            "}cron: A cron schedule string of when to execute
                            runs of this deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-991">
                        <a href="#Flow-991">
                            <span className="linenos"> 991</span>
                        </a>
                        <span className="sd">
                            {"                "}Also accepts an iterable of cron schedule
                            strings to create multiple schedules.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-992">
                        <a href="#Flow-992">
                            <span className="linenos"> 992</span>
                        </a>
                        <span className="sd">
                            {"            "}rrule: An rrule schedule string of when to execute
                            runs of this deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-993">
                        <a href="#Flow-993">
                            <span className="linenos"> 993</span>
                        </a>
                        <span className="sd">
                            {"                "}Also accepts an iterable of rrule schedule
                            strings to create multiple schedules.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-994">
                        <a href="#Flow-994">
                            <span className="linenos"> 994</span>
                        </a>
                        <span className="sd">
                            {"            "}triggers: A list of triggers that will kick off
                            runs of this deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-995">
                        <a href="#Flow-995">
                            <span className="linenos"> 995</span>
                        </a>
                        <span className="sd">
                            {"            "}paused: Whether or not to set this deployment as
                            paused.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-996">
                        <a href="#Flow-996">
                            <span className="linenos"> 996</span>
                        </a>
                        <span className="sd">
                            {"            "}schedules: A list of schedule objects defining
                            when to execute runs of this deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-997">
                        <a href="#Flow-997">
                            <span className="linenos"> 997</span>
                        </a>
                        <span className="sd">
                            {"                "}Used to define multiple schedules or
                            additional scheduling options like `timezone`.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-998">
                        <a href="#Flow-998">
                            <span className="linenos"> 998</span>
                        </a>
                        <span className="sd">
                            {"            "}schedule: A schedule object defining when to
                            execute runs of this deployment. Used to
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-999">
                        <a href="#Flow-999">
                            <span className="linenos"> 999</span>
                        </a>
                        <span className="sd">
                            {"                "}define additional scheduling options like
                            `timezone`.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1000">
                        <a href="#Flow-1000">
                            <span className="linenos">1000</span>
                        </a>
                        <span className="sd">
                            {"            "}is_schedule_active: Whether or not to set the
                            schedule for this deployment as active. If
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1001">
                        <a href="#Flow-1001">
                            <span className="linenos">1001</span>
                        </a>
                        <span className="sd">
                            {"                "}not provided when creating a deployment, the
                            schedule will be set as active. If not
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1002">
                        <a href="#Flow-1002">
                            <span className="linenos">1002</span>
                        </a>
                        <span className="sd">
                            {"                "}provided when updating a deployment, the
                            schedule's activation will not be changed.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1003">
                        <a href="#Flow-1003">
                            <span className="linenos">1003</span>
                        </a>
                        <span className="sd">
                            {"            "}parameters: A dictionary of default parameter
                            values to pass to runs of this deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1004">
                        <a href="#Flow-1004">
                            <span className="linenos">1004</span>
                        </a>
                        <span className="sd">
                            {"            "}description: A description for the created
                            deployment. Defaults to the flow's
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1005">
                        <a href="#Flow-1005">
                            <span className="linenos">1005</span>
                        </a>
                        <span className="sd">
                            {"                "}description if not provided.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1006">
                        <a href="#Flow-1006">
                            <span className="linenos">1006</span>
                        </a>
                        <span className="sd">
                            {"            "}tags: A list of tags to associate with the created
                            deployment for organizational
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1007">
                        <a href="#Flow-1007">
                            <span className="linenos">1007</span>
                        </a>
                        <span className="sd">{"                "}purposes.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1008">
                        <a href="#Flow-1008">
                            <span className="linenos">1008</span>
                        </a>
                        <span className="sd">
                            {"            "}version: A version for the created deployment.
                            Defaults to the flow's version.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1009">
                        <a href="#Flow-1009">
                            <span className="linenos">1009</span>
                        </a>
                        <span className="sd">
                            {"            "}enforce_parameter_schema: Whether or not the
                            Prefect API should enforce the
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1010">
                        <a href="#Flow-1010">
                            <span className="linenos">1010</span>
                        </a>
                        <span className="sd">
                            {"                "}parameter schema for the created deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1011">
                        <a href="#Flow-1011">
                            <span className="linenos">1011</span>
                        </a>
                        <span className="sd">
                            {"            "}entrypoint_type: Type of entrypoint to use for the
                            deployment. When using a module path
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1012">
                        <a href="#Flow-1012">
                            <span className="linenos">1012</span>
                        </a>
                        <span className="sd">
                            {"                "}entrypoint, ensure that the module will be
                            importable in the execution environment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1013">
                        <a href="#Flow-1013">
                            <span className="linenos">1013</span>
                        </a>
                        <span className="sd">
                            {"            "}print_next_steps_message: Whether or not to print
                            a message with next steps
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1014">
                        <a href="#Flow-1014">
                            <span className="linenos">1014</span>
                        </a>
                        <span className="sd">
                            {"                "}after deploying the deployments.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1015">
                        <a href="#Flow-1015">
                            <span className="linenos">1015</span>
                        </a>
                        <span className="sd">
                            {"            "}ignore_warnings: Whether or not to ignore warnings
                            about the work pool type.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1016">
                        <a href="#Flow-1016">
                            <span className="linenos">1016</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1017">
                        <a href="#Flow-1017">
                            <span className="linenos">1017</span>
                        </a>
                        <span className="sd">{"        "}Returns:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1018">
                        <a href="#Flow-1018">
                            <span className="linenos">1018</span>
                        </a>
                        <span className="sd">
                            {"            "}The ID of the created/updated deployment.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1019">
                        <a href="#Flow-1019">
                            <span className="linenos">1019</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1020">
                        <a href="#Flow-1020">
                            <span className="linenos">1020</span>
                        </a>
                        <span className="sd">{"        "}Examples:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1021">
                        <a href="#Flow-1021">
                            <span className="linenos">1021</span>
                        </a>
                        <span className="sd">
                            {"            "}Deploy a local flow to a work pool:
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1022">
                        <a href="#Flow-1022">
                            <span className="linenos">1022</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1023">
                        <a href="#Flow-1023">
                            <span className="linenos">1023</span>
                        </a>
                        <span className="sd">{"            "}```python</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1024">
                        <a href="#Flow-1024">
                            <span className="linenos">1024</span>
                        </a>
                        <span className="sd">{"            "}from prefect import flow</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1025">
                        <a href="#Flow-1025">
                            <span className="linenos">1025</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1026">
                        <a href="#Flow-1026">
                            <span className="linenos">1026</span>
                        </a>
                        <span className="sd">{"            "}@flow</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1027">
                        <a href="#Flow-1027">
                            <span className="linenos">1027</span>
                        </a>
                        <span className="sd">{"            "}def my_flow(name):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1028">
                        <a href="#Flow-1028">
                            <span className="linenos">1028</span>
                        </a>
                        <span className="sd">
                            {"                "}print(f"hello {"{"}name{"}"}")
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1029">
                        <a href="#Flow-1029">
                            <span className="linenos">1029</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1030">
                        <a href="#Flow-1030">
                            <span className="linenos">1030</span>
                        </a>
                        <span className="sd">
                            {"            "}if __name__ == "__main__":
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1031">
                        <a href="#Flow-1031">
                            <span className="linenos">1031</span>
                        </a>
                        <span className="sd">{"                "}my_flow.deploy(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1032">
                        <a href="#Flow-1032">
                            <span className="linenos">1032</span>
                        </a>
                        <span className="sd">
                            {"                    "}"example-deployment",
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1033">
                        <a href="#Flow-1033">
                            <span className="linenos">1033</span>
                        </a>
                        <span className="sd">
                            {"                    "}work_pool_name="my-work-pool",
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1034">
                        <a href="#Flow-1034">
                            <span className="linenos">1034</span>
                        </a>
                        <span className="sd">
                            {"                    "}image="my-repository/my-image:dev",
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1035">
                        <a href="#Flow-1035">
                            <span className="linenos">1035</span>
                        </a>
                        <span className="sd">{"                "})</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1036">
                        <a href="#Flow-1036">
                            <span className="linenos">1036</span>
                        </a>
                        <span className="sd">{"            "}```</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1037">
                        <a href="#Flow-1037">
                            <span className="linenos">1037</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1038">
                        <a href="#Flow-1038">
                            <span className="linenos">1038</span>
                        </a>
                        <span className="sd">
                            {"            "}Deploy a remotely stored flow to a work pool:
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1039">
                        <a href="#Flow-1039">
                            <span className="linenos">1039</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1040">
                        <a href="#Flow-1040">
                            <span className="linenos">1040</span>
                        </a>
                        <span className="sd">{"            "}```python</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1041">
                        <a href="#Flow-1041">
                            <span className="linenos">1041</span>
                        </a>
                        <span className="sd">{"            "}from prefect import flow</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1042">
                        <a href="#Flow-1042">
                            <span className="linenos">1042</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1043">
                        <a href="#Flow-1043">
                            <span className="linenos">1043</span>
                        </a>
                        <span className="sd">
                            {"            "}if __name__ == "__main__":
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1044">
                        <a href="#Flow-1044">
                            <span className="linenos">1044</span>
                        </a>
                        <span className="sd">{"                "}flow.from_source(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1045">
                        <a href="#Flow-1045">
                            <span className="linenos">1045</span>
                        </a>
                        <span className="sd">
                            {"                    "}source="https://github.com/org/repo.git",
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1046">
                        <a href="#Flow-1046">
                            <span className="linenos">1046</span>
                        </a>
                        <span className="sd">
                            {"                    "}entrypoint="flows.py:my_flow",
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1047">
                        <a href="#Flow-1047">
                            <span className="linenos">1047</span>
                        </a>
                        <span className="sd">{"                "}).deploy(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1048">
                        <a href="#Flow-1048">
                            <span className="linenos">1048</span>
                        </a>
                        <span className="sd">
                            {"                    "}"example-deployment",
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1049">
                        <a href="#Flow-1049">
                            <span className="linenos">1049</span>
                        </a>
                        <span className="sd">
                            {"                    "}work_pool_name="my-work-pool",
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1050">
                        <a href="#Flow-1050">
                            <span className="linenos">1050</span>
                        </a>
                        <span className="sd">
                            {"                    "}image="my-repository/my-image:dev",
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1051">
                        <a href="#Flow-1051">
                            <span className="linenos">1051</span>
                        </a>
                        <span className="sd">{"                "})</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1052">
                        <a href="#Flow-1052">
                            <span className="linenos">1052</span>
                        </a>
                        <span className="sd">{"            "}```</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1053">
                        <a href="#Flow-1053">
                            <span className="linenos">1053</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1054">
                        <a href="#Flow-1054">
                            <span className="linenos">1054</span>
                        </a>
                        {"        "}
                        <span className="n">work_pool_name</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">work_pool_name</span>{" "}
                        <span className="ow">or</span>{" "}
                        <span className="n">PREFECT_DEFAULT_WORK_POOL_NAME</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1055">
                        <a href="#Flow-1055">
                            <span className="linenos">1055</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1056">
                        <a href="#Flow-1056">
                            <span className="linenos">1056</span>
                        </a>
                        {"        "}
                        <span className="k">try</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1057">
                        <a href="#Flow-1057">
                            <span className="linenos">1057</span>
                        </a>
                        {"            "}
                        <span className="k">
                            async
                        </span> <span className="k">with</span>{" "}
                        <span className="n">get_client</span>
                        <span className="p">()</span> <span className="k">as</span>{" "}
                        <span className="n">client</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1058">
                        <a href="#Flow-1058">
                            <span className="linenos">1058</span>
                        </a>
                        {"                "}
                        <span className="n">
                            work_pool
                        </span> <span className="o">=</span>{" "}
                        <span className="k">await</span> <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">read_work_pool</span>
                        <span className="p">(</span>
                        <span className="n">work_pool_name</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1059">
                        <a href="#Flow-1059">
                            <span className="linenos">1059</span>
                        </a>
                        {"        "}
                        <span className="k">except</span>{" "}
                        <span className="n">ObjectNotFound</span>{" "}
                        <span className="k">as</span> <span className="n">exc</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1060">
                        <a href="#Flow-1060">
                            <span className="linenos">1060</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">ValueError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1061">
                        <a href="#Flow-1061">
                            <span className="linenos">1061</span>
                        </a>
                        {"                "}
                        <span className="sa">f</span>
                        <span className="s2">"Could not find work pool </span>
                        <span className="si">{"{"}</span>
                        <span className="n">work_pool_name</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2">. Please create it before"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1062">
                        <a href="#Flow-1062">
                            <span className="linenos">1062</span>
                        </a>
                        {"                "}
                        <span className="s2">" deploying this flow."</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1063">
                        <a href="#Flow-1063">
                            <span className="linenos">1063</span>
                        </a>
                        {"            "}
                        <span className="p">)</span> <span className="kn">from</span>{" "}
                        <span className="nn">exc</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1064">
                        <a href="#Flow-1064">
                            <span className="linenos">1064</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1065">
                        <a href="#Flow-1065">
                            <span className="linenos">1065</span>
                        </a>
                        {"        "}
                        <span className="n">
                            deployment
                        </span> <span className="o">=</span>{" "}
                        <span className="k">await</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">to_deployment</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1066">
                        <a href="#Flow-1066">
                            <span className="linenos">1066</span>
                        </a>
                        {"            "}
                        <span className="n">name</span>
                        <span className="o">=</span>
                        <span className="n">name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1067">
                        <a href="#Flow-1067">
                            <span className="linenos">1067</span>
                        </a>
                        {"            "}
                        <span className="n">interval</span>
                        <span className="o">=</span>
                        <span className="n">interval</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1068">
                        <a href="#Flow-1068">
                            <span className="linenos">1068</span>
                        </a>
                        {"            "}
                        <span className="n">cron</span>
                        <span className="o">=</span>
                        <span className="n">cron</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1069">
                        <a href="#Flow-1069">
                            <span className="linenos">1069</span>
                        </a>
                        {"            "}
                        <span className="n">rrule</span>
                        <span className="o">=</span>
                        <span className="n">rrule</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1070">
                        <a href="#Flow-1070">
                            <span className="linenos">1070</span>
                        </a>
                        {"            "}
                        <span className="n">schedules</span>
                        <span className="o">=</span>
                        <span className="n">schedules</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1071">
                        <a href="#Flow-1071">
                            <span className="linenos">1071</span>
                        </a>
                        {"            "}
                        <span className="n">paused</span>
                        <span className="o">=</span>
                        <span className="n">paused</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1072">
                        <a href="#Flow-1072">
                            <span className="linenos">1072</span>
                        </a>
                        {"            "}
                        <span className="n">schedule</span>
                        <span className="o">=</span>
                        <span className="n">schedule</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1073">
                        <a href="#Flow-1073">
                            <span className="linenos">1073</span>
                        </a>
                        {"            "}
                        <span className="n">is_schedule_active</span>
                        <span className="o">=</span>
                        <span className="n">is_schedule_active</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1074">
                        <a href="#Flow-1074">
                            <span className="linenos">1074</span>
                        </a>
                        {"            "}
                        <span className="n">triggers</span>
                        <span className="o">=</span>
                        <span className="n">triggers</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1075">
                        <a href="#Flow-1075">
                            <span className="linenos">1075</span>
                        </a>
                        {"            "}
                        <span className="n">parameters</span>
                        <span className="o">=</span>
                        <span className="n">parameters</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1076">
                        <a href="#Flow-1076">
                            <span className="linenos">1076</span>
                        </a>
                        {"            "}
                        <span className="n">description</span>
                        <span className="o">=</span>
                        <span className="n">description</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1077">
                        <a href="#Flow-1077">
                            <span className="linenos">1077</span>
                        </a>
                        {"            "}
                        <span className="n">tags</span>
                        <span className="o">=</span>
                        <span className="n">tags</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1078">
                        <a href="#Flow-1078">
                            <span className="linenos">1078</span>
                        </a>
                        {"            "}
                        <span className="n">version</span>
                        <span className="o">=</span>
                        <span className="n">version</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1079">
                        <a href="#Flow-1079">
                            <span className="linenos">1079</span>
                        </a>
                        {"            "}
                        <span className="n">enforce_parameter_schema</span>
                        <span className="o">=</span>
                        <span className="n">enforce_parameter_schema</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1080">
                        <a href="#Flow-1080">
                            <span className="linenos">1080</span>
                        </a>
                        {"            "}
                        <span className="n">work_queue_name</span>
                        <span className="o">=</span>
                        <span className="n">work_queue_name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1081">
                        <a href="#Flow-1081">
                            <span className="linenos">1081</span>
                        </a>
                        {"            "}
                        <span className="n">job_variables</span>
                        <span className="o">=</span>
                        <span className="n">job_variables</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1082">
                        <a href="#Flow-1082">
                            <span className="linenos">1082</span>
                        </a>
                        {"            "}
                        <span className="n">entrypoint_type</span>
                        <span className="o">=</span>
                        <span className="n">entrypoint_type</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1083">
                        <a href="#Flow-1083">
                            <span className="linenos">1083</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1084">
                        <a href="#Flow-1084">
                            <span className="linenos">1084</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1085">
                        <a href="#Flow-1085">
                            <span className="linenos">1085</span>
                        </a>
                        {"        "}
                        <span className="n">deployment_ids</span>{" "}
                        <span className="o">=</span> <span className="k">await</span>{" "}
                        <span className="n">deploy</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1086">
                        <a href="#Flow-1086">
                            <span className="linenos">1086</span>
                        </a>
                        {"            "}
                        <span className="n">deployment</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1087">
                        <a href="#Flow-1087">
                            <span className="linenos">1087</span>
                        </a>
                        {"            "}
                        <span className="n">work_pool_name</span>
                        <span className="o">=</span>
                        <span className="n">work_pool_name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1088">
                        <a href="#Flow-1088">
                            <span className="linenos">1088</span>
                        </a>
                        {"            "}
                        <span className="n">image</span>
                        <span className="o">=</span>
                        <span className="n">image</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1089">
                        <a href="#Flow-1089">
                            <span className="linenos">1089</span>
                        </a>
                        {"            "}
                        <span className="n">build</span>
                        <span className="o">=</span>
                        <span className="n">build</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1090">
                        <a href="#Flow-1090">
                            <span className="linenos">1090</span>
                        </a>
                        {"            "}
                        <span className="n">push</span>
                        <span className="o">=</span>
                        <span className="n">push</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1091">
                        <a href="#Flow-1091">
                            <span className="linenos">1091</span>
                        </a>
                        {"            "}
                        <span className="n">print_next_steps_message</span>
                        <span className="o">=</span>
                        <span className="kc">False</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1092">
                        <a href="#Flow-1092">
                            <span className="linenos">1092</span>
                        </a>
                        {"            "}
                        <span className="n">ignore_warnings</span>
                        <span className="o">=</span>
                        <span className="n">ignore_warnings</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1093">
                        <a href="#Flow-1093">
                            <span className="linenos">1093</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1094">
                        <a href="#Flow-1094">
                            <span className="linenos">1094</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1095">
                        <a href="#Flow-1095">
                            <span className="linenos">1095</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">print_next_steps</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1096">
                        <a href="#Flow-1096">
                            <span className="linenos">1096</span>
                        </a>
                        {"            "}
                        <span className="n">console</span> <span className="o">=</span>{" "}
                        <span className="n">Console</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1097">
                        <a href="#Flow-1097">
                            <span className="linenos">1097</span>
                        </a>
                        {"            "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">work_pool</span>
                        <span className="o">.</span>
                        <span className="n">is_push_pool</span>{" "}
                        <span className="ow">and</span> <span className="ow">not</span>{" "}
                        <span className="n">work_pool</span>
                        <span className="o">.</span>
                        <span className="n">is_managed_pool</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1098">
                        <a href="#Flow-1098">
                            <span className="linenos">1098</span>
                        </a>
                        {"                "}
                        <span className="n">console</span>
                        <span className="o">.</span>
                        <span className="n">print</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1099">
                        <a href="#Flow-1099">
                            <span className="linenos">1099</span>
                        </a>
                        {"                    "}
                        <span className="s2">"</span>
                        <span className="se">\n</span>
                        <span className="s2">
                            To execute flow runs from this deployment, start a worker in a"
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1100">
                        <a href="#Flow-1100">
                            <span className="linenos">1100</span>
                        </a>
                        {"                    "}
                        <span className="s2">
                            " separate terminal that pulls work from the"
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1101">
                        <a href="#Flow-1101">
                            <span className="linenos">1101</span>
                        </a>
                        {"                    "}
                        <span className="sa">f</span>
                        <span className="s2">" </span>
                        <span className="si">{"{"}</span>
                        <span className="n">work_pool_name</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2"> work pool:"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1102">
                        <a href="#Flow-1102">
                            <span className="linenos">1102</span>
                        </a>
                        {"                "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1103">
                        <a href="#Flow-1103">
                            <span className="linenos">1103</span>
                        </a>
                        {"                "}
                        <span className="n">console</span>
                        <span className="o">.</span>
                        <span className="n">print</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1104">
                        <a href="#Flow-1104">
                            <span className="linenos">1104</span>
                        </a>
                        {"                    "}
                        <span className="sa">f</span>
                        <span className="s2">"</span>
                        <span className="se">\n\t</span>
                        <span className="s2">$ prefect worker start --pool </span>
                        <span className="si">{"{"}</span>
                        <span className="n">work_pool_name</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2">"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1105">
                        <a href="#Flow-1105">
                            <span className="linenos">1105</span>
                        </a>
                        {"                    "}
                        <span className="n">style</span>
                        <span className="o">=</span>
                        <span className="s2">"blue"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1106">
                        <a href="#Flow-1106">
                            <span className="linenos">1106</span>
                        </a>
                        {"                "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1107">
                        <a href="#Flow-1107">
                            <span className="linenos">1107</span>
                        </a>
                        {"            "}
                        <span className="n">console</span>
                        <span className="o">.</span>
                        <span className="n">print</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1108">
                        <a href="#Flow-1108">
                            <span className="linenos">1108</span>
                        </a>
                        {"                "}
                        <span className="s2">"</span>
                        <span className="se">\n</span>
                        <span className="s2">
                            To schedule a run for this deployment, use the following command:"
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1109">
                        <a href="#Flow-1109">
                            <span className="linenos">1109</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1110">
                        <a href="#Flow-1110">
                            <span className="linenos">1110</span>
                        </a>
                        {"            "}
                        <span className="n">console</span>
                        <span className="o">.</span>
                        <span className="n">print</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1111">
                        <a href="#Flow-1111">
                            <span className="linenos">1111</span>
                        </a>
                        {"                "}
                        <span className="sa">f</span>
                        <span className="s2">"</span>
                        <span className="se">\n\t</span>
                        <span className="s2">$ prefect deployment run '</span>
                        <span className="si">{"{"}</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">/</span>
                        <span className="si">{"{"}</span>
                        <span className="n">name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">'</span>
                        <span className="se">\n</span>
                        <span className="s2">"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1112">
                        <a href="#Flow-1112">
                            <span className="linenos">1112</span>
                        </a>
                        {"                "}
                        <span className="n">style</span>
                        <span className="o">=</span>
                        <span className="s2">"blue"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1113">
                        <a href="#Flow-1113">
                            <span className="linenos">1113</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1114">
                        <a href="#Flow-1114">
                            <span className="linenos">1114</span>
                        </a>
                        {"            "}
                        <span className="k">if</span>{" "}
                        <span className="n">PREFECT_UI_URL</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1115">
                        <a href="#Flow-1115">
                            <span className="linenos">1115</span>
                        </a>
                        {"                "}
                        <span className="n">message</span> <span className="o">=</span>{" "}
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1116">
                        <a href="#Flow-1116">
                            <span className="linenos">1116</span>
                        </a>
                        {"                    "}
                        <span className="s2">"</span>
                        <span className="se">\n</span>
                        <span className="s2">
                            You can also run your flow via the Prefect UI:"
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1117">
                        <a href="#Flow-1117">
                            <span className="linenos">1117</span>
                        </a>
                        {"                    "}
                        <span className="sa">f</span>
                        <span className="s2">" [blue]</span>
                        <span className="si">{"{"}</span>
                        <span className="n">PREFECT_UI_URL</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">()</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">/deployments/deployment/</span>
                        <span className="si">{"{"}</span>
                        <span className="n">deployment_ids</span>
                        <span className="p">[</span>
                        <span className="mi">0</span>
                        <span className="p">]</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">[/]</span>
                        <span className="se">\n</span>
                        <span className="s2">"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1118">
                        <a href="#Flow-1118">
                            <span className="linenos">1118</span>
                        </a>
                        {"                "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1119">
                        <a href="#Flow-1119">
                            <span className="linenos">1119</span>
                        </a>
                        {"                "}
                        <span className="n">console</span>
                        <span className="o">.</span>
                        <span className="n">print</span>
                        <span className="p">(</span>
                        <span className="n">message</span>
                        <span className="p">,</span> <span className="n">soft_wrap</span>
                        <span className="o">=</span>
                        <span className="kc">True</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1120">
                        <a href="#Flow-1120">
                            <span className="linenos">1120</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1121">
                        <a href="#Flow-1121">
                            <span className="linenos">1121</span>
                        </a>
                        {"        "}
                        <span className="k">return</span>{" "}
                        <span className="n">deployment_ids</span>
                        <span className="p">[</span>
                        <span className="mi">0</span>
                        <span className="p">]</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1122">
                        <a href="#Flow-1122">
                            <span className="linenos">1122</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1123">
                        <a href="#Flow-1123">
                            <span className="linenos">1123</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1124">
                        <a href="#Flow-1124">
                            <span className="linenos">1124</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="fm">__call__</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Flow[P, NoReturn]"</span>
                        <span className="p">,</span> <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span> <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1125">
                        <a href="#Flow-1125">
                            <span className="linenos">1125</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # `NoReturn` matches if a type can't be inferred for the function
                            which stops a
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1126">
                        <a href="#Flow-1126">
                            <span className="linenos">1126</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # sync function from matching the `Coroutine` overload
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1127">
                        <a href="#Flow-1127">
                            <span className="linenos">1127</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1128">
                        <a href="#Flow-1128">
                            <span className="linenos">1128</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1129">
                        <a href="#Flow-1129">
                            <span className="linenos">1129</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1130">
                        <a href="#Flow-1130">
                            <span className="linenos">1130</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="fm">__call__</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1131">
                        <a href="#Flow-1131">
                            <span className="linenos">1131</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Flow[P, Coroutine[Any, Any, T]]"</span>
                        <span className="p">,</span> <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span> <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1132">
                        <a href="#Flow-1132">
                            <span className="linenos">1132</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Awaitable</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1133">
                        <a href="#Flow-1133">
                            <span className="linenos">1133</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1134">
                        <a href="#Flow-1134">
                            <span className="linenos">1134</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1135">
                        <a href="#Flow-1135">
                            <span className="linenos">1135</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1136">
                        <a href="#Flow-1136">
                            <span className="linenos">1136</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="fm">__call__</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1137">
                        <a href="#Flow-1137">
                            <span className="linenos">1137</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Flow[P, T]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1138">
                        <a href="#Flow-1138">
                            <span className="linenos">1138</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1139">
                        <a href="#Flow-1139">
                            <span className="linenos">1139</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1140">
                        <a href="#Flow-1140">
                            <span className="linenos">1140</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">T</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1141">
                        <a href="#Flow-1141">
                            <span className="linenos">1141</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1142">
                        <a href="#Flow-1142">
                            <span className="linenos">1142</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1143">
                        <a href="#Flow-1143">
                            <span className="linenos">1143</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1144">
                        <a href="#Flow-1144">
                            <span className="linenos">1144</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="fm">__call__</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1145">
                        <a href="#Flow-1145">
                            <span className="linenos">1145</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Flow[P, T]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1146">
                        <a href="#Flow-1146">
                            <span className="linenos">1146</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1147">
                        <a href="#Flow-1147">
                            <span className="linenos">1147</span>
                        </a>
                        {"        "}
                        <span className="n">return_state</span>
                        <span className="p">:</span> <span className="n">Literal</span>
                        <span className="p">[</span>
                        <span className="kc">True</span>
                        <span className="p">],</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1148">
                        <a href="#Flow-1148">
                            <span className="linenos">1148</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1149">
                        <a href="#Flow-1149">
                            <span className="linenos">1149</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">State</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1150">
                        <a href="#Flow-1150">
                            <span className="linenos">1150</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1151">
                        <a href="#Flow-1151">
                            <span className="linenos">1151</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1152">
                        <a href="#Flow-1152">
                            <span className="linenos">1152</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="fm">__call__</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1153">
                        <a href="#Flow-1153">
                            <span className="linenos">1153</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1154">
                        <a href="#Flow-1154">
                            <span className="linenos">1154</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="s2">"P.args"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1155">
                        <a href="#Flow-1155">
                            <span className="linenos">1155</span>
                        </a>
                        {"        "}
                        <span className="n">return_state</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1156">
                        <a href="#Flow-1156">
                            <span className="linenos">1156</span>
                        </a>
                        {"        "}
                        <span className="n">wait_for</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="n">PrefectFuture</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1157">
                        <a href="#Flow-1157">
                            <span className="linenos">1157</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="s2">"P.kwargs"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1158">
                        <a href="#Flow-1158">
                            <span className="linenos">1158</span>
                        </a>
                        {"    "}
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1159">
                        <a href="#Flow-1159">
                            <span className="linenos">1159</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1160">
                        <a href="#Flow-1160">
                            <span className="linenos">1160</span>
                        </a>
                        <span className="sd">
                            {"        "}Run the flow and return its result.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1161">
                        <a href="#Flow-1161">
                            <span className="linenos">1161</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1162">
                        <a href="#Flow-1162">
                            <span className="linenos">1162</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1163">
                        <a href="#Flow-1163">
                            <span className="linenos">1163</span>
                        </a>
                        <span className="sd">
                            {"        "}Flow parameter values must be serializable by
                            Pydantic.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1164">
                        <a href="#Flow-1164">
                            <span className="linenos">1164</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1165">
                        <a href="#Flow-1165">
                            <span className="linenos">1165</span>
                        </a>
                        <span className="sd">
                            {"        "}If writing an async flow, this call must be awaited.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1166">
                        <a href="#Flow-1166">
                            <span className="linenos">1166</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1167">
                        <a href="#Flow-1167">
                            <span className="linenos">1167</span>
                        </a>
                        <span className="sd">
                            {"        "}This will create a new flow run in the API.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1168">
                        <a href="#Flow-1168">
                            <span className="linenos">1168</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1169">
                        <a href="#Flow-1169">
                            <span className="linenos">1169</span>
                        </a>
                        <span className="sd">{"        "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1170">
                        <a href="#Flow-1170">
                            <span className="linenos">1170</span>
                        </a>
                        <span className="sd">
                            {"            "}*args: Arguments to run the flow with.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1171">
                        <a href="#Flow-1171">
                            <span className="linenos">1171</span>
                        </a>
                        <span className="sd">
                            {"            "}return_state: Return a Prefect State containing
                            the result of the
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1172">
                        <a href="#Flow-1172">
                            <span className="linenos">1172</span>
                        </a>
                        <span className="sd">{"                "}flow run.</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1173">
                        <a href="#Flow-1173">
                            <span className="linenos">1173</span>
                        </a>
                        <span className="sd">
                            {"            "}wait_for: Upstream task futures to wait for before
                            starting the flow if called as a subflow
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1174">
                        <a href="#Flow-1174">
                            <span className="linenos">1174</span>
                        </a>
                        <span className="sd">
                            {"            "}**kwargs: Keyword arguments to run the flow with.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1175">
                        <a href="#Flow-1175">
                            <span className="linenos">1175</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1176">
                        <a href="#Flow-1176">
                            <span className="linenos">1176</span>
                        </a>
                        <span className="sd">{"        "}Returns:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1177">
                        <a href="#Flow-1177">
                            <span className="linenos">1177</span>
                        </a>
                        <span className="sd">
                            {"            "}If `return_state` is False, returns the result of
                            the flow run.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1178">
                        <a href="#Flow-1178">
                            <span className="linenos">1178</span>
                        </a>
                        <span className="sd">
                            {"            "}If `return_state` is True, returns the result of
                            the flow run
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1179">
                        <a href="#Flow-1179">
                            <span className="linenos">1179</span>
                        </a>
                        <span className="sd">
                            {"                "}wrapped in a Prefect State which provides
                            error handling.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1180">
                        <a href="#Flow-1180">
                            <span className="linenos">1180</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1181">
                        <a href="#Flow-1181">
                            <span className="linenos">1181</span>
                        </a>
                        <span className="sd">{"        "}Examples:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1182">
                        <a href="#Flow-1182">
                            <span className="linenos">1182</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1183">
                        <a href="#Flow-1183">
                            <span className="linenos">1183</span>
                        </a>
                        <span className="sd">{"            "}Define a flow</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1184">
                        <a href="#Flow-1184">
                            <span className="linenos">1184</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1185">
                        <a href="#Flow-1185">
                            <span className="linenos">1185</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1186">
                        <a href="#Flow-1186">
                            <span className="linenos">1186</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_flow(name):
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1187">
                        <a href="#Flow-1187">
                            <span className="linenos">1187</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}print(f"hello {"{"}name{"}"}
                            ")
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1188">
                        <a href="#Flow-1188">
                            <span className="linenos">1188</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}return f"goodbye {"{"}name
                            {"}"}"
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1189">
                        <a href="#Flow-1189">
                            <span className="linenos">1189</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1190">
                        <a href="#Flow-1190">
                            <span className="linenos">1190</span>
                        </a>
                        <span className="sd">{"            "}Run a flow</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1191">
                        <a href="#Flow-1191">
                            <span className="linenos">1191</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1192">
                        <a href="#Flow-1192">
                            <span className="linenos">1192</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; my_flow("marvin")
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1193">
                        <a href="#Flow-1193">
                            <span className="linenos">1193</span>
                        </a>
                        <span className="sd">{"            "}hello marvin</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1194">
                        <a href="#Flow-1194">
                            <span className="linenos">1194</span>
                        </a>
                        <span className="sd">{"            "}"goodbye marvin"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1195">
                        <a href="#Flow-1195">
                            <span className="linenos">1195</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1196">
                        <a href="#Flow-1196">
                            <span className="linenos">1196</span>
                        </a>
                        <span className="sd">
                            {"            "}Run a flow with additional tags
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1197">
                        <a href="#Flow-1197">
                            <span className="linenos">1197</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1198">
                        <a href="#Flow-1198">
                            <span className="linenos">1198</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; from prefect import tags
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1199">
                        <a href="#Flow-1199">
                            <span className="linenos">1199</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; with tags("db", "blue"):
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1200">
                        <a href="#Flow-1200">
                            <span className="linenos">1200</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}my_flow("foo")
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1201">
                        <a href="#Flow-1201">
                            <span className="linenos">1201</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1202">
                        <a href="#Flow-1202">
                            <span className="linenos">1202</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.engine</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">enter_flow_run_engine_from_flow_call</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1203">
                        <a href="#Flow-1203">
                            <span className="linenos">1203</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1204">
                        <a href="#Flow-1204">
                            <span className="linenos">1204</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # Convert the call args/kwargs to a parameter dict
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1205">
                        <a href="#Flow-1205">
                            <span className="linenos">1205</span>
                        </a>
                        {"        "}
                        <span className="n">
                            parameters
                        </span> <span className="o">=</span>{" "}
                        <span className="n">get_call_parameters</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">,</span> <span className="n">args</span>
                        <span className="p">,</span> <span className="n">kwargs</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1206">
                        <a href="#Flow-1206">
                            <span className="linenos">1206</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1207">
                        <a href="#Flow-1207">
                            <span className="linenos">1207</span>
                        </a>
                        {"        "}
                        <span className="n">
                            return_type
                        </span> <span className="o">=</span>{" "}
                        <span className="s2">"state"</span> <span className="k">if</span>{" "}
                        <span className="n">return_state</span>{" "}
                        <span className="k">else</span> <span className="s2">"result"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1208">
                        <a href="#Flow-1208">
                            <span className="linenos">1208</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1209">
                        <a href="#Flow-1209">
                            <span className="linenos">1209</span>
                        </a>
                        {"        "}
                        <span className="n">task_viz_tracker</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">get_task_viz_tracker</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1210">
                        <a href="#Flow-1210">
                            <span className="linenos">1210</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">task_viz_tracker</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1211">
                        <a href="#Flow-1211">
                            <span className="linenos">1211</span>
                        </a>
                        {"            "}
                        <span className="c1">
                            # this is a subflow, for now return a single task and do not go
                            further
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1212">
                        <a href="#Flow-1212">
                            <span className="linenos">1212</span>
                        </a>
                        {"            "}
                        <span className="c1">
                            # we can add support for exploring subflows for tasks in the
                            future.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1213">
                        <a href="#Flow-1213">
                            <span className="linenos">1213</span>
                        </a>
                        {"            "}
                        <span className="k">return</span>{" "}
                        <span className="n">track_viz_task</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">isasync</span>
                        <span className="p">,</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="p">,</span> <span className="n">parameters</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1214">
                        <a href="#Flow-1214">
                            <span className="linenos">1214</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1215">
                        <a href="#Flow-1215">
                            <span className="linenos">1215</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">PREFECT_EXPERIMENTAL_ENABLE_NEW_ENGINE</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">():</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1216">
                        <a href="#Flow-1216">
                            <span className="linenos">1216</span>
                        </a>
                        {"            "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.new_flow_engine</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">run_flow</span>
                        <span className="p">,</span>{" "}
                        <span className="n">run_flow_sync</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1217">
                        <a href="#Flow-1217">
                            <span className="linenos">1217</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1218">
                        <a href="#Flow-1218">
                            <span className="linenos">1218</span>
                        </a>
                        {"            "}
                        <span className="n">
                            run_kwargs
                        </span> <span className="o">=</span>{" "}
                        <span className="nb">dict</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1219">
                        <a href="#Flow-1219">
                            <span className="linenos">1219</span>
                        </a>
                        {"                "}
                        <span className="n">flow</span>
                        <span className="o">=</span>
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1220">
                        <a href="#Flow-1220">
                            <span className="linenos">1220</span>
                        </a>
                        {"                "}
                        <span className="n">parameters</span>
                        <span className="o">=</span>
                        <span className="n">parameters</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1221">
                        <a href="#Flow-1221">
                            <span className="linenos">1221</span>
                        </a>
                        {"                "}
                        <span className="n">wait_for</span>
                        <span className="o">=</span>
                        <span className="n">wait_for</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1222">
                        <a href="#Flow-1222">
                            <span className="linenos">1222</span>
                        </a>
                        {"                "}
                        <span className="n">return_type</span>
                        <span className="o">=</span>
                        <span className="n">return_type</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1223">
                        <a href="#Flow-1223">
                            <span className="linenos">1223</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1224">
                        <a href="#Flow-1224">
                            <span className="linenos">1224</span>
                        </a>
                        {"            "}
                        <span className="k">if</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">isasync</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1225">
                        <a href="#Flow-1225">
                            <span className="linenos">1225</span>
                        </a>
                        {"                "}
                        <span className="c1"># this returns an awaitable coroutine</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1226">
                        <a href="#Flow-1226">
                            <span className="linenos">1226</span>
                        </a>
                        {"                "}
                        <span className="k">return</span>{" "}
                        <span className="n">run_flow</span>
                        <span className="p">(</span>
                        <span className="o">**</span>
                        <span className="n">run_kwargs</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1227">
                        <a href="#Flow-1227">
                            <span className="linenos">1227</span>
                        </a>
                        {"            "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1228">
                        <a href="#Flow-1228">
                            <span className="linenos">1228</span>
                        </a>
                        {"                "}
                        <span className="k">return</span>{" "}
                        <span className="n">run_flow_sync</span>
                        <span className="p">(</span>
                        <span className="o">**</span>
                        <span className="n">run_kwargs</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1229">
                        <a href="#Flow-1229">
                            <span className="linenos">1229</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1230">
                        <a href="#Flow-1230">
                            <span className="linenos">1230</span>
                        </a>
                        {"        "}
                        <span className="k">return</span>{" "}
                        <span className="n">enter_flow_run_engine_from_flow_call</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1231">
                        <a href="#Flow-1231">
                            <span className="linenos">1231</span>
                        </a>
                        {"            "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1232">
                        <a href="#Flow-1232">
                            <span className="linenos">1232</span>
                        </a>
                        {"            "}
                        <span className="n">parameters</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1233">
                        <a href="#Flow-1233">
                            <span className="linenos">1233</span>
                        </a>
                        {"            "}
                        <span className="n">wait_for</span>
                        <span className="o">=</span>
                        <span className="n">wait_for</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1234">
                        <a href="#Flow-1234">
                            <span className="linenos">1234</span>
                        </a>
                        {"            "}
                        <span className="n">return_type</span>
                        <span className="o">=</span>
                        <span className="n">return_type</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1235">
                        <a href="#Flow-1235">
                            <span className="linenos">1235</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1236">
                        <a href="#Flow-1236">
                            <span className="linenos">1236</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1237">
                        <a href="#Flow-1237">
                            <span className="linenos">1237</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1238">
                        <a href="#Flow-1238">
                            <span className="linenos">1238</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">_run</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Flow[P, NoReturn]"</span>
                        <span className="p">,</span> <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span> <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">State</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1239">
                        <a href="#Flow-1239">
                            <span className="linenos">1239</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # `NoReturn` matches if a type can't be inferred for the function
                            which stops a
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1240">
                        <a href="#Flow-1240">
                            <span className="linenos">1240</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # sync function from matching the `Coroutine` overload
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1241">
                        <a href="#Flow-1241">
                            <span className="linenos">1241</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1242">
                        <a href="#Flow-1242">
                            <span className="linenos">1242</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1243">
                        <a href="#Flow-1243">
                            <span className="linenos">1243</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1244">
                        <a href="#Flow-1244">
                            <span className="linenos">1244</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">_run</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1245">
                        <a href="#Flow-1245">
                            <span className="linenos">1245</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Flow[P, Coroutine[Any, Any, T]]"</span>
                        <span className="p">,</span> <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span> <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1246">
                        <a href="#Flow-1246">
                            <span className="linenos">1246</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Awaitable</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1247">
                        <a href="#Flow-1247">
                            <span className="linenos">1247</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1248">
                        <a href="#Flow-1248">
                            <span className="linenos">1248</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1249">
                        <a href="#Flow-1249">
                            <span className="linenos">1249</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1250">
                        <a href="#Flow-1250">
                            <span className="linenos">1250</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">_run</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Flow[P, T]"</span>
                        <span className="p">,</span> <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span> <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">State</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1251">
                        <a href="#Flow-1251">
                            <span className="linenos">1251</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1252">
                        <a href="#Flow-1252">
                            <span className="linenos">1252</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1253">
                        <a href="#Flow-1253">
                            <span className="linenos">1253</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">_run</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1254">
                        <a href="#Flow-1254">
                            <span className="linenos">1254</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1255">
                        <a href="#Flow-1255">
                            <span className="linenos">1255</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="s2">"P.args"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1256">
                        <a href="#Flow-1256">
                            <span className="linenos">1256</span>
                        </a>
                        {"        "}
                        <span className="n">wait_for</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="n">PrefectFuture</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1257">
                        <a href="#Flow-1257">
                            <span className="linenos">1257</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="s2">"P.kwargs"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1258">
                        <a href="#Flow-1258">
                            <span className="linenos">1258</span>
                        </a>
                        {"    "}
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1259">
                        <a href="#Flow-1259">
                            <span className="linenos">1259</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1260">
                        <a href="#Flow-1260">
                            <span className="linenos">1260</span>
                        </a>
                        <span className="sd">
                            {"        "}Run the flow and return its final state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1261">
                        <a href="#Flow-1261">
                            <span className="linenos">1261</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1262">
                        <a href="#Flow-1262">
                            <span className="linenos">1262</span>
                        </a>
                        <span className="sd">{"        "}Examples:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1263">
                        <a href="#Flow-1263">
                            <span className="linenos">1263</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1264">
                        <a href="#Flow-1264">
                            <span className="linenos">1264</span>
                        </a>
                        <span className="sd">
                            {"            "}Run a flow and get the returned result
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1265">
                        <a href="#Flow-1265">
                            <span className="linenos">1265</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1266">
                        <a href="#Flow-1266">
                            <span className="linenos">1266</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; state = my_flow._run("marvin")
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1267">
                        <a href="#Flow-1267">
                            <span className="linenos">1267</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; state.result()
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1268">
                        <a href="#Flow-1268">
                            <span className="linenos">1268</span>
                        </a>
                        <span className="sd">{"           "}"goodbye marvin"</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1269">
                        <a href="#Flow-1269">
                            <span className="linenos">1269</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1270">
                        <a href="#Flow-1270">
                            <span className="linenos">1270</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.engine</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">enter_flow_run_engine_from_flow_call</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1271">
                        <a href="#Flow-1271">
                            <span className="linenos">1271</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1272">
                        <a href="#Flow-1272">
                            <span className="linenos">1272</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # Convert the call args/kwargs to a parameter dict
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1273">
                        <a href="#Flow-1273">
                            <span className="linenos">1273</span>
                        </a>
                        {"        "}
                        <span className="n">
                            parameters
                        </span> <span className="o">=</span>{" "}
                        <span className="n">get_call_parameters</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">,</span> <span className="n">args</span>
                        <span className="p">,</span> <span className="n">kwargs</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1274">
                        <a href="#Flow-1274">
                            <span className="linenos">1274</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1275">
                        <a href="#Flow-1275">
                            <span className="linenos">1275</span>
                        </a>
                        {"        "}
                        <span className="k">return</span>{" "}
                        <span className="n">enter_flow_run_engine_from_flow_call</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1276">
                        <a href="#Flow-1276">
                            <span className="linenos">1276</span>
                        </a>
                        {"            "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1277">
                        <a href="#Flow-1277">
                            <span className="linenos">1277</span>
                        </a>
                        {"            "}
                        <span className="n">parameters</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1278">
                        <a href="#Flow-1278">
                            <span className="linenos">1278</span>
                        </a>
                        {"            "}
                        <span className="n">wait_for</span>
                        <span className="o">=</span>
                        <span className="n">wait_for</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1279">
                        <a href="#Flow-1279">
                            <span className="linenos">1279</span>
                        </a>
                        {"            "}
                        <span className="n">return_type</span>
                        <span className="o">=</span>
                        <span className="s2">"state"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1280">
                        <a href="#Flow-1280">
                            <span className="linenos">1280</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1281">
                        <a href="#Flow-1281">
                            <span className="linenos">1281</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1282">
                        <a href="#Flow-1282">
                            <span className="linenos">1282</span>
                        </a>
                        {"    "}
                        <span className="nd">@sync_compatible</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1283">
                        <a href="#Flow-1283">
                            <span className="linenos">1283</span>
                        </a>
                        {"    "}
                        <span className="k">async</span> <span className="k">def</span>{" "}
                        <span className="nf">visualize</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">,</span> <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">,</span> <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1284">
                        <a href="#Flow-1284">
                            <span className="linenos">1284</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1285">
                        <a href="#Flow-1285">
                            <span className="linenos">1285</span>
                        </a>
                        <span className="sd">
                            {"        "}Generates a graphviz object representing the current
                            flow. In IPython notebooks,
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1286">
                        <a href="#Flow-1286">
                            <span className="linenos">1286</span>
                        </a>
                        <span className="sd">
                            {"        "}it's rendered inline, otherwise in a new window as a
                            PNG.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1287">
                        <a href="#Flow-1287">
                            <span className="linenos">1287</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1288">
                        <a href="#Flow-1288">
                            <span className="linenos">1288</span>
                        </a>
                        <span className="sd">{"        "}Raises:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1289">
                        <a href="#Flow-1289">
                            <span className="linenos">1289</span>
                        </a>
                        <span className="sd">
                            {"            "}- ImportError: If `graphviz` isn't installed.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1290">
                        <a href="#Flow-1290">
                            <span className="linenos">1290</span>
                        </a>
                        <span className="sd">
                            {"            "}- GraphvizExecutableNotFoundError: If the `dot`
                            executable isn't found.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1291">
                        <a href="#Flow-1291">
                            <span className="linenos">1291</span>
                        </a>
                        <span className="sd">
                            {"            "}- FlowVisualizationError: If the flow can't be
                            visualized for any other reason.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1292">
                        <a href="#Flow-1292">
                            <span className="linenos">1292</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1293">
                        <a href="#Flow-1293">
                            <span className="linenos">1293</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">PREFECT_UNIT_TEST_MODE</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1294">
                        <a href="#Flow-1294">
                            <span className="linenos">1294</span>
                        </a>
                        {"            "}
                        <span className="n">warnings</span>
                        <span className="o">.</span>
                        <span className="n">warn</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1295">
                        <a href="#Flow-1295">
                            <span className="linenos">1295</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            "`flow.visualize()` will execute code inside of your flow that is
                            not"
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1296">
                        <a href="#Flow-1296">
                            <span className="linenos">1296</span>
                        </a>
                        {"                "}
                        <span className="s2">" decorated with `@task` or `@flow`."</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1297">
                        <a href="#Flow-1297">
                            <span className="linenos">1297</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1298">
                        <a href="#Flow-1298">
                            <span className="linenos">1298</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1299">
                        <a href="#Flow-1299">
                            <span className="linenos">1299</span>
                        </a>
                        {"        "}
                        <span className="k">try</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1300">
                        <a href="#Flow-1300">
                            <span className="linenos">1300</span>
                        </a>
                        {"            "}
                        <span className="k">with</span>{" "}
                        <span className="n">TaskVizTracker</span>
                        <span className="p">()</span> <span className="k">as</span>{" "}
                        <span className="n">tracker</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1301">
                        <a href="#Flow-1301">
                            <span className="linenos">1301</span>
                        </a>
                        {"                "}
                        <span className="k">if</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">isasync</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1302">
                        <a href="#Flow-1302">
                            <span className="linenos">1302</span>
                        </a>
                        {"                    "}
                        <span className="k">await</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">(</span>
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">,</span> <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1303">
                        <a href="#Flow-1303">
                            <span className="linenos">1303</span>
                        </a>
                        {"                "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1304">
                        <a href="#Flow-1304">
                            <span className="linenos">1304</span>
                        </a>
                        {"                    "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">(</span>
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">,</span> <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1305">
                        <a href="#Flow-1305">
                            <span className="linenos">1305</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1306">
                        <a href="#Flow-1306">
                            <span className="linenos">1306</span>
                        </a>
                        {"                "}
                        <span className="n">graph</span> <span className="o">=</span>{" "}
                        <span className="n">build_task_dependencies</span>
                        <span className="p">(</span>
                        <span className="n">tracker</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1307">
                        <a href="#Flow-1307">
                            <span className="linenos">1307</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1308">
                        <a href="#Flow-1308">
                            <span className="linenos">1308</span>
                        </a>
                        {"                "}
                        <span className="n">visualize_task_dependencies</span>
                        <span className="p">(</span>
                        <span className="n">graph</span>
                        <span className="p">,</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1309">
                        <a href="#Flow-1309">
                            <span className="linenos">1309</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1310">
                        <a href="#Flow-1310">
                            <span className="linenos">1310</span>
                        </a>
                        {"        "}
                        <span className="k">except</span>{" "}
                        <span className="n">GraphvizImportError</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1311">
                        <a href="#Flow-1311">
                            <span className="linenos">1311</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1312">
                        <a href="#Flow-1312">
                            <span className="linenos">1312</span>
                        </a>
                        {"        "}
                        <span className="k">except</span>{" "}
                        <span className="n">GraphvizExecutableNotFoundError</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1313">
                        <a href="#Flow-1313">
                            <span className="linenos">1313</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1314">
                        <a href="#Flow-1314">
                            <span className="linenos">1314</span>
                        </a>
                        {"        "}
                        <span className="k">except</span>{" "}
                        <span className="n">VisualizationUnsupportedError</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1315">
                        <a href="#Flow-1315">
                            <span className="linenos">1315</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1316">
                        <a href="#Flow-1316">
                            <span className="linenos">1316</span>
                        </a>
                        {"        "}
                        <span className="k">except</span>{" "}
                        <span className="n">FlowVisualizationError</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1317">
                        <a href="#Flow-1317">
                            <span className="linenos">1317</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1318">
                        <a href="#Flow-1318">
                            <span className="linenos">1318</span>
                        </a>
                        {"        "}
                        <span className="k">except</span>{" "}
                        <span className="ne">Exception</span> <span className="k">as</span>{" "}
                        <span className="n">e</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1319">
                        <a href="#Flow-1319">
                            <span className="linenos">1319</span>
                        </a>
                        {"            "}
                        <span className="n">msg</span> <span className="o">=</span>{" "}
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1320">
                        <a href="#Flow-1320">
                            <span className="linenos">1320</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            "It's possible you are trying to visualize a flow that contains "
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1321">
                        <a href="#Flow-1321">
                            <span className="linenos">1321</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            "code that directly interacts with the result of a task"
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1322">
                        <a href="#Flow-1322">
                            <span className="linenos">1322</span>
                        </a>
                        {"                "}
                        <span className="s2">" inside of the flow. </span>
                        <span className="se">\n</span>
                        <span className="s2">Try passing a `viz_return_value` "</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1323">
                        <a href="#Flow-1323">
                            <span className="linenos">1323</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            "to the task decorator, e.g. `@task(viz_return_value=[1, 2, 3]).`"
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1324">
                        <a href="#Flow-1324">
                            <span className="linenos">1324</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1325">
                        <a href="#Flow-1325">
                            <span className="linenos">1325</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Flow-1326">
                        <a href="#Flow-1326">
                            <span className="linenos">1326</span>
                        </a>
                        {"            "}
                        <span className="n">new_exception</span>{" "}
                        <span className="o">=</span> <span className="nb">type</span>
                        <span className="p">(</span>
                        <span className="n">e</span>
                        <span className="p">)(</span>
                        <span className="nb">str</span>
                        <span className="p">(</span>
                        <span className="n">e</span>
                        <span className="p">)</span> <span className="o">+</span>{" "}
                        <span className="s2">"</span>
                        <span className="se">\n</span>
                        <span className="s2">"</span> <span className="o">+</span>{" "}
                        <span className="n">msg</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1327">
                        <a href="#Flow-1327">
                            <span className="linenos">1327</span>
                        </a>
                        {"            "}
                        <span className="c1">
                            # Copy traceback information from the original exception
                        </span>
                        {"\n"}
                    </span>
                    <span id="Flow-1328">
                        <a href="#Flow-1328">
                            <span className="linenos">1328</span>
                        </a>
                        {"            "}
                        <span className="n">new_exception</span>
                        <span className="o">.</span>
                        <span className="n">__traceback__</span>{" "}
                        <span className="o">=</span> <span className="n">e</span>
                        <span className="o">.</span>
                        <span className="n">__traceback__</span>
                        {"\n"}
                    </span>
                    <span id="Flow-1329">
                        <a href="#Flow-1329">
                            <span className="linenos">1329</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="n">new_exception</span>
                        {"\n"}
                    </span>
                </pre>
            </div>
            <div className="docstring">
                <p>A Prefect workflow definition.</p>
                <p>
                    !!! note We recommend using the [<code>@flow</code> decorator][
                    <a href="#flow">flow</a>] for most use-cases.
                </p>
                <p>
                    Wraps a function with an entrypoint to the Prefect engine. To preserve
                    the input and output types, we use the generic type variables{" "}
                    <code>P</code> and <code>R</code> for "Parameters" and "Returns"
                    respectively.
                </p>
                <p>
                    Args: fn: The function defining the workflow. name: An optional name
                    for the flow; if not provided, the name will be inferred from the
                    given function. version: An optional version string for the flow; if
                    not provided, we will attempt to create a version string as a hash of
                    the file containing the wrapped function; if the file cannot be
                    located, the version will be null. flow_run_name: An optional name to
                    distinguish runs of this flow; this name can be provided as a string
                    template with the flow's parameters as variables, or a function that
                    returns a string. task_runner: An optional task runner to use for task
                    execution within the flow; if not provided, a{" "}
                    <code>ConcurrentTaskRunner</code> will be used. description: An
                    optional string description for the flow; if not provided, the
                    description will be pulled from the docstring for the decorated
                    function. timeout_seconds: An optional number of seconds indicating a
                    maximum runtime for the flow. If the flow exceeds this runtime, it
                    will be marked as failed. Flow execution may continue until the next
                    task is called. validate_parameters: By default, parameters passed to
                    flows are validated by Pydantic. This will check that input values
                    conform to the annotated types on the function. Where possible, values
                    will be coerced into the correct type; for example, if a parameter is
                    defined as <code>x: int</code> and "5" is passed, it will be resolved
                    to <code>5</code>. If set to <code>False</code>, no validation will be
                    performed on flow parameters. retries: An optional number of times to
                    retry on flow run failure. retry_delay_seconds: An optional number of
                    seconds to wait before retrying the flow after failure. This is only
                    applicable if{" "}
                    <code>
                        <a href="#Flow.retries">retries</a>
                    </code>{" "}
                    is nonzero. persist_result: An optional toggle indicating whether the
                    result of this flow should be persisted to result storage. Defaults to{" "}
                    <code>None</code>, which indicates that Prefect should choose whether
                    the result should be persisted depending on the features being used.
                    result_storage: An optional block to use to persist the result of this
                    flow. This value will be used as the default for any tasks in this
                    flow. If not provided, the local file system will be used unless
                    called as a subflow, at which point the default will be loaded from
                    the parent flow. result_serializer: An optional serializer to use to
                    serialize the result of this flow for persistence. This value will be
                    used as the default for any tasks in this flow. If not provided, the
                    value of <code>PREFECT_RESULTS_DEFAULT_SERIALIZER</code>
                    will be used unless called as a subflow, at which point the default
                    will be loaded from the parent flow. on_failure: An optional list of
                    callables to run when the flow enters a failed state. on_completion:
                    An optional list of callables to run when the flow enters a completed
                    state. on_cancellation: An optional list of callables to run when the
                    flow enters a cancelling state. on_crashed: An optional list of
                    callables to run when the flow enters a crashed state. on_running: An
                    optional list of callables to run when the flow enters a running
                    state.
                </p>
            </div>
            <div id="Flow.__init__" className="classattr">
                <input
                    id="Flow.__init__-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="name">Flow</span>
                    <span className="signature pdoc-code multiline">
                        (
                        <span className="param">
                            <span className="n">fn</span>
                            <span className="p">:</span> <span className="n">Callable</span>
                            <span className="p">[</span>
                            <span className="o">~</span>
                            <span className="n">P</span>
                            <span className="p">,</span> <span className="o">~</span>
                            <span className="n">R</span>
                            <span className="p">]</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">version</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">flow_run_name</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[],</span> <span className="nb">str</span>
                            <span className="p">],</span> <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">retries</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">retry_delay_seconds</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            task_runner: Union[Type[prefect.task_runners.BaseTaskRunner],
                            prefect.task_runners.BaseTaskRunner] = &lt;class
                            'prefect.task_runners.ConcurrentTaskRunner'&gt;,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">description</span>
                            <span className="p">:</span> <span className="nb">str</span>{" "}
                            <span className="o">=</span> <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">timeout_seconds</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">validate_parameters</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">True</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">persist_result</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">result_storage</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">filesystems</span>
                            <span className="o">.</span>
                            <span className="n">WritableFileSystem</span>
                            <span className="p">,</span> <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">result_serializer</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">serializers</span>
                            <span className="o">.</span>
                            <span className="n">Serializer</span>
                            <span className="p">,</span> <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">cache_result_in_memory</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">True</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">log_prints</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">on_completion</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">Flow</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">FlowRun</span>
                            <span className="p">,</span>{" "}
                            <span className="n">
                                <a href="#State">State</a>
                            </span>
                            <span className="p">],</span> <span className="n">NoneType</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">on_failure</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">Flow</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">FlowRun</span>
                            <span className="p">,</span>{" "}
                            <span className="n">
                                <a href="#State">State</a>
                            </span>
                            <span className="p">],</span> <span className="n">NoneType</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">on_cancellation</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">Flow</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">FlowRun</span>
                            <span className="p">,</span>{" "}
                            <span className="n">
                                <a href="#State">State</a>
                            </span>
                            <span className="p">],</span> <span className="n">NoneType</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">on_crashed</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">Flow</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">FlowRun</span>
                            <span className="p">,</span>{" "}
                            <span className="n">
                                <a href="#State">State</a>
                            </span>
                            <span className="p">],</span> <span className="n">NoneType</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">on_running</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">Flow</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">FlowRun</span>
                            <span className="p">,</span>{" "}
                            <span className="n">
                                <a href="#State">State</a>
                            </span>
                            <span className="p">],</span> <span className="n">NoneType</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                        </span>
                        )
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="Flow.__init__-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#Flow.__init__" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="Flow.__init__-192">
                            <a href="#Flow.__init__-192">
                                <span className="linenos">192</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="fm">__init__</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-193">
                            <a href="#Flow.__init__-193">
                                <span className="linenos">193</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-194">
                            <a href="#Flow.__init__-194">
                                <span className="linenos">194</span>
                            </a>
                            {"        "}
                            <span className="n">fn</span>
                            <span className="p">:</span> <span className="n">Callable</span>
                            <span className="p">[</span>
                            <span className="n">P</span>
                            <span className="p">,</span> <span className="n">R</span>
                            <span className="p">],</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-195">
                            <a href="#Flow.__init__-195">
                                <span className="linenos">195</span>
                            </a>
                            {"        "}
                            <span className="n">name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-196">
                            <a href="#Flow.__init__-196">
                                <span className="linenos">196</span>
                            </a>
                            {"        "}
                            <span className="n">version</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-197">
                            <a href="#Flow.__init__-197">
                                <span className="linenos">197</span>
                            </a>
                            {"        "}
                            <span className="n">flow_run_name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[],</span> <span className="nb">str</span>
                            <span className="p">],</span> <span className="nb">str</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-198">
                            <a href="#Flow.__init__-198">
                                <span className="linenos">198</span>
                            </a>
                            {"        "}
                            <span className="n">retries</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-199">
                            <a href="#Flow.__init__-199">
                                <span className="linenos">199</span>
                            </a>
                            {"        "}
                            <span className="n">retry_delay_seconds</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-200">
                            <a href="#Flow.__init__-200">
                                <span className="linenos">200</span>
                            </a>
                            {"        "}
                            <span className="n">task_runner</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Type</span>
                            <span className="p">[</span>
                            <span className="n">BaseTaskRunner</span>
                            <span className="p">],</span>{" "}
                            <span className="n">BaseTaskRunner</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="n">ConcurrentTaskRunner</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-201">
                            <a href="#Flow.__init__-201">
                                <span className="linenos">201</span>
                            </a>
                            {"        "}
                            <span className="n">description</span>
                            <span className="p">:</span> <span className="nb">str</span>{" "}
                            <span className="o">=</span> <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-202">
                            <a href="#Flow.__init__-202">
                                <span className="linenos">202</span>
                            </a>
                            {"        "}
                            <span className="n">timeout_seconds</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-203">
                            <a href="#Flow.__init__-203">
                                <span className="linenos">203</span>
                            </a>
                            {"        "}
                            <span className="n">validate_parameters</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">True</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-204">
                            <a href="#Flow.__init__-204">
                                <span className="linenos">204</span>
                            </a>
                            {"        "}
                            <span className="n">persist_result</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-205">
                            <a href="#Flow.__init__-205">
                                <span className="linenos">205</span>
                            </a>
                            {"        "}
                            <span className="n">result_storage</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">ResultStorage</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-206">
                            <a href="#Flow.__init__-206">
                                <span className="linenos">206</span>
                            </a>
                            {"        "}
                            <span className="n">result_serializer</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">ResultSerializer</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-207">
                            <a href="#Flow.__init__-207">
                                <span className="linenos">207</span>
                            </a>
                            {"        "}
                            <span className="n">cache_result_in_memory</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">True</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-208">
                            <a href="#Flow.__init__-208">
                                <span className="linenos">208</span>
                            </a>
                            {"        "}
                            <span className="n">log_prints</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-209">
                            <a href="#Flow.__init__-209">
                                <span className="linenos">209</span>
                            </a>
                            {"        "}
                            <span className="n">on_completion</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-210">
                            <a href="#Flow.__init__-210">
                                <span className="linenos">210</span>
                            </a>
                            {"            "}
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">FlowSchema</span>
                            <span className="p">,</span> <span className="n">FlowRun</span>
                            <span className="p">,</span> <span className="n">State</span>
                            <span className="p">],</span> <span className="kc">None</span>
                            <span className="p">]]</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-211">
                            <a href="#Flow.__init__-211">
                                <span className="linenos">211</span>
                            </a>
                            {"        "}
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-212">
                            <a href="#Flow.__init__-212">
                                <span className="linenos">212</span>
                            </a>
                            {"        "}
                            <span className="n">on_failure</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">FlowSchema</span>
                            <span className="p">,</span> <span className="n">FlowRun</span>
                            <span className="p">,</span> <span className="n">State</span>
                            <span className="p">],</span> <span className="kc">None</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-213">
                            <a href="#Flow.__init__-213">
                                <span className="linenos">213</span>
                            </a>
                            {"        "}
                            <span className="n">on_cancellation</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-214">
                            <a href="#Flow.__init__-214">
                                <span className="linenos">214</span>
                            </a>
                            {"            "}
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">FlowSchema</span>
                            <span className="p">,</span> <span className="n">FlowRun</span>
                            <span className="p">,</span> <span className="n">State</span>
                            <span className="p">],</span> <span className="kc">None</span>
                            <span className="p">]]</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-215">
                            <a href="#Flow.__init__-215">
                                <span className="linenos">215</span>
                            </a>
                            {"        "}
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-216">
                            <a href="#Flow.__init__-216">
                                <span className="linenos">216</span>
                            </a>
                            {"        "}
                            <span className="n">on_crashed</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">FlowSchema</span>
                            <span className="p">,</span> <span className="n">FlowRun</span>
                            <span className="p">,</span> <span className="n">State</span>
                            <span className="p">],</span> <span className="kc">None</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-217">
                            <a href="#Flow.__init__-217">
                                <span className="linenos">217</span>
                            </a>
                            {"        "}
                            <span className="n">on_running</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">FlowSchema</span>
                            <span className="p">,</span> <span className="n">FlowRun</span>
                            <span className="p">,</span> <span className="n">State</span>
                            <span className="p">],</span> <span className="kc">None</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-218">
                            <a href="#Flow.__init__-218">
                                <span className="linenos">218</span>
                            </a>
                            {"    "}
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-219">
                            <a href="#Flow.__init__-219">
                                <span className="linenos">219</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="n">name</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="kc">None</span> <span className="ow">and</span>{" "}
                            <span className="ow">not</span>{" "}
                            <span className="nb">isinstance</span>
                            <span className="p">(</span>
                            <span className="n">name</span>
                            <span className="p">,</span> <span className="nb">str</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-220">
                            <a href="#Flow.__init__-220">
                                <span className="linenos">220</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">TypeError</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-221">
                            <a href="#Flow.__init__-221">
                                <span className="linenos">221</span>
                            </a>
                            {"                "}
                            <span className="s2">
                                "Expected string for flow parameter 'name'; got{" "}
                            </span>
                            <span className="si">
                                {"{"}
                                {"}"}
                            </span>
                            <span className="s2"> instead. </span>
                            <span className="si">
                                {"{"}
                                {"}"}
                            </span>
                            <span className="s2">"</span>
                            <span className="o">.</span>
                            <span className="n">format</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-222">
                            <a href="#Flow.__init__-222">
                                <span className="linenos">222</span>
                            </a>
                            {"                    "}
                            <span className="nb">type</span>
                            <span className="p">(</span>
                            <span className="n">name</span>
                            <span className="p">)</span>
                            <span className="o">.</span>
                            <span className="vm">__name__</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-223">
                            <a href="#Flow.__init__-223">
                                <span className="linenos">223</span>
                            </a>
                            {"                    "}
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-224">
                            <a href="#Flow.__init__-224">
                                <span className="linenos">224</span>
                            </a>
                            {"                        "}
                            <span className="s2">"Perhaps you meant to call it? e.g."</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-225">
                            <a href="#Flow.__init__-225">
                                <span className="linenos">225</span>
                            </a>
                            {"                        "}
                            <span className="s2">" '@flow(name=get_flow_run_name())'"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-226">
                            <a href="#Flow.__init__-226">
                                <span className="linenos">226</span>
                            </a>
                            {"                        "}
                            <span className="k">if</span> <span className="nb">callable</span>
                            <span className="p">(</span>
                            <span className="n">name</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-227">
                            <a href="#Flow.__init__-227">
                                <span className="linenos">227</span>
                            </a>
                            {"                        "}
                            <span className="k">else</span> <span className="s2">""</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-228">
                            <a href="#Flow.__init__-228">
                                <span className="linenos">228</span>
                            </a>
                            {"                    "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-229">
                            <a href="#Flow.__init__-229">
                                <span className="linenos">229</span>
                            </a>
                            {"                "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-230">
                            <a href="#Flow.__init__-230">
                                <span className="linenos">230</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-231">
                            <a href="#Flow.__init__-231">
                                <span className="linenos">231</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-232">
                            <a href="#Flow.__init__-232">
                                <span className="linenos">232</span>
                            </a>
                            {"        "}
                            <span className="c1">
                                # Validate if hook passed is list and contains callables
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-233">
                            <a href="#Flow.__init__-233">
                                <span className="linenos">233</span>
                            </a>
                            {"        "}
                            <span className="n">hook_categories</span>{" "}
                            <span className="o">=</span> <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-234">
                            <a href="#Flow.__init__-234">
                                <span className="linenos">234</span>
                            </a>
                            {"            "}
                            <span className="n">on_completion</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-235">
                            <a href="#Flow.__init__-235">
                                <span className="linenos">235</span>
                            </a>
                            {"            "}
                            <span className="n">on_failure</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-236">
                            <a href="#Flow.__init__-236">
                                <span className="linenos">236</span>
                            </a>
                            {"            "}
                            <span className="n">on_cancellation</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-237">
                            <a href="#Flow.__init__-237">
                                <span className="linenos">237</span>
                            </a>
                            {"            "}
                            <span className="n">on_crashed</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-238">
                            <a href="#Flow.__init__-238">
                                <span className="linenos">238</span>
                            </a>
                            {"            "}
                            <span className="n">on_running</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-239">
                            <a href="#Flow.__init__-239">
                                <span className="linenos">239</span>
                            </a>
                            {"        "}
                            <span className="p">]</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-240">
                            <a href="#Flow.__init__-240">
                                <span className="linenos">240</span>
                            </a>
                            {"        "}
                            <span className="n">
                                hook_names
                            </span> <span className="o">=</span> <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-241">
                            <a href="#Flow.__init__-241">
                                <span className="linenos">241</span>
                            </a>
                            {"            "}
                            <span className="s2">"on_completion"</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-242">
                            <a href="#Flow.__init__-242">
                                <span className="linenos">242</span>
                            </a>
                            {"            "}
                            <span className="s2">"on_failure"</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-243">
                            <a href="#Flow.__init__-243">
                                <span className="linenos">243</span>
                            </a>
                            {"            "}
                            <span className="s2">"on_cancellation"</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-244">
                            <a href="#Flow.__init__-244">
                                <span className="linenos">244</span>
                            </a>
                            {"            "}
                            <span className="s2">"on_crashed"</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-245">
                            <a href="#Flow.__init__-245">
                                <span className="linenos">245</span>
                            </a>
                            {"            "}
                            <span className="s2">"on_running"</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-246">
                            <a href="#Flow.__init__-246">
                                <span className="linenos">246</span>
                            </a>
                            {"        "}
                            <span className="p">]</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-247">
                            <a href="#Flow.__init__-247">
                                <span className="linenos">247</span>
                            </a>
                            {"        "}
                            <span className="k">for</span> <span className="n">hooks</span>
                            <span className="p">
                                ,
                            </span> <span className="n">hook_name</span>{" "}
                            <span className="ow">in</span> <span className="nb">zip</span>
                            <span className="p">(</span>
                            <span className="n">hook_categories</span>
                            <span className="p">,</span> <span className="n">hook_names</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-248">
                            <a href="#Flow.__init__-248">
                                <span className="linenos">248</span>
                            </a>
                            {"            "}
                            <span className="k">
                                if
                            </span> <span className="n">hooks</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-249">
                            <a href="#Flow.__init__-249">
                                <span className="linenos">249</span>
                            </a>
                            {"                "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="n">hooks</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-250">
                            <a href="#Flow.__init__-250">
                                <span className="linenos">250</span>
                            </a>
                            {"                    "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">ValueError</span>
                            <span className="p">(</span>
                            <span className="sa">f</span>
                            <span className="s2">"Empty list passed for '</span>
                            <span className="si">{"{"}</span>
                            <span className="n">hook_name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">'"</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-251">
                            <a href="#Flow.__init__-251">
                                <span className="linenos">251</span>
                            </a>
                            {"                "}
                            <span className="k">try</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-252">
                            <a href="#Flow.__init__-252">
                                <span className="linenos">252</span>
                            </a>
                            {"                    "}
                            <span className="n">hooks</span> <span className="o">=</span>{" "}
                            <span className="nb">list</span>
                            <span className="p">(</span>
                            <span className="n">hooks</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-253">
                            <a href="#Flow.__init__-253">
                                <span className="linenos">253</span>
                            </a>
                            {"                "}
                            <span className="k">except</span>{" "}
                            <span className="ne">TypeError</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-254">
                            <a href="#Flow.__init__-254">
                                <span className="linenos">254</span>
                            </a>
                            {"                    "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">TypeError</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-255">
                            <a href="#Flow.__init__-255">
                                <span className="linenos">255</span>
                            </a>
                            {"                        "}
                            <span className="sa">f</span>
                            <span className="s2">"Expected iterable for '</span>
                            <span className="si">{"{"}</span>
                            <span className="n">hook_name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">'; got"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-256">
                            <a href="#Flow.__init__-256">
                                <span className="linenos">256</span>
                            </a>
                            {"                        "}
                            <span className="sa">f</span>
                            <span className="s2">" </span>
                            <span className="si">{"{"}</span>
                            <span className="nb">type</span>
                            <span className="p">(</span>
                            <span className="n">hooks</span>
                            <span className="p">)</span>
                            <span className="o">.</span>
                            <span className="vm">__name__</span>
                            <span className="si">{"}"}</span>
                            <span className="s2"> instead. Please provide a list of"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-257">
                            <a href="#Flow.__init__-257">
                                <span className="linenos">257</span>
                            </a>
                            {"                        "}
                            <span className="sa">f</span>
                            <span className="s2">" hooks to '</span>
                            <span className="si">{"{"}</span>
                            <span className="n">hook_name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">':</span>
                            <span className="se">\n\n</span>
                            <span className="s2">"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-258">
                            <a href="#Flow.__init__-258">
                                <span className="linenos">258</span>
                            </a>
                            {"                        "}
                            <span className="sa">f</span>
                            <span className="s2">"@flow(</span>
                            <span className="si">{"{"}</span>
                            <span className="n">hook_name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">=[hook1, hook2])</span>
                            <span className="se">\n</span>
                            <span className="s2">def"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-259">
                            <a href="#Flow.__init__-259">
                                <span className="linenos">259</span>
                            </a>
                            {"                        "}
                            <span className="s2">" my_flow():</span>
                            <span className="se">\n\t</span>
                            <span className="s2">pass"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-260">
                            <a href="#Flow.__init__-260">
                                <span className="linenos">260</span>
                            </a>
                            {"                    "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-261">
                            <a href="#Flow.__init__-261">
                                <span className="linenos">261</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-262">
                            <a href="#Flow.__init__-262">
                                <span className="linenos">262</span>
                            </a>
                            {"                "}
                            <span className="k">
                                for
                            </span> <span className="n">hook</span>{" "}
                            <span className="ow">in</span> <span className="n">hooks</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-263">
                            <a href="#Flow.__init__-263">
                                <span className="linenos">263</span>
                            </a>
                            {"                    "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="nb">callable</span>
                            <span className="p">(</span>
                            <span className="n">hook</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-264">
                            <a href="#Flow.__init__-264">
                                <span className="linenos">264</span>
                            </a>
                            {"                        "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">TypeError</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-265">
                            <a href="#Flow.__init__-265">
                                <span className="linenos">265</span>
                            </a>
                            {"                            "}
                            <span className="sa">f</span>
                            <span className="s2">"Expected callables in '</span>
                            <span className="si">{"{"}</span>
                            <span className="n">hook_name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">'; got"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-266">
                            <a href="#Flow.__init__-266">
                                <span className="linenos">266</span>
                            </a>
                            {"                            "}
                            <span className="sa">f</span>
                            <span className="s2">" </span>
                            <span className="si">{"{"}</span>
                            <span className="nb">type</span>
                            <span className="p">(</span>
                            <span className="n">hook</span>
                            <span className="p">)</span>
                            <span className="o">.</span>
                            <span className="vm">__name__</span>
                            <span className="si">{"}"}</span>
                            <span className="s2"> instead. Please provide a list of"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-267">
                            <a href="#Flow.__init__-267">
                                <span className="linenos">267</span>
                            </a>
                            {"                            "}
                            <span className="sa">f</span>
                            <span className="s2">" hooks to '</span>
                            <span className="si">{"{"}</span>
                            <span className="n">hook_name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">':</span>
                            <span className="se">\n\n</span>
                            <span className="s2">"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-268">
                            <a href="#Flow.__init__-268">
                                <span className="linenos">268</span>
                            </a>
                            {"                            "}
                            <span className="sa">f</span>
                            <span className="s2">"@flow(</span>
                            <span className="si">{"{"}</span>
                            <span className="n">hook_name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">=[hook1, hook2])</span>
                            <span className="se">\n</span>
                            <span className="s2">def"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-269">
                            <a href="#Flow.__init__-269">
                                <span className="linenos">269</span>
                            </a>
                            {"                            "}
                            <span className="s2">" my_flow():</span>
                            <span className="se">\n\t</span>
                            <span className="s2">pass"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-270">
                            <a href="#Flow.__init__-270">
                                <span className="linenos">270</span>
                            </a>
                            {"                        "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-271">
                            <a href="#Flow.__init__-271">
                                <span className="linenos">271</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-272">
                            <a href="#Flow.__init__-272">
                                <span className="linenos">272</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="nb">callable</span>
                            <span className="p">(</span>
                            <span className="n">fn</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-273">
                            <a href="#Flow.__init__-273">
                                <span className="linenos">273</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">TypeError</span>
                            <span className="p">(</span>
                            <span className="s2">"'fn' must be callable"</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-274">
                            <a href="#Flow.__init__-274">
                                <span className="linenos">274</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-275">
                            <a href="#Flow.__init__-275">
                                <span className="linenos">275</span>
                            </a>
                            {"        "}
                            <span className="c1"># Validate name if given</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-276">
                            <a href="#Flow.__init__-276">
                                <span className="linenos">276</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="n">name</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-277">
                            <a href="#Flow.__init__-277">
                                <span className="linenos">277</span>
                            </a>
                            {"            "}
                            <span className="n">raise_on_name_with_banned_characters</span>
                            <span className="p">(</span>
                            <span className="n">name</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-278">
                            <a href="#Flow.__init__-278">
                                <span className="linenos">278</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-279">
                            <a href="#Flow.__init__-279">
                                <span className="linenos">279</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">name</span> <span className="o">=</span>{" "}
                            <span className="n">name</span> <span className="ow">or</span>{" "}
                            <span className="n">fn</span>
                            <span className="o">.</span>
                            <span className="vm">__name__</span>
                            <span className="o">.</span>
                            <span className="n">replace</span>
                            <span className="p">(</span>
                            <span className="s2">"_"</span>
                            <span className="p">,</span> <span className="s2">"-"</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-280">
                            <a href="#Flow.__init__-280">
                                <span className="linenos">280</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-281">
                            <a href="#Flow.__init__-281">
                                <span className="linenos">281</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">flow_run_name</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-282">
                            <a href="#Flow.__init__-282">
                                <span className="linenos">282</span>
                            </a>
                            {"            "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="nb">isinstance</span>
                            <span className="p">(</span>
                            <span className="n">flow_run_name</span>
                            <span className="p">,</span> <span className="nb">str</span>
                            <span className="p">)</span> <span className="ow">and</span>{" "}
                            <span className="ow">not</span>{" "}
                            <span className="nb">callable</span>
                            <span className="p">(</span>
                            <span className="n">flow_run_name</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-283">
                            <a href="#Flow.__init__-283">
                                <span className="linenos">283</span>
                            </a>
                            {"                "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">TypeError</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-284">
                            <a href="#Flow.__init__-284">
                                <span className="linenos">284</span>
                            </a>
                            {"                    "}
                            <span className="s2">
                                "Expected string or callable for 'flow_run_name'; got"
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-285">
                            <a href="#Flow.__init__-285">
                                <span className="linenos">285</span>
                            </a>
                            {"                    "}
                            <span className="sa">f</span>
                            <span className="s2">" </span>
                            <span className="si">{"{"}</span>
                            <span className="nb">type</span>
                            <span className="p">(</span>
                            <span className="n">flow_run_name</span>
                            <span className="p">)</span>
                            <span className="o">.</span>
                            <span className="vm">__name__</span>
                            <span className="si">{"}"}</span>
                            <span className="s2"> instead."</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-286">
                            <a href="#Flow.__init__-286">
                                <span className="linenos">286</span>
                            </a>
                            {"                "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-287">
                            <a href="#Flow.__init__-287">
                                <span className="linenos">287</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">flow_run_name</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">flow_run_name</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-288">
                            <a href="#Flow.__init__-288">
                                <span className="linenos">288</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-289">
                            <a href="#Flow.__init__-289">
                                <span className="linenos">289</span>
                            </a>
                            {"        "}
                            <span className="n">task_runner</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">task_runner</span>{" "}
                            <span className="ow">or</span>{" "}
                            <span className="n">ConcurrentTaskRunner</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-290">
                            <a href="#Flow.__init__-290">
                                <span className="linenos">290</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">task_runner</span>{" "}
                            <span className="o">=</span> <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-291">
                            <a href="#Flow.__init__-291">
                                <span className="linenos">291</span>
                            </a>
                            {"            "}
                            <span className="n">task_runner</span>
                            <span className="p">()</span> <span className="k">if</span>{" "}
                            <span className="nb">isinstance</span>
                            <span className="p">(</span>
                            <span className="n">task_runner</span>
                            <span className="p">,</span> <span className="nb">type</span>
                            <span className="p">)</span> <span className="k">else</span>{" "}
                            <span className="n">task_runner</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-292">
                            <a href="#Flow.__init__-292">
                                <span className="linenos">292</span>
                            </a>
                            {"        "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-293">
                            <a href="#Flow.__init__-293">
                                <span className="linenos">293</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-294">
                            <a href="#Flow.__init__-294">
                                <span className="linenos">294</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">
                                log_prints
                            </span> <span className="o">=</span>{" "}
                            <span className="n">log_prints</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-295">
                            <a href="#Flow.__init__-295">
                                <span className="linenos">295</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-296">
                            <a href="#Flow.__init__-296">
                                <span className="linenos">296</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">description</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">description</span>{" "}
                            <span className="ow">or</span> <span className="n">inspect</span>
                            <span className="o">.</span>
                            <span className="n">getdoc</span>
                            <span className="p">(</span>
                            <span className="n">fn</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-297">
                            <a href="#Flow.__init__-297">
                                <span className="linenos">297</span>
                            </a>
                            {"        "}
                            <span className="n">update_wrapper</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">,</span> <span className="n">fn</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-298">
                            <a href="#Flow.__init__-298">
                                <span className="linenos">298</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span> <span className="o">=</span>{" "}
                            <span className="n">fn</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-299">
                            <a href="#Flow.__init__-299">
                                <span className="linenos">299</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">
                                isasync
                            </span> <span className="o">=</span>{" "}
                            <span className="n">is_async_fn</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-300">
                            <a href="#Flow.__init__-300">
                                <span className="linenos">300</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-301">
                            <a href="#Flow.__init__-301">
                                <span className="linenos">301</span>
                            </a>
                            {"        "}
                            <span className="n">raise_for_reserved_arguments</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">,</span> <span className="p">[</span>
                            <span className="s2">"return_state"</span>
                            <span className="p">,</span>{" "}
                            <span className="s2">"wait_for"</span>
                            <span className="p">])</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-302">
                            <a href="#Flow.__init__-302">
                                <span className="linenos">302</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-303">
                            <a href="#Flow.__init__-303">
                                <span className="linenos">303</span>
                            </a>
                            {"        "}
                            <span className="c1">
                                # Version defaults to a hash of the function's file
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-304">
                            <a href="#Flow.__init__-304">
                                <span className="linenos">304</span>
                            </a>
                            {"        "}
                            <span className="n">
                                flow_file
                            </span> <span className="o">=</span>{" "}
                            <span className="n">inspect</span>
                            <span className="o">.</span>
                            <span className="n">getsourcefile</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-305">
                            <a href="#Flow.__init__-305">
                                <span className="linenos">305</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="n">version</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-306">
                            <a href="#Flow.__init__-306">
                                <span className="linenos">306</span>
                            </a>
                            {"            "}
                            <span className="k">try</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-307">
                            <a href="#Flow.__init__-307">
                                <span className="linenos">307</span>
                            </a>
                            {"                "}
                            <span className="n">
                                version
                            </span> <span className="o">=</span>{" "}
                            <span className="n">file_hash</span>
                            <span className="p">(</span>
                            <span className="n">flow_file</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-308">
                            <a href="#Flow.__init__-308">
                                <span className="linenos">308</span>
                            </a>
                            {"            "}
                            <span className="k">except</span> <span className="p">(</span>
                            <span className="ne">FileNotFoundError</span>
                            <span className="p">,</span> <span className="ne">TypeError</span>
                            <span className="p">,</span> <span className="ne">OSError</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-309">
                            <a href="#Flow.__init__-309">
                                <span className="linenos">309</span>
                            </a>
                            {"                "}
                            <span className="k">pass</span>
                            {"  "}
                            <span className="c1">
                                # `getsourcefile` can return null values and "&lt;stdin&gt;" for
                                objects in repls
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-310">
                            <a href="#Flow.__init__-310">
                                <span className="linenos">310</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">
                                version
                            </span> <span className="o">=</span>{" "}
                            <span className="n">version</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-311">
                            <a href="#Flow.__init__-311">
                                <span className="linenos">311</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-312">
                            <a href="#Flow.__init__-312">
                                <span className="linenos">312</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">timeout_seconds</span>{" "}
                            <span className="o">=</span> <span className="nb">float</span>
                            <span className="p">(</span>
                            <span className="n">timeout_seconds</span>
                            <span className="p">)</span> <span className="k">if</span>{" "}
                            <span className="n">timeout_seconds</span>{" "}
                            <span className="k">else</span> <span className="kc">None</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-313">
                            <a href="#Flow.__init__-313">
                                <span className="linenos">313</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-314">
                            <a href="#Flow.__init__-314">
                                <span className="linenos">314</span>
                            </a>
                            {"        "}
                            <span className="c1"># FlowRunPolicy settings</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-315">
                            <a href="#Flow.__init__-315">
                                <span className="linenos">315</span>
                            </a>
                            {"        "}
                            <span className="c1">
                                # TODO: We can instantiate a `FlowRunPolicy` and add Pydantic
                                bound checks to
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-316">
                            <a href="#Flow.__init__-316">
                                <span className="linenos">316</span>
                            </a>
                            {"        "}
                            <span className="c1">
                                #{"       "}validate that the user passes positive numbers here
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-317">
                            <a href="#Flow.__init__-317">
                                <span className="linenos">317</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">
                                retries
                            </span> <span className="o">=</span> <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-318">
                            <a href="#Flow.__init__-318">
                                <span className="linenos">318</span>
                            </a>
                            {"            "}
                            <span className="n">
                                retries
                            </span> <span className="k">if</span>{" "}
                            <span className="n">retries</span> <span className="ow">is</span>{" "}
                            <span className="ow">not</span> <span className="kc">None</span>{" "}
                            <span className="k">else</span>{" "}
                            <span className="n">PREFECT_FLOW_DEFAULT_RETRIES</span>
                            <span className="o">.</span>
                            <span className="n">value</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-319">
                            <a href="#Flow.__init__-319">
                                <span className="linenos">319</span>
                            </a>
                            {"        "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-320">
                            <a href="#Flow.__init__-320">
                                <span className="linenos">320</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-321">
                            <a href="#Flow.__init__-321">
                                <span className="linenos">321</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">retry_delay_seconds</span>{" "}
                            <span className="o">=</span> <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-322">
                            <a href="#Flow.__init__-322">
                                <span className="linenos">322</span>
                            </a>
                            {"            "}
                            <span className="n">retry_delay_seconds</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-323">
                            <a href="#Flow.__init__-323">
                                <span className="linenos">323</span>
                            </a>
                            {"            "}
                            <span className="k">if</span>{" "}
                            <span className="n">retry_delay_seconds</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="kc">None</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-324">
                            <a href="#Flow.__init__-324">
                                <span className="linenos">324</span>
                            </a>
                            {"            "}
                            <span className="k">else</span>{" "}
                            <span className="n">
                                PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDS
                            </span>
                            <span className="o">.</span>
                            <span className="n">value</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-325">
                            <a href="#Flow.__init__-325">
                                <span className="linenos">325</span>
                            </a>
                            {"        "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-326">
                            <a href="#Flow.__init__-326">
                                <span className="linenos">326</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-327">
                            <a href="#Flow.__init__-327">
                                <span className="linenos">327</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">
                                parameters
                            </span> <span className="o">=</span>{" "}
                            <span className="n">parameter_schema</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-328">
                            <a href="#Flow.__init__-328">
                                <span className="linenos">328</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">should_validate_parameters</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">validate_parameters</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-329">
                            <a href="#Flow.__init__-329">
                                <span className="linenos">329</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-330">
                            <a href="#Flow.__init__-330">
                                <span className="linenos">330</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">should_validate_parameters</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-331">
                            <a href="#Flow.__init__-331">
                                <span className="linenos">331</span>
                            </a>
                            {"            "}
                            <span className="c1">
                                # Try to create the validated function now so that
                                incompatibility can be
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-332">
                            <a href="#Flow.__init__-332">
                                <span className="linenos">332</span>
                            </a>
                            {"            "}
                            <span className="c1">
                                # raised at declaration time rather than at runtime
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-333">
                            <a href="#Flow.__init__-333">
                                <span className="linenos">333</span>
                            </a>
                            {"            "}
                            <span className="c1">
                                # We cannot, however, store the validated function on the flow
                                because it
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-334">
                            <a href="#Flow.__init__-334">
                                <span className="linenos">334</span>
                            </a>
                            {"            "}
                            <span className="c1">
                                # is not picklable in some environments
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-335">
                            <a href="#Flow.__init__-335">
                                <span className="linenos">335</span>
                            </a>
                            {"            "}
                            <span className="k">try</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-336">
                            <a href="#Flow.__init__-336">
                                <span className="linenos">336</span>
                            </a>
                            {"                "}
                            <span className="n">ValidatedFunction</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">,</span> <span className="n">config</span>
                            <span className="o">=</span>
                            <span className="p">{"{"}</span>
                            <span className="s2">"arbitrary_types_allowed"</span>
                            <span className="p">:</span> <span className="kc">True</span>
                            <span className="p">{"}"})</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-337">
                            <a href="#Flow.__init__-337">
                                <span className="linenos">337</span>
                            </a>
                            {"            "}
                            <span className="k">except</span>{" "}
                            <span className="n">pydantic</span>
                            <span className="o">.</span>
                            <span className="n">ConfigError</span>{" "}
                            <span className="k">as</span> <span className="n">exc</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-338">
                            <a href="#Flow.__init__-338">
                                <span className="linenos">338</span>
                            </a>
                            {"                "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">ValueError</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-339">
                            <a href="#Flow.__init__-339">
                                <span className="linenos">339</span>
                            </a>
                            {"                    "}
                            <span className="s2">
                                "Flow function is not compatible with `validate_parameters`. "
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-340">
                            <a href="#Flow.__init__-340">
                                <span className="linenos">340</span>
                            </a>
                            {"                    "}
                            <span className="s2">
                                "Disable validation or change the argument names."
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-341">
                            <a href="#Flow.__init__-341">
                                <span className="linenos">341</span>
                            </a>
                            {"                "}
                            <span className="p">)</span> <span className="kn">from</span>{" "}
                            <span className="nn">exc</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-342">
                            <a href="#Flow.__init__-342">
                                <span className="linenos">342</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-343">
                            <a href="#Flow.__init__-343">
                                <span className="linenos">343</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">persist_result</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">persist_result</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-344">
                            <a href="#Flow.__init__-344">
                                <span className="linenos">344</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">result_storage</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">result_storage</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-345">
                            <a href="#Flow.__init__-345">
                                <span className="linenos">345</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">result_serializer</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">result_serializer</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-346">
                            <a href="#Flow.__init__-346">
                                <span className="linenos">346</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">cache_result_in_memory</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">cache_result_in_memory</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-347">
                            <a href="#Flow.__init__-347">
                                <span className="linenos">347</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">on_completion</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">on_completion</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-348">
                            <a href="#Flow.__init__-348">
                                <span className="linenos">348</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">
                                on_failure
                            </span> <span className="o">=</span>{" "}
                            <span className="n">on_failure</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-349">
                            <a href="#Flow.__init__-349">
                                <span className="linenos">349</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">on_cancellation</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">on_cancellation</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-350">
                            <a href="#Flow.__init__-350">
                                <span className="linenos">350</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">
                                on_crashed
                            </span> <span className="o">=</span>{" "}
                            <span className="n">on_crashed</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-351">
                            <a href="#Flow.__init__-351">
                                <span className="linenos">351</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">
                                on_running
                            </span> <span className="o">=</span>{" "}
                            <span className="n">on_running</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-352">
                            <a href="#Flow.__init__-352">
                                <span className="linenos">352</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-353">
                            <a href="#Flow.__init__-353">
                                <span className="linenos">353</span>
                            </a>
                            {"        "}
                            <span className="c1">
                                # Used for flows loaded from remote storage
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-354">
                            <a href="#Flow.__init__-354">
                                <span className="linenos">354</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">_storage</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">RunnerStorage</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-355">
                            <a href="#Flow.__init__-355">
                                <span className="linenos">355</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">_entrypoint</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-356">
                            <a href="#Flow.__init__-356">
                                <span className="linenos">356</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-357">
                            <a href="#Flow.__init__-357">
                                <span className="linenos">357</span>
                            </a>
                            {"        "}
                            <span className="n">
                                module
                            </span> <span className="o">=</span> <span className="n">fn</span>
                            <span className="o">.</span>
                            <span className="vm">__module__</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-358">
                            <a href="#Flow.__init__-358">
                                <span className="linenos">358</span>
                            </a>
                            {"        "}
                            <span className="k">
                                if
                            </span> <span className="n">module</span>{" "}
                            <span className="ow">in</span> <span className="p">(</span>
                            <span className="s2">"__main__"</span>
                            <span className="p">,</span>{" "}
                            <span className="s2">"__prefect_loader__"</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-359">
                            <a href="#Flow.__init__-359">
                                <span className="linenos">359</span>
                            </a>
                            {"            "}
                            <span className="n">module_name</span>{" "}
                            <span className="o">=</span> <span className="n">inspect</span>
                            <span className="o">.</span>
                            <span className="n">getfile</span>
                            <span className="p">(</span>
                            <span className="n">fn</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-360">
                            <a href="#Flow.__init__-360">
                                <span className="linenos">360</span>
                            </a>
                            {"            "}
                            <span className="n">
                                module
                            </span> <span className="o">=</span>{" "}
                            <span className="n">module_name</span>{" "}
                            <span className="k">if</span>{" "}
                            <span className="n">module_name</span>{" "}
                            <span className="o">!=</span>{" "}
                            <span className="s2">"__main__"</span>{" "}
                            <span className="k">else</span> <span className="n">module</span>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-361">
                            <a href="#Flow.__init__-361">
                                <span className="linenos">361</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.__init__-362">
                            <a href="#Flow.__init__-362">
                                <span className="linenos">362</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">_entrypoint</span>{" "}
                            <span className="o">=</span> <span className="sa">f</span>
                            <span className="s2">"</span>
                            <span className="si">{"{"}</span>
                            <span className="n">module</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">:</span>
                            <span className="si">{"{"}</span>
                            <span className="n">fn</span>
                            <span className="o">.</span>
                            <span className="vm">__name__</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">"</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
            </div>
            <div id="Flow.name" className="classattr">
                <div className="attr variable">
                    <span className="name">name</span>
                </div>
                <a className="headerlink" href="#Flow.name" />
            </div>
            <div id="Flow.flow_run_name" className="classattr">
                <div className="attr variable">
                    <span className="name">flow_run_name</span>
                </div>
                <a className="headerlink" href="#Flow.flow_run_name" />
            </div>
            <div id="Flow.task_runner" className="classattr">
                <div className="attr variable">
                    <span className="name">task_runner</span>
                </div>
                <a className="headerlink" href="#Flow.task_runner" />
            </div>
            <div id="Flow.log_prints" className="classattr">
                <div className="attr variable">
                    <span className="name">log_prints</span>
                </div>
                <a className="headerlink" href="#Flow.log_prints" />
            </div>
            <div id="Flow.description" className="classattr">
                <div className="attr variable">
                    <span className="name">description</span>
                </div>
                <a className="headerlink" href="#Flow.description" />
            </div>
            <div id="Flow.fn" className="classattr">
                <div className="attr variable">
                    <span className="name">fn</span>
                </div>
                <a className="headerlink" href="#Flow.fn" />
            </div>
            <div id="Flow.isasync" className="classattr">
                <div className="attr variable">
                    <span className="name">isasync</span>
                </div>
                <a className="headerlink" href="#Flow.isasync" />
            </div>
            <div id="Flow.version" className="classattr">
                <div className="attr variable">
                    <span className="name">version</span>
                </div>
                <a className="headerlink" href="#Flow.version" />
            </div>
            <div id="Flow.timeout_seconds" className="classattr">
                <div className="attr variable">
                    <span className="name">timeout_seconds</span>
                </div>
                <a className="headerlink" href="#Flow.timeout_seconds" />
            </div>
            <div id="Flow.retries" className="classattr">
                <div className="attr variable">
                    <span className="name">retries</span>
                </div>
                <a className="headerlink" href="#Flow.retries" />
            </div>
            <div id="Flow.retry_delay_seconds" className="classattr">
                <div className="attr variable">
                    <span className="name">retry_delay_seconds</span>
                </div>
                <a className="headerlink" href="#Flow.retry_delay_seconds" />
            </div>
            <div id="Flow.parameters" className="classattr">
                <div className="attr variable">
                    <span className="name">parameters</span>
                </div>
                <a className="headerlink" href="#Flow.parameters" />
            </div>
            <div id="Flow.should_validate_parameters" className="classattr">
                <div className="attr variable">
                    <span className="name">should_validate_parameters</span>
                </div>
                <a className="headerlink" href="#Flow.should_validate_parameters" />
            </div>
            <div id="Flow.persist_result" className="classattr">
                <div className="attr variable">
                    <span className="name">persist_result</span>
                </div>
                <a className="headerlink" href="#Flow.persist_result" />
            </div>
            <div id="Flow.result_storage" className="classattr">
                <div className="attr variable">
                    <span className="name">result_storage</span>
                </div>
                <a className="headerlink" href="#Flow.result_storage" />
            </div>
            <div id="Flow.result_serializer" className="classattr">
                <div className="attr variable">
                    <span className="name">result_serializer</span>
                </div>
                <a className="headerlink" href="#Flow.result_serializer" />
            </div>
            <div id="Flow.cache_result_in_memory" className="classattr">
                <div className="attr variable">
                    <span className="name">cache_result_in_memory</span>
                </div>
                <a className="headerlink" href="#Flow.cache_result_in_memory" />
            </div>
            <div id="Flow.on_completion" className="classattr">
                <div className="attr variable">
                    <span className="name">on_completion</span>
                </div>
                <a className="headerlink" href="#Flow.on_completion" />
            </div>
            <div id="Flow.on_failure" className="classattr">
                <div className="attr variable">
                    <span className="name">on_failure</span>
                </div>
                <a className="headerlink" href="#Flow.on_failure" />
            </div>
            <div id="Flow.on_cancellation" className="classattr">
                <div className="attr variable">
                    <span className="name">on_cancellation</span>
                </div>
                <a className="headerlink" href="#Flow.on_cancellation" />
            </div>
            <div id="Flow.on_crashed" className="classattr">
                <div className="attr variable">
                    <span className="name">on_crashed</span>
                </div>
                <a className="headerlink" href="#Flow.on_crashed" />
            </div>
            <div id="Flow.on_running" className="classattr">
                <div className="attr variable">
                    <span className="name">on_running</span>
                </div>
                <a className="headerlink" href="#Flow.on_running" />
            </div>
            <div id="Flow.with_options" className="classattr">
                <input
                    id="Flow.with_options-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">with_options</span>
                    <span className="signature pdoc-code multiline">
                        (
                        <span className="param">
                            {" "}
                            <span className="bp">self</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="o">*</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">name</span>
                            <span className="p">:</span> <span className="nb">str</span>{" "}
                            <span className="o">=</span> <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">version</span>
                            <span className="p">:</span> <span className="nb">str</span>{" "}
                            <span className="o">=</span> <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">retries</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">retry_delay_seconds</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">description</span>
                            <span className="p">:</span> <span className="nb">str</span>{" "}
                            <span className="o">=</span> <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">flow_run_name</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[],</span> <span className="nb">str</span>
                            <span className="p">],</span> <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">task_runner</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Type</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">task_runners</span>
                            <span className="o">.</span>
                            <span className="n">BaseTaskRunner</span>
                            <span className="p">],</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">task_runners</span>
                            <span className="o">.</span>
                            <span className="n">BaseTaskRunner</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">timeout_seconds</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">validate_parameters</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            persist_result: Optional[bool] = &lt;class
                            'prefect.utilities.annotations.NotSet'&gt;,
                        </span>
                        <span className="param">
                            result_storage: Union[prefect.filesystems.WritableFileSystem, str,
                            NoneType] = &lt;class 'prefect.utilities.annotations.NotSet'&gt;,
                        </span>
                        <span className="param">
                            result_serializer: Union[prefect.serializers.Serializer, str,
                            NoneType] = &lt;class 'prefect.utilities.annotations.NotSet'&gt;,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">cache_result_in_memory</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            log_prints: Optional[bool] = &lt;class
                            'prefect.utilities.annotations.NotSet'&gt;,
                        </span>
                        <span className="param">
                            <span className="n">on_completion</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">Flow</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">FlowRun</span>
                            <span className="p">,</span>{" "}
                            <span className="n">
                                <a href="#State">State</a>
                            </span>
                            <span className="p">],</span> <span className="n">NoneType</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">on_failure</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">Flow</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">FlowRun</span>
                            <span className="p">,</span>{" "}
                            <span className="n">
                                <a href="#State">State</a>
                            </span>
                            <span className="p">],</span> <span className="n">NoneType</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">on_cancellation</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">Flow</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">FlowRun</span>
                            <span className="p">,</span>{" "}
                            <span className="n">
                                <a href="#State">State</a>
                            </span>
                            <span className="p">],</span> <span className="n">NoneType</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">on_crashed</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">Flow</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">FlowRun</span>
                            <span className="p">,</span>{" "}
                            <span className="n">
                                <a href="#State">State</a>
                            </span>
                            <span className="p">],</span> <span className="n">NoneType</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">on_running</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">Flow</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">FlowRun</span>
                            <span className="p">,</span>{" "}
                            <span className="n">
                                <a href="#State">State</a>
                            </span>
                            <span className="p">],</span> <span className="n">NoneType</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="n">Self</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="Flow.with_options-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#Flow.with_options" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="Flow.with_options-364">
                            <a href="#Flow.with_options-364">
                                <span className="linenos">364</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">with_options</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-365">
                            <a href="#Flow.with_options-365">
                                <span className="linenos">365</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-366">
                            <a href="#Flow.with_options-366">
                                <span className="linenos">366</span>
                            </a>
                            {"        "}
                            <span className="o">*</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-367">
                            <a href="#Flow.with_options-367">
                                <span className="linenos">367</span>
                            </a>
                            {"        "}
                            <span className="n">name</span>
                            <span className="p">:</span> <span className="nb">str</span>{" "}
                            <span className="o">=</span> <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-368">
                            <a href="#Flow.with_options-368">
                                <span className="linenos">368</span>
                            </a>
                            {"        "}
                            <span className="n">version</span>
                            <span className="p">:</span> <span className="nb">str</span>{" "}
                            <span className="o">=</span> <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-369">
                            <a href="#Flow.with_options-369">
                                <span className="linenos">369</span>
                            </a>
                            {"        "}
                            <span className="n">retries</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-370">
                            <a href="#Flow.with_options-370">
                                <span className="linenos">370</span>
                            </a>
                            {"        "}
                            <span className="n">retry_delay_seconds</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-371">
                            <a href="#Flow.with_options-371">
                                <span className="linenos">371</span>
                            </a>
                            {"        "}
                            <span className="n">description</span>
                            <span className="p">:</span> <span className="nb">str</span>{" "}
                            <span className="o">=</span> <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-372">
                            <a href="#Flow.with_options-372">
                                <span className="linenos">372</span>
                            </a>
                            {"        "}
                            <span className="n">flow_run_name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[],</span> <span className="nb">str</span>
                            <span className="p">],</span> <span className="nb">str</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-373">
                            <a href="#Flow.with_options-373">
                                <span className="linenos">373</span>
                            </a>
                            {"        "}
                            <span className="n">task_runner</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Type</span>
                            <span className="p">[</span>
                            <span className="n">BaseTaskRunner</span>
                            <span className="p">],</span>{" "}
                            <span className="n">BaseTaskRunner</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-374">
                            <a href="#Flow.with_options-374">
                                <span className="linenos">374</span>
                            </a>
                            {"        "}
                            <span className="n">timeout_seconds</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-375">
                            <a href="#Flow.with_options-375">
                                <span className="linenos">375</span>
                            </a>
                            {"        "}
                            <span className="n">validate_parameters</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-376">
                            <a href="#Flow.with_options-376">
                                <span className="linenos">376</span>
                            </a>
                            {"        "}
                            <span className="n">persist_result</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="n">NotSet</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-377">
                            <a href="#Flow.with_options-377">
                                <span className="linenos">377</span>
                            </a>
                            {"        "}
                            <span className="n">result_storage</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">ResultStorage</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="n">NotSet</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-378">
                            <a href="#Flow.with_options-378">
                                <span className="linenos">378</span>
                            </a>
                            {"        "}
                            <span className="n">result_serializer</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">ResultSerializer</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="n">NotSet</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-379">
                            <a href="#Flow.with_options-379">
                                <span className="linenos">379</span>
                            </a>
                            {"        "}
                            <span className="n">cache_result_in_memory</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-380">
                            <a href="#Flow.with_options-380">
                                <span className="linenos">380</span>
                            </a>
                            {"        "}
                            <span className="n">log_prints</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="n">NotSet</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-381">
                            <a href="#Flow.with_options-381">
                                <span className="linenos">381</span>
                            </a>
                            {"        "}
                            <span className="n">on_completion</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-382">
                            <a href="#Flow.with_options-382">
                                <span className="linenos">382</span>
                            </a>
                            {"            "}
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">FlowSchema</span>
                            <span className="p">,</span> <span className="n">FlowRun</span>
                            <span className="p">,</span> <span className="n">State</span>
                            <span className="p">],</span> <span className="kc">None</span>
                            <span className="p">]]</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-383">
                            <a href="#Flow.with_options-383">
                                <span className="linenos">383</span>
                            </a>
                            {"        "}
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-384">
                            <a href="#Flow.with_options-384">
                                <span className="linenos">384</span>
                            </a>
                            {"        "}
                            <span className="n">on_failure</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">FlowSchema</span>
                            <span className="p">,</span> <span className="n">FlowRun</span>
                            <span className="p">,</span> <span className="n">State</span>
                            <span className="p">],</span> <span className="kc">None</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-385">
                            <a href="#Flow.with_options-385">
                                <span className="linenos">385</span>
                            </a>
                            {"        "}
                            <span className="n">on_cancellation</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-386">
                            <a href="#Flow.with_options-386">
                                <span className="linenos">386</span>
                            </a>
                            {"            "}
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">FlowSchema</span>
                            <span className="p">,</span> <span className="n">FlowRun</span>
                            <span className="p">,</span> <span className="n">State</span>
                            <span className="p">],</span> <span className="kc">None</span>
                            <span className="p">]]</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-387">
                            <a href="#Flow.with_options-387">
                                <span className="linenos">387</span>
                            </a>
                            {"        "}
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-388">
                            <a href="#Flow.with_options-388">
                                <span className="linenos">388</span>
                            </a>
                            {"        "}
                            <span className="n">on_crashed</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">FlowSchema</span>
                            <span className="p">,</span> <span className="n">FlowRun</span>
                            <span className="p">,</span> <span className="n">State</span>
                            <span className="p">],</span> <span className="kc">None</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-389">
                            <a href="#Flow.with_options-389">
                                <span className="linenos">389</span>
                            </a>
                            {"        "}
                            <span className="n">on_running</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">FlowSchema</span>
                            <span className="p">,</span> <span className="n">FlowRun</span>
                            <span className="p">,</span> <span className="n">State</span>
                            <span className="p">],</span> <span className="kc">None</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-390">
                            <a href="#Flow.with_options-390">
                                <span className="linenos">390</span>
                            </a>
                            {"    "}
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="n">Self</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-391">
                            <a href="#Flow.with_options-391">
                                <span className="linenos">391</span>
                            </a>
                            <span className="w">{"        "}</span>
                            <span className="sd">"""</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-392">
                            <a href="#Flow.with_options-392">
                                <span className="linenos">392</span>
                            </a>
                            <span className="sd">
                                {"        "}Create a new flow from the current object, updating
                                provided options.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-393">
                            <a href="#Flow.with_options-393">
                                <span className="linenos">393</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-394">
                            <a href="#Flow.with_options-394">
                                <span className="linenos">394</span>
                            </a>
                            <span className="sd">{"        "}Args:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-395">
                            <a href="#Flow.with_options-395">
                                <span className="linenos">395</span>
                            </a>
                            <span className="sd">
                                {"            "}name: A new name for the flow.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-396">
                            <a href="#Flow.with_options-396">
                                <span className="linenos">396</span>
                            </a>
                            <span className="sd">
                                {"            "}version: A new version for the flow.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-397">
                            <a href="#Flow.with_options-397">
                                <span className="linenos">397</span>
                            </a>
                            <span className="sd">
                                {"            "}description: A new description for the flow.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-398">
                            <a href="#Flow.with_options-398">
                                <span className="linenos">398</span>
                            </a>
                            <span className="sd">
                                {"            "}flow_run_name: An optional name to distinguish
                                runs of this flow; this name
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-399">
                            <a href="#Flow.with_options-399">
                                <span className="linenos">399</span>
                            </a>
                            <span className="sd">
                                {"                "}can be provided as a string template with
                                the flow's parameters as variables,
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-400">
                            <a href="#Flow.with_options-400">
                                <span className="linenos">400</span>
                            </a>
                            <span className="sd">
                                {"                "}or a function that returns a string.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-401">
                            <a href="#Flow.with_options-401">
                                <span className="linenos">401</span>
                            </a>
                            <span className="sd">
                                {"            "}task_runner: A new task runner for the flow.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-402">
                            <a href="#Flow.with_options-402">
                                <span className="linenos">402</span>
                            </a>
                            <span className="sd">
                                {"            "}timeout_seconds: A new number of seconds to fail
                                the flow after if still
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-403">
                            <a href="#Flow.with_options-403">
                                <span className="linenos">403</span>
                            </a>
                            <span className="sd">{"                "}running.</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-404">
                            <a href="#Flow.with_options-404">
                                <span className="linenos">404</span>
                            </a>
                            <span className="sd">
                                {"            "}validate_parameters: A new value indicating if
                                flow calls should validate
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-405">
                            <a href="#Flow.with_options-405">
                                <span className="linenos">405</span>
                            </a>
                            <span className="sd">{"                "}given parameters.</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-406">
                            <a href="#Flow.with_options-406">
                                <span className="linenos">406</span>
                            </a>
                            <span className="sd">
                                {"            "}retries: A new number of times to retry on flow
                                run failure.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-407">
                            <a href="#Flow.with_options-407">
                                <span className="linenos">407</span>
                            </a>
                            <span className="sd">
                                {"            "}retry_delay_seconds: A new number of seconds to
                                wait before retrying the
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-408">
                            <a href="#Flow.with_options-408">
                                <span className="linenos">408</span>
                            </a>
                            <span className="sd">
                                {"                "}flow after failure. This is only applicable
                                if `retries` is nonzero.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-409">
                            <a href="#Flow.with_options-409">
                                <span className="linenos">409</span>
                            </a>
                            <span className="sd">
                                {"            "}persist_result: A new option for enabling or
                                disabling result persistence.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-410">
                            <a href="#Flow.with_options-410">
                                <span className="linenos">410</span>
                            </a>
                            <span className="sd">
                                {"            "}result_storage: A new storage type to use for
                                results.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-411">
                            <a href="#Flow.with_options-411">
                                <span className="linenos">411</span>
                            </a>
                            <span className="sd">
                                {"            "}result_serializer: A new serializer to use for
                                results.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-412">
                            <a href="#Flow.with_options-412">
                                <span className="linenos">412</span>
                            </a>
                            <span className="sd">
                                {"            "}cache_result_in_memory: A new value indicating
                                if the flow's result should
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-413">
                            <a href="#Flow.with_options-413">
                                <span className="linenos">413</span>
                            </a>
                            <span className="sd">
                                {"                "}be cached in memory.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-414">
                            <a href="#Flow.with_options-414">
                                <span className="linenos">414</span>
                            </a>
                            <span className="sd">
                                {"            "}on_failure: A new list of callables to run when
                                the flow enters a failed state.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-415">
                            <a href="#Flow.with_options-415">
                                <span className="linenos">415</span>
                            </a>
                            <span className="sd">
                                {"            "}on_completion: A new list of callables to run
                                when the flow enters a completed state.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-416">
                            <a href="#Flow.with_options-416">
                                <span className="linenos">416</span>
                            </a>
                            <span className="sd">
                                {"            "}on_cancellation: A new list of callables to run
                                when the flow enters a cancelling state.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-417">
                            <a href="#Flow.with_options-417">
                                <span className="linenos">417</span>
                            </a>
                            <span className="sd">
                                {"            "}on_crashed: A new list of callables to run when
                                the flow enters a crashed state.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-418">
                            <a href="#Flow.with_options-418">
                                <span className="linenos">418</span>
                            </a>
                            <span className="sd">
                                {"            "}on_running: A new list of callables to run when
                                the flow enters a running state.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-419">
                            <a href="#Flow.with_options-419">
                                <span className="linenos">419</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-420">
                            <a href="#Flow.with_options-420">
                                <span className="linenos">420</span>
                            </a>
                            <span className="sd">{"        "}Returns:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-421">
                            <a href="#Flow.with_options-421">
                                <span className="linenos">421</span>
                            </a>
                            <span className="sd">{"            "}A new `Flow` instance.</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-422">
                            <a href="#Flow.with_options-422">
                                <span className="linenos">422</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-423">
                            <a href="#Flow.with_options-423">
                                <span className="linenos">423</span>
                            </a>
                            <span className="sd">{"        "}Examples:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-424">
                            <a href="#Flow.with_options-424">
                                <span className="linenos">424</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-425">
                            <a href="#Flow.with_options-425">
                                <span className="linenos">425</span>
                            </a>
                            <span className="sd">
                                {"            "}Create a new flow from an existing flow and
                                update the name:
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-426">
                            <a href="#Flow.with_options-426">
                                <span className="linenos">426</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-427">
                            <a href="#Flow.with_options-427">
                                <span className="linenos">427</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; @flow(name="My flow")
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-428">
                            <a href="#Flow.with_options-428">
                                <span className="linenos">428</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-429">
                            <a href="#Flow.with_options-429">
                                <span className="linenos">429</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}return 1
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-430">
                            <a href="#Flow.with_options-430">
                                <span className="linenos">430</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-431">
                            <a href="#Flow.with_options-431">
                                <span className="linenos">431</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; new_flow =
                                my_flow.with_options(name="My new flow")
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-432">
                            <a href="#Flow.with_options-432">
                                <span className="linenos">432</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-433">
                            <a href="#Flow.with_options-433">
                                <span className="linenos">433</span>
                            </a>
                            <span className="sd">
                                {"            "}Create a new flow from an existing flow, update
                                the task runner, and call
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-434">
                            <a href="#Flow.with_options-434">
                                <span className="linenos">434</span>
                            </a>
                            <span className="sd">
                                {"            "}it without an intermediate variable:
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-435">
                            <a href="#Flow.with_options-435">
                                <span className="linenos">435</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-436">
                            <a href="#Flow.with_options-436">
                                <span className="linenos">436</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; from prefect.task_runners import
                                SequentialTaskRunner
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-437">
                            <a href="#Flow.with_options-437">
                                <span className="linenos">437</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-438">
                            <a href="#Flow.with_options-438">
                                <span className="linenos">438</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-439">
                            <a href="#Flow.with_options-439">
                                <span className="linenos">439</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_flow(x, y):
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-440">
                            <a href="#Flow.with_options-440">
                                <span className="linenos">440</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}return x + y
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-441">
                            <a href="#Flow.with_options-441">
                                <span className="linenos">441</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-442">
                            <a href="#Flow.with_options-442">
                                <span className="linenos">442</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; state =
                                my_flow.with_options(task_runner=SequentialTaskRunner)(1, 3)
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-443">
                            <a href="#Flow.with_options-443">
                                <span className="linenos">443</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; assert state.result() == 4
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-444">
                            <a href="#Flow.with_options-444">
                                <span className="linenos">444</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-445">
                            <a href="#Flow.with_options-445">
                                <span className="linenos">445</span>
                            </a>
                            <span className="sd">{"        "}"""</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-446">
                            <a href="#Flow.with_options-446">
                                <span className="linenos">446</span>
                            </a>
                            {"        "}
                            <span className="n">
                                new_flow
                            </span> <span className="o">=</span>{" "}
                            <span className="n">Flow</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-447">
                            <a href="#Flow.with_options-447">
                                <span className="linenos">447</span>
                            </a>
                            {"            "}
                            <span className="n">fn</span>
                            <span className="o">=</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-448">
                            <a href="#Flow.with_options-448">
                                <span className="linenos">448</span>
                            </a>
                            {"            "}
                            <span className="n">name</span>
                            <span className="o">=</span>
                            <span className="n">
                                name
                            </span> <span className="ow">or</span>{" "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">name</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-449">
                            <a href="#Flow.with_options-449">
                                <span className="linenos">449</span>
                            </a>
                            {"            "}
                            <span className="n">description</span>
                            <span className="o">=</span>
                            <span className="n">description</span>{" "}
                            <span className="ow">or</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">description</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-450">
                            <a href="#Flow.with_options-450">
                                <span className="linenos">450</span>
                            </a>
                            {"            "}
                            <span className="n">flow_run_name</span>
                            <span className="o">=</span>
                            <span className="n">flow_run_name</span>{" "}
                            <span className="ow">or</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">flow_run_name</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-451">
                            <a href="#Flow.with_options-451">
                                <span className="linenos">451</span>
                            </a>
                            {"            "}
                            <span className="n">version</span>
                            <span className="o">=</span>
                            <span className="n">
                                version
                            </span> <span className="ow">or</span>{" "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">version</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-452">
                            <a href="#Flow.with_options-452">
                                <span className="linenos">452</span>
                            </a>
                            {"            "}
                            <span className="n">task_runner</span>
                            <span className="o">=</span>
                            <span className="n">task_runner</span>{" "}
                            <span className="ow">or</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">task_runner</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-453">
                            <a href="#Flow.with_options-453">
                                <span className="linenos">453</span>
                            </a>
                            {"            "}
                            <span className="n">retries</span>
                            <span className="o">=</span>
                            <span className="n">
                                retries
                            </span> <span className="k">if</span>{" "}
                            <span className="n">retries</span> <span className="ow">is</span>{" "}
                            <span className="ow">not</span> <span className="kc">None</span>{" "}
                            <span className="k">else</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">retries</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-454">
                            <a href="#Flow.with_options-454">
                                <span className="linenos">454</span>
                            </a>
                            {"            "}
                            <span className="n">retry_delay_seconds</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-455">
                            <a href="#Flow.with_options-455">
                                <span className="linenos">455</span>
                            </a>
                            {"                "}
                            <span className="n">retry_delay_seconds</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-456">
                            <a href="#Flow.with_options-456">
                                <span className="linenos">456</span>
                            </a>
                            {"                "}
                            <span className="k">if</span>{" "}
                            <span className="n">retry_delay_seconds</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="kc">None</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-457">
                            <a href="#Flow.with_options-457">
                                <span className="linenos">457</span>
                            </a>
                            {"                "}
                            <span className="k">else</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">retry_delay_seconds</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-458">
                            <a href="#Flow.with_options-458">
                                <span className="linenos">458</span>
                            </a>
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-459">
                            <a href="#Flow.with_options-459">
                                <span className="linenos">459</span>
                            </a>
                            {"            "}
                            <span className="n">timeout_seconds</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-460">
                            <a href="#Flow.with_options-460">
                                <span className="linenos">460</span>
                            </a>
                            {"                "}
                            <span className="n">timeout_seconds</span>{" "}
                            <span className="k">if</span>{" "}
                            <span className="n">timeout_seconds</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="kc">None</span> <span className="k">else</span>{" "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">timeout_seconds</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-461">
                            <a href="#Flow.with_options-461">
                                <span className="linenos">461</span>
                            </a>
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-462">
                            <a href="#Flow.with_options-462">
                                <span className="linenos">462</span>
                            </a>
                            {"            "}
                            <span className="n">validate_parameters</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-463">
                            <a href="#Flow.with_options-463">
                                <span className="linenos">463</span>
                            </a>
                            {"                "}
                            <span className="n">validate_parameters</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-464">
                            <a href="#Flow.with_options-464">
                                <span className="linenos">464</span>
                            </a>
                            {"                "}
                            <span className="k">if</span>{" "}
                            <span className="n">validate_parameters</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="kc">None</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-465">
                            <a href="#Flow.with_options-465">
                                <span className="linenos">465</span>
                            </a>
                            {"                "}
                            <span className="k">else</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">should_validate_parameters</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-466">
                            <a href="#Flow.with_options-466">
                                <span className="linenos">466</span>
                            </a>
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-467">
                            <a href="#Flow.with_options-467">
                                <span className="linenos">467</span>
                            </a>
                            {"            "}
                            <span className="n">persist_result</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-468">
                            <a href="#Flow.with_options-468">
                                <span className="linenos">468</span>
                            </a>
                            {"                "}
                            <span className="n">persist_result</span>{" "}
                            <span className="k">if</span>{" "}
                            <span className="n">persist_result</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="n">NotSet</span> <span className="k">else</span>{" "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">persist_result</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-469">
                            <a href="#Flow.with_options-469">
                                <span className="linenos">469</span>
                            </a>
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-470">
                            <a href="#Flow.with_options-470">
                                <span className="linenos">470</span>
                            </a>
                            {"            "}
                            <span className="n">result_storage</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-471">
                            <a href="#Flow.with_options-471">
                                <span className="linenos">471</span>
                            </a>
                            {"                "}
                            <span className="n">result_storage</span>{" "}
                            <span className="k">if</span>{" "}
                            <span className="n">result_storage</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="n">NotSet</span> <span className="k">else</span>{" "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">result_storage</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-472">
                            <a href="#Flow.with_options-472">
                                <span className="linenos">472</span>
                            </a>
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-473">
                            <a href="#Flow.with_options-473">
                                <span className="linenos">473</span>
                            </a>
                            {"            "}
                            <span className="n">result_serializer</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-474">
                            <a href="#Flow.with_options-474">
                                <span className="linenos">474</span>
                            </a>
                            {"                "}
                            <span className="n">result_serializer</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-475">
                            <a href="#Flow.with_options-475">
                                <span className="linenos">475</span>
                            </a>
                            {"                "}
                            <span className="k">if</span>{" "}
                            <span className="n">result_serializer</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="n">NotSet</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-476">
                            <a href="#Flow.with_options-476">
                                <span className="linenos">476</span>
                            </a>
                            {"                "}
                            <span className="k">else</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">result_serializer</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-477">
                            <a href="#Flow.with_options-477">
                                <span className="linenos">477</span>
                            </a>
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-478">
                            <a href="#Flow.with_options-478">
                                <span className="linenos">478</span>
                            </a>
                            {"            "}
                            <span className="n">cache_result_in_memory</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-479">
                            <a href="#Flow.with_options-479">
                                <span className="linenos">479</span>
                            </a>
                            {"                "}
                            <span className="n">cache_result_in_memory</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-480">
                            <a href="#Flow.with_options-480">
                                <span className="linenos">480</span>
                            </a>
                            {"                "}
                            <span className="k">if</span>{" "}
                            <span className="n">cache_result_in_memory</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="kc">None</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-481">
                            <a href="#Flow.with_options-481">
                                <span className="linenos">481</span>
                            </a>
                            {"                "}
                            <span className="k">else</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">cache_result_in_memory</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-482">
                            <a href="#Flow.with_options-482">
                                <span className="linenos">482</span>
                            </a>
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-483">
                            <a href="#Flow.with_options-483">
                                <span className="linenos">483</span>
                            </a>
                            {"            "}
                            <span className="n">log_prints</span>
                            <span className="o">=</span>
                            <span className="n">log_prints</span>{" "}
                            <span className="k">if</span>{" "}
                            <span className="n">log_prints</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="n">NotSet</span> <span className="k">else</span>{" "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">log_prints</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-484">
                            <a href="#Flow.with_options-484">
                                <span className="linenos">484</span>
                            </a>
                            {"            "}
                            <span className="n">on_completion</span>
                            <span className="o">=</span>
                            <span className="n">on_completion</span>{" "}
                            <span className="ow">or</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">on_completion</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-485">
                            <a href="#Flow.with_options-485">
                                <span className="linenos">485</span>
                            </a>
                            {"            "}
                            <span className="n">on_failure</span>
                            <span className="o">=</span>
                            <span className="n">on_failure</span>{" "}
                            <span className="ow">or</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">on_failure</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-486">
                            <a href="#Flow.with_options-486">
                                <span className="linenos">486</span>
                            </a>
                            {"            "}
                            <span className="n">on_cancellation</span>
                            <span className="o">=</span>
                            <span className="n">on_cancellation</span>{" "}
                            <span className="ow">or</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">on_cancellation</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-487">
                            <a href="#Flow.with_options-487">
                                <span className="linenos">487</span>
                            </a>
                            {"            "}
                            <span className="n">on_crashed</span>
                            <span className="o">=</span>
                            <span className="n">on_crashed</span>{" "}
                            <span className="ow">or</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">on_crashed</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-488">
                            <a href="#Flow.with_options-488">
                                <span className="linenos">488</span>
                            </a>
                            {"            "}
                            <span className="n">on_running</span>
                            <span className="o">=</span>
                            <span className="n">on_running</span>{" "}
                            <span className="ow">or</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">on_running</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-489">
                            <a href="#Flow.with_options-489">
                                <span className="linenos">489</span>
                            </a>
                            {"        "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-490">
                            <a href="#Flow.with_options-490">
                                <span className="linenos">490</span>
                            </a>
                            {"        "}
                            <span className="n">new_flow</span>
                            <span className="o">.</span>
                            <span className="n">
                                _storage
                            </span> <span className="o">=</span>{" "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">_storage</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-491">
                            <a href="#Flow.with_options-491">
                                <span className="linenos">491</span>
                            </a>
                            {"        "}
                            <span className="n">new_flow</span>
                            <span className="o">.</span>
                            <span className="n">_entrypoint</span>{" "}
                            <span className="o">=</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">_entrypoint</span>
                            {"\n"}
                        </span>
                        <span id="Flow.with_options-492">
                            <a href="#Flow.with_options-492">
                                <span className="linenos">492</span>
                            </a>
                            {"        "}
                            <span className="k">return</span>{" "}
                            <span className="n">new_flow</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
                <div className="docstring">
                    <p>
                        Create a new flow from the current object, updating provided
                        options.
                    </p>
                    <p>
                        Args: name: A new name for the flow. version: A new version for the
                        flow. description: A new description for the flow. flow_run_name: An
                        optional name to distinguish runs of this flow; this name can be
                        provided as a string template with the flow's parameters as
                        variables, or a function that returns a string. task_runner: A new
                        task runner for the flow. timeout_seconds: A new number of seconds
                        to fail the flow after if still running. validate_parameters: A new
                        value indicating if flow calls should validate given parameters.
                        retries: A new number of times to retry on flow run failure.
                        retry_delay_seconds: A new number of seconds to wait before retrying
                        the flow after failure. This is only applicable if{" "}
                        <code>
                            <a href="#Flow.retries">retries</a>
                        </code>
                        is nonzero. persist_result: A new option for enabling or disabling
                        result persistence. result_storage: A new storage type to use for
                        results. result_serializer: A new serializer to use for results.
                        cache_result_in_memory: A new value indicating if the flow's result
                        should be cached in memory. on_failure: A new list of callables to
                        run when the flow enters a failed state. on_completion: A new list
                        of callables to run when the flow enters a completed state.
                        on_cancellation: A new list of callables to run when the flow enters
                        a cancelling state. on_crashed: A new list of callables to run when
                        the flow enters a crashed state. on_running: A new list of callables
                        to run when the flow enters a running state.
                    </p>
                    <p>
                        Returns: A new{" "}
                        <code>
                            <a href="#Flow">Flow</a>
                        </code>{" "}
                        instance.
                    </p>
                    <p>Examples:</p>
                    <pre>
                        <code>
                            Create a new flow from an existing flow and update the name:{"\n"}
                            {"\n"}&gt;&gt;&gt; @flow(name="My flow"){"\n"}&gt;&gt;&gt; def
                            my_flow():{"\n"}&gt;&gt;&gt;{"     "}return 1{"\n"}&gt;&gt;&gt;
                            {"\n"}&gt;&gt;&gt; new_flow = my_flow.with_options(name="My new
                            flow"){"\n"}
                            {"\n"}Create a new flow from an existing flow, update the task
                            runner, and call{"\n"}it without an intermediate variable:{"\n"}
                            {"\n"}&gt;&gt;&gt; from prefect.task_runners import
                            SequentialTaskRunner{"\n"}&gt;&gt;&gt;{"\n"}&gt;&gt;&gt; @flow
                            {"\n"}&gt;&gt;&gt; def my_flow(x, y):{"\n"}&gt;&gt;&gt;{"     "}
                            return x + y{"\n"}&gt;&gt;&gt;{"\n"}&gt;&gt;&gt; state =
                            my_flow.with_options(task_runner=SequentialTaskRunner)(1, 3){"\n"}
                            &gt;&gt;&gt; assert state.result() == 4{"\n"}
                        </code>
                    </pre>
                </div>
            </div>
            <div id="Flow.validate_parameters" className="classattr">
                <input
                    id="Flow.validate_parameters-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">validate_parameters</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="bp">self</span>,{" "}
                        </span>
                        <span className="param">
                            <span className="n">parameters</span>
                            <span className="p">:</span> <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">]</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt;
                            <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">]</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="Flow.validate_parameters-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#Flow.validate_parameters" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="Flow.validate_parameters-494">
                            <a href="#Flow.validate_parameters-494">
                                <span className="linenos">494</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">validate_parameters</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">,</span> <span className="n">parameters</span>
                            <span className="p">:</span> <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">
                                ])
                            </span> <span className="o">-&gt;</span>{" "}
                            <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">]:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-495">
                            <a href="#Flow.validate_parameters-495">
                                <span className="linenos">495</span>
                            </a>
                            <span className="w">{"        "}</span>
                            <span className="sd">"""</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-496">
                            <a href="#Flow.validate_parameters-496">
                                <span className="linenos">496</span>
                            </a>
                            <span className="sd">
                                {"        "}Validate parameters for compatibility with the flow
                                by attempting to cast the inputs to the
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-497">
                            <a href="#Flow.validate_parameters-497">
                                <span className="linenos">497</span>
                            </a>
                            <span className="sd">
                                {"        "}associated types specified by the function's type
                                annotations.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-498">
                            <a href="#Flow.validate_parameters-498">
                                <span className="linenos">498</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-499">
                            <a href="#Flow.validate_parameters-499">
                                <span className="linenos">499</span>
                            </a>
                            <span className="sd">{"        "}Returns:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-500">
                            <a href="#Flow.validate_parameters-500">
                                <span className="linenos">500</span>
                            </a>
                            <span className="sd">
                                {"            "}A new dict of parameters that have been cast to
                                the appropriate types
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-501">
                            <a href="#Flow.validate_parameters-501">
                                <span className="linenos">501</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-502">
                            <a href="#Flow.validate_parameters-502">
                                <span className="linenos">502</span>
                            </a>
                            <span className="sd">{"        "}Raises:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-503">
                            <a href="#Flow.validate_parameters-503">
                                <span className="linenos">503</span>
                            </a>
                            <span className="sd">
                                {"            "}ParameterTypeError: if the provided parameters
                                are not valid
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-504">
                            <a href="#Flow.validate_parameters-504">
                                <span className="linenos">504</span>
                            </a>
                            <span className="sd">{"        "}"""</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-505">
                            <a href="#Flow.validate_parameters-505">
                                <span className="linenos">505</span>
                            </a>
                            {"        "}
                            <span className="n">args</span>
                            <span className="p">
                                ,
                            </span> <span className="n">kwargs</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">parameters_to_args_kwargs</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">,</span> <span className="n">parameters</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-506">
                            <a href="#Flow.validate_parameters-506">
                                <span className="linenos">506</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-507">
                            <a href="#Flow.validate_parameters-507">
                                <span className="linenos">507</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">HAS_PYDANTIC_V2</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-508">
                            <a href="#Flow.validate_parameters-508">
                                <span className="linenos">508</span>
                            </a>
                            {"            "}
                            <span className="n">has_v1_models</span>{" "}
                            <span className="o">=</span> <span className="nb">any</span>
                            <span className="p">(</span>
                            <span className="nb">isinstance</span>
                            <span className="p">(</span>
                            <span className="n">o</span>
                            <span className="p">,</span>{" "}
                            <span className="n">V1BaseModel</span>
                            <span className="p">)</span> <span className="k">for</span>{" "}
                            <span className="n">o</span> <span className="ow">in</span>{" "}
                            <span className="n">args</span>
                            <span className="p">)</span> <span className="ow">or</span>{" "}
                            <span className="nb">any</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-509">
                            <a href="#Flow.validate_parameters-509">
                                <span className="linenos">509</span>
                            </a>
                            {"                "}
                            <span className="nb">isinstance</span>
                            <span className="p">(</span>
                            <span className="n">o</span>
                            <span className="p">,</span>{" "}
                            <span className="n">V1BaseModel</span>
                            <span className="p">)</span> <span className="k">for</span>{" "}
                            <span className="n">o</span> <span className="ow">in</span>{" "}
                            <span className="n">kwargs</span>
                            <span className="o">.</span>
                            <span className="n">values</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-510">
                            <a href="#Flow.validate_parameters-510">
                                <span className="linenos">510</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-511">
                            <a href="#Flow.validate_parameters-511">
                                <span className="linenos">511</span>
                            </a>
                            {"            "}
                            <span className="n">has_v2_types</span>{" "}
                            <span className="o">=</span> <span className="nb">any</span>
                            <span className="p">(</span>
                            <span className="n">is_v2_type</span>
                            <span className="p">(</span>
                            <span className="n">o</span>
                            <span className="p">)</span> <span className="k">for</span>{" "}
                            <span className="n">o</span> <span className="ow">in</span>{" "}
                            <span className="n">args</span>
                            <span className="p">)</span> <span className="ow">or</span>{" "}
                            <span className="nb">any</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-512">
                            <a href="#Flow.validate_parameters-512">
                                <span className="linenos">512</span>
                            </a>
                            {"                "}
                            <span className="n">is_v2_type</span>
                            <span className="p">(</span>
                            <span className="n">o</span>
                            <span className="p">)</span> <span className="k">for</span>{" "}
                            <span className="n">o</span> <span className="ow">in</span>{" "}
                            <span className="n">kwargs</span>
                            <span className="o">.</span>
                            <span className="n">values</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-513">
                            <a href="#Flow.validate_parameters-513">
                                <span className="linenos">513</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-514">
                            <a href="#Flow.validate_parameters-514">
                                <span className="linenos">514</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-515">
                            <a href="#Flow.validate_parameters-515">
                                <span className="linenos">515</span>
                            </a>
                            {"            "}
                            <span className="k">if</span>{" "}
                            <span className="n">has_v1_models</span>{" "}
                            <span className="ow">and</span>{" "}
                            <span className="n">has_v2_types</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-516">
                            <a href="#Flow.validate_parameters-516">
                                <span className="linenos">516</span>
                            </a>
                            {"                "}
                            <span className="k">raise</span>{" "}
                            <span className="n">ParameterTypeError</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-517">
                            <a href="#Flow.validate_parameters-517">
                                <span className="linenos">517</span>
                            </a>
                            {"                    "}
                            <span className="s2">
                                "Cannot mix Pydantic v1 and v2 types as arguments to a flow."
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-518">
                            <a href="#Flow.validate_parameters-518">
                                <span className="linenos">518</span>
                            </a>
                            {"                "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-519">
                            <a href="#Flow.validate_parameters-519">
                                <span className="linenos">519</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-520">
                            <a href="#Flow.validate_parameters-520">
                                <span className="linenos">520</span>
                            </a>
                            {"            "}
                            <span className="k">if</span>{" "}
                            <span className="n">has_v1_models</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-521">
                            <a href="#Flow.validate_parameters-521">
                                <span className="linenos">521</span>
                            </a>
                            {"                "}
                            <span className="n">validated_fn</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">V1ValidatedFunction</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-522">
                            <a href="#Flow.validate_parameters-522">
                                <span className="linenos">522</span>
                            </a>
                            {"                    "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">,</span> <span className="n">config</span>
                            <span className="o">=</span>
                            <span className="p">{"{"}</span>
                            <span className="s2">"arbitrary_types_allowed"</span>
                            <span className="p">:</span> <span className="kc">True</span>
                            <span className="p">{"}"}</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-523">
                            <a href="#Flow.validate_parameters-523">
                                <span className="linenos">523</span>
                            </a>
                            {"                "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-524">
                            <a href="#Flow.validate_parameters-524">
                                <span className="linenos">524</span>
                            </a>
                            {"            "}
                            <span className="k">else</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-525">
                            <a href="#Flow.validate_parameters-525">
                                <span className="linenos">525</span>
                            </a>
                            {"                "}
                            <span className="n">validated_fn</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">V2ValidatedFunction</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-526">
                            <a href="#Flow.validate_parameters-526">
                                <span className="linenos">526</span>
                            </a>
                            {"                    "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">,</span> <span className="n">config</span>
                            <span className="o">=</span>
                            <span className="p">{"{"}</span>
                            <span className="s2">"arbitrary_types_allowed"</span>
                            <span className="p">:</span> <span className="kc">True</span>
                            <span className="p">{"}"}</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-527">
                            <a href="#Flow.validate_parameters-527">
                                <span className="linenos">527</span>
                            </a>
                            {"                "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-528">
                            <a href="#Flow.validate_parameters-528">
                                <span className="linenos">528</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-529">
                            <a href="#Flow.validate_parameters-529">
                                <span className="linenos">529</span>
                            </a>
                            {"        "}
                            <span className="k">else</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-530">
                            <a href="#Flow.validate_parameters-530">
                                <span className="linenos">530</span>
                            </a>
                            {"            "}
                            <span className="n">validated_fn</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">ValidatedFunction</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-531">
                            <a href="#Flow.validate_parameters-531">
                                <span className="linenos">531</span>
                            </a>
                            {"                "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">,</span> <span className="n">config</span>
                            <span className="o">=</span>
                            <span className="p">{"{"}</span>
                            <span className="s2">"arbitrary_types_allowed"</span>
                            <span className="p">:</span> <span className="kc">True</span>
                            <span className="p">{"}"}</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-532">
                            <a href="#Flow.validate_parameters-532">
                                <span className="linenos">532</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-533">
                            <a href="#Flow.validate_parameters-533">
                                <span className="linenos">533</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-534">
                            <a href="#Flow.validate_parameters-534">
                                <span className="linenos">534</span>
                            </a>
                            {"        "}
                            <span className="k">try</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-535">
                            <a href="#Flow.validate_parameters-535">
                                <span className="linenos">535</span>
                            </a>
                            {"            "}
                            <span className="n">model</span> <span className="o">=</span>{" "}
                            <span className="n">validated_fn</span>
                            <span className="o">.</span>
                            <span className="n">init_model_instance</span>
                            <span className="p">(</span>
                            <span className="o">*</span>
                            <span className="n">args</span>
                            <span className="p">,</span> <span className="o">**</span>
                            <span className="n">kwargs</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-536">
                            <a href="#Flow.validate_parameters-536">
                                <span className="linenos">536</span>
                            </a>
                            {"        "}
                            <span className="k">except</span>{" "}
                            <span className="n">pydantic</span>
                            <span className="o">.</span>
                            <span className="n">ValidationError</span>{" "}
                            <span className="k">as</span> <span className="n">exc</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-537">
                            <a href="#Flow.validate_parameters-537">
                                <span className="linenos">537</span>
                            </a>
                            {"            "}
                            <span className="c1">
                                # We capture the pydantic exception and raise our own because
                                the pydantic
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-538">
                            <a href="#Flow.validate_parameters-538">
                                <span className="linenos">538</span>
                            </a>
                            {"            "}
                            <span className="c1">
                                # exception is not picklable when using a cythonized pydantic
                                installation
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-539">
                            <a href="#Flow.validate_parameters-539">
                                <span className="linenos">539</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>{" "}
                            <span className="n">ParameterTypeError</span>
                            <span className="o">.</span>
                            <span className="n">from_validation_error</span>
                            <span className="p">(</span>
                            <span className="n">exc</span>
                            <span className="p">)</span> <span className="kn">from</span>{" "}
                            <span className="kc">None</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-540">
                            <a href="#Flow.validate_parameters-540">
                                <span className="linenos">540</span>
                            </a>
                            {"        "}
                            <span className="k">except</span>{" "}
                            <span className="n">V2ValidationError</span>{" "}
                            <span className="k">as</span> <span className="n">exc</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-541">
                            <a href="#Flow.validate_parameters-541">
                                <span className="linenos">541</span>
                            </a>
                            {"            "}
                            <span className="c1">
                                # We capture the pydantic exception and raise our own because
                                the pydantic
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-542">
                            <a href="#Flow.validate_parameters-542">
                                <span className="linenos">542</span>
                            </a>
                            {"            "}
                            <span className="c1">
                                # exception is not picklable when using a cythonized pydantic
                                installation
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-543">
                            <a href="#Flow.validate_parameters-543">
                                <span className="linenos">543</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>{" "}
                            <span className="n">ParameterTypeError</span>
                            <span className="o">.</span>
                            <span className="n">from_validation_error</span>
                            <span className="p">(</span>
                            <span className="n">exc</span>
                            <span className="p">)</span> <span className="kn">from</span>{" "}
                            <span className="kc">None</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-544">
                            <a href="#Flow.validate_parameters-544">
                                <span className="linenos">544</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-545">
                            <a href="#Flow.validate_parameters-545">
                                <span className="linenos">545</span>
                            </a>
                            {"        "}
                            <span className="c1">
                                # Get the updated parameter dict with cast values from the model
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-546">
                            <a href="#Flow.validate_parameters-546">
                                <span className="linenos">546</span>
                            </a>
                            {"        "}
                            <span className="n">cast_parameters</span>{" "}
                            <span className="o">=</span> <span className="p">{"{"}</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-547">
                            <a href="#Flow.validate_parameters-547">
                                <span className="linenos">547</span>
                            </a>
                            {"            "}
                            <span className="n">k</span>
                            <span className="p">:</span> <span className="n">v</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-548">
                            <a href="#Flow.validate_parameters-548">
                                <span className="linenos">548</span>
                            </a>
                            {"            "}
                            <span className="k">for</span> <span className="n">k</span>
                            <span className="p">,</span> <span className="n">v</span>{" "}
                            <span className="ow">in</span> <span className="n">model</span>
                            <span className="o">.</span>
                            <span className="n">_iter</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-549">
                            <a href="#Flow.validate_parameters-549">
                                <span className="linenos">549</span>
                            </a>
                            {"            "}
                            <span className="k">if</span> <span className="n">k</span>{" "}
                            <span className="ow">in</span> <span className="n">model</span>
                            <span className="o">.</span>
                            <span className="n">__fields_set__</span>{" "}
                            <span className="ow">or</span> <span className="n">model</span>
                            <span className="o">.</span>
                            <span className="n">__fields__</span>
                            <span className="p">[</span>
                            <span className="n">k</span>
                            <span className="p">]</span>
                            <span className="o">.</span>
                            <span className="n">default_factory</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-550">
                            <a href="#Flow.validate_parameters-550">
                                <span className="linenos">550</span>
                            </a>
                            {"        "}
                            <span className="p">{"}"}</span>
                            {"\n"}
                        </span>
                        <span id="Flow.validate_parameters-551">
                            <a href="#Flow.validate_parameters-551">
                                <span className="linenos">551</span>
                            </a>
                            {"        "}
                            <span className="k">return</span>{" "}
                            <span className="n">cast_parameters</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
                <div className="docstring">
                    <p>
                        Validate parameters for compatibility with the flow by attempting to
                        cast the inputs to the associated types specified by the function's
                        type annotations.
                    </p>
                    <p>
                        Returns: A new dict of parameters that have been cast to the
                        appropriate types
                    </p>
                    <p>
                        Raises: ParameterTypeError: if the provided parameters are not valid
                    </p>
                </div>
            </div>
            <div id="Flow.serialize_parameters" className="classattr">
                <input
                    id="Flow.serialize_parameters-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">serialize_parameters</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="bp">self</span>,{" "}
                        </span>
                        <span className="param">
                            <span className="n">parameters</span>
                            <span className="p">:</span> <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">]</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt;
                            <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">]</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="Flow.serialize_parameters-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#Flow.serialize_parameters" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="Flow.serialize_parameters-553">
                            <a href="#Flow.serialize_parameters-553">
                                <span className="linenos">553</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">serialize_parameters</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">,</span> <span className="n">parameters</span>
                            <span className="p">:</span> <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">
                                ])
                            </span> <span className="o">-&gt;</span>{" "}
                            <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">]:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-554">
                            <a href="#Flow.serialize_parameters-554">
                                <span className="linenos">554</span>
                            </a>
                            <span className="w">{"        "}</span>
                            <span className="sd">"""</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-555">
                            <a href="#Flow.serialize_parameters-555">
                                <span className="linenos">555</span>
                            </a>
                            <span className="sd">
                                {"        "}Convert parameters to a serializable form.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-556">
                            <a href="#Flow.serialize_parameters-556">
                                <span className="linenos">556</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-557">
                            <a href="#Flow.serialize_parameters-557">
                                <span className="linenos">557</span>
                            </a>
                            <span className="sd">
                                {"        "}Uses FastAPI's `jsonable_encoder` to convert to JSON
                                compatible objects without
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-558">
                            <a href="#Flow.serialize_parameters-558">
                                <span className="linenos">558</span>
                            </a>
                            <span className="sd">
                                {"        "}converting everything directly to a string. This
                                maintains basic types like
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-559">
                            <a href="#Flow.serialize_parameters-559">
                                <span className="linenos">559</span>
                            </a>
                            <span className="sd">
                                {"        "}integers during API roundtrips.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-560">
                            <a href="#Flow.serialize_parameters-560">
                                <span className="linenos">560</span>
                            </a>
                            <span className="sd">{"        "}"""</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-561">
                            <a href="#Flow.serialize_parameters-561">
                                <span className="linenos">561</span>
                            </a>
                            {"        "}
                            <span className="n">serialized_parameters</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="p">
                                {"{"}
                                {"}"}
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-562">
                            <a href="#Flow.serialize_parameters-562">
                                <span className="linenos">562</span>
                            </a>
                            {"        "}
                            <span className="k">for</span> <span className="n">key</span>
                            <span className="p">,</span> <span className="n">value</span>{" "}
                            <span className="ow">in</span>{" "}
                            <span className="n">parameters</span>
                            <span className="o">.</span>
                            <span className="n">items</span>
                            <span className="p">():</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-563">
                            <a href="#Flow.serialize_parameters-563">
                                <span className="linenos">563</span>
                            </a>
                            {"            "}
                            <span className="k">try</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-564">
                            <a href="#Flow.serialize_parameters-564">
                                <span className="linenos">564</span>
                            </a>
                            {"                "}
                            <span className="n">serialized_parameters</span>
                            <span className="p">[</span>
                            <span className="n">key</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="n">jsonable_encoder</span>
                            <span className="p">(</span>
                            <span className="n">value</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-565">
                            <a href="#Flow.serialize_parameters-565">
                                <span className="linenos">565</span>
                            </a>
                            {"            "}
                            <span className="k">except</span> <span className="p">(</span>
                            <span className="ne">TypeError</span>
                            <span className="p">,</span>{" "}
                            <span className="ne">ValueError</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-566">
                            <a href="#Flow.serialize_parameters-566">
                                <span className="linenos">566</span>
                            </a>
                            {"                "}
                            <span className="n">logger</span>
                            <span className="o">.</span>
                            <span className="n">debug</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-567">
                            <a href="#Flow.serialize_parameters-567">
                                <span className="linenos">567</span>
                            </a>
                            {"                    "}
                            <span className="sa">f</span>
                            <span className="s2">"Parameter </span>
                            <span className="si">{"{"}</span>
                            <span className="n">key</span>
                            <span className="si">!r{"}"}</span>
                            <span className="s2"> for flow </span>
                            <span className="si">{"{"}</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">name</span>
                            <span className="si">!r{"}"}</span>
                            <span className="s2"> is of unserializable "</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-568">
                            <a href="#Flow.serialize_parameters-568">
                                <span className="linenos">568</span>
                            </a>
                            {"                    "}
                            <span className="sa">f</span>
                            <span className="s2">"type </span>
                            <span className="si">{"{"}</span>
                            <span className="nb">type</span>
                            <span className="p">(</span>
                            <span className="n">value</span>
                            <span className="p">)</span>
                            <span className="o">.</span>
                            <span className="vm">__name__</span>
                            <span className="si">!r{"}"}</span>
                            <span className="s2"> and will not be stored "</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-569">
                            <a href="#Flow.serialize_parameters-569">
                                <span className="linenos">569</span>
                            </a>
                            {"                    "}
                            <span className="s2">"in the backend."</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-570">
                            <a href="#Flow.serialize_parameters-570">
                                <span className="linenos">570</span>
                            </a>
                            {"                "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-571">
                            <a href="#Flow.serialize_parameters-571">
                                <span className="linenos">571</span>
                            </a>
                            {"                "}
                            <span className="n">serialized_parameters</span>
                            <span className="p">[</span>
                            <span className="n">key</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="sa">f</span>
                            <span className="s2">"&lt;</span>
                            <span className="si">{"{"}</span>
                            <span className="nb">type</span>
                            <span className="p">(</span>
                            <span className="n">value</span>
                            <span className="p">)</span>
                            <span className="o">.</span>
                            <span className="vm">__name__</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">&gt;"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serialize_parameters-572">
                            <a href="#Flow.serialize_parameters-572">
                                <span className="linenos">572</span>
                            </a>
                            {"        "}
                            <span className="k">return</span>{" "}
                            <span className="n">serialized_parameters</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
                <div className="docstring">
                    <p>Convert parameters to a serializable form.</p>
                    <p>
                        Uses FastAPI's <code>jsonable_encoder</code> to convert to JSON
                        compatible objects without converting everything directly to a
                        string. This maintains basic types like integers during API
                        roundtrips.
                    </p>
                </div>
            </div>
            <div id="Flow.to_deployment" className="classattr">
                <input
                    id="Flow.to_deployment-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <div className="decorator">@sync_compatible</div>
                    <div className="decorator">
                        @deprecated_parameter('schedule', start_date='Mar 2024', when=lambda
                        p: p is not None, help='Use `schedules` instead.')
                    </div>
                    <div className="decorator">
                        @deprecated_parameter('is_schedule_active', start_date='Mar 2024',
                        when=lambda p: p is not None, help='Use `paused` instead.')
                    </div>
                    <span className="def">def</span>
                    <span className="name">to_deployment</span>
                    <span className="signature pdoc-code multiline">
                        (
                        <span className="param">
                            {" "}
                            <span className="bp">self</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">name</span>
                            <span className="p">:</span> <span className="nb">str</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">interval</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">,</span> <span className="n">datetime</span>
                            <span className="o">.</span>
                            <span className="n">timedelta</span>
                            <span className="p">]],</span> <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">,</span> <span className="n">datetime</span>
                            <span className="o">.</span>
                            <span className="n">timedelta</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">cron</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">],</span> <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">rrule</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">],</span> <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">paused</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">schedules</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Sequence</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">MinimalDeploymentSchedule</span>
                            <span className="p">,</span> <span className="nb">dict</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">IntervalSchedule</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">CronSchedule</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">RRuleSchedule</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">NoSchedule</span>
                            <span className="p">]]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">schedule</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">IntervalSchedule</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">CronSchedule</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">RRuleSchedule</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">NoSchedule</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">is_schedule_active</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">parameters</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">dict</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">triggers</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">deployment_triggers</span>
                            <span className="o">.</span>
                            <span className="n">DeploymentEventTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">deployment_triggers</span>
                            <span className="o">.</span>
                            <span className="n">DeploymentMetricTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">deployment_triggers</span>
                            <span className="o">.</span>
                            <span className="n">DeploymentCompoundTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">deployment_triggers</span>
                            <span className="o">.</span>
                            <span className="n">DeploymentSequenceTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">automations</span>
                            <span className="o">.</span>
                            <span className="n">EventTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">automations</span>
                            <span className="o">.</span>
                            <span className="n">MetricTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">automations</span>
                            <span className="o">.</span>
                            <span className="n">CompoundTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">automations</span>
                            <span className="o">.</span>
                            <span className="n">SequenceTrigger</span>
                            <span className="p">]]]</span> <span className="o">=</span>
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">description</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">tags</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">version</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">enforce_parameter_schema</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">False</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">work_pool_name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">work_queue_name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">job_variables</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">entrypoint_type</span>
                            <span className="p">:</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">deployments</span>
                            <span className="o">.</span>
                            <span className="n">runner</span>
                            <span className="o">.</span>
                            <span className="n">EntrypointType</span>{" "}
                            <span className="o">=</span> <span className="o">&lt;</span>
                            <span className="n">EntrypointType</span>
                            <span className="o">.</span>
                            <span className="n">FILE_PATH</span>
                            <span className="p">:</span>{" "}
                            <span className="s1">'file_path'</span>
                            <span className="o">&gt;</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">deployments</span>
                            <span className="o">.</span>
                            <span className="n">runner</span>
                            <span className="o">.</span>
                            <span className="n">RunnerDeployment</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="Flow.to_deployment-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#Flow.to_deployment" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="Flow.to_deployment-574">
                            <a href="#Flow.to_deployment-574">
                                <span className="linenos">574</span>
                            </a>
                            {"    "}
                            <span className="nd">@sync_compatible</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-575">
                            <a href="#Flow.to_deployment-575">
                                <span className="linenos">575</span>
                            </a>
                            {"    "}
                            <span className="nd">@deprecated_parameter</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-576">
                            <a href="#Flow.to_deployment-576">
                                <span className="linenos">576</span>
                            </a>
                            {"        "}
                            <span className="s2">"schedule"</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-577">
                            <a href="#Flow.to_deployment-577">
                                <span className="linenos">577</span>
                            </a>
                            {"        "}
                            <span className="n">start_date</span>
                            <span className="o">=</span>
                            <span className="s2">"Mar 2024"</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-578">
                            <a href="#Flow.to_deployment-578">
                                <span className="linenos">578</span>
                            </a>
                            {"        "}
                            <span className="n">when</span>
                            <span className="o">=</span>
                            <span className="k">lambda</span> <span className="n">p</span>
                            <span className="p">:</span> <span className="n">p</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-579">
                            <a href="#Flow.to_deployment-579">
                                <span className="linenos">579</span>
                            </a>
                            {"        "}
                            <span className="n">help</span>
                            <span className="o">=</span>
                            <span className="s2">"Use `schedules` instead."</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-580">
                            <a href="#Flow.to_deployment-580">
                                <span className="linenos">580</span>
                            </a>
                            {"    "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-581">
                            <a href="#Flow.to_deployment-581">
                                <span className="linenos">581</span>
                            </a>
                            {"    "}
                            <span className="nd">@deprecated_parameter</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-582">
                            <a href="#Flow.to_deployment-582">
                                <span className="linenos">582</span>
                            </a>
                            {"        "}
                            <span className="s2">"is_schedule_active"</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-583">
                            <a href="#Flow.to_deployment-583">
                                <span className="linenos">583</span>
                            </a>
                            {"        "}
                            <span className="n">start_date</span>
                            <span className="o">=</span>
                            <span className="s2">"Mar 2024"</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-584">
                            <a href="#Flow.to_deployment-584">
                                <span className="linenos">584</span>
                            </a>
                            {"        "}
                            <span className="n">when</span>
                            <span className="o">=</span>
                            <span className="k">lambda</span> <span className="n">p</span>
                            <span className="p">:</span> <span className="n">p</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-585">
                            <a href="#Flow.to_deployment-585">
                                <span className="linenos">585</span>
                            </a>
                            {"        "}
                            <span className="n">help</span>
                            <span className="o">=</span>
                            <span className="s2">"Use `paused` instead."</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-586">
                            <a href="#Flow.to_deployment-586">
                                <span className="linenos">586</span>
                            </a>
                            {"    "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-587">
                            <a href="#Flow.to_deployment-587">
                                <span className="linenos">587</span>
                            </a>
                            {"    "}
                            <span className="k">
                                async
                            </span> <span className="k">def</span>{" "}
                            <span className="nf">to_deployment</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-588">
                            <a href="#Flow.to_deployment-588">
                                <span className="linenos">588</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-589">
                            <a href="#Flow.to_deployment-589">
                                <span className="linenos">589</span>
                            </a>
                            {"        "}
                            <span className="n">name</span>
                            <span className="p">:</span> <span className="nb">str</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-590">
                            <a href="#Flow.to_deployment-590">
                                <span className="linenos">590</span>
                            </a>
                            {"        "}
                            <span className="n">interval</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-591">
                            <a href="#Flow.to_deployment-591">
                                <span className="linenos">591</span>
                            </a>
                            {"            "}
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-592">
                            <a href="#Flow.to_deployment-592">
                                <span className="linenos">592</span>
                            </a>
                            {"                "}
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">,</span> <span className="n">datetime</span>
                            <span className="o">.</span>
                            <span className="n">timedelta</span>
                            <span className="p">]],</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-593">
                            <a href="#Flow.to_deployment-593">
                                <span className="linenos">593</span>
                            </a>
                            {"                "}
                            <span className="nb">int</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-594">
                            <a href="#Flow.to_deployment-594">
                                <span className="linenos">594</span>
                            </a>
                            {"                "}
                            <span className="nb">float</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-595">
                            <a href="#Flow.to_deployment-595">
                                <span className="linenos">595</span>
                            </a>
                            {"                "}
                            <span className="n">datetime</span>
                            <span className="o">.</span>
                            <span className="n">timedelta</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-596">
                            <a href="#Flow.to_deployment-596">
                                <span className="linenos">596</span>
                            </a>
                            {"            "}
                            <span className="p">]</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-597">
                            <a href="#Flow.to_deployment-597">
                                <span className="linenos">597</span>
                            </a>
                            {"        "}
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-598">
                            <a href="#Flow.to_deployment-598">
                                <span className="linenos">598</span>
                            </a>
                            {"        "}
                            <span className="n">cron</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">],</span> <span className="nb">str</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-599">
                            <a href="#Flow.to_deployment-599">
                                <span className="linenos">599</span>
                            </a>
                            {"        "}
                            <span className="n">rrule</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">],</span> <span className="nb">str</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-600">
                            <a href="#Flow.to_deployment-600">
                                <span className="linenos">600</span>
                            </a>
                            {"        "}
                            <span className="n">paused</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-601">
                            <a href="#Flow.to_deployment-601">
                                <span className="linenos">601</span>
                            </a>
                            {"        "}
                            <span className="n">schedules</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="s2">"FlexibleScheduleList"</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-602">
                            <a href="#Flow.to_deployment-602">
                                <span className="linenos">602</span>
                            </a>
                            {"        "}
                            <span className="n">schedule</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">SCHEDULE_TYPES</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-603">
                            <a href="#Flow.to_deployment-603">
                                <span className="linenos">603</span>
                            </a>
                            {"        "}
                            <span className="n">is_schedule_active</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-604">
                            <a href="#Flow.to_deployment-604">
                                <span className="linenos">604</span>
                            </a>
                            {"        "}
                            <span className="n">parameters</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">dict</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-605">
                            <a href="#Flow.to_deployment-605">
                                <span className="linenos">605</span>
                            </a>
                            {"        "}
                            <span className="n">triggers</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">DeploymentTriggerTypes</span>
                            <span className="p">,</span>{" "}
                            <span className="n">TriggerTypes</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-606">
                            <a href="#Flow.to_deployment-606">
                                <span className="linenos">606</span>
                            </a>
                            {"        "}
                            <span className="n">description</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-607">
                            <a href="#Flow.to_deployment-607">
                                <span className="linenos">607</span>
                            </a>
                            {"        "}
                            <span className="n">tags</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-608">
                            <a href="#Flow.to_deployment-608">
                                <span className="linenos">608</span>
                            </a>
                            {"        "}
                            <span className="n">version</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-609">
                            <a href="#Flow.to_deployment-609">
                                <span className="linenos">609</span>
                            </a>
                            {"        "}
                            <span className="n">enforce_parameter_schema</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">False</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-610">
                            <a href="#Flow.to_deployment-610">
                                <span className="linenos">610</span>
                            </a>
                            {"        "}
                            <span className="n">work_pool_name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-611">
                            <a href="#Flow.to_deployment-611">
                                <span className="linenos">611</span>
                            </a>
                            {"        "}
                            <span className="n">work_queue_name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-612">
                            <a href="#Flow.to_deployment-612">
                                <span className="linenos">612</span>
                            </a>
                            {"        "}
                            <span className="n">job_variables</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-613">
                            <a href="#Flow.to_deployment-613">
                                <span className="linenos">613</span>
                            </a>
                            {"        "}
                            <span className="n">entrypoint_type</span>
                            <span className="p">:</span>{" "}
                            <span className="n">EntrypointType</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">EntrypointType</span>
                            <span className="o">.</span>
                            <span className="n">FILE_PATH</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-614">
                            <a href="#Flow.to_deployment-614">
                                <span className="linenos">614</span>
                            </a>
                            {"    "}
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="s2">"RunnerDeployment"</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-615">
                            <a href="#Flow.to_deployment-615">
                                <span className="linenos">615</span>
                            </a>
                            <span className="w">{"        "}</span>
                            <span className="sd">"""</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-616">
                            <a href="#Flow.to_deployment-616">
                                <span className="linenos">616</span>
                            </a>
                            <span className="sd">
                                {"        "}Creates a runner deployment object for this flow.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-617">
                            <a href="#Flow.to_deployment-617">
                                <span className="linenos">617</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-618">
                            <a href="#Flow.to_deployment-618">
                                <span className="linenos">618</span>
                            </a>
                            <span className="sd">{"        "}Args:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-619">
                            <a href="#Flow.to_deployment-619">
                                <span className="linenos">619</span>
                            </a>
                            <span className="sd">
                                {"            "}name: The name to give the created deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-620">
                            <a href="#Flow.to_deployment-620">
                                <span className="linenos">620</span>
                            </a>
                            <span className="sd">
                                {"            "}interval: An interval on which to execute the
                                new deployment. Accepts either a number
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-621">
                            <a href="#Flow.to_deployment-621">
                                <span className="linenos">621</span>
                            </a>
                            <span className="sd">
                                {"                "}or a timedelta object. If a number is given,
                                it will be interpreted as seconds.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-622">
                            <a href="#Flow.to_deployment-622">
                                <span className="linenos">622</span>
                            </a>
                            <span className="sd">
                                {"            "}cron: A cron schedule of when to execute runs of
                                this deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-623">
                            <a href="#Flow.to_deployment-623">
                                <span className="linenos">623</span>
                            </a>
                            <span className="sd">
                                {"            "}rrule: An rrule schedule of when to execute runs
                                of this deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-624">
                            <a href="#Flow.to_deployment-624">
                                <span className="linenos">624</span>
                            </a>
                            <span className="sd">
                                {"            "}paused: Whether or not to set this deployment as
                                paused.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-625">
                            <a href="#Flow.to_deployment-625">
                                <span className="linenos">625</span>
                            </a>
                            <span className="sd">
                                {"            "}schedules: A list of schedule objects defining
                                when to execute runs of this deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-626">
                            <a href="#Flow.to_deployment-626">
                                <span className="linenos">626</span>
                            </a>
                            <span className="sd">
                                {"                "}Used to define multiple schedules or
                                additional scheduling options such as `timezone`.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-627">
                            <a href="#Flow.to_deployment-627">
                                <span className="linenos">627</span>
                            </a>
                            <span className="sd">
                                {"            "}schedule: A schedule object defining when to
                                execute runs of this deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-628">
                            <a href="#Flow.to_deployment-628">
                                <span className="linenos">628</span>
                            </a>
                            <span className="sd">
                                {"            "}is_schedule_active: Whether or not to set the
                                schedule for this deployment as active. If
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-629">
                            <a href="#Flow.to_deployment-629">
                                <span className="linenos">629</span>
                            </a>
                            <span className="sd">
                                {"                "}not provided when creating a deployment, the
                                schedule will be set as active. If not
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-630">
                            <a href="#Flow.to_deployment-630">
                                <span className="linenos">630</span>
                            </a>
                            <span className="sd">
                                {"                "}provided when updating a deployment, the
                                schedule's activation will not be changed.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-631">
                            <a href="#Flow.to_deployment-631">
                                <span className="linenos">631</span>
                            </a>
                            <span className="sd">
                                {"            "}parameters: A dictionary of default parameter
                                values to pass to runs of this deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-632">
                            <a href="#Flow.to_deployment-632">
                                <span className="linenos">632</span>
                            </a>
                            <span className="sd">
                                {"            "}triggers: A list of triggers that will kick off
                                runs of this deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-633">
                            <a href="#Flow.to_deployment-633">
                                <span className="linenos">633</span>
                            </a>
                            <span className="sd">
                                {"            "}description: A description for the created
                                deployment. Defaults to the flow's
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-634">
                            <a href="#Flow.to_deployment-634">
                                <span className="linenos">634</span>
                            </a>
                            <span className="sd">
                                {"                "}description if not provided.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-635">
                            <a href="#Flow.to_deployment-635">
                                <span className="linenos">635</span>
                            </a>
                            <span className="sd">
                                {"            "}tags: A list of tags to associate with the
                                created deployment for organizational
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-636">
                            <a href="#Flow.to_deployment-636">
                                <span className="linenos">636</span>
                            </a>
                            <span className="sd">{"                "}purposes.</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-637">
                            <a href="#Flow.to_deployment-637">
                                <span className="linenos">637</span>
                            </a>
                            <span className="sd">
                                {"            "}version: A version for the created deployment.
                                Defaults to the flow's version.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-638">
                            <a href="#Flow.to_deployment-638">
                                <span className="linenos">638</span>
                            </a>
                            <span className="sd">
                                {"            "}enforce_parameter_schema: Whether or not the
                                Prefect API should enforce the
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-639">
                            <a href="#Flow.to_deployment-639">
                                <span className="linenos">639</span>
                            </a>
                            <span className="sd">
                                {"                "}parameter schema for the created deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-640">
                            <a href="#Flow.to_deployment-640">
                                <span className="linenos">640</span>
                            </a>
                            <span className="sd">
                                {"            "}work_pool_name: The name of the work pool to use
                                for this deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-641">
                            <a href="#Flow.to_deployment-641">
                                <span className="linenos">641</span>
                            </a>
                            <span className="sd">
                                {"            "}work_queue_name: The name of the work queue to
                                use for this deployment's scheduled runs.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-642">
                            <a href="#Flow.to_deployment-642">
                                <span className="linenos">642</span>
                            </a>
                            <span className="sd">
                                {"                "}If not provided the default work queue for
                                the work pool will be used.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-643">
                            <a href="#Flow.to_deployment-643">
                                <span className="linenos">643</span>
                            </a>
                            <span className="sd">
                                {"            "}job_variables: Settings used to override the
                                values specified default base job template
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-644">
                            <a href="#Flow.to_deployment-644">
                                <span className="linenos">644</span>
                            </a>
                            <span className="sd">
                                {"                "}of the chosen work pool. Refer to the base
                                job template of the chosen work pool for
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-645">
                            <a href="#Flow.to_deployment-645">
                                <span className="linenos">645</span>
                            </a>
                            <span className="sd">
                                {"            "}entrypoint_type: Type of entrypoint to use for
                                the deployment. When using a module path
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-646">
                            <a href="#Flow.to_deployment-646">
                                <span className="linenos">646</span>
                            </a>
                            <span className="sd">
                                {"                "}entrypoint, ensure that the module will be
                                importable in the execution environment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-647">
                            <a href="#Flow.to_deployment-647">
                                <span className="linenos">647</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-648">
                            <a href="#Flow.to_deployment-648">
                                <span className="linenos">648</span>
                            </a>
                            <span className="sd">{"        "}Examples:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-649">
                            <a href="#Flow.to_deployment-649">
                                <span className="linenos">649</span>
                            </a>
                            <span className="sd">
                                {"            "}Prepare two deployments and serve them:
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-650">
                            <a href="#Flow.to_deployment-650">
                                <span className="linenos">650</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-651">
                            <a href="#Flow.to_deployment-651">
                                <span className="linenos">651</span>
                            </a>
                            <span className="sd">{"            "}```python</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-652">
                            <a href="#Flow.to_deployment-652">
                                <span className="linenos">652</span>
                            </a>
                            <span className="sd">
                                {"            "}from prefect import flow, serve
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-653">
                            <a href="#Flow.to_deployment-653">
                                <span className="linenos">653</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-654">
                            <a href="#Flow.to_deployment-654">
                                <span className="linenos">654</span>
                            </a>
                            <span className="sd">{"            "}@flow</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-655">
                            <a href="#Flow.to_deployment-655">
                                <span className="linenos">655</span>
                            </a>
                            <span className="sd">{"            "}def my_flow(name):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-656">
                            <a href="#Flow.to_deployment-656">
                                <span className="linenos">656</span>
                            </a>
                            <span className="sd">
                                {"                "}print(f"hello {"{"}name{"}"}")
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-657">
                            <a href="#Flow.to_deployment-657">
                                <span className="linenos">657</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-658">
                            <a href="#Flow.to_deployment-658">
                                <span className="linenos">658</span>
                            </a>
                            <span className="sd">{"            "}@flow</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-659">
                            <a href="#Flow.to_deployment-659">
                                <span className="linenos">659</span>
                            </a>
                            <span className="sd">
                                {"            "}def my_other_flow(name):
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-660">
                            <a href="#Flow.to_deployment-660">
                                <span className="linenos">660</span>
                            </a>
                            <span className="sd">
                                {"                "}print(f"goodbye {"{"}name{"}"}")
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-661">
                            <a href="#Flow.to_deployment-661">
                                <span className="linenos">661</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-662">
                            <a href="#Flow.to_deployment-662">
                                <span className="linenos">662</span>
                            </a>
                            <span className="sd">
                                {"            "}if __name__ == "__main__":
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-663">
                            <a href="#Flow.to_deployment-663">
                                <span className="linenos">663</span>
                            </a>
                            <span className="sd">
                                {"                "}hello_deploy =
                                my_flow.to_deployment("hello", tags=["dev"])
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-664">
                            <a href="#Flow.to_deployment-664">
                                <span className="linenos">664</span>
                            </a>
                            <span className="sd">
                                {"                "}bye_deploy =
                                my_other_flow.to_deployment("goodbye", tags=["dev"])
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-665">
                            <a href="#Flow.to_deployment-665">
                                <span className="linenos">665</span>
                            </a>
                            <span className="sd">
                                {"                "}serve(hello_deploy, bye_deploy)
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-666">
                            <a href="#Flow.to_deployment-666">
                                <span className="linenos">666</span>
                            </a>
                            <span className="sd">{"            "}```</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-667">
                            <a href="#Flow.to_deployment-667">
                                <span className="linenos">667</span>
                            </a>
                            <span className="sd">{"        "}"""</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-668">
                            <a href="#Flow.to_deployment-668">
                                <span className="linenos">668</span>
                            </a>
                            {"        "}
                            <span className="kn">from</span>{" "}
                            <span className="nn">prefect.deployments.runner</span>{" "}
                            <span className="kn">import</span>{" "}
                            <span className="n">RunnerDeployment</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-669">
                            <a href="#Flow.to_deployment-669">
                                <span className="linenos">669</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-670">
                            <a href="#Flow.to_deployment-670">
                                <span className="linenos">670</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="n">name</span>
                            <span className="o">.</span>
                            <span className="n">endswith</span>
                            <span className="p">(</span>
                            <span className="s2">".py"</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-671">
                            <a href="#Flow.to_deployment-671">
                                <span className="linenos">671</span>
                            </a>
                            {"            "}
                            <span className="n">raise_on_name_with_banned_characters</span>
                            <span className="p">(</span>
                            <span className="n">name</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-672">
                            <a href="#Flow.to_deployment-672">
                                <span className="linenos">672</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">_storage</span>{" "}
                            <span className="ow">and</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">_entrypoint</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-673">
                            <a href="#Flow.to_deployment-673">
                                <span className="linenos">673</span>
                            </a>
                            {"            "}
                            <span className="k">
                                return
                            </span> <span className="k">await</span>{" "}
                            <span className="n">RunnerDeployment</span>
                            <span className="o">.</span>
                            <span className="n">from_storage</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-674">
                            <a href="#Flow.to_deployment-674">
                                <span className="linenos">674</span>
                            </a>
                            {"                "}
                            <span className="n">storage</span>
                            <span className="o">=</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">_storage</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-675">
                            <a href="#Flow.to_deployment-675">
                                <span className="linenos">675</span>
                            </a>
                            {"                "}
                            <span className="n">entrypoint</span>
                            <span className="o">=</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">_entrypoint</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-676">
                            <a href="#Flow.to_deployment-676">
                                <span className="linenos">676</span>
                            </a>
                            {"                "}
                            <span className="n">name</span>
                            <span className="o">=</span>
                            <span className="n">name</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-677">
                            <a href="#Flow.to_deployment-677">
                                <span className="linenos">677</span>
                            </a>
                            {"                "}
                            <span className="n">interval</span>
                            <span className="o">=</span>
                            <span className="n">interval</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-678">
                            <a href="#Flow.to_deployment-678">
                                <span className="linenos">678</span>
                            </a>
                            {"                "}
                            <span className="n">cron</span>
                            <span className="o">=</span>
                            <span className="n">cron</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-679">
                            <a href="#Flow.to_deployment-679">
                                <span className="linenos">679</span>
                            </a>
                            {"                "}
                            <span className="n">rrule</span>
                            <span className="o">=</span>
                            <span className="n">rrule</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-680">
                            <a href="#Flow.to_deployment-680">
                                <span className="linenos">680</span>
                            </a>
                            {"                "}
                            <span className="n">paused</span>
                            <span className="o">=</span>
                            <span className="n">paused</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-681">
                            <a href="#Flow.to_deployment-681">
                                <span className="linenos">681</span>
                            </a>
                            {"                "}
                            <span className="n">schedules</span>
                            <span className="o">=</span>
                            <span className="n">schedules</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-682">
                            <a href="#Flow.to_deployment-682">
                                <span className="linenos">682</span>
                            </a>
                            {"                "}
                            <span className="n">schedule</span>
                            <span className="o">=</span>
                            <span className="n">schedule</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-683">
                            <a href="#Flow.to_deployment-683">
                                <span className="linenos">683</span>
                            </a>
                            {"                "}
                            <span className="n">is_schedule_active</span>
                            <span className="o">=</span>
                            <span className="n">is_schedule_active</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-684">
                            <a href="#Flow.to_deployment-684">
                                <span className="linenos">684</span>
                            </a>
                            {"                "}
                            <span className="n">tags</span>
                            <span className="o">=</span>
                            <span className="n">tags</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-685">
                            <a href="#Flow.to_deployment-685">
                                <span className="linenos">685</span>
                            </a>
                            {"                "}
                            <span className="n">triggers</span>
                            <span className="o">=</span>
                            <span className="n">triggers</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-686">
                            <a href="#Flow.to_deployment-686">
                                <span className="linenos">686</span>
                            </a>
                            {"                "}
                            <span className="n">parameters</span>
                            <span className="o">=</span>
                            <span className="n">parameters</span>{" "}
                            <span className="ow">or</span>{" "}
                            <span className="p">
                                {"{"}
                                {"}"},
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-687">
                            <a href="#Flow.to_deployment-687">
                                <span className="linenos">687</span>
                            </a>
                            {"                "}
                            <span className="n">description</span>
                            <span className="o">=</span>
                            <span className="n">description</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-688">
                            <a href="#Flow.to_deployment-688">
                                <span className="linenos">688</span>
                            </a>
                            {"                "}
                            <span className="n">version</span>
                            <span className="o">=</span>
                            <span className="n">version</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-689">
                            <a href="#Flow.to_deployment-689">
                                <span className="linenos">689</span>
                            </a>
                            {"                "}
                            <span className="n">enforce_parameter_schema</span>
                            <span className="o">=</span>
                            <span className="n">enforce_parameter_schema</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-690">
                            <a href="#Flow.to_deployment-690">
                                <span className="linenos">690</span>
                            </a>
                            {"                "}
                            <span className="n">work_pool_name</span>
                            <span className="o">=</span>
                            <span className="n">work_pool_name</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-691">
                            <a href="#Flow.to_deployment-691">
                                <span className="linenos">691</span>
                            </a>
                            {"                "}
                            <span className="n">work_queue_name</span>
                            <span className="o">=</span>
                            <span className="n">work_queue_name</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-692">
                            <a href="#Flow.to_deployment-692">
                                <span className="linenos">692</span>
                            </a>
                            {"                "}
                            <span className="n">job_variables</span>
                            <span className="o">=</span>
                            <span className="n">job_variables</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-693">
                            <a href="#Flow.to_deployment-693">
                                <span className="linenos">693</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-694">
                            <a href="#Flow.to_deployment-694">
                                <span className="linenos">694</span>
                            </a>
                            {"        "}
                            <span className="k">else</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-695">
                            <a href="#Flow.to_deployment-695">
                                <span className="linenos">695</span>
                            </a>
                            {"            "}
                            <span className="k">return</span>{" "}
                            <span className="n">RunnerDeployment</span>
                            <span className="o">.</span>
                            <span className="n">from_flow</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-696">
                            <a href="#Flow.to_deployment-696">
                                <span className="linenos">696</span>
                            </a>
                            {"                "}
                            <span className="bp">self</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-697">
                            <a href="#Flow.to_deployment-697">
                                <span className="linenos">697</span>
                            </a>
                            {"                "}
                            <span className="n">name</span>
                            <span className="o">=</span>
                            <span className="n">name</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-698">
                            <a href="#Flow.to_deployment-698">
                                <span className="linenos">698</span>
                            </a>
                            {"                "}
                            <span className="n">interval</span>
                            <span className="o">=</span>
                            <span className="n">interval</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-699">
                            <a href="#Flow.to_deployment-699">
                                <span className="linenos">699</span>
                            </a>
                            {"                "}
                            <span className="n">cron</span>
                            <span className="o">=</span>
                            <span className="n">cron</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-700">
                            <a href="#Flow.to_deployment-700">
                                <span className="linenos">700</span>
                            </a>
                            {"                "}
                            <span className="n">rrule</span>
                            <span className="o">=</span>
                            <span className="n">rrule</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-701">
                            <a href="#Flow.to_deployment-701">
                                <span className="linenos">701</span>
                            </a>
                            {"                "}
                            <span className="n">paused</span>
                            <span className="o">=</span>
                            <span className="n">paused</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-702">
                            <a href="#Flow.to_deployment-702">
                                <span className="linenos">702</span>
                            </a>
                            {"                "}
                            <span className="n">schedules</span>
                            <span className="o">=</span>
                            <span className="n">schedules</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-703">
                            <a href="#Flow.to_deployment-703">
                                <span className="linenos">703</span>
                            </a>
                            {"                "}
                            <span className="n">schedule</span>
                            <span className="o">=</span>
                            <span className="n">schedule</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-704">
                            <a href="#Flow.to_deployment-704">
                                <span className="linenos">704</span>
                            </a>
                            {"                "}
                            <span className="n">is_schedule_active</span>
                            <span className="o">=</span>
                            <span className="n">is_schedule_active</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-705">
                            <a href="#Flow.to_deployment-705">
                                <span className="linenos">705</span>
                            </a>
                            {"                "}
                            <span className="n">tags</span>
                            <span className="o">=</span>
                            <span className="n">tags</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-706">
                            <a href="#Flow.to_deployment-706">
                                <span className="linenos">706</span>
                            </a>
                            {"                "}
                            <span className="n">triggers</span>
                            <span className="o">=</span>
                            <span className="n">triggers</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-707">
                            <a href="#Flow.to_deployment-707">
                                <span className="linenos">707</span>
                            </a>
                            {"                "}
                            <span className="n">parameters</span>
                            <span className="o">=</span>
                            <span className="n">parameters</span>{" "}
                            <span className="ow">or</span>{" "}
                            <span className="p">
                                {"{"}
                                {"}"},
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-708">
                            <a href="#Flow.to_deployment-708">
                                <span className="linenos">708</span>
                            </a>
                            {"                "}
                            <span className="n">description</span>
                            <span className="o">=</span>
                            <span className="n">description</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-709">
                            <a href="#Flow.to_deployment-709">
                                <span className="linenos">709</span>
                            </a>
                            {"                "}
                            <span className="n">version</span>
                            <span className="o">=</span>
                            <span className="n">version</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-710">
                            <a href="#Flow.to_deployment-710">
                                <span className="linenos">710</span>
                            </a>
                            {"                "}
                            <span className="n">enforce_parameter_schema</span>
                            <span className="o">=</span>
                            <span className="n">enforce_parameter_schema</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-711">
                            <a href="#Flow.to_deployment-711">
                                <span className="linenos">711</span>
                            </a>
                            {"                "}
                            <span className="n">work_pool_name</span>
                            <span className="o">=</span>
                            <span className="n">work_pool_name</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-712">
                            <a href="#Flow.to_deployment-712">
                                <span className="linenos">712</span>
                            </a>
                            {"                "}
                            <span className="n">work_queue_name</span>
                            <span className="o">=</span>
                            <span className="n">work_queue_name</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-713">
                            <a href="#Flow.to_deployment-713">
                                <span className="linenos">713</span>
                            </a>
                            {"                "}
                            <span className="n">job_variables</span>
                            <span className="o">=</span>
                            <span className="n">job_variables</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-714">
                            <a href="#Flow.to_deployment-714">
                                <span className="linenos">714</span>
                            </a>
                            {"                "}
                            <span className="n">entrypoint_type</span>
                            <span className="o">=</span>
                            <span className="n">entrypoint_type</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.to_deployment-715">
                            <a href="#Flow.to_deployment-715">
                                <span className="linenos">715</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
                <div className="docstring">
                    <p>Creates a runner deployment object for this flow.</p>
                    <p>
                        Args: name: The name to give the created deployment. interval: An
                        interval on which to execute the new deployment. Accepts either a
                        number or a timedelta object. If a number is given, it will be
                        interpreted as seconds. cron: A cron schedule of when to execute
                        runs of this deployment. rrule: An rrule schedule of when to execute
                        runs of this deployment. paused: Whether or not to set this
                        deployment as paused. schedules: A list of schedule objects defining
                        when to execute runs of this deployment. Used to define multiple
                        schedules or additional scheduling options such as
                        <code>timezone</code>. schedule: A schedule object defining when to
                        execute runs of this deployment. is_schedule_active: Whether or not
                        to set the schedule for this deployment as active. If not provided
                        when creating a deployment, the schedule will be set as active. If
                        not provided when updating a deployment, the schedule's activation
                        will not be changed. parameters: A dictionary of default parameter
                        values to pass to runs of this deployment. triggers: A list of
                        triggers that will kick off runs of this deployment. description: A
                        description for the created deployment. Defaults to the flow's
                        description if not provided. tags: A list of tags to associate with
                        the created deployment for organizational purposes. version: A
                        version for the created deployment. Defaults to the flow's version.
                        enforce_parameter_schema: Whether or not the Prefect API should
                        enforce the parameter schema for the created deployment.
                        work_pool_name: The name of the work pool to use for this
                        deployment. work_queue_name: The name of the work queue to use for
                        this deployment's scheduled runs. If not provided the default work
                        queue for the work pool will be used. job_variables: Settings used
                        to override the values specified default base job template of the
                        chosen work pool. Refer to the base job template of the chosen work
                        pool for entrypoint_type: Type of entrypoint to use for the
                        deployment. When using a module path entrypoint, ensure that the
                        module will be importable in the execution environment.
                    </p>
                    <p>Examples: Prepare two deployments and serve them:</p>
                    <div className="pdoc-code codehilite">
                        <pre>
                            <span />
                            <code>
                                <span className="kn">from</span>{" "}
                                <span className="nn">prefect</span>{" "}
                                <span className="kn">import</span>{" "}
                                <span className="n">flow</span>
                                <span className="p">,</span> <span className="n">serve</span>
                                {"\n"} <br />
                                {"\n"}
                                {"    "}
                                <span className="nd">@flow</span>
                                {"\n"}
                                {"    "}
                                <span className="k">def</span>{" "}
                                <span className="nf">my_flow</span>
                                <span className="p">(</span>
                                <span className="n">name</span>
                                <span className="p">):</span>
                                {"\n"}
                                {"        "}
                                <span className="nb">print</span>
                                <span className="p">(</span>
                                <span className="sa">f</span>
                                <span className="s2">"hello </span>
                                <span className="si">{"{"}</span>
                                <span className="n">name</span>
                                <span className="si">{"}"}</span>
                                <span className="s2">"</span>
                                <span className="p">)</span>
                                {"\n"} <br />
                                {"\n"}
                                {"    "}
                                <span className="nd">@flow</span>
                                {"\n"}
                                {"    "}
                                <span className="k">def</span>{" "}
                                <span className="nf">my_other_flow</span>
                                <span className="p">(</span>
                                <span className="n">name</span>
                                <span className="p">):</span>
                                {"\n"}
                                {"        "}
                                <span className="nb">print</span>
                                <span className="p">(</span>
                                <span className="sa">f</span>
                                <span className="s2">"goodbye </span>
                                <span className="si">{"{"}</span>
                                <span className="n">name</span>
                                <span className="si">{"}"}</span>
                                <span className="s2">"</span>
                                <span className="p">)</span>
                                {"\n"} <br />
                                {"\n"}
                                {"    "}
                                <span className="k">if</span>{" "}
                                <span className="vm">__name__</span>{" "}
                                <span className="o">==</span>{" "}
                                <span className="s2">"__main__"</span>
                                <span className="p">:</span>
                                {"\n"}
                                {"        "}
                                <span className="n">hello_deploy</span>{" "}
                                <span className="o">=</span> <span className="n">my_flow</span>
                                <span className="o">.</span>
                                <span className="n">to_deployment</span>
                                <span className="p">(</span>
                                <span className="s2">"hello"</span>
                                <span className="p">,</span> <span className="n">tags</span>
                                <span className="o">=</span>
                                <span className="p">[</span>
                                <span className="s2">"dev"</span>
                                <span className="p">])</span>
                                {"\n"}
                                {"        "}
                                <span className="n">bye_deploy</span>{" "}
                                <span className="o">=</span>{" "}
                                <span className="n">my_other_flow</span>
                                <span className="o">.</span>
                                <span className="n">to_deployment</span>
                                <span className="p">(</span>
                                <span className="s2">"goodbye"</span>
                                <span className="p">,</span> <span className="n">tags</span>
                                <span className="o">=</span>
                                <span className="p">[</span>
                                <span className="s2">"dev"</span>
                                <span className="p">])</span>
                                {"\n"}
                                {"        "}
                                <span className="n">serve</span>
                                <span className="p">(</span>
                                <span className="n">hello_deploy</span>
                                <span className="p">,</span>{" "}
                                <span className="n">bye_deploy</span>
                                <span className="p">)</span>
                                {"\n"}
                                {"    "}
                            </code>
                        </pre>
                    </div>
                    <p />
                </div>
            </div>
            <div id="Flow.serve" className="classattr">
                <input
                    id="Flow.serve-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <div className="decorator">@sync_compatible</div>
                    <span className="def">async def</span>
                    <span className="name">serve</span>
                    <span className="signature pdoc-code multiline">
                        (
                        <span className="param">
                            <span className="bp">self</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">interval</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">,</span> <span className="n">datetime</span>
                            <span className="o">.</span>
                            <span className="n">timedelta</span>
                            <span className="p">]],</span> <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">,</span> <span className="n">datetime</span>
                            <span className="o">.</span>
                            <span className="n">timedelta</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">cron</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">],</span> <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">rrule</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">],</span> <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">paused</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">schedules</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Sequence</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">MinimalDeploymentSchedule</span>
                            <span className="p">,</span> <span className="nb">dict</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">IntervalSchedule</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">CronSchedule</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">RRuleSchedule</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">NoSchedule</span>
                            <span className="p">]]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">schedule</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">IntervalSchedule</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">CronSchedule</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">RRuleSchedule</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">NoSchedule</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">is_schedule_active</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">triggers</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">deployment_triggers</span>
                            <span className="o">.</span>
                            <span className="n">DeploymentEventTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">deployment_triggers</span>
                            <span className="o">.</span>
                            <span className="n">DeploymentMetricTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">deployment_triggers</span>
                            <span className="o">.</span>
                            <span className="n">DeploymentCompoundTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">deployment_triggers</span>
                            <span className="o">.</span>
                            <span className="n">DeploymentSequenceTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">automations</span>
                            <span className="o">.</span>
                            <span className="n">EventTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">automations</span>
                            <span className="o">.</span>
                            <span className="n">MetricTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">automations</span>
                            <span className="o">.</span>
                            <span className="n">CompoundTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">automations</span>
                            <span className="o">.</span>
                            <span className="n">SequenceTrigger</span>
                            <span className="p">]]]</span> <span className="o">=</span>
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">parameters</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">dict</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">description</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">tags</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">version</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">enforce_parameter_schema</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">False</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">pause_on_shutdown</span>
                            <span className="p">:</span> <span className="nb">bool</span>
                            <span className="o">=</span> <span className="kc">True</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">print_starting_message</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">True</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">limit</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">webserver</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">False</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">entrypoint_type</span>
                            <span className="p">:</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">deployments</span>
                            <span className="o">.</span>
                            <span className="n">runner</span>
                            <span className="o">.</span>
                            <span className="n">EntrypointType</span>{" "}
                            <span className="o">=</span> <span className="o">&lt;</span>
                            <span className="n">EntrypointType</span>
                            <span className="o">.</span>
                            <span className="n">FILE_PATH</span>
                            <span className="p">:</span>{" "}
                            <span className="s1">'file_path'</span>
                            <span className="o">&gt;</span>
                        </span>
                        <span className="return-annotation">):</span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="Flow.serve-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#Flow.serve" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="Flow.serve-717">
                            <a href="#Flow.serve-717">
                                <span className="linenos">717</span>
                            </a>
                            {"    "}
                            <span className="nd">@sync_compatible</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-718">
                            <a href="#Flow.serve-718">
                                <span className="linenos">718</span>
                            </a>
                            {"    "}
                            <span className="k">
                                async
                            </span> <span className="k">def</span>{" "}
                            <span className="nf">serve</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-719">
                            <a href="#Flow.serve-719">
                                <span className="linenos">719</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-720">
                            <a href="#Flow.serve-720">
                                <span className="linenos">720</span>
                            </a>
                            {"        "}
                            <span className="n">name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-721">
                            <a href="#Flow.serve-721">
                                <span className="linenos">721</span>
                            </a>
                            {"        "}
                            <span className="n">interval</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-722">
                            <a href="#Flow.serve-722">
                                <span className="linenos">722</span>
                            </a>
                            {"            "}
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-723">
                            <a href="#Flow.serve-723">
                                <span className="linenos">723</span>
                            </a>
                            {"                "}
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">,</span> <span className="n">datetime</span>
                            <span className="o">.</span>
                            <span className="n">timedelta</span>
                            <span className="p">]],</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-724">
                            <a href="#Flow.serve-724">
                                <span className="linenos">724</span>
                            </a>
                            {"                "}
                            <span className="nb">int</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-725">
                            <a href="#Flow.serve-725">
                                <span className="linenos">725</span>
                            </a>
                            {"                "}
                            <span className="nb">float</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-726">
                            <a href="#Flow.serve-726">
                                <span className="linenos">726</span>
                            </a>
                            {"                "}
                            <span className="n">datetime</span>
                            <span className="o">.</span>
                            <span className="n">timedelta</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-727">
                            <a href="#Flow.serve-727">
                                <span className="linenos">727</span>
                            </a>
                            {"            "}
                            <span className="p">]</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-728">
                            <a href="#Flow.serve-728">
                                <span className="linenos">728</span>
                            </a>
                            {"        "}
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-729">
                            <a href="#Flow.serve-729">
                                <span className="linenos">729</span>
                            </a>
                            {"        "}
                            <span className="n">cron</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">],</span> <span className="nb">str</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-730">
                            <a href="#Flow.serve-730">
                                <span className="linenos">730</span>
                            </a>
                            {"        "}
                            <span className="n">rrule</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">],</span> <span className="nb">str</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-731">
                            <a href="#Flow.serve-731">
                                <span className="linenos">731</span>
                            </a>
                            {"        "}
                            <span className="n">paused</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-732">
                            <a href="#Flow.serve-732">
                                <span className="linenos">732</span>
                            </a>
                            {"        "}
                            <span className="n">schedules</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="s2">"FlexibleScheduleList"</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-733">
                            <a href="#Flow.serve-733">
                                <span className="linenos">733</span>
                            </a>
                            {"        "}
                            <span className="n">schedule</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">SCHEDULE_TYPES</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-734">
                            <a href="#Flow.serve-734">
                                <span className="linenos">734</span>
                            </a>
                            {"        "}
                            <span className="n">is_schedule_active</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-735">
                            <a href="#Flow.serve-735">
                                <span className="linenos">735</span>
                            </a>
                            {"        "}
                            <span className="n">triggers</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">DeploymentTriggerTypes</span>
                            <span className="p">,</span>{" "}
                            <span className="n">TriggerTypes</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-736">
                            <a href="#Flow.serve-736">
                                <span className="linenos">736</span>
                            </a>
                            {"        "}
                            <span className="n">parameters</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">dict</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-737">
                            <a href="#Flow.serve-737">
                                <span className="linenos">737</span>
                            </a>
                            {"        "}
                            <span className="n">description</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-738">
                            <a href="#Flow.serve-738">
                                <span className="linenos">738</span>
                            </a>
                            {"        "}
                            <span className="n">tags</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-739">
                            <a href="#Flow.serve-739">
                                <span className="linenos">739</span>
                            </a>
                            {"        "}
                            <span className="n">version</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-740">
                            <a href="#Flow.serve-740">
                                <span className="linenos">740</span>
                            </a>
                            {"        "}
                            <span className="n">enforce_parameter_schema</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">False</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-741">
                            <a href="#Flow.serve-741">
                                <span className="linenos">741</span>
                            </a>
                            {"        "}
                            <span className="n">pause_on_shutdown</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">True</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-742">
                            <a href="#Flow.serve-742">
                                <span className="linenos">742</span>
                            </a>
                            {"        "}
                            <span className="n">print_starting_message</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">True</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-743">
                            <a href="#Flow.serve-743">
                                <span className="linenos">743</span>
                            </a>
                            {"        "}
                            <span className="n">limit</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-744">
                            <a href="#Flow.serve-744">
                                <span className="linenos">744</span>
                            </a>
                            {"        "}
                            <span className="n">webserver</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">False</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-745">
                            <a href="#Flow.serve-745">
                                <span className="linenos">745</span>
                            </a>
                            {"        "}
                            <span className="n">entrypoint_type</span>
                            <span className="p">:</span>{" "}
                            <span className="n">EntrypointType</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">EntrypointType</span>
                            <span className="o">.</span>
                            <span className="n">FILE_PATH</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-746">
                            <a href="#Flow.serve-746">
                                <span className="linenos">746</span>
                            </a>
                            {"    "}
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-747">
                            <a href="#Flow.serve-747">
                                <span className="linenos">747</span>
                            </a>
                            <span className="w">{"        "}</span>
                            <span className="sd">"""</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-748">
                            <a href="#Flow.serve-748">
                                <span className="linenos">748</span>
                            </a>
                            <span className="sd">
                                {"        "}Creates a deployment for this flow and starts a
                                runner to monitor for scheduled work.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-749">
                            <a href="#Flow.serve-749">
                                <span className="linenos">749</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-750">
                            <a href="#Flow.serve-750">
                                <span className="linenos">750</span>
                            </a>
                            <span className="sd">{"        "}Args:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-751">
                            <a href="#Flow.serve-751">
                                <span className="linenos">751</span>
                            </a>
                            <span className="sd">
                                {"            "}name: The name to give the created deployment.
                                Defaults to the name of the flow.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-752">
                            <a href="#Flow.serve-752">
                                <span className="linenos">752</span>
                            </a>
                            <span className="sd">
                                {"            "}interval: An interval on which to execute the
                                deployment. Accepts a number or a
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-753">
                            <a href="#Flow.serve-753">
                                <span className="linenos">753</span>
                            </a>
                            <span className="sd">
                                {"                "}timedelta object to create a single
                                schedule. If a number is given, it will be
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-754">
                            <a href="#Flow.serve-754">
                                <span className="linenos">754</span>
                            </a>
                            <span className="sd">
                                {"                "}interpreted as seconds. Also accepts an
                                iterable of numbers or timedelta to create
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-755">
                            <a href="#Flow.serve-755">
                                <span className="linenos">755</span>
                            </a>
                            <span className="sd">
                                {"                "}multiple schedules.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-756">
                            <a href="#Flow.serve-756">
                                <span className="linenos">756</span>
                            </a>
                            <span className="sd">
                                {"            "}cron: A cron schedule string of when to execute
                                runs of this deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-757">
                            <a href="#Flow.serve-757">
                                <span className="linenos">757</span>
                            </a>
                            <span className="sd">
                                {"                "}Also accepts an iterable of cron schedule
                                strings to create multiple schedules.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-758">
                            <a href="#Flow.serve-758">
                                <span className="linenos">758</span>
                            </a>
                            <span className="sd">
                                {"            "}rrule: An rrule schedule string of when to
                                execute runs of this deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-759">
                            <a href="#Flow.serve-759">
                                <span className="linenos">759</span>
                            </a>
                            <span className="sd">
                                {"                "}Also accepts an iterable of rrule schedule
                                strings to create multiple schedules.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-760">
                            <a href="#Flow.serve-760">
                                <span className="linenos">760</span>
                            </a>
                            <span className="sd">
                                {"            "}triggers: A list of triggers that will kick off
                                runs of this deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-761">
                            <a href="#Flow.serve-761">
                                <span className="linenos">761</span>
                            </a>
                            <span className="sd">
                                {"            "}paused: Whether or not to set this deployment as
                                paused.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-762">
                            <a href="#Flow.serve-762">
                                <span className="linenos">762</span>
                            </a>
                            <span className="sd">
                                {"            "}schedules: A list of schedule objects defining
                                when to execute runs of this deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-763">
                            <a href="#Flow.serve-763">
                                <span className="linenos">763</span>
                            </a>
                            <span className="sd">
                                {"                "}Used to define multiple schedules or
                                additional scheduling options like `timezone`.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-764">
                            <a href="#Flow.serve-764">
                                <span className="linenos">764</span>
                            </a>
                            <span className="sd">
                                {"            "}schedule: A schedule object defining when to
                                execute runs of this deployment. Used to
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-765">
                            <a href="#Flow.serve-765">
                                <span className="linenos">765</span>
                            </a>
                            <span className="sd">
                                {"                "}define additional scheduling options such as
                                `timezone`.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-766">
                            <a href="#Flow.serve-766">
                                <span className="linenos">766</span>
                            </a>
                            <span className="sd">
                                {"            "}is_schedule_active: Whether or not to set the
                                schedule for this deployment as active. If
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-767">
                            <a href="#Flow.serve-767">
                                <span className="linenos">767</span>
                            </a>
                            <span className="sd">
                                {"                "}not provided when creating a deployment, the
                                schedule will be set as active. If not
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-768">
                            <a href="#Flow.serve-768">
                                <span className="linenos">768</span>
                            </a>
                            <span className="sd">
                                {"                "}provided when updating a deployment, the
                                schedule's activation will not be changed.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-769">
                            <a href="#Flow.serve-769">
                                <span className="linenos">769</span>
                            </a>
                            <span className="sd">
                                {"            "}parameters: A dictionary of default parameter
                                values to pass to runs of this deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-770">
                            <a href="#Flow.serve-770">
                                <span className="linenos">770</span>
                            </a>
                            <span className="sd">
                                {"            "}description: A description for the created
                                deployment. Defaults to the flow's
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-771">
                            <a href="#Flow.serve-771">
                                <span className="linenos">771</span>
                            </a>
                            <span className="sd">
                                {"                "}description if not provided.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-772">
                            <a href="#Flow.serve-772">
                                <span className="linenos">772</span>
                            </a>
                            <span className="sd">
                                {"            "}tags: A list of tags to associate with the
                                created deployment for organizational
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-773">
                            <a href="#Flow.serve-773">
                                <span className="linenos">773</span>
                            </a>
                            <span className="sd">{"                "}purposes.</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-774">
                            <a href="#Flow.serve-774">
                                <span className="linenos">774</span>
                            </a>
                            <span className="sd">
                                {"            "}version: A version for the created deployment.
                                Defaults to the flow's version.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-775">
                            <a href="#Flow.serve-775">
                                <span className="linenos">775</span>
                            </a>
                            <span className="sd">
                                {"            "}enforce_parameter_schema: Whether or not the
                                Prefect API should enforce the
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-776">
                            <a href="#Flow.serve-776">
                                <span className="linenos">776</span>
                            </a>
                            <span className="sd">
                                {"                "}parameter schema for the created deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-777">
                            <a href="#Flow.serve-777">
                                <span className="linenos">777</span>
                            </a>
                            <span className="sd">
                                {"            "}pause_on_shutdown: If True, provided schedule
                                will be paused when the serve function is stopped.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-778">
                            <a href="#Flow.serve-778">
                                <span className="linenos">778</span>
                            </a>
                            <span className="sd">
                                {"                "}If False, the schedules will continue
                                running.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-779">
                            <a href="#Flow.serve-779">
                                <span className="linenos">779</span>
                            </a>
                            <span className="sd">
                                {"            "}print_starting_message: Whether or not to print
                                the starting message when flow is served.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-780">
                            <a href="#Flow.serve-780">
                                <span className="linenos">780</span>
                            </a>
                            <span className="sd">
                                {"            "}limit: The maximum number of runs that can be
                                executed concurrently.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-781">
                            <a href="#Flow.serve-781">
                                <span className="linenos">781</span>
                            </a>
                            <span className="sd">
                                {"            "}webserver: Whether or not to start a monitoring
                                webserver for this flow.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-782">
                            <a href="#Flow.serve-782">
                                <span className="linenos">782</span>
                            </a>
                            <span className="sd">
                                {"            "}entrypoint_type: Type of entrypoint to use for
                                the deployment. When using a module path
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-783">
                            <a href="#Flow.serve-783">
                                <span className="linenos">783</span>
                            </a>
                            <span className="sd">
                                {"                "}entrypoint, ensure that the module will be
                                importable in the execution environment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-784">
                            <a href="#Flow.serve-784">
                                <span className="linenos">784</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-785">
                            <a href="#Flow.serve-785">
                                <span className="linenos">785</span>
                            </a>
                            <span className="sd">{"        "}Examples:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-786">
                            <a href="#Flow.serve-786">
                                <span className="linenos">786</span>
                            </a>
                            <span className="sd">{"            "}Serve a flow:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-787">
                            <a href="#Flow.serve-787">
                                <span className="linenos">787</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-788">
                            <a href="#Flow.serve-788">
                                <span className="linenos">788</span>
                            </a>
                            <span className="sd">{"            "}```python</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-789">
                            <a href="#Flow.serve-789">
                                <span className="linenos">789</span>
                            </a>
                            <span className="sd">
                                {"            "}from prefect import flow
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-790">
                            <a href="#Flow.serve-790">
                                <span className="linenos">790</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-791">
                            <a href="#Flow.serve-791">
                                <span className="linenos">791</span>
                            </a>
                            <span className="sd">{"            "}@flow</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-792">
                            <a href="#Flow.serve-792">
                                <span className="linenos">792</span>
                            </a>
                            <span className="sd">{"            "}def my_flow(name):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-793">
                            <a href="#Flow.serve-793">
                                <span className="linenos">793</span>
                            </a>
                            <span className="sd">
                                {"                "}print(f"hello {"{"}name{"}"}")
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-794">
                            <a href="#Flow.serve-794">
                                <span className="linenos">794</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-795">
                            <a href="#Flow.serve-795">
                                <span className="linenos">795</span>
                            </a>
                            <span className="sd">
                                {"            "}if __name__ == "__main__":
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-796">
                            <a href="#Flow.serve-796">
                                <span className="linenos">796</span>
                            </a>
                            <span className="sd">
                                {"                "}my_flow.serve("example-deployment")
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-797">
                            <a href="#Flow.serve-797">
                                <span className="linenos">797</span>
                            </a>
                            <span className="sd">{"            "}```</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-798">
                            <a href="#Flow.serve-798">
                                <span className="linenos">798</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-799">
                            <a href="#Flow.serve-799">
                                <span className="linenos">799</span>
                            </a>
                            <span className="sd">
                                {"            "}Serve a flow and run it every hour:
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-800">
                            <a href="#Flow.serve-800">
                                <span className="linenos">800</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-801">
                            <a href="#Flow.serve-801">
                                <span className="linenos">801</span>
                            </a>
                            <span className="sd">{"            "}```python</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-802">
                            <a href="#Flow.serve-802">
                                <span className="linenos">802</span>
                            </a>
                            <span className="sd">
                                {"            "}from prefect import flow
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-803">
                            <a href="#Flow.serve-803">
                                <span className="linenos">803</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-804">
                            <a href="#Flow.serve-804">
                                <span className="linenos">804</span>
                            </a>
                            <span className="sd">{"            "}@flow</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-805">
                            <a href="#Flow.serve-805">
                                <span className="linenos">805</span>
                            </a>
                            <span className="sd">{"            "}def my_flow(name):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-806">
                            <a href="#Flow.serve-806">
                                <span className="linenos">806</span>
                            </a>
                            <span className="sd">
                                {"                "}print(f"hello {"{"}name{"}"}")
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-807">
                            <a href="#Flow.serve-807">
                                <span className="linenos">807</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-808">
                            <a href="#Flow.serve-808">
                                <span className="linenos">808</span>
                            </a>
                            <span className="sd">
                                {"            "}if __name__ == "__main__":
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-809">
                            <a href="#Flow.serve-809">
                                <span className="linenos">809</span>
                            </a>
                            <span className="sd">
                                {"                "}my_flow.serve("example-deployment",
                                interval=3600)
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-810">
                            <a href="#Flow.serve-810">
                                <span className="linenos">810</span>
                            </a>
                            <span className="sd">{"            "}```</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-811">
                            <a href="#Flow.serve-811">
                                <span className="linenos">811</span>
                            </a>
                            <span className="sd">{"        "}"""</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-812">
                            <a href="#Flow.serve-812">
                                <span className="linenos">812</span>
                            </a>
                            {"        "}
                            <span className="kn">from</span>{" "}
                            <span className="nn">prefect.runner</span>{" "}
                            <span className="kn">import</span>{" "}
                            <span className="n">Runner</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-813">
                            <a href="#Flow.serve-813">
                                <span className="linenos">813</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-814">
                            <a href="#Flow.serve-814">
                                <span className="linenos">814</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="n">name</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-815">
                            <a href="#Flow.serve-815">
                                <span className="linenos">815</span>
                            </a>
                            {"            "}
                            <span className="n">name</span> <span className="o">=</span>{" "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">name</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-816">
                            <a href="#Flow.serve-816">
                                <span className="linenos">816</span>
                            </a>
                            {"        "}
                            <span className="k">else</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-817">
                            <a href="#Flow.serve-817">
                                <span className="linenos">817</span>
                            </a>
                            {"            "}
                            <span className="c1"># Handling for my_flow.serve(__file__)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-818">
                            <a href="#Flow.serve-818">
                                <span className="linenos">818</span>
                            </a>
                            {"            "}
                            <span className="c1">
                                # Will set name to name of file where my_flow.serve() without
                                the extension
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-819">
                            <a href="#Flow.serve-819">
                                <span className="linenos">819</span>
                            </a>
                            {"            "}
                            <span className="c1">
                                # Non filepath strings will pass through unchanged
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-820">
                            <a href="#Flow.serve-820">
                                <span className="linenos">820</span>
                            </a>
                            {"            "}
                            <span className="n">name</span> <span className="o">=</span>{" "}
                            <span className="n">Path</span>
                            <span className="p">(</span>
                            <span className="n">name</span>
                            <span className="p">)</span>
                            <span className="o">.</span>
                            <span className="n">stem</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-821">
                            <a href="#Flow.serve-821">
                                <span className="linenos">821</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-822">
                            <a href="#Flow.serve-822">
                                <span className="linenos">822</span>
                            </a>
                            {"        "}
                            <span className="n">
                                runner
                            </span> <span className="o">=</span>{" "}
                            <span className="n">Runner</span>
                            <span className="p">(</span>
                            <span className="n">name</span>
                            <span className="o">=</span>
                            <span className="n">name</span>
                            <span className="p">,</span>{" "}
                            <span className="n">pause_on_shutdown</span>
                            <span className="o">=</span>
                            <span className="n">pause_on_shutdown</span>
                            <span className="p">,</span> <span className="n">limit</span>
                            <span className="o">=</span>
                            <span className="n">limit</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-823">
                            <a href="#Flow.serve-823">
                                <span className="linenos">823</span>
                            </a>
                            {"        "}
                            <span className="n">deployment_id</span>{" "}
                            <span className="o">=</span> <span className="k">await</span>{" "}
                            <span className="n">runner</span>
                            <span className="o">.</span>
                            <span className="n">add_flow</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-824">
                            <a href="#Flow.serve-824">
                                <span className="linenos">824</span>
                            </a>
                            {"            "}
                            <span className="bp">self</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-825">
                            <a href="#Flow.serve-825">
                                <span className="linenos">825</span>
                            </a>
                            {"            "}
                            <span className="n">name</span>
                            <span className="o">=</span>
                            <span className="n">name</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-826">
                            <a href="#Flow.serve-826">
                                <span className="linenos">826</span>
                            </a>
                            {"            "}
                            <span className="n">triggers</span>
                            <span className="o">=</span>
                            <span className="n">triggers</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-827">
                            <a href="#Flow.serve-827">
                                <span className="linenos">827</span>
                            </a>
                            {"            "}
                            <span className="n">interval</span>
                            <span className="o">=</span>
                            <span className="n">interval</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-828">
                            <a href="#Flow.serve-828">
                                <span className="linenos">828</span>
                            </a>
                            {"            "}
                            <span className="n">cron</span>
                            <span className="o">=</span>
                            <span className="n">cron</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-829">
                            <a href="#Flow.serve-829">
                                <span className="linenos">829</span>
                            </a>
                            {"            "}
                            <span className="n">rrule</span>
                            <span className="o">=</span>
                            <span className="n">rrule</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-830">
                            <a href="#Flow.serve-830">
                                <span className="linenos">830</span>
                            </a>
                            {"            "}
                            <span className="n">paused</span>
                            <span className="o">=</span>
                            <span className="n">paused</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-831">
                            <a href="#Flow.serve-831">
                                <span className="linenos">831</span>
                            </a>
                            {"            "}
                            <span className="n">schedules</span>
                            <span className="o">=</span>
                            <span className="n">schedules</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-832">
                            <a href="#Flow.serve-832">
                                <span className="linenos">832</span>
                            </a>
                            {"            "}
                            <span className="n">schedule</span>
                            <span className="o">=</span>
                            <span className="n">schedule</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-833">
                            <a href="#Flow.serve-833">
                                <span className="linenos">833</span>
                            </a>
                            {"            "}
                            <span className="n">is_schedule_active</span>
                            <span className="o">=</span>
                            <span className="n">is_schedule_active</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-834">
                            <a href="#Flow.serve-834">
                                <span className="linenos">834</span>
                            </a>
                            {"            "}
                            <span className="n">parameters</span>
                            <span className="o">=</span>
                            <span className="n">parameters</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-835">
                            <a href="#Flow.serve-835">
                                <span className="linenos">835</span>
                            </a>
                            {"            "}
                            <span className="n">description</span>
                            <span className="o">=</span>
                            <span className="n">description</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-836">
                            <a href="#Flow.serve-836">
                                <span className="linenos">836</span>
                            </a>
                            {"            "}
                            <span className="n">tags</span>
                            <span className="o">=</span>
                            <span className="n">tags</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-837">
                            <a href="#Flow.serve-837">
                                <span className="linenos">837</span>
                            </a>
                            {"            "}
                            <span className="n">version</span>
                            <span className="o">=</span>
                            <span className="n">version</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-838">
                            <a href="#Flow.serve-838">
                                <span className="linenos">838</span>
                            </a>
                            {"            "}
                            <span className="n">enforce_parameter_schema</span>
                            <span className="o">=</span>
                            <span className="n">enforce_parameter_schema</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-839">
                            <a href="#Flow.serve-839">
                                <span className="linenos">839</span>
                            </a>
                            {"            "}
                            <span className="n">entrypoint_type</span>
                            <span className="o">=</span>
                            <span className="n">entrypoint_type</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-840">
                            <a href="#Flow.serve-840">
                                <span className="linenos">840</span>
                            </a>
                            {"        "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-841">
                            <a href="#Flow.serve-841">
                                <span className="linenos">841</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">print_starting_message</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-842">
                            <a href="#Flow.serve-842">
                                <span className="linenos">842</span>
                            </a>
                            {"            "}
                            <span className="n">help_message</span>{" "}
                            <span className="o">=</span> <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-843">
                            <a href="#Flow.serve-843">
                                <span className="linenos">843</span>
                            </a>
                            {"                "}
                            <span className="sa">f</span>
                            <span className="s2">"[green]Your flow </span>
                            <span className="si">{"{"}</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">name</span>
                            <span className="si">!r{"}"}</span>
                            <span className="s2"> is being served and polling for"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-844">
                            <a href="#Flow.serve-844">
                                <span className="linenos">844</span>
                            </a>
                            {"                "}
                            <span className="s2">" scheduled runs!</span>
                            <span className="se">\n</span>
                            <span className="s2">[/]</span>
                            <span className="se">\n</span>
                            <span className="s2">
                                To trigger a run for this flow, use the"
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-845">
                            <a href="#Flow.serve-845">
                                <span className="linenos">845</span>
                            </a>
                            {"                "}
                            <span className="s2">" following command:</span>
                            <span className="se">\n</span>
                            <span className="s2">[blue]</span>
                            <span className="se">\n\t</span>
                            <span className="s2">$ prefect deployment run"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-846">
                            <a href="#Flow.serve-846">
                                <span className="linenos">846</span>
                            </a>
                            {"                "}
                            <span className="sa">f</span>
                            <span className="s2">" '</span>
                            <span className="si">{"{"}</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">/</span>
                            <span className="si">{"{"}</span>
                            <span className="n">name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">'</span>
                            <span className="se">\n</span>
                            <span className="s2">[/]"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-847">
                            <a href="#Flow.serve-847">
                                <span className="linenos">847</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-848">
                            <a href="#Flow.serve-848">
                                <span className="linenos">848</span>
                            </a>
                            {"            "}
                            <span className="k">if</span>{" "}
                            <span className="n">PREFECT_UI_URL</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-849">
                            <a href="#Flow.serve-849">
                                <span className="linenos">849</span>
                            </a>
                            {"                "}
                            <span className="n">help_message</span>{" "}
                            <span className="o">+=</span> <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-850">
                            <a href="#Flow.serve-850">
                                <span className="linenos">850</span>
                            </a>
                            {"                    "}
                            <span className="s2">"</span>
                            <span className="se">\n</span>
                            <span className="s2">
                                You can also run your flow via the Prefect UI:"
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-851">
                            <a href="#Flow.serve-851">
                                <span className="linenos">851</span>
                            </a>
                            {"                    "}
                            <span className="sa">f</span>
                            <span className="s2">" [blue]</span>
                            <span className="si">{"{"}</span>
                            <span className="n">PREFECT_UI_URL</span>
                            <span className="o">.</span>
                            <span className="n">value</span>
                            <span className="p">()</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">/deployments/deployment/</span>
                            <span className="si">{"{"}</span>
                            <span className="n">deployment_id</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">[/]</span>
                            <span className="se">\n</span>
                            <span className="s2">"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-852">
                            <a href="#Flow.serve-852">
                                <span className="linenos">852</span>
                            </a>
                            {"                "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-853">
                            <a href="#Flow.serve-853">
                                <span className="linenos">853</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-854">
                            <a href="#Flow.serve-854">
                                <span className="linenos">854</span>
                            </a>
                            {"            "}
                            <span className="n">
                                console
                            </span> <span className="o">=</span>{" "}
                            <span className="n">Console</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-855">
                            <a href="#Flow.serve-855">
                                <span className="linenos">855</span>
                            </a>
                            {"            "}
                            <span className="n">console</span>
                            <span className="o">.</span>
                            <span className="n">print</span>
                            <span className="p">(</span>
                            <span className="n">help_message</span>
                            <span className="p">,</span> <span className="n">soft_wrap</span>
                            <span className="o">=</span>
                            <span className="kc">True</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.serve-856">
                            <a href="#Flow.serve-856">
                                <span className="linenos">856</span>
                            </a>
                            {"        "}
                            <span className="k">await</span> <span className="n">runner</span>
                            <span className="o">.</span>
                            <span className="n">start</span>
                            <span className="p">(</span>
                            <span className="n">webserver</span>
                            <span className="o">=</span>
                            <span className="n">webserver</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
                <div className="docstring">
                    <p>
                        Creates a deployment for this flow and starts a runner to monitor
                        for scheduled work.
                    </p>
                    <p>
                        Args: name: The name to give the created deployment. Defaults to the
                        name of the flow. interval: An interval on which to execute the
                        deployment. Accepts a number or a timedelta object to create a
                        single schedule. If a number is given, it will be interpreted as
                        seconds. Also accepts an iterable of numbers or timedelta to create
                        multiple schedules. cron: A cron schedule string of when to execute
                        runs of this deployment. Also accepts an iterable of cron schedule
                        strings to create multiple schedules. rrule: An rrule schedule
                        string of when to execute runs of this deployment. Also accepts an
                        iterable of rrule schedule strings to create multiple schedules.
                        triggers: A list of triggers that will kick off runs of this
                        deployment. paused: Whether or not to set this deployment as paused.
                        schedules: A list of schedule objects defining when to execute runs
                        of this deployment. Used to define multiple schedules or additional
                        scheduling options like <code>timezone</code>. schedule: A schedule
                        object defining when to execute runs of this deployment. Used to
                        define additional scheduling options such as <code>timezone</code>.
                        is_schedule_active: Whether or not to set the schedule for this
                        deployment as active. If not provided when creating a deployment,
                        the schedule will be set as active. If not provided when updating a
                        deployment, the schedule's activation will not be changed.
                        parameters: A dictionary of default parameter values to pass to runs
                        of this deployment. description: A description for the created
                        deployment. Defaults to the flow's description if not provided.
                        tags: A list of tags to associate with the created deployment for
                        organizational purposes. version: A version for the created
                        deployment. Defaults to the flow's version.
                        enforce_parameter_schema: Whether or not the Prefect API should
                        enforce the parameter schema for the created deployment.
                        pause_on_shutdown: If True, provided schedule will be paused when
                        the serve function is stopped. If False, the schedules will continue
                        running. print_starting_message: Whether or not to print the
                        starting message when flow is served. limit: The maximum number of
                        runs that can be executed concurrently. webserver: Whether or not to
                        start a monitoring webserver for this flow. entrypoint_type: Type of
                        entrypoint to use for the deployment. When using a module path
                        entrypoint, ensure that the module will be importable in the
                        execution environment.
                    </p>
                    <p>Examples: Serve a flow:</p>
                    <div className="pdoc-code codehilite">
                        <pre>
                            <span />
                            <code>
                                <span className="kn">from</span>{" "}
                                <span className="nn">prefect</span>{" "}
                                <span className="kn">import</span>{" "}
                                <span className="n">flow</span>
                                {"\n"} <br />
                                {"\n"}
                                {"    "}
                                <span className="nd">@flow</span>
                                {"\n"}
                                {"    "}
                                <span className="k">def</span>{" "}
                                <span className="nf">my_flow</span>
                                <span className="p">(</span>
                                <span className="n">name</span>
                                <span className="p">):</span>
                                {"\n"}
                                {"        "}
                                <span className="nb">print</span>
                                <span className="p">(</span>
                                <span className="sa">f</span>
                                <span className="s2">"hello </span>
                                <span className="si">{"{"}</span>
                                <span className="n">name</span>
                                <span className="si">{"}"}</span>
                                <span className="s2">"</span>
                                <span className="p">)</span>
                                {"\n"} <br />
                                {"\n"}
                                {"    "}
                                <span className="k">if</span>{" "}
                                <span className="vm">__name__</span>{" "}
                                <span className="o">==</span>{" "}
                                <span className="s2">"__main__"</span>
                                <span className="p">:</span>
                                {"\n"}
                                {"        "}
                                <span className="n">my_flow</span>
                                <span className="o">.</span>
                                <span className="n">serve</span>
                                <span className="p">(</span>
                                <span className="s2">"example-deployment"</span>
                                <span className="p">)</span>
                                {"\n"}
                                {"    "}
                            </code>
                        </pre>
                    </div>
                    <p />
                    <pre>
                        <code>
                            Serve a flow and run it every hour:{"\n"}&lt;div class="pdoc-code
                            codehilite"&gt;{"\n"}
                            &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span
                            class="kn"&gt;from&lt;/span&gt; &lt;span
                            class="nn"&gt;prefect&lt;/span&gt; &lt;span
                            class="kn"&gt;import&lt;/span&gt; &lt;span
                            class="n"&gt;flow&lt;/span&gt;{"\n"}
                            {"\n"}&lt;span class="nd"&gt;@flow&lt;/span&gt;{"\n"}&lt;span
                            class="k"&gt;def&lt;/span&gt; &lt;span
                            class="nf"&gt;my_flow&lt;/span&gt;&lt;span
                            class="p"&gt;(&lt;/span&gt;&lt;span
                            class="n"&gt;name&lt;/span&gt;&lt;span
                            class="p"&gt;):&lt;/span&gt;{"\n"}
                            {"    "}&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span
                            class="p"&gt;(&lt;/span&gt;&lt;span
                            class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hello
                            &lt;/span&gt;&lt;span class="si"&gt;{"{"}&lt;/span&gt;&lt;span
                            class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;{"}"}
                            &lt;/span&gt;&lt;span
                            class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span
                            class="p"&gt;)&lt;/span&gt;{"\n"}
                            {"\n"}&lt;span class="k"&gt;if&lt;/span&gt; &lt;span
                            class="vm"&gt;__name__&lt;/span&gt; &lt;span
                            class="o"&gt;==&lt;/span&gt; &lt;span
                            class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span
                            class="p"&gt;:&lt;/span&gt;{"\n"}
                            {"    "}&lt;span class="n"&gt;my_flow&lt;/span&gt;&lt;span
                            class="o"&gt;.&lt;/span&gt;&lt;span
                            class="n"&gt;serve&lt;/span&gt;&lt;span
                            class="p"&gt;(&lt;/span&gt;&lt;span
                            class="s2"&gt;&amp;quot;example-deployment&amp;quot;&lt;/span&gt;&lt;span
                            class="p"&gt;,&lt;/span&gt; &lt;span
                            class="n"&gt;interval&lt;/span&gt;&lt;span
                            class="o"&gt;=&lt;/span&gt;&lt;span
                            class="mi"&gt;3600&lt;/span&gt;&lt;span
                            class="p"&gt;)&lt;/span&gt;{"\n"}&lt;/code&gt;&lt;/pre&gt;{"\n"}
                            &lt;/div&gt;{"\n"}
                        </code>
                    </pre>
                </div>
            </div>
            <div id="Flow.from_source" className="classattr">
                <input
                    id="Flow.from_source-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <div className="decorator">@classmethod</div>
                    <div className="decorator">@sync_compatible</div>
                    <span className="def">def</span>
                    <span className="name">from_source</span>
                    <span className="signature pdoc-code multiline">
                        (
                        <span className="param">
                            {" "}
                            <span className="bp">cls</span>
                            <span className="p">:</span> <span className="n">Type</span>
                            <span className="p">[</span>
                            <span className="o">~</span>
                            <span className="n">F</span>
                            <span className="p">]</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">source</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">runner</span>
                            <span className="o">.</span>
                            <span className="n">storage</span>
                            <span className="o">.</span>
                            <span className="n">RunnerStorage</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">filesystems</span>
                            <span className="o">.</span>
                            <span className="n">ReadableDeploymentStorage</span>
                            <span className="p">]</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">entrypoint</span>
                            <span className="p">:</span> <span className="nb">str</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="o">~</span>
                            <span className="n">F</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="Flow.from_source-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#Flow.from_source" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="Flow.from_source-858">
                            <a href="#Flow.from_source-858">
                                <span className="linenos">858</span>
                            </a>
                            {"    "}
                            <span className="nd">@classmethod</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-859">
                            <a href="#Flow.from_source-859">
                                <span className="linenos">859</span>
                            </a>
                            {"    "}
                            <span className="nd">@sync_compatible</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-860">
                            <a href="#Flow.from_source-860">
                                <span className="linenos">860</span>
                            </a>
                            {"    "}
                            <span className="k">
                                async
                            </span> <span className="k">def</span>{" "}
                            <span className="nf">from_source</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-861">
                            <a href="#Flow.from_source-861">
                                <span className="linenos">861</span>
                            </a>
                            {"        "}
                            <span className="bp">cls</span>
                            <span className="p">:</span> <span className="n">Type</span>
                            <span className="p">[</span>
                            <span className="n">F</span>
                            <span className="p">],</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-862">
                            <a href="#Flow.from_source-862">
                                <span className="linenos">862</span>
                            </a>
                            {"        "}
                            <span className="n">source</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span>{" "}
                            <span className="n">RunnerStorage</span>
                            <span className="p">,</span>{" "}
                            <span className="n">ReadableDeploymentStorage</span>
                            <span className="p">],</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-863">
                            <a href="#Flow.from_source-863">
                                <span className="linenos">863</span>
                            </a>
                            {"        "}
                            <span className="n">entrypoint</span>
                            <span className="p">:</span> <span className="nb">str</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-864">
                            <a href="#Flow.from_source-864">
                                <span className="linenos">864</span>
                            </a>
                            {"    "}
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="n">F</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-865">
                            <a href="#Flow.from_source-865">
                                <span className="linenos">865</span>
                            </a>
                            <span className="w">{"        "}</span>
                            <span className="sd">"""</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-866">
                            <a href="#Flow.from_source-866">
                                <span className="linenos">866</span>
                            </a>
                            <span className="sd">
                                {"        "}Loads a flow from a remote source.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-867">
                            <a href="#Flow.from_source-867">
                                <span className="linenos">867</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-868">
                            <a href="#Flow.from_source-868">
                                <span className="linenos">868</span>
                            </a>
                            <span className="sd">{"        "}Args:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-869">
                            <a href="#Flow.from_source-869">
                                <span className="linenos">869</span>
                            </a>
                            <span className="sd">
                                {"            "}source: Either a URL to a git repository or a
                                storage object.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-870">
                            <a href="#Flow.from_source-870">
                                <span className="linenos">870</span>
                            </a>
                            <span className="sd">
                                {"            "}entrypoint:{"  "}The path to a file containing a
                                flow and the name of the flow function in
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-871">
                            <a href="#Flow.from_source-871">
                                <span className="linenos">871</span>
                            </a>
                            <span className="sd">
                                {"                "}the format
                                `./path/to/file.py:flow_func_name`.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-872">
                            <a href="#Flow.from_source-872">
                                <span className="linenos">872</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-873">
                            <a href="#Flow.from_source-873">
                                <span className="linenos">873</span>
                            </a>
                            <span className="sd">{"        "}Returns:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-874">
                            <a href="#Flow.from_source-874">
                                <span className="linenos">874</span>
                            </a>
                            <span className="sd">{"            "}A new `Flow` instance.</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-875">
                            <a href="#Flow.from_source-875">
                                <span className="linenos">875</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-876">
                            <a href="#Flow.from_source-876">
                                <span className="linenos">876</span>
                            </a>
                            <span className="sd">{"        "}Examples:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-877">
                            <a href="#Flow.from_source-877">
                                <span className="linenos">877</span>
                            </a>
                            <span className="sd">
                                {"            "}Load a flow from a public git repository:
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-878">
                            <a href="#Flow.from_source-878">
                                <span className="linenos">878</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-879">
                            <a href="#Flow.from_source-879">
                                <span className="linenos">879</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-880">
                            <a href="#Flow.from_source-880">
                                <span className="linenos">880</span>
                            </a>
                            <span className="sd">{"            "}```python</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-881">
                            <a href="#Flow.from_source-881">
                                <span className="linenos">881</span>
                            </a>
                            <span className="sd">
                                {"            "}from prefect import flow
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-882">
                            <a href="#Flow.from_source-882">
                                <span className="linenos">882</span>
                            </a>
                            <span className="sd">
                                {"            "}from prefect.runner.storage import GitRepository
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-883">
                            <a href="#Flow.from_source-883">
                                <span className="linenos">883</span>
                            </a>
                            <span className="sd">
                                {"            "}from prefect.blocks.system import Secret
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-884">
                            <a href="#Flow.from_source-884">
                                <span className="linenos">884</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-885">
                            <a href="#Flow.from_source-885">
                                <span className="linenos">885</span>
                            </a>
                            <span className="sd">
                                {"            "}my_flow = flow.from_source(
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-886">
                            <a href="#Flow.from_source-886">
                                <span className="linenos">886</span>
                            </a>
                            <span className="sd">
                                {"                "}source="https://github.com/org/repo.git",
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-887">
                            <a href="#Flow.from_source-887">
                                <span className="linenos">887</span>
                            </a>
                            <span className="sd">
                                {"                "}entrypoint="flows.py:my_flow",
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-888">
                            <a href="#Flow.from_source-888">
                                <span className="linenos">888</span>
                            </a>
                            <span className="sd">{"            "})</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-889">
                            <a href="#Flow.from_source-889">
                                <span className="linenos">889</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-890">
                            <a href="#Flow.from_source-890">
                                <span className="linenos">890</span>
                            </a>
                            <span className="sd">{"            "}my_flow()</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-891">
                            <a href="#Flow.from_source-891">
                                <span className="linenos">891</span>
                            </a>
                            <span className="sd">{"            "}```</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-892">
                            <a href="#Flow.from_source-892">
                                <span className="linenos">892</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-893">
                            <a href="#Flow.from_source-893">
                                <span className="linenos">893</span>
                            </a>
                            <span className="sd">
                                {"            "}Load a flow from a private git repository using
                                an access token stored in a `Secret` block:
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-894">
                            <a href="#Flow.from_source-894">
                                <span className="linenos">894</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-895">
                            <a href="#Flow.from_source-895">
                                <span className="linenos">895</span>
                            </a>
                            <span className="sd">{"            "}```python</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-896">
                            <a href="#Flow.from_source-896">
                                <span className="linenos">896</span>
                            </a>
                            <span className="sd">
                                {"            "}from prefect import flow
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-897">
                            <a href="#Flow.from_source-897">
                                <span className="linenos">897</span>
                            </a>
                            <span className="sd">
                                {"            "}from prefect.runner.storage import GitRepository
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-898">
                            <a href="#Flow.from_source-898">
                                <span className="linenos">898</span>
                            </a>
                            <span className="sd">
                                {"            "}from prefect.blocks.system import Secret
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-899">
                            <a href="#Flow.from_source-899">
                                <span className="linenos">899</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-900">
                            <a href="#Flow.from_source-900">
                                <span className="linenos">900</span>
                            </a>
                            <span className="sd">
                                {"            "}my_flow = flow.from_source(
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-901">
                            <a href="#Flow.from_source-901">
                                <span className="linenos">901</span>
                            </a>
                            <span className="sd">
                                {"                "}source=GitRepository(
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-902">
                            <a href="#Flow.from_source-902">
                                <span className="linenos">902</span>
                            </a>
                            <span className="sd">
                                {"                    "}url="https://github.com/org/repo.git",
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-903">
                            <a href="#Flow.from_source-903">
                                <span className="linenos">903</span>
                            </a>
                            <span className="sd">
                                {"                    "}credentials={"{"}"access_token":
                                Secret.load("github-access-token"){"}"}
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-904">
                            <a href="#Flow.from_source-904">
                                <span className="linenos">904</span>
                            </a>
                            <span className="sd">{"                "}),</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-905">
                            <a href="#Flow.from_source-905">
                                <span className="linenos">905</span>
                            </a>
                            <span className="sd">
                                {"                "}entrypoint="flows.py:my_flow",
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-906">
                            <a href="#Flow.from_source-906">
                                <span className="linenos">906</span>
                            </a>
                            <span className="sd">{"            "})</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-907">
                            <a href="#Flow.from_source-907">
                                <span className="linenos">907</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-908">
                            <a href="#Flow.from_source-908">
                                <span className="linenos">908</span>
                            </a>
                            <span className="sd">{"            "}my_flow()</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-909">
                            <a href="#Flow.from_source-909">
                                <span className="linenos">909</span>
                            </a>
                            <span className="sd">{"            "}```</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-910">
                            <a href="#Flow.from_source-910">
                                <span className="linenos">910</span>
                            </a>
                            <span className="sd">{"        "}"""</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-911">
                            <a href="#Flow.from_source-911">
                                <span className="linenos">911</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="nb">isinstance</span>
                            <span className="p">(</span>
                            <span className="n">source</span>
                            <span className="p">,</span> <span className="nb">str</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-912">
                            <a href="#Flow.from_source-912">
                                <span className="linenos">912</span>
                            </a>
                            {"            "}
                            <span className="n">
                                storage
                            </span> <span className="o">=</span>{" "}
                            <span className="n">create_storage_from_url</span>
                            <span className="p">(</span>
                            <span className="n">source</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-913">
                            <a href="#Flow.from_source-913">
                                <span className="linenos">913</span>
                            </a>
                            {"        "}
                            <span className="k">elif</span>{" "}
                            <span className="nb">isinstance</span>
                            <span className="p">(</span>
                            <span className="n">source</span>
                            <span className="p">,</span>{" "}
                            <span className="n">RunnerStorage</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-914">
                            <a href="#Flow.from_source-914">
                                <span className="linenos">914</span>
                            </a>
                            {"            "}
                            <span className="n">
                                storage
                            </span> <span className="o">=</span>{" "}
                            <span className="n">source</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-915">
                            <a href="#Flow.from_source-915">
                                <span className="linenos">915</span>
                            </a>
                            {"        "}
                            <span className="k">elif</span>{" "}
                            <span className="nb">hasattr</span>
                            <span className="p">(</span>
                            <span className="n">source</span>
                            <span className="p">,</span>{" "}
                            <span className="s2">"get_directory"</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-916">
                            <a href="#Flow.from_source-916">
                                <span className="linenos">916</span>
                            </a>
                            {"            "}
                            <span className="n">
                                storage
                            </span> <span className="o">=</span>{" "}
                            <span className="n">BlockStorageAdapter</span>
                            <span className="p">(</span>
                            <span className="n">source</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-917">
                            <a href="#Flow.from_source-917">
                                <span className="linenos">917</span>
                            </a>
                            {"        "}
                            <span className="k">else</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-918">
                            <a href="#Flow.from_source-918">
                                <span className="linenos">918</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">TypeError</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-919">
                            <a href="#Flow.from_source-919">
                                <span className="linenos">919</span>
                            </a>
                            {"                "}
                            <span className="sa">f</span>
                            <span className="s2">"Unsupported source type </span>
                            <span className="si">{"{"}</span>
                            <span className="nb">type</span>
                            <span className="p">(</span>
                            <span className="n">source</span>
                            <span className="p">)</span>
                            <span className="o">.</span>
                            <span className="vm">__name__</span>
                            <span className="si">!r{"}"}</span>
                            <span className="s2">. Please provide a"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-920">
                            <a href="#Flow.from_source-920">
                                <span className="linenos">920</span>
                            </a>
                            {"                "}
                            <span className="s2">
                                " URL to remote storage or a storage object."
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-921">
                            <a href="#Flow.from_source-921">
                                <span className="linenos">921</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-922">
                            <a href="#Flow.from_source-922">
                                <span className="linenos">922</span>
                            </a>
                            {"        "}
                            <span className="k">with</span>{" "}
                            <span className="n">tempfile</span>
                            <span className="o">.</span>
                            <span className="n">TemporaryDirectory</span>
                            <span className="p">()</span> <span className="k">as</span>{" "}
                            <span className="n">tmpdir</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-923">
                            <a href="#Flow.from_source-923">
                                <span className="linenos">923</span>
                            </a>
                            {"            "}
                            <span className="n">storage</span>
                            <span className="o">.</span>
                            <span className="n">set_base_path</span>
                            <span className="p">(</span>
                            <span className="n">Path</span>
                            <span className="p">(</span>
                            <span className="n">tmpdir</span>
                            <span className="p">))</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-924">
                            <a href="#Flow.from_source-924">
                                <span className="linenos">924</span>
                            </a>
                            {"            "}
                            <span className="k">await</span>{" "}
                            <span className="n">storage</span>
                            <span className="o">.</span>
                            <span className="n">pull_code</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-925">
                            <a href="#Flow.from_source-925">
                                <span className="linenos">925</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-926">
                            <a href="#Flow.from_source-926">
                                <span className="linenos">926</span>
                            </a>
                            {"            "}
                            <span className="n">full_entrypoint</span>{" "}
                            <span className="o">=</span> <span className="nb">str</span>
                            <span className="p">(</span>
                            <span className="n">storage</span>
                            <span className="o">.</span>
                            <span className="n">destination</span>{" "}
                            <span className="o">/</span> <span className="n">entrypoint</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-927">
                            <a href="#Flow.from_source-927">
                                <span className="linenos">927</span>
                            </a>
                            {"            "}
                            <span className="n">flow</span>
                            <span className="p">
                                :
                            </span> <span className="s2">"Flow"</span>{" "}
                            <span className="o">=</span> <span className="k">await</span>{" "}
                            <span className="n">from_async</span>
                            <span className="o">.</span>
                            <span className="n">wait_for_call_in_new_thread</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-928">
                            <a href="#Flow.from_source-928">
                                <span className="linenos">928</span>
                            </a>
                            {"                "}
                            <span className="n">create_call</span>
                            <span className="p">(</span>
                            <span className="n">load_flow_from_entrypoint</span>
                            <span className="p">,</span>{" "}
                            <span className="n">full_entrypoint</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-929">
                            <a href="#Flow.from_source-929">
                                <span className="linenos">929</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-930">
                            <a href="#Flow.from_source-930">
                                <span className="linenos">930</span>
                            </a>
                            {"            "}
                            <span className="n">flow</span>
                            <span className="o">.</span>
                            <span className="n">
                                _storage
                            </span> <span className="o">=</span>{" "}
                            <span className="n">storage</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-931">
                            <a href="#Flow.from_source-931">
                                <span className="linenos">931</span>
                            </a>
                            {"            "}
                            <span className="n">flow</span>
                            <span className="o">.</span>
                            <span className="n">_entrypoint</span>{" "}
                            <span className="o">=</span> <span className="n">entrypoint</span>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-932">
                            <a href="#Flow.from_source-932">
                                <span className="linenos">932</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.from_source-933">
                            <a href="#Flow.from_source-933">
                                <span className="linenos">933</span>
                            </a>
                            {"        "}
                            <span className="k">return</span> <span className="n">flow</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
                <div className="docstring">
                    <p>Loads a flow from a remote source.</p>
                    <p>
                        Args: source: Either a URL to a git repository or a storage object.
                        entrypoint: The path to a file containing a flow and the name of the
                        flow function in the format{" "}
                        <code>./path/to/file.py:flow_func_name</code>.
                    </p>
                    <p>
                        Returns: A new{" "}
                        <code>
                            <a href="#Flow">Flow</a>
                        </code>{" "}
                        instance.
                    </p>
                    <p>Examples: Load a flow from a public git repository:</p>
                    <div className="pdoc-code codehilite">
                        <pre>
                            <span />
                            <code>
                                <span className="kn">from</span>{" "}
                                <span className="nn">prefect</span>{" "}
                                <span className="kn">import</span>{" "}
                                <span className="n">flow</span>
                                {"\n"}
                                {"    "}
                                <span className="kn">from</span>{" "}
                                <span className="nn">prefect.runner.storage</span>{" "}
                                <span className="kn">import</span>{" "}
                                <span className="n">GitRepository</span>
                                {"\n"}
                                {"    "}
                                <span className="kn">from</span>{" "}
                                <span className="nn">prefect.blocks.system</span>{" "}
                                <span className="kn">import</span>{" "}
                                <span className="n">Secret</span>
                                {"\n"} <br />
                                {"\n"}
                                {"    "}
                                <span className="n">
                                    my_flow
                                </span> <span className="o">=</span>{" "}
                                <span className="n">flow</span>
                                <span className="o">.</span>
                                <span className="n">from_source</span>
                                <span className="p">(</span>
                                {"\n"}
                                {"        "}
                                <span className="n">source</span>
                                <span className="o">=</span>
                                <span className="s2">
                                    "
                                    <a href="https://github.com/org/repo.git&quot">
                                        https://github.com/org/repo.git&amp;quot
                                    </a>
                                    ;
                                </span>
                                <span className="p">,</span>
                                {"\n"}
                                {"        "}
                                <span className="n">entrypoint</span>
                                <span className="o">=</span>
                                <span className="s2">"flows.py:my_flow"</span>
                                <span className="p">,</span>
                                {"\n"}
                                {"    "}
                                <span className="p">)</span>
                                {"\n"} <br />
                                {"\n"}
                                {"    "}
                                <span className="n">my_flow</span>
                                <span className="p">()</span>
                                {"\n"}
                                {"    "}
                            </code>
                        </pre>
                    </div>
                    <p />
                    <pre>
                        <code>
                            Load a flow from a private git repository using an access token
                            stored in a `Secret` block:{"\n"}&lt;div class="pdoc-code
                            codehilite"&gt;{"\n"}
                            &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span
                            class="kn"&gt;from&lt;/span&gt; &lt;span
                            class="nn"&gt;prefect&lt;/span&gt; &lt;span
                            class="kn"&gt;import&lt;/span&gt; &lt;span
                            class="n"&gt;flow&lt;/span&gt;{"\n"}&lt;span
                            class="kn"&gt;from&lt;/span&gt; &lt;span
                            class="nn"&gt;prefect.runner.storage&lt;/span&gt; &lt;span
                            class="kn"&gt;import&lt;/span&gt; &lt;span
                            class="n"&gt;GitRepository&lt;/span&gt;{"\n"}&lt;span
                            class="kn"&gt;from&lt;/span&gt; &lt;span
                            class="nn"&gt;prefect.blocks.system&lt;/span&gt; &lt;span
                            class="kn"&gt;import&lt;/span&gt; &lt;span
                            class="n"&gt;Secret&lt;/span&gt;{"\n"}
                            {"\n"}&lt;span class="n"&gt;my_flow&lt;/span&gt; &lt;span
                            class="o"&gt;=&lt;/span&gt; &lt;span
                            class="n"&gt;flow&lt;/span&gt;&lt;span
                            class="o"&gt;.&lt;/span&gt;&lt;span
                            class="n"&gt;from_source&lt;/span&gt;&lt;span
                            class="p"&gt;(&lt;/span&gt;{"\n"}
                            {"    "}&lt;span class="n"&gt;source&lt;/span&gt;&lt;span
                            class="o"&gt;=&lt;/span&gt;&lt;span
                            class="n"&gt;GitRepository&lt;/span&gt;&lt;span
                            class="p"&gt;(&lt;/span&gt;{"\n"}
                            {"        "}&lt;span class="n"&gt;url&lt;/span&gt;&lt;span
                            class="o"&gt;=&lt;/span&gt;&lt;span
                            class="s2"&gt;&amp;quot;https://github.com/org/repo.git&amp;quot;&lt;/span&gt;&lt;span
                            class="p"&gt;,&lt;/span&gt;{"\n"}
                            {"        "}&lt;span class="n"&gt;credentials&lt;/span&gt;&lt;span
                            class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{"{"}
                            &lt;/span&gt;&lt;span
                            class="s2"&gt;&amp;quot;access_token&amp;quot;&lt;/span&gt;&lt;span
                            class="p"&gt;:&lt;/span&gt; &lt;span
                            class="n"&gt;Secret&lt;/span&gt;&lt;span
                            class="o"&gt;.&lt;/span&gt;&lt;span
                            class="n"&gt;load&lt;/span&gt;&lt;span
                            class="p"&gt;(&lt;/span&gt;&lt;span
                            class="s2"&gt;&amp;quot;github-access-token&amp;quot;&lt;/span&gt;&lt;span
                            class="p"&gt;){"}"}&lt;/span&gt;{"\n"}
                            {"    "}&lt;span class="p"&gt;),&lt;/span&gt;{"\n"}
                            {"    "}&lt;span class="n"&gt;entrypoint&lt;/span&gt;&lt;span
                            class="o"&gt;=&lt;/span&gt;&lt;span
                            class="s2"&gt;&amp;quot;flows.py:my_flow&amp;quot;&lt;/span&gt;&lt;span
                            class="p"&gt;,&lt;/span&gt;{"\n"}&lt;span
                            class="p"&gt;)&lt;/span&gt;{"\n"}
                            {"\n"}&lt;span class="n"&gt;my_flow&lt;/span&gt;&lt;span
                            class="p"&gt;()&lt;/span&gt;{"\n"}&lt;/code&gt;&lt;/pre&gt;{"\n"}
                            &lt;/div&gt;{"\n"}
                        </code>
                    </pre>
                </div>
            </div>
            <div id="Flow.deploy" className="classattr">
                <input
                    id="Flow.deploy-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <div className="decorator">@sync_compatible</div>
                    <span className="def">async def</span>
                    <span className="name">deploy</span>
                    <span className="signature pdoc-code multiline">
                        (
                        <span className="param">
                            <span className="bp">self</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">name</span>
                            <span className="p">:</span> <span className="nb">str</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">work_pool_name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">image</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">deployments</span>
                            <span className="o">.</span>
                            <span className="n">runner</span>
                            <span className="o">.</span>
                            <span className="n">DeploymentImage</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">build</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">True</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">push</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">True</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">work_queue_name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">job_variables</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">dict</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">interval</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">,</span> <span className="n">datetime</span>
                            <span className="o">.</span>
                            <span className="n">timedelta</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">cron</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">rrule</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">paused</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">schedules</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">MinimalDeploymentSchedule</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">schedule</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">IntervalSchedule</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">CronSchedule</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">RRuleSchedule</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">schedules</span>
                            <span className="o">.</span>
                            <span className="n">NoSchedule</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">is_schedule_active</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">triggers</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">deployment_triggers</span>
                            <span className="o">.</span>
                            <span className="n">DeploymentEventTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">deployment_triggers</span>
                            <span className="o">.</span>
                            <span className="n">DeploymentMetricTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">deployment_triggers</span>
                            <span className="o">.</span>
                            <span className="n">DeploymentCompoundTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">deployment_triggers</span>
                            <span className="o">.</span>
                            <span className="n">DeploymentSequenceTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">automations</span>
                            <span className="o">.</span>
                            <span className="n">EventTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">automations</span>
                            <span className="o">.</span>
                            <span className="n">MetricTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">automations</span>
                            <span className="o">.</span>
                            <span className="n">CompoundTrigger</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">events</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">automations</span>
                            <span className="o">.</span>
                            <span className="n">SequenceTrigger</span>
                            <span className="p">]]]</span> <span className="o">=</span>
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">parameters</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">dict</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">description</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">tags</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">version</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">enforce_parameter_schema</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">False</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">entrypoint_type</span>
                            <span className="p">:</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">deployments</span>
                            <span className="o">.</span>
                            <span className="n">runner</span>
                            <span className="o">.</span>
                            <span className="n">EntrypointType</span>{" "}
                            <span className="o">=</span> <span className="o">&lt;</span>
                            <span className="n">EntrypointType</span>
                            <span className="o">.</span>
                            <span className="n">FILE_PATH</span>
                            <span className="p">:</span>{" "}
                            <span className="s1">'file_path'</span>
                            <span className="o">&gt;</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">print_next_steps</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">True</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">ignore_warnings</span>
                            <span className="p">:</span> <span className="nb">bool</span>
                            <span className="o">=</span> <span className="kc">False</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="n">uuid</span>
                            <span className="o">.</span>
                            <span className="n">UUID</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="Flow.deploy-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#Flow.deploy" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="Flow.deploy-935">
                            <a href="#Flow.deploy-935">
                                <span className="linenos"> 935</span>
                            </a>
                            {"    "}
                            <span className="nd">@sync_compatible</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-936">
                            <a href="#Flow.deploy-936">
                                <span className="linenos"> 936</span>
                            </a>
                            {"    "}
                            <span className="k">
                                async
                            </span> <span className="k">def</span>{" "}
                            <span className="nf">deploy</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-937">
                            <a href="#Flow.deploy-937">
                                <span className="linenos"> 937</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-938">
                            <a href="#Flow.deploy-938">
                                <span className="linenos"> 938</span>
                            </a>
                            {"        "}
                            <span className="n">name</span>
                            <span className="p">:</span> <span className="nb">str</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-939">
                            <a href="#Flow.deploy-939">
                                <span className="linenos"> 939</span>
                            </a>
                            {"        "}
                            <span className="n">work_pool_name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-940">
                            <a href="#Flow.deploy-940">
                                <span className="linenos"> 940</span>
                            </a>
                            {"        "}
                            <span className="n">image</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span>{" "}
                            <span className="n">DeploymentImage</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-941">
                            <a href="#Flow.deploy-941">
                                <span className="linenos"> 941</span>
                            </a>
                            {"        "}
                            <span className="n">build</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">True</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-942">
                            <a href="#Flow.deploy-942">
                                <span className="linenos"> 942</span>
                            </a>
                            {"        "}
                            <span className="n">push</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">True</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-943">
                            <a href="#Flow.deploy-943">
                                <span className="linenos"> 943</span>
                            </a>
                            {"        "}
                            <span className="n">work_queue_name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-944">
                            <a href="#Flow.deploy-944">
                                <span className="linenos"> 944</span>
                            </a>
                            {"        "}
                            <span className="n">job_variables</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">dict</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-945">
                            <a href="#Flow.deploy-945">
                                <span className="linenos"> 945</span>
                            </a>
                            {"        "}
                            <span className="n">interval</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">,</span> <span className="n">datetime</span>
                            <span className="o">.</span>
                            <span className="n">timedelta</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-946">
                            <a href="#Flow.deploy-946">
                                <span className="linenos"> 946</span>
                            </a>
                            {"        "}
                            <span className="n">cron</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-947">
                            <a href="#Flow.deploy-947">
                                <span className="linenos"> 947</span>
                            </a>
                            {"        "}
                            <span className="n">rrule</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-948">
                            <a href="#Flow.deploy-948">
                                <span className="linenos"> 948</span>
                            </a>
                            {"        "}
                            <span className="n">paused</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-949">
                            <a href="#Flow.deploy-949">
                                <span className="linenos"> 949</span>
                            </a>
                            {"        "}
                            <span className="n">schedules</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">MinimalDeploymentSchedule</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-950">
                            <a href="#Flow.deploy-950">
                                <span className="linenos"> 950</span>
                            </a>
                            {"        "}
                            <span className="n">schedule</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">SCHEDULE_TYPES</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-951">
                            <a href="#Flow.deploy-951">
                                <span className="linenos"> 951</span>
                            </a>
                            {"        "}
                            <span className="n">is_schedule_active</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-952">
                            <a href="#Flow.deploy-952">
                                <span className="linenos"> 952</span>
                            </a>
                            {"        "}
                            <span className="n">triggers</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">DeploymentTriggerTypes</span>
                            <span className="p">,</span>{" "}
                            <span className="n">TriggerTypes</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-953">
                            <a href="#Flow.deploy-953">
                                <span className="linenos"> 953</span>
                            </a>
                            {"        "}
                            <span className="n">parameters</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">dict</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-954">
                            <a href="#Flow.deploy-954">
                                <span className="linenos"> 954</span>
                            </a>
                            {"        "}
                            <span className="n">description</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-955">
                            <a href="#Flow.deploy-955">
                                <span className="linenos"> 955</span>
                            </a>
                            {"        "}
                            <span className="n">tags</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-956">
                            <a href="#Flow.deploy-956">
                                <span className="linenos"> 956</span>
                            </a>
                            {"        "}
                            <span className="n">version</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-957">
                            <a href="#Flow.deploy-957">
                                <span className="linenos"> 957</span>
                            </a>
                            {"        "}
                            <span className="n">enforce_parameter_schema</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">False</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-958">
                            <a href="#Flow.deploy-958">
                                <span className="linenos"> 958</span>
                            </a>
                            {"        "}
                            <span className="n">entrypoint_type</span>
                            <span className="p">:</span>{" "}
                            <span className="n">EntrypointType</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">EntrypointType</span>
                            <span className="o">.</span>
                            <span className="n">FILE_PATH</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-959">
                            <a href="#Flow.deploy-959">
                                <span className="linenos"> 959</span>
                            </a>
                            {"        "}
                            <span className="n">print_next_steps</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">True</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-960">
                            <a href="#Flow.deploy-960">
                                <span className="linenos"> 960</span>
                            </a>
                            {"        "}
                            <span className="n">ignore_warnings</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">False</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-961">
                            <a href="#Flow.deploy-961">
                                <span className="linenos"> 961</span>
                            </a>
                            {"    "}
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="n">UUID</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-962">
                            <a href="#Flow.deploy-962">
                                <span className="linenos"> 962</span>
                            </a>
                            <span className="w">{"        "}</span>
                            <span className="sd">"""</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-963">
                            <a href="#Flow.deploy-963">
                                <span className="linenos"> 963</span>
                            </a>
                            <span className="sd">
                                {"        "}Deploys a flow to run on dynamic infrastructure via
                                a work pool.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-964">
                            <a href="#Flow.deploy-964">
                                <span className="linenos"> 964</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-965">
                            <a href="#Flow.deploy-965">
                                <span className="linenos"> 965</span>
                            </a>
                            <span className="sd">
                                {"        "}By default, calling this method will build a Docker
                                image for the flow, push it to a registry,
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-966">
                            <a href="#Flow.deploy-966">
                                <span className="linenos"> 966</span>
                            </a>
                            <span className="sd">
                                {"        "}and create a deployment via the Prefect API that
                                will run the flow on the given schedule.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-967">
                            <a href="#Flow.deploy-967">
                                <span className="linenos"> 967</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-968">
                            <a href="#Flow.deploy-968">
                                <span className="linenos"> 968</span>
                            </a>
                            <span className="sd">
                                {"        "}If you want to use an existing image, you can pass
                                `build=False` to skip building and pushing
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-969">
                            <a href="#Flow.deploy-969">
                                <span className="linenos"> 969</span>
                            </a>
                            <span className="sd">{"        "}an image.</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-970">
                            <a href="#Flow.deploy-970">
                                <span className="linenos"> 970</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-971">
                            <a href="#Flow.deploy-971">
                                <span className="linenos"> 971</span>
                            </a>
                            <span className="sd">{"        "}Args:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-972">
                            <a href="#Flow.deploy-972">
                                <span className="linenos"> 972</span>
                            </a>
                            <span className="sd">
                                {"            "}name: The name to give the created deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-973">
                            <a href="#Flow.deploy-973">
                                <span className="linenos"> 973</span>
                            </a>
                            <span className="sd">
                                {"            "}work_pool_name: The name of the work pool to use
                                for this deployment. Defaults to
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-974">
                            <a href="#Flow.deploy-974">
                                <span className="linenos"> 974</span>
                            </a>
                            <span className="sd">
                                {"                "}the value of
                                `PREFECT_DEFAULT_WORK_POOL_NAME`.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-975">
                            <a href="#Flow.deploy-975">
                                <span className="linenos"> 975</span>
                            </a>
                            <span className="sd">
                                {"            "}image: The name of the Docker image to build,
                                including the registry and
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-976">
                            <a href="#Flow.deploy-976">
                                <span className="linenos"> 976</span>
                            </a>
                            <span className="sd">
                                {"                "}repository. Pass a DeploymentImage instance
                                to customize the Dockerfile used
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-977">
                            <a href="#Flow.deploy-977">
                                <span className="linenos"> 977</span>
                            </a>
                            <span className="sd">
                                {"                "}and build arguments.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-978">
                            <a href="#Flow.deploy-978">
                                <span className="linenos"> 978</span>
                            </a>
                            <span className="sd">
                                {"            "}build: Whether or not to build a new image for
                                the flow. If False, the provided
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-979">
                            <a href="#Flow.deploy-979">
                                <span className="linenos"> 979</span>
                            </a>
                            <span className="sd">
                                {"                "}image will be used as-is and pulled at
                                runtime.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-980">
                            <a href="#Flow.deploy-980">
                                <span className="linenos"> 980</span>
                            </a>
                            <span className="sd">
                                {"            "}push: Whether or not to skip pushing the built
                                image to a registry.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-981">
                            <a href="#Flow.deploy-981">
                                <span className="linenos"> 981</span>
                            </a>
                            <span className="sd">
                                {"            "}work_queue_name: The name of the work queue to
                                use for this deployment's scheduled runs.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-982">
                            <a href="#Flow.deploy-982">
                                <span className="linenos"> 982</span>
                            </a>
                            <span className="sd">
                                {"                "}If not provided the default work queue for
                                the work pool will be used.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-983">
                            <a href="#Flow.deploy-983">
                                <span className="linenos"> 983</span>
                            </a>
                            <span className="sd">
                                {"            "}job_variables: Settings used to override the
                                values specified default base job template
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-984">
                            <a href="#Flow.deploy-984">
                                <span className="linenos"> 984</span>
                            </a>
                            <span className="sd">
                                {"                "}of the chosen work pool. Refer to the base
                                job template of the chosen work pool for
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-985">
                            <a href="#Flow.deploy-985">
                                <span className="linenos"> 985</span>
                            </a>
                            <span className="sd">
                                {"                "}available settings.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-986">
                            <a href="#Flow.deploy-986">
                                <span className="linenos"> 986</span>
                            </a>
                            <span className="sd">
                                {"            "}interval: An interval on which to execute the
                                deployment. Accepts a number or a
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-987">
                            <a href="#Flow.deploy-987">
                                <span className="linenos"> 987</span>
                            </a>
                            <span className="sd">
                                {"                "}timedelta object to create a single
                                schedule. If a number is given, it will be
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-988">
                            <a href="#Flow.deploy-988">
                                <span className="linenos"> 988</span>
                            </a>
                            <span className="sd">
                                {"                "}interpreted as seconds. Also accepts an
                                iterable of numbers or timedelta to create
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-989">
                            <a href="#Flow.deploy-989">
                                <span className="linenos"> 989</span>
                            </a>
                            <span className="sd">
                                {"                "}multiple schedules.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-990">
                            <a href="#Flow.deploy-990">
                                <span className="linenos"> 990</span>
                            </a>
                            <span className="sd">
                                {"            "}cron: A cron schedule string of when to execute
                                runs of this deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-991">
                            <a href="#Flow.deploy-991">
                                <span className="linenos"> 991</span>
                            </a>
                            <span className="sd">
                                {"                "}Also accepts an iterable of cron schedule
                                strings to create multiple schedules.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-992">
                            <a href="#Flow.deploy-992">
                                <span className="linenos"> 992</span>
                            </a>
                            <span className="sd">
                                {"            "}rrule: An rrule schedule string of when to
                                execute runs of this deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-993">
                            <a href="#Flow.deploy-993">
                                <span className="linenos"> 993</span>
                            </a>
                            <span className="sd">
                                {"                "}Also accepts an iterable of rrule schedule
                                strings to create multiple schedules.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-994">
                            <a href="#Flow.deploy-994">
                                <span className="linenos"> 994</span>
                            </a>
                            <span className="sd">
                                {"            "}triggers: A list of triggers that will kick off
                                runs of this deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-995">
                            <a href="#Flow.deploy-995">
                                <span className="linenos"> 995</span>
                            </a>
                            <span className="sd">
                                {"            "}paused: Whether or not to set this deployment as
                                paused.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-996">
                            <a href="#Flow.deploy-996">
                                <span className="linenos"> 996</span>
                            </a>
                            <span className="sd">
                                {"            "}schedules: A list of schedule objects defining
                                when to execute runs of this deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-997">
                            <a href="#Flow.deploy-997">
                                <span className="linenos"> 997</span>
                            </a>
                            <span className="sd">
                                {"                "}Used to define multiple schedules or
                                additional scheduling options like `timezone`.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-998">
                            <a href="#Flow.deploy-998">
                                <span className="linenos"> 998</span>
                            </a>
                            <span className="sd">
                                {"            "}schedule: A schedule object defining when to
                                execute runs of this deployment. Used to
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-999">
                            <a href="#Flow.deploy-999">
                                <span className="linenos"> 999</span>
                            </a>
                            <span className="sd">
                                {"                "}define additional scheduling options like
                                `timezone`.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1000">
                            <a href="#Flow.deploy-1000">
                                <span className="linenos">1000</span>
                            </a>
                            <span className="sd">
                                {"            "}is_schedule_active: Whether or not to set the
                                schedule for this deployment as active. If
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1001">
                            <a href="#Flow.deploy-1001">
                                <span className="linenos">1001</span>
                            </a>
                            <span className="sd">
                                {"                "}not provided when creating a deployment, the
                                schedule will be set as active. If not
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1002">
                            <a href="#Flow.deploy-1002">
                                <span className="linenos">1002</span>
                            </a>
                            <span className="sd">
                                {"                "}provided when updating a deployment, the
                                schedule's activation will not be changed.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1003">
                            <a href="#Flow.deploy-1003">
                                <span className="linenos">1003</span>
                            </a>
                            <span className="sd">
                                {"            "}parameters: A dictionary of default parameter
                                values to pass to runs of this deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1004">
                            <a href="#Flow.deploy-1004">
                                <span className="linenos">1004</span>
                            </a>
                            <span className="sd">
                                {"            "}description: A description for the created
                                deployment. Defaults to the flow's
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1005">
                            <a href="#Flow.deploy-1005">
                                <span className="linenos">1005</span>
                            </a>
                            <span className="sd">
                                {"                "}description if not provided.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1006">
                            <a href="#Flow.deploy-1006">
                                <span className="linenos">1006</span>
                            </a>
                            <span className="sd">
                                {"            "}tags: A list of tags to associate with the
                                created deployment for organizational
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1007">
                            <a href="#Flow.deploy-1007">
                                <span className="linenos">1007</span>
                            </a>
                            <span className="sd">{"                "}purposes.</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1008">
                            <a href="#Flow.deploy-1008">
                                <span className="linenos">1008</span>
                            </a>
                            <span className="sd">
                                {"            "}version: A version for the created deployment.
                                Defaults to the flow's version.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1009">
                            <a href="#Flow.deploy-1009">
                                <span className="linenos">1009</span>
                            </a>
                            <span className="sd">
                                {"            "}enforce_parameter_schema: Whether or not the
                                Prefect API should enforce the
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1010">
                            <a href="#Flow.deploy-1010">
                                <span className="linenos">1010</span>
                            </a>
                            <span className="sd">
                                {"                "}parameter schema for the created deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1011">
                            <a href="#Flow.deploy-1011">
                                <span className="linenos">1011</span>
                            </a>
                            <span className="sd">
                                {"            "}entrypoint_type: Type of entrypoint to use for
                                the deployment. When using a module path
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1012">
                            <a href="#Flow.deploy-1012">
                                <span className="linenos">1012</span>
                            </a>
                            <span className="sd">
                                {"                "}entrypoint, ensure that the module will be
                                importable in the execution environment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1013">
                            <a href="#Flow.deploy-1013">
                                <span className="linenos">1013</span>
                            </a>
                            <span className="sd">
                                {"            "}print_next_steps_message: Whether or not to
                                print a message with next steps
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1014">
                            <a href="#Flow.deploy-1014">
                                <span className="linenos">1014</span>
                            </a>
                            <span className="sd">
                                {"                "}after deploying the deployments.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1015">
                            <a href="#Flow.deploy-1015">
                                <span className="linenos">1015</span>
                            </a>
                            <span className="sd">
                                {"            "}ignore_warnings: Whether or not to ignore
                                warnings about the work pool type.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1016">
                            <a href="#Flow.deploy-1016">
                                <span className="linenos">1016</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1017">
                            <a href="#Flow.deploy-1017">
                                <span className="linenos">1017</span>
                            </a>
                            <span className="sd">{"        "}Returns:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1018">
                            <a href="#Flow.deploy-1018">
                                <span className="linenos">1018</span>
                            </a>
                            <span className="sd">
                                {"            "}The ID of the created/updated deployment.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1019">
                            <a href="#Flow.deploy-1019">
                                <span className="linenos">1019</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1020">
                            <a href="#Flow.deploy-1020">
                                <span className="linenos">1020</span>
                            </a>
                            <span className="sd">{"        "}Examples:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1021">
                            <a href="#Flow.deploy-1021">
                                <span className="linenos">1021</span>
                            </a>
                            <span className="sd">
                                {"            "}Deploy a local flow to a work pool:
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1022">
                            <a href="#Flow.deploy-1022">
                                <span className="linenos">1022</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1023">
                            <a href="#Flow.deploy-1023">
                                <span className="linenos">1023</span>
                            </a>
                            <span className="sd">{"            "}```python</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1024">
                            <a href="#Flow.deploy-1024">
                                <span className="linenos">1024</span>
                            </a>
                            <span className="sd">
                                {"            "}from prefect import flow
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1025">
                            <a href="#Flow.deploy-1025">
                                <span className="linenos">1025</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1026">
                            <a href="#Flow.deploy-1026">
                                <span className="linenos">1026</span>
                            </a>
                            <span className="sd">{"            "}@flow</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1027">
                            <a href="#Flow.deploy-1027">
                                <span className="linenos">1027</span>
                            </a>
                            <span className="sd">{"            "}def my_flow(name):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1028">
                            <a href="#Flow.deploy-1028">
                                <span className="linenos">1028</span>
                            </a>
                            <span className="sd">
                                {"                "}print(f"hello {"{"}name{"}"}")
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1029">
                            <a href="#Flow.deploy-1029">
                                <span className="linenos">1029</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1030">
                            <a href="#Flow.deploy-1030">
                                <span className="linenos">1030</span>
                            </a>
                            <span className="sd">
                                {"            "}if __name__ == "__main__":
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1031">
                            <a href="#Flow.deploy-1031">
                                <span className="linenos">1031</span>
                            </a>
                            <span className="sd">{"                "}my_flow.deploy(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1032">
                            <a href="#Flow.deploy-1032">
                                <span className="linenos">1032</span>
                            </a>
                            <span className="sd">
                                {"                    "}"example-deployment",
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1033">
                            <a href="#Flow.deploy-1033">
                                <span className="linenos">1033</span>
                            </a>
                            <span className="sd">
                                {"                    "}work_pool_name="my-work-pool",
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1034">
                            <a href="#Flow.deploy-1034">
                                <span className="linenos">1034</span>
                            </a>
                            <span className="sd">
                                {"                    "}image="my-repository/my-image:dev",
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1035">
                            <a href="#Flow.deploy-1035">
                                <span className="linenos">1035</span>
                            </a>
                            <span className="sd">{"                "})</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1036">
                            <a href="#Flow.deploy-1036">
                                <span className="linenos">1036</span>
                            </a>
                            <span className="sd">{"            "}```</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1037">
                            <a href="#Flow.deploy-1037">
                                <span className="linenos">1037</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1038">
                            <a href="#Flow.deploy-1038">
                                <span className="linenos">1038</span>
                            </a>
                            <span className="sd">
                                {"            "}Deploy a remotely stored flow to a work pool:
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1039">
                            <a href="#Flow.deploy-1039">
                                <span className="linenos">1039</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1040">
                            <a href="#Flow.deploy-1040">
                                <span className="linenos">1040</span>
                            </a>
                            <span className="sd">{"            "}```python</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1041">
                            <a href="#Flow.deploy-1041">
                                <span className="linenos">1041</span>
                            </a>
                            <span className="sd">
                                {"            "}from prefect import flow
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1042">
                            <a href="#Flow.deploy-1042">
                                <span className="linenos">1042</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1043">
                            <a href="#Flow.deploy-1043">
                                <span className="linenos">1043</span>
                            </a>
                            <span className="sd">
                                {"            "}if __name__ == "__main__":
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1044">
                            <a href="#Flow.deploy-1044">
                                <span className="linenos">1044</span>
                            </a>
                            <span className="sd">{"                "}flow.from_source(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1045">
                            <a href="#Flow.deploy-1045">
                                <span className="linenos">1045</span>
                            </a>
                            <span className="sd">
                                {"                    "}
                                source="https://github.com/org/repo.git",
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1046">
                            <a href="#Flow.deploy-1046">
                                <span className="linenos">1046</span>
                            </a>
                            <span className="sd">
                                {"                    "}entrypoint="flows.py:my_flow",
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1047">
                            <a href="#Flow.deploy-1047">
                                <span className="linenos">1047</span>
                            </a>
                            <span className="sd">{"                "}).deploy(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1048">
                            <a href="#Flow.deploy-1048">
                                <span className="linenos">1048</span>
                            </a>
                            <span className="sd">
                                {"                    "}"example-deployment",
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1049">
                            <a href="#Flow.deploy-1049">
                                <span className="linenos">1049</span>
                            </a>
                            <span className="sd">
                                {"                    "}work_pool_name="my-work-pool",
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1050">
                            <a href="#Flow.deploy-1050">
                                <span className="linenos">1050</span>
                            </a>
                            <span className="sd">
                                {"                    "}image="my-repository/my-image:dev",
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1051">
                            <a href="#Flow.deploy-1051">
                                <span className="linenos">1051</span>
                            </a>
                            <span className="sd">{"                "})</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1052">
                            <a href="#Flow.deploy-1052">
                                <span className="linenos">1052</span>
                            </a>
                            <span className="sd">{"            "}```</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1053">
                            <a href="#Flow.deploy-1053">
                                <span className="linenos">1053</span>
                            </a>
                            <span className="sd">{"        "}"""</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1054">
                            <a href="#Flow.deploy-1054">
                                <span className="linenos">1054</span>
                            </a>
                            {"        "}
                            <span className="n">work_pool_name</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">work_pool_name</span>{" "}
                            <span className="ow">or</span>{" "}
                            <span className="n">PREFECT_DEFAULT_WORK_POOL_NAME</span>
                            <span className="o">.</span>
                            <span className="n">value</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1055">
                            <a href="#Flow.deploy-1055">
                                <span className="linenos">1055</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1056">
                            <a href="#Flow.deploy-1056">
                                <span className="linenos">1056</span>
                            </a>
                            {"        "}
                            <span className="k">try</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1057">
                            <a href="#Flow.deploy-1057">
                                <span className="linenos">1057</span>
                            </a>
                            {"            "}
                            <span className="k">
                                async
                            </span> <span className="k">with</span>{" "}
                            <span className="n">get_client</span>
                            <span className="p">()</span> <span className="k">as</span>{" "}
                            <span className="n">client</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1058">
                            <a href="#Flow.deploy-1058">
                                <span className="linenos">1058</span>
                            </a>
                            {"                "}
                            <span className="n">
                                work_pool
                            </span> <span className="o">=</span>{" "}
                            <span className="k">await</span> <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">read_work_pool</span>
                            <span className="p">(</span>
                            <span className="n">work_pool_name</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1059">
                            <a href="#Flow.deploy-1059">
                                <span className="linenos">1059</span>
                            </a>
                            {"        "}
                            <span className="k">except</span>{" "}
                            <span className="n">ObjectNotFound</span>{" "}
                            <span className="k">as</span> <span className="n">exc</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1060">
                            <a href="#Flow.deploy-1060">
                                <span className="linenos">1060</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">ValueError</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1061">
                            <a href="#Flow.deploy-1061">
                                <span className="linenos">1061</span>
                            </a>
                            {"                "}
                            <span className="sa">f</span>
                            <span className="s2">"Could not find work pool </span>
                            <span className="si">{"{"}</span>
                            <span className="n">work_pool_name</span>
                            <span className="si">!r{"}"}</span>
                            <span className="s2">. Please create it before"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1062">
                            <a href="#Flow.deploy-1062">
                                <span className="linenos">1062</span>
                            </a>
                            {"                "}
                            <span className="s2">" deploying this flow."</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1063">
                            <a href="#Flow.deploy-1063">
                                <span className="linenos">1063</span>
                            </a>
                            {"            "}
                            <span className="p">)</span> <span className="kn">from</span>{" "}
                            <span className="nn">exc</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1064">
                            <a href="#Flow.deploy-1064">
                                <span className="linenos">1064</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1065">
                            <a href="#Flow.deploy-1065">
                                <span className="linenos">1065</span>
                            </a>
                            {"        "}
                            <span className="n">
                                deployment
                            </span> <span className="o">=</span>{" "}
                            <span className="k">await</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">to_deployment</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1066">
                            <a href="#Flow.deploy-1066">
                                <span className="linenos">1066</span>
                            </a>
                            {"            "}
                            <span className="n">name</span>
                            <span className="o">=</span>
                            <span className="n">name</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1067">
                            <a href="#Flow.deploy-1067">
                                <span className="linenos">1067</span>
                            </a>
                            {"            "}
                            <span className="n">interval</span>
                            <span className="o">=</span>
                            <span className="n">interval</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1068">
                            <a href="#Flow.deploy-1068">
                                <span className="linenos">1068</span>
                            </a>
                            {"            "}
                            <span className="n">cron</span>
                            <span className="o">=</span>
                            <span className="n">cron</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1069">
                            <a href="#Flow.deploy-1069">
                                <span className="linenos">1069</span>
                            </a>
                            {"            "}
                            <span className="n">rrule</span>
                            <span className="o">=</span>
                            <span className="n">rrule</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1070">
                            <a href="#Flow.deploy-1070">
                                <span className="linenos">1070</span>
                            </a>
                            {"            "}
                            <span className="n">schedules</span>
                            <span className="o">=</span>
                            <span className="n">schedules</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1071">
                            <a href="#Flow.deploy-1071">
                                <span className="linenos">1071</span>
                            </a>
                            {"            "}
                            <span className="n">paused</span>
                            <span className="o">=</span>
                            <span className="n">paused</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1072">
                            <a href="#Flow.deploy-1072">
                                <span className="linenos">1072</span>
                            </a>
                            {"            "}
                            <span className="n">schedule</span>
                            <span className="o">=</span>
                            <span className="n">schedule</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1073">
                            <a href="#Flow.deploy-1073">
                                <span className="linenos">1073</span>
                            </a>
                            {"            "}
                            <span className="n">is_schedule_active</span>
                            <span className="o">=</span>
                            <span className="n">is_schedule_active</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1074">
                            <a href="#Flow.deploy-1074">
                                <span className="linenos">1074</span>
                            </a>
                            {"            "}
                            <span className="n">triggers</span>
                            <span className="o">=</span>
                            <span className="n">triggers</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1075">
                            <a href="#Flow.deploy-1075">
                                <span className="linenos">1075</span>
                            </a>
                            {"            "}
                            <span className="n">parameters</span>
                            <span className="o">=</span>
                            <span className="n">parameters</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1076">
                            <a href="#Flow.deploy-1076">
                                <span className="linenos">1076</span>
                            </a>
                            {"            "}
                            <span className="n">description</span>
                            <span className="o">=</span>
                            <span className="n">description</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1077">
                            <a href="#Flow.deploy-1077">
                                <span className="linenos">1077</span>
                            </a>
                            {"            "}
                            <span className="n">tags</span>
                            <span className="o">=</span>
                            <span className="n">tags</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1078">
                            <a href="#Flow.deploy-1078">
                                <span className="linenos">1078</span>
                            </a>
                            {"            "}
                            <span className="n">version</span>
                            <span className="o">=</span>
                            <span className="n">version</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1079">
                            <a href="#Flow.deploy-1079">
                                <span className="linenos">1079</span>
                            </a>
                            {"            "}
                            <span className="n">enforce_parameter_schema</span>
                            <span className="o">=</span>
                            <span className="n">enforce_parameter_schema</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1080">
                            <a href="#Flow.deploy-1080">
                                <span className="linenos">1080</span>
                            </a>
                            {"            "}
                            <span className="n">work_queue_name</span>
                            <span className="o">=</span>
                            <span className="n">work_queue_name</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1081">
                            <a href="#Flow.deploy-1081">
                                <span className="linenos">1081</span>
                            </a>
                            {"            "}
                            <span className="n">job_variables</span>
                            <span className="o">=</span>
                            <span className="n">job_variables</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1082">
                            <a href="#Flow.deploy-1082">
                                <span className="linenos">1082</span>
                            </a>
                            {"            "}
                            <span className="n">entrypoint_type</span>
                            <span className="o">=</span>
                            <span className="n">entrypoint_type</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1083">
                            <a href="#Flow.deploy-1083">
                                <span className="linenos">1083</span>
                            </a>
                            {"        "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1084">
                            <a href="#Flow.deploy-1084">
                                <span className="linenos">1084</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1085">
                            <a href="#Flow.deploy-1085">
                                <span className="linenos">1085</span>
                            </a>
                            {"        "}
                            <span className="n">deployment_ids</span>{" "}
                            <span className="o">=</span> <span className="k">await</span>{" "}
                            <span className="n">deploy</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1086">
                            <a href="#Flow.deploy-1086">
                                <span className="linenos">1086</span>
                            </a>
                            {"            "}
                            <span className="n">deployment</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1087">
                            <a href="#Flow.deploy-1087">
                                <span className="linenos">1087</span>
                            </a>
                            {"            "}
                            <span className="n">work_pool_name</span>
                            <span className="o">=</span>
                            <span className="n">work_pool_name</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1088">
                            <a href="#Flow.deploy-1088">
                                <span className="linenos">1088</span>
                            </a>
                            {"            "}
                            <span className="n">image</span>
                            <span className="o">=</span>
                            <span className="n">image</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1089">
                            <a href="#Flow.deploy-1089">
                                <span className="linenos">1089</span>
                            </a>
                            {"            "}
                            <span className="n">build</span>
                            <span className="o">=</span>
                            <span className="n">build</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1090">
                            <a href="#Flow.deploy-1090">
                                <span className="linenos">1090</span>
                            </a>
                            {"            "}
                            <span className="n">push</span>
                            <span className="o">=</span>
                            <span className="n">push</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1091">
                            <a href="#Flow.deploy-1091">
                                <span className="linenos">1091</span>
                            </a>
                            {"            "}
                            <span className="n">print_next_steps_message</span>
                            <span className="o">=</span>
                            <span className="kc">False</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1092">
                            <a href="#Flow.deploy-1092">
                                <span className="linenos">1092</span>
                            </a>
                            {"            "}
                            <span className="n">ignore_warnings</span>
                            <span className="o">=</span>
                            <span className="n">ignore_warnings</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1093">
                            <a href="#Flow.deploy-1093">
                                <span className="linenos">1093</span>
                            </a>
                            {"        "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1094">
                            <a href="#Flow.deploy-1094">
                                <span className="linenos">1094</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1095">
                            <a href="#Flow.deploy-1095">
                                <span className="linenos">1095</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">print_next_steps</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1096">
                            <a href="#Flow.deploy-1096">
                                <span className="linenos">1096</span>
                            </a>
                            {"            "}
                            <span className="n">
                                console
                            </span> <span className="o">=</span>{" "}
                            <span className="n">Console</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1097">
                            <a href="#Flow.deploy-1097">
                                <span className="linenos">1097</span>
                            </a>
                            {"            "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="n">work_pool</span>
                            <span className="o">.</span>
                            <span className="n">is_push_pool</span>{" "}
                            <span className="ow">and</span> <span className="ow">not</span>{" "}
                            <span className="n">work_pool</span>
                            <span className="o">.</span>
                            <span className="n">is_managed_pool</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1098">
                            <a href="#Flow.deploy-1098">
                                <span className="linenos">1098</span>
                            </a>
                            {"                "}
                            <span className="n">console</span>
                            <span className="o">.</span>
                            <span className="n">print</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1099">
                            <a href="#Flow.deploy-1099">
                                <span className="linenos">1099</span>
                            </a>
                            {"                    "}
                            <span className="s2">"</span>
                            <span className="se">\n</span>
                            <span className="s2">
                                To execute flow runs from this deployment, start a worker in a"
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1100">
                            <a href="#Flow.deploy-1100">
                                <span className="linenos">1100</span>
                            </a>
                            {"                    "}
                            <span className="s2">
                                " separate terminal that pulls work from the"
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1101">
                            <a href="#Flow.deploy-1101">
                                <span className="linenos">1101</span>
                            </a>
                            {"                    "}
                            <span className="sa">f</span>
                            <span className="s2">" </span>
                            <span className="si">{"{"}</span>
                            <span className="n">work_pool_name</span>
                            <span className="si">!r{"}"}</span>
                            <span className="s2"> work pool:"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1102">
                            <a href="#Flow.deploy-1102">
                                <span className="linenos">1102</span>
                            </a>
                            {"                "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1103">
                            <a href="#Flow.deploy-1103">
                                <span className="linenos">1103</span>
                            </a>
                            {"                "}
                            <span className="n">console</span>
                            <span className="o">.</span>
                            <span className="n">print</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1104">
                            <a href="#Flow.deploy-1104">
                                <span className="linenos">1104</span>
                            </a>
                            {"                    "}
                            <span className="sa">f</span>
                            <span className="s2">"</span>
                            <span className="se">\n\t</span>
                            <span className="s2">$ prefect worker start --pool </span>
                            <span className="si">{"{"}</span>
                            <span className="n">work_pool_name</span>
                            <span className="si">!r{"}"}</span>
                            <span className="s2">"</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1105">
                            <a href="#Flow.deploy-1105">
                                <span className="linenos">1105</span>
                            </a>
                            {"                    "}
                            <span className="n">style</span>
                            <span className="o">=</span>
                            <span className="s2">"blue"</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1106">
                            <a href="#Flow.deploy-1106">
                                <span className="linenos">1106</span>
                            </a>
                            {"                "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1107">
                            <a href="#Flow.deploy-1107">
                                <span className="linenos">1107</span>
                            </a>
                            {"            "}
                            <span className="n">console</span>
                            <span className="o">.</span>
                            <span className="n">print</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1108">
                            <a href="#Flow.deploy-1108">
                                <span className="linenos">1108</span>
                            </a>
                            {"                "}
                            <span className="s2">"</span>
                            <span className="se">\n</span>
                            <span className="s2">
                                To schedule a run for this deployment, use the following
                                command:"
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1109">
                            <a href="#Flow.deploy-1109">
                                <span className="linenos">1109</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1110">
                            <a href="#Flow.deploy-1110">
                                <span className="linenos">1110</span>
                            </a>
                            {"            "}
                            <span className="n">console</span>
                            <span className="o">.</span>
                            <span className="n">print</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1111">
                            <a href="#Flow.deploy-1111">
                                <span className="linenos">1111</span>
                            </a>
                            {"                "}
                            <span className="sa">f</span>
                            <span className="s2">"</span>
                            <span className="se">\n\t</span>
                            <span className="s2">$ prefect deployment run '</span>
                            <span className="si">{"{"}</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">/</span>
                            <span className="si">{"{"}</span>
                            <span className="n">name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">'</span>
                            <span className="se">\n</span>
                            <span className="s2">"</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1112">
                            <a href="#Flow.deploy-1112">
                                <span className="linenos">1112</span>
                            </a>
                            {"                "}
                            <span className="n">style</span>
                            <span className="o">=</span>
                            <span className="s2">"blue"</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1113">
                            <a href="#Flow.deploy-1113">
                                <span className="linenos">1113</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1114">
                            <a href="#Flow.deploy-1114">
                                <span className="linenos">1114</span>
                            </a>
                            {"            "}
                            <span className="k">if</span>{" "}
                            <span className="n">PREFECT_UI_URL</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1115">
                            <a href="#Flow.deploy-1115">
                                <span className="linenos">1115</span>
                            </a>
                            {"                "}
                            <span className="n">
                                message
                            </span> <span className="o">=</span> <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1116">
                            <a href="#Flow.deploy-1116">
                                <span className="linenos">1116</span>
                            </a>
                            {"                    "}
                            <span className="s2">"</span>
                            <span className="se">\n</span>
                            <span className="s2">
                                You can also run your flow via the Prefect UI:"
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1117">
                            <a href="#Flow.deploy-1117">
                                <span className="linenos">1117</span>
                            </a>
                            {"                    "}
                            <span className="sa">f</span>
                            <span className="s2">" [blue]</span>
                            <span className="si">{"{"}</span>
                            <span className="n">PREFECT_UI_URL</span>
                            <span className="o">.</span>
                            <span className="n">value</span>
                            <span className="p">()</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">/deployments/deployment/</span>
                            <span className="si">{"{"}</span>
                            <span className="n">deployment_ids</span>
                            <span className="p">[</span>
                            <span className="mi">0</span>
                            <span className="p">]</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">[/]</span>
                            <span className="se">\n</span>
                            <span className="s2">"</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1118">
                            <a href="#Flow.deploy-1118">
                                <span className="linenos">1118</span>
                            </a>
                            {"                "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1119">
                            <a href="#Flow.deploy-1119">
                                <span className="linenos">1119</span>
                            </a>
                            {"                "}
                            <span className="n">console</span>
                            <span className="o">.</span>
                            <span className="n">print</span>
                            <span className="p">(</span>
                            <span className="n">message</span>
                            <span className="p">,</span> <span className="n">soft_wrap</span>
                            <span className="o">=</span>
                            <span className="kc">True</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1120">
                            <a href="#Flow.deploy-1120">
                                <span className="linenos">1120</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.deploy-1121">
                            <a href="#Flow.deploy-1121">
                                <span className="linenos">1121</span>
                            </a>
                            {"        "}
                            <span className="k">return</span>{" "}
                            <span className="n">deployment_ids</span>
                            <span className="p">[</span>
                            <span className="mi">0</span>
                            <span className="p">]</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
                <div className="docstring">
                    <p>
                        Deploys a flow to run on dynamic infrastructure via a work pool.
                    </p>
                    <p>
                        By default, calling this method will build a Docker image for the
                        flow, push it to a registry, and create a deployment via the Prefect
                        API that will run the flow on the given schedule.
                    </p>
                    <p>
                        If you want to use an existing image, you can pass{" "}
                        <code>build=False</code> to skip building and pushing an image.
                    </p>
                    <p>
                        Args: name: The name to give the created deployment. work_pool_name:
                        The name of the work pool to use for this deployment. Defaults to
                        the value of <code>PREFECT_DEFAULT_WORK_POOL_NAME</code>. image: The
                        name of the Docker image to build, including the registry and
                        repository. Pass a DeploymentImage instance to customize the
                        Dockerfile used and build arguments. build: Whether or not to build
                        a new image for the flow. If False, the provided image will be used
                        as-is and pulled at runtime. push: Whether or not to skip pushing
                        the built image to a registry. work_queue_name: The name of the work
                        queue to use for this deployment's scheduled runs. If not provided
                        the default work queue for the work pool will be used.
                        job_variables: Settings used to override the values specified
                        default base job template of the chosen work pool. Refer to the base
                        job template of the chosen work pool for available settings.
                        interval: An interval on which to execute the deployment. Accepts a
                        number or a timedelta object to create a single schedule. If a
                        number is given, it will be interpreted as seconds. Also accepts an
                        iterable of numbers or timedelta to create multiple schedules. cron:
                        A cron schedule string of when to execute runs of this deployment.
                        Also accepts an iterable of cron schedule strings to create multiple
                        schedules. rrule: An rrule schedule string of when to execute runs
                        of this deployment. Also accepts an iterable of rrule schedule
                        strings to create multiple schedules. triggers: A list of triggers
                        that will kick off runs of this deployment. paused: Whether or not
                        to set this deployment as paused. schedules: A list of schedule
                        objects defining when to execute runs of this deployment. Used to
                        define multiple schedules or additional scheduling options like{" "}
                        <code>timezone</code>. schedule: A schedule object defining when to
                        execute runs of this deployment. Used to define additional
                        scheduling options like <code>timezone</code>. is_schedule_active:
                        Whether or not to set the schedule for this deployment as active. If
                        not provided when creating a deployment, the schedule will be set as
                        active. If not provided when updating a deployment, the schedule's
                        activation will not be changed. parameters: A dictionary of default
                        parameter values to pass to runs of this deployment. description: A
                        description for the created deployment. Defaults to the flow's
                        description if not provided. tags: A list of tags to associate with
                        the created deployment for organizational purposes. version: A
                        version for the created deployment. Defaults to the flow's version.
                        enforce_parameter_schema: Whether or not the Prefect API should
                        enforce the parameter schema for the created deployment.
                        entrypoint_type: Type of entrypoint to use for the deployment. When
                        using a module path entrypoint, ensure that the module will be
                        importable in the execution environment. print_next_steps_message:
                        Whether or not to print a message with next steps after deploying
                        the deployments. ignore_warnings: Whether or not to ignore warnings
                        about the work pool type.
                    </p>
                    <p>Returns: The ID of the created/updated deployment.</p>
                    <p>Examples: Deploy a local flow to a work pool:</p>
                    <div className="pdoc-code codehilite">
                        <pre>
                            <span />
                            <code>
                                <span className="kn">from</span>{" "}
                                <span className="nn">prefect</span>{" "}
                                <span className="kn">import</span>{" "}
                                <span className="n">flow</span>
                                {"\n"} <br />
                                {"\n"}
                                {"    "}
                                <span className="nd">@flow</span>
                                {"\n"}
                                {"    "}
                                <span className="k">def</span>{" "}
                                <span className="nf">my_flow</span>
                                <span className="p">(</span>
                                <span className="n">name</span>
                                <span className="p">):</span>
                                {"\n"}
                                {"        "}
                                <span className="nb">print</span>
                                <span className="p">(</span>
                                <span className="sa">f</span>
                                <span className="s2">"hello </span>
                                <span className="si">{"{"}</span>
                                <span className="n">name</span>
                                <span className="si">{"}"}</span>
                                <span className="s2">"</span>
                                <span className="p">)</span>
                                {"\n"} <br />
                                {"\n"}
                                {"    "}
                                <span className="k">if</span>{" "}
                                <span className="vm">__name__</span>{" "}
                                <span className="o">==</span>{" "}
                                <span className="s2">"__main__"</span>
                                <span className="p">:</span>
                                {"\n"}
                                {"        "}
                                <span className="n">my_flow</span>
                                <span className="o">.</span>
                                <span className="n">deploy</span>
                                <span className="p">(</span>
                                {"\n"}
                                {"            "}
                                <span className="s2">"example-deployment"</span>
                                <span className="p">,</span>
                                {"\n"}
                                {"            "}
                                <span className="n">work_pool_name</span>
                                <span className="o">=</span>
                                <span className="s2">"my-work-pool"</span>
                                <span className="p">,</span>
                                {"\n"}
                                {"            "}
                                <span className="n">image</span>
                                <span className="o">=</span>
                                <span className="s2">"my-repository/my-image:dev"</span>
                                <span className="p">,</span>
                                {"\n"}
                                {"        "}
                                <span className="p">)</span>
                                {"\n"}
                                {"    "}
                            </code>
                        </pre>
                    </div>
                    <p />
                    <pre>
                        <code>
                            Deploy a remotely stored flow to a work pool:{"\n"}&lt;div
                            class="pdoc-code codehilite"&gt;{"\n"}
                            &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span
                            class="kn"&gt;from&lt;/span&gt; &lt;span
                            class="nn"&gt;prefect&lt;/span&gt; &lt;span
                            class="kn"&gt;import&lt;/span&gt; &lt;span
                            class="n"&gt;flow&lt;/span&gt;{"\n"}
                            {"\n"}&lt;span class="k"&gt;if&lt;/span&gt; &lt;span
                            class="vm"&gt;__name__&lt;/span&gt; &lt;span
                            class="o"&gt;==&lt;/span&gt; &lt;span
                            class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span
                            class="p"&gt;:&lt;/span&gt;{"\n"}
                            {"    "}&lt;span class="n"&gt;flow&lt;/span&gt;&lt;span
                            class="o"&gt;.&lt;/span&gt;&lt;span
                            class="n"&gt;from_source&lt;/span&gt;&lt;span
                            class="p"&gt;(&lt;/span&gt;{"\n"}
                            {"        "}&lt;span class="n"&gt;source&lt;/span&gt;&lt;span
                            class="o"&gt;=&lt;/span&gt;&lt;span
                            class="s2"&gt;&amp;quot;https://github.com/org/repo.git&amp;quot;&lt;/span&gt;&lt;span
                            class="p"&gt;,&lt;/span&gt;{"\n"}
                            {"        "}&lt;span class="n"&gt;entrypoint&lt;/span&gt;&lt;span
                            class="o"&gt;=&lt;/span&gt;&lt;span
                            class="s2"&gt;&amp;quot;flows.py:my_flow&amp;quot;&lt;/span&gt;&lt;span
                            class="p"&gt;,&lt;/span&gt;{"\n"}
                            {"    "}&lt;span class="p"&gt;)&lt;/span&gt;&lt;span
                            class="o"&gt;.&lt;/span&gt;&lt;span
                            class="n"&gt;deploy&lt;/span&gt;&lt;span
                            class="p"&gt;(&lt;/span&gt;{"\n"}
                            {"        "}&lt;span
                            class="s2"&gt;&amp;quot;example-deployment&amp;quot;&lt;/span&gt;&lt;span
                            class="p"&gt;,&lt;/span&gt;{"\n"}
                            {"        "}&lt;span
                            class="n"&gt;work_pool_name&lt;/span&gt;&lt;span
                            class="o"&gt;=&lt;/span&gt;&lt;span
                            class="s2"&gt;&amp;quot;my-work-pool&amp;quot;&lt;/span&gt;&lt;span
                            class="p"&gt;,&lt;/span&gt;{"\n"}
                            {"        "}&lt;span class="n"&gt;image&lt;/span&gt;&lt;span
                            class="o"&gt;=&lt;/span&gt;&lt;span
                            class="s2"&gt;&amp;quot;my-repository/my-image:dev&amp;quot;&lt;/span&gt;&lt;span
                            class="p"&gt;,&lt;/span&gt;{"\n"}
                            {"    "}&lt;span class="p"&gt;)&lt;/span&gt;{"\n"}
                            &lt;/code&gt;&lt;/pre&gt;{"\n"}&lt;/div&gt;{"\n"}
                        </code>
                    </pre>
                </div>
            </div>
            <div id="Flow.visualize" className="classattr">
                <input
                    id="Flow.visualize-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <div className="decorator">@sync_compatible</div>
                    <span className="def">async def</span>
                    <span className="name">visualize</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="bp">self</span>,{" "}
                        </span>
                        <span className="param">
                            <span className="o">*</span>
                            <span className="n">args</span>,{" "}
                        </span>
                        <span className="param">
                            <span className="o">**</span>
                            <span className="n">kwargs</span>
                        </span>
                        <span className="return-annotation">):</span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="Flow.visualize-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#Flow.visualize" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="Flow.visualize-1282">
                            <a href="#Flow.visualize-1282">
                                <span className="linenos">1282</span>
                            </a>
                            {"    "}
                            <span className="nd">@sync_compatible</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1283">
                            <a href="#Flow.visualize-1283">
                                <span className="linenos">1283</span>
                            </a>
                            {"    "}
                            <span className="k">
                                async
                            </span> <span className="k">def</span>{" "}
                            <span className="nf">visualize</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">,</span> <span className="o">*</span>
                            <span className="n">args</span>
                            <span className="p">,</span> <span className="o">**</span>
                            <span className="n">kwargs</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1284">
                            <a href="#Flow.visualize-1284">
                                <span className="linenos">1284</span>
                            </a>
                            <span className="w">{"        "}</span>
                            <span className="sd">"""</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1285">
                            <a href="#Flow.visualize-1285">
                                <span className="linenos">1285</span>
                            </a>
                            <span className="sd">
                                {"        "}Generates a graphviz object representing the current
                                flow. In IPython notebooks,
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1286">
                            <a href="#Flow.visualize-1286">
                                <span className="linenos">1286</span>
                            </a>
                            <span className="sd">
                                {"        "}it's rendered inline, otherwise in a new window as a
                                PNG.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1287">
                            <a href="#Flow.visualize-1287">
                                <span className="linenos">1287</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1288">
                            <a href="#Flow.visualize-1288">
                                <span className="linenos">1288</span>
                            </a>
                            <span className="sd">{"        "}Raises:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1289">
                            <a href="#Flow.visualize-1289">
                                <span className="linenos">1289</span>
                            </a>
                            <span className="sd">
                                {"            "}- ImportError: If `graphviz` isn't installed.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1290">
                            <a href="#Flow.visualize-1290">
                                <span className="linenos">1290</span>
                            </a>
                            <span className="sd">
                                {"            "}- GraphvizExecutableNotFoundError: If the `dot`
                                executable isn't found.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1291">
                            <a href="#Flow.visualize-1291">
                                <span className="linenos">1291</span>
                            </a>
                            <span className="sd">
                                {"            "}- FlowVisualizationError: If the flow can't be
                                visualized for any other reason.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1292">
                            <a href="#Flow.visualize-1292">
                                <span className="linenos">1292</span>
                            </a>
                            <span className="sd">{"        "}"""</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1293">
                            <a href="#Flow.visualize-1293">
                                <span className="linenos">1293</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="n">PREFECT_UNIT_TEST_MODE</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1294">
                            <a href="#Flow.visualize-1294">
                                <span className="linenos">1294</span>
                            </a>
                            {"            "}
                            <span className="n">warnings</span>
                            <span className="o">.</span>
                            <span className="n">warn</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1295">
                            <a href="#Flow.visualize-1295">
                                <span className="linenos">1295</span>
                            </a>
                            {"                "}
                            <span className="s2">
                                "`flow.visualize()` will execute code inside of your flow that
                                is not"
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1296">
                            <a href="#Flow.visualize-1296">
                                <span className="linenos">1296</span>
                            </a>
                            {"                "}
                            <span className="s2">" decorated with `@task` or `@flow`."</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1297">
                            <a href="#Flow.visualize-1297">
                                <span className="linenos">1297</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1298">
                            <a href="#Flow.visualize-1298">
                                <span className="linenos">1298</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1299">
                            <a href="#Flow.visualize-1299">
                                <span className="linenos">1299</span>
                            </a>
                            {"        "}
                            <span className="k">try</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1300">
                            <a href="#Flow.visualize-1300">
                                <span className="linenos">1300</span>
                            </a>
                            {"            "}
                            <span className="k">with</span>{" "}
                            <span className="n">TaskVizTracker</span>
                            <span className="p">()</span> <span className="k">as</span>{" "}
                            <span className="n">tracker</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1301">
                            <a href="#Flow.visualize-1301">
                                <span className="linenos">1301</span>
                            </a>
                            {"                "}
                            <span className="k">if</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">isasync</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1302">
                            <a href="#Flow.visualize-1302">
                                <span className="linenos">1302</span>
                            </a>
                            {"                    "}
                            <span className="k">await</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">(</span>
                            <span className="o">*</span>
                            <span className="n">args</span>
                            <span className="p">,</span> <span className="o">**</span>
                            <span className="n">kwargs</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1303">
                            <a href="#Flow.visualize-1303">
                                <span className="linenos">1303</span>
                            </a>
                            {"                "}
                            <span className="k">else</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1304">
                            <a href="#Flow.visualize-1304">
                                <span className="linenos">1304</span>
                            </a>
                            {"                    "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">(</span>
                            <span className="o">*</span>
                            <span className="n">args</span>
                            <span className="p">,</span> <span className="o">**</span>
                            <span className="n">kwargs</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1305">
                            <a href="#Flow.visualize-1305">
                                <span className="linenos">1305</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1306">
                            <a href="#Flow.visualize-1306">
                                <span className="linenos">1306</span>
                            </a>
                            {"                "}
                            <span className="n">graph</span> <span className="o">=</span>{" "}
                            <span className="n">build_task_dependencies</span>
                            <span className="p">(</span>
                            <span className="n">tracker</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1307">
                            <a href="#Flow.visualize-1307">
                                <span className="linenos">1307</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1308">
                            <a href="#Flow.visualize-1308">
                                <span className="linenos">1308</span>
                            </a>
                            {"                "}
                            <span className="n">visualize_task_dependencies</span>
                            <span className="p">(</span>
                            <span className="n">graph</span>
                            <span className="p">,</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">name</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1309">
                            <a href="#Flow.visualize-1309">
                                <span className="linenos">1309</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1310">
                            <a href="#Flow.visualize-1310">
                                <span className="linenos">1310</span>
                            </a>
                            {"        "}
                            <span className="k">except</span>{" "}
                            <span className="n">GraphvizImportError</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1311">
                            <a href="#Flow.visualize-1311">
                                <span className="linenos">1311</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1312">
                            <a href="#Flow.visualize-1312">
                                <span className="linenos">1312</span>
                            </a>
                            {"        "}
                            <span className="k">except</span>{" "}
                            <span className="n">GraphvizExecutableNotFoundError</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1313">
                            <a href="#Flow.visualize-1313">
                                <span className="linenos">1313</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1314">
                            <a href="#Flow.visualize-1314">
                                <span className="linenos">1314</span>
                            </a>
                            {"        "}
                            <span className="k">except</span>{" "}
                            <span className="n">VisualizationUnsupportedError</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1315">
                            <a href="#Flow.visualize-1315">
                                <span className="linenos">1315</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1316">
                            <a href="#Flow.visualize-1316">
                                <span className="linenos">1316</span>
                            </a>
                            {"        "}
                            <span className="k">except</span>{" "}
                            <span className="n">FlowVisualizationError</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1317">
                            <a href="#Flow.visualize-1317">
                                <span className="linenos">1317</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1318">
                            <a href="#Flow.visualize-1318">
                                <span className="linenos">1318</span>
                            </a>
                            {"        "}
                            <span className="k">except</span>{" "}
                            <span className="ne">Exception</span>{" "}
                            <span className="k">as</span> <span className="n">e</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1319">
                            <a href="#Flow.visualize-1319">
                                <span className="linenos">1319</span>
                            </a>
                            {"            "}
                            <span className="n">msg</span> <span className="o">=</span>{" "}
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1320">
                            <a href="#Flow.visualize-1320">
                                <span className="linenos">1320</span>
                            </a>
                            {"                "}
                            <span className="s2">
                                "It's possible you are trying to visualize a flow that contains
                                "
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1321">
                            <a href="#Flow.visualize-1321">
                                <span className="linenos">1321</span>
                            </a>
                            {"                "}
                            <span className="s2">
                                "code that directly interacts with the result of a task"
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1322">
                            <a href="#Flow.visualize-1322">
                                <span className="linenos">1322</span>
                            </a>
                            {"                "}
                            <span className="s2">" inside of the flow. </span>
                            <span className="se">\n</span>
                            <span className="s2">Try passing a `viz_return_value` "</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1323">
                            <a href="#Flow.visualize-1323">
                                <span className="linenos">1323</span>
                            </a>
                            {"                "}
                            <span className="s2">
                                "to the task decorator, e.g. `@task(viz_return_value=[1, 2,
                                3]).`"
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1324">
                            <a href="#Flow.visualize-1324">
                                <span className="linenos">1324</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1325">
                            <a href="#Flow.visualize-1325">
                                <span className="linenos">1325</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1326">
                            <a href="#Flow.visualize-1326">
                                <span className="linenos">1326</span>
                            </a>
                            {"            "}
                            <span className="n">new_exception</span>{" "}
                            <span className="o">=</span> <span className="nb">type</span>
                            <span className="p">(</span>
                            <span className="n">e</span>
                            <span className="p">)(</span>
                            <span className="nb">str</span>
                            <span className="p">(</span>
                            <span className="n">e</span>
                            <span className="p">)</span> <span className="o">+</span>{" "}
                            <span className="s2">"</span>
                            <span className="se">\n</span>
                            <span className="s2">"</span> <span className="o">+</span>{" "}
                            <span className="n">msg</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1327">
                            <a href="#Flow.visualize-1327">
                                <span className="linenos">1327</span>
                            </a>
                            {"            "}
                            <span className="c1">
                                # Copy traceback information from the original exception
                            </span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1328">
                            <a href="#Flow.visualize-1328">
                                <span className="linenos">1328</span>
                            </a>
                            {"            "}
                            <span className="n">new_exception</span>
                            <span className="o">.</span>
                            <span className="n">__traceback__</span>{" "}
                            <span className="o">=</span> <span className="n">e</span>
                            <span className="o">.</span>
                            <span className="n">__traceback__</span>
                            {"\n"}
                        </span>
                        <span id="Flow.visualize-1329">
                            <a href="#Flow.visualize-1329">
                                <span className="linenos">1329</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>{" "}
                            <span className="n">new_exception</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
                <div className="docstring">
                    <p>
                        Generates a graphviz object representing the current flow. In
                        IPython notebooks, it's rendered inline, otherwise in a new window
                        as a PNG.
                    </p>
                    <p>
                        Raises: - ImportError: If <code>graphviz</code> isn't installed. -
                        GraphvizExecutableNotFoundError: If the <code>dot</code> executable
                        isn't found. - FlowVisualizationError: If the flow can't be
                        visualized for any other reason.
                    </p>
                </div>
            </div>
        </section>
        <section id="get_client">
            <input
                id="get_client-view-source"
                className="view-source-toggle-state"
                type="checkbox"
                aria-hidden="true"
                tabIndex={-1}
            />
            <div className="attr function">
                <span className="def">def</span>
                <span className="name">get_client</span>
                <span className="signature pdoc-code multiline">
                    (
                    <span className="param">
                        <span className="n">httpx_settings</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Dict</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">Any</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">sync_client</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>
                    </span>
                    <span className="return-annotation">
                        ) -&gt; <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">orchestration</span>
                        <span className="o">.</span>
                        <span className="n">PrefectClient</span>
                        <span className="p">,</span> <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">orchestration</span>
                        <span className="o">.</span>
                        <span className="n">SyncPrefectClient</span>
                        <span className="p">]</span>:
                    </span>
                </span>
                <label className="view-source-button" htmlFor="get_client-view-source">
                    <span>View Source</span>
                </label>
            </div>
            <a className="headerlink" href="#get_client" />
            <div className="pdoc-code codehilite">
                <pre>
                    <span />
                    <span id="get_client-182">
                        <a href="#get_client-182">
                            <span className="linenos">182</span>
                        </a>
                        <span className="k">def</span>{" "}
                        <span className="nf">get_client</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="get_client-183">
                        <a href="#get_client-183">
                            <span className="linenos">183</span>
                        </a>
                        {"    "}
                        <span className="n">httpx_settings</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Dict</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">Any</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span> <span className="n">sync_client</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>
                        {"\n"}
                    </span>
                    <span id="get_client-184">
                        <a href="#get_client-184">
                            <span className="linenos">184</span>
                        </a>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="s2">"PrefectClient"</span>
                        <span className="p">,</span>{" "}
                        <span className="s2">"SyncPrefectClient"</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="get_client-185">
                        <a href="#get_client-185">
                            <span className="linenos">185</span>
                        </a>
                        <span className="w">{"    "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="get_client-186">
                        <a href="#get_client-186">
                            <span className="linenos">186</span>
                        </a>
                        <span className="sd">
                            {"    "}Retrieve a HTTP client for communicating with the Prefect
                            REST API.
                        </span>
                        {"\n"}
                    </span>
                    <span id="get_client-187">
                        <a href="#get_client-187">
                            <span className="linenos">187</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="get_client-188">
                        <a href="#get_client-188">
                            <span className="linenos">188</span>
                        </a>
                        <span className="sd">
                            {"    "}The client must be context managed; for example:
                        </span>
                        {"\n"}
                    </span>
                    <span id="get_client-189">
                        <a href="#get_client-189">
                            <span className="linenos">189</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="get_client-190">
                        <a href="#get_client-190">
                            <span className="linenos">190</span>
                        </a>
                        <span className="sd">{"    "}```python</span>
                        {"\n"}
                    </span>
                    <span id="get_client-191">
                        <a href="#get_client-191">
                            <span className="linenos">191</span>
                        </a>
                        <span className="sd">
                            {"    "}async with get_client() as client:
                        </span>
                        {"\n"}
                    </span>
                    <span id="get_client-192">
                        <a href="#get_client-192">
                            <span className="linenos">192</span>
                        </a>
                        <span className="sd">{"        "}await client.hello()</span>
                        {"\n"}
                    </span>
                    <span id="get_client-193">
                        <a href="#get_client-193">
                            <span className="linenos">193</span>
                        </a>
                        <span className="sd">{"    "}```</span>
                        {"\n"}
                    </span>
                    <span id="get_client-194">
                        <a href="#get_client-194">
                            <span className="linenos">194</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="get_client-195">
                        <a href="#get_client-195">
                            <span className="linenos">195</span>
                        </a>
                        <span className="sd">
                            {"    "}To return a synchronous client, pass sync_client=True:
                        </span>
                        {"\n"}
                    </span>
                    <span id="get_client-196">
                        <a href="#get_client-196">
                            <span className="linenos">196</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="get_client-197">
                        <a href="#get_client-197">
                            <span className="linenos">197</span>
                        </a>
                        <span className="sd">{"    "}```python</span>
                        {"\n"}
                    </span>
                    <span id="get_client-198">
                        <a href="#get_client-198">
                            <span className="linenos">198</span>
                        </a>
                        <span className="sd">
                            {"    "}with get_client(sync_client=True) as client:
                        </span>
                        {"\n"}
                    </span>
                    <span id="get_client-199">
                        <a href="#get_client-199">
                            <span className="linenos">199</span>
                        </a>
                        <span className="sd">{"        "}client.hello()</span>
                        {"\n"}
                    </span>
                    <span id="get_client-200">
                        <a href="#get_client-200">
                            <span className="linenos">200</span>
                        </a>
                        <span className="sd">{"    "}```</span>
                        {"\n"}
                    </span>
                    <span id="get_client-201">
                        <a href="#get_client-201">
                            <span className="linenos">201</span>
                        </a>
                        <span className="sd">{"    "}"""</span>
                        {"\n"}
                    </span>
                    <span id="get_client-202">
                        <a href="#get_client-202">
                            <span className="linenos">202</span>
                        </a>
                        {"    "}
                        <span className="n">ctx</span> <span className="o">=</span>{" "}
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">context</span>
                        <span className="o">.</span>
                        <span className="n">get_settings_context</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="get_client-203">
                        <a href="#get_client-203">
                            <span className="linenos">203</span>
                        </a>
                        {"    "}
                        <span className="n">api</span> <span className="o">=</span>{" "}
                        <span className="n">PREFECT_API_URL</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="get_client-204">
                        <a href="#get_client-204">
                            <span className="linenos">204</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="get_client-205">
                        <a href="#get_client-205">
                            <span className="linenos">205</span>
                        </a>
                        {"    "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">api</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="get_client-206">
                        <a href="#get_client-206">
                            <span className="linenos">206</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # create an ephemeral API if none was provided
                        </span>
                        {"\n"}
                    </span>
                    <span id="get_client-207">
                        <a href="#get_client-207">
                            <span className="linenos">207</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.server.api.server</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">create_app</span>
                        {"\n"}
                    </span>
                    <span id="get_client-208">
                        <a href="#get_client-208">
                            <span className="linenos">208</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="get_client-209">
                        <a href="#get_client-209">
                            <span className="linenos">209</span>
                        </a>
                        {"        "}
                        <span className="n">api</span> <span className="o">=</span>{" "}
                        <span className="n">create_app</span>
                        <span className="p">(</span>
                        <span className="n">ctx</span>
                        <span className="o">.</span>
                        <span className="n">settings</span>
                        <span className="p">,</span> <span className="n">ephemeral</span>
                        <span className="o">=</span>
                        <span className="kc">True</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="get_client-210">
                        <a href="#get_client-210">
                            <span className="linenos">210</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="get_client-211">
                        <a href="#get_client-211">
                            <span className="linenos">211</span>
                        </a>
                        {"    "}
                        <span className="k">if</span> <span className="n">sync_client</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="get_client-212">
                        <a href="#get_client-212">
                            <span className="linenos">212</span>
                        </a>
                        {"        "}
                        <span className="k">return</span>{" "}
                        <span className="n">SyncPrefectClient</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="get_client-213">
                        <a href="#get_client-213">
                            <span className="linenos">213</span>
                        </a>
                        {"            "}
                        <span className="n">api</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="get_client-214">
                        <a href="#get_client-214">
                            <span className="linenos">214</span>
                        </a>
                        {"            "}
                        <span className="n">api_key</span>
                        <span className="o">=</span>
                        <span className="n">PREFECT_API_KEY</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">(),</span>
                        {"\n"}
                    </span>
                    <span id="get_client-215">
                        <a href="#get_client-215">
                            <span className="linenos">215</span>
                        </a>
                        {"            "}
                        <span className="n">httpx_settings</span>
                        <span className="o">=</span>
                        <span className="n">httpx_settings</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="get_client-216">
                        <a href="#get_client-216">
                            <span className="linenos">216</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="get_client-217">
                        <a href="#get_client-217">
                            <span className="linenos">217</span>
                        </a>
                        {"    "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="get_client-218">
                        <a href="#get_client-218">
                            <span className="linenos">218</span>
                        </a>
                        {"        "}
                        <span className="k">return</span>{" "}
                        <span className="n">PrefectClient</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="get_client-219">
                        <a href="#get_client-219">
                            <span className="linenos">219</span>
                        </a>
                        {"            "}
                        <span className="n">api</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="get_client-220">
                        <a href="#get_client-220">
                            <span className="linenos">220</span>
                        </a>
                        {"            "}
                        <span className="n">api_key</span>
                        <span className="o">=</span>
                        <span className="n">PREFECT_API_KEY</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">(),</span>
                        {"\n"}
                    </span>
                    <span id="get_client-221">
                        <a href="#get_client-221">
                            <span className="linenos">221</span>
                        </a>
                        {"            "}
                        <span className="n">httpx_settings</span>
                        <span className="o">=</span>
                        <span className="n">httpx_settings</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="get_client-222">
                        <a href="#get_client-222">
                            <span className="linenos">222</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                </pre>
            </div>
            <div className="docstring">
                <p>
                    Retrieve a HTTP client for communicating with the Prefect REST API.
                </p>
                <p>The client must be context managed; for example:</p>
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <code>
                            <span className="k">async</span> <span className="k">with</span>{" "}
                            <span className="n">get_client</span>
                            <span className="p">()</span> <span className="k">as</span>{" "}
                            <span className="n">client</span>
                            <span className="p">:</span>
                            {"\n"}
                            {"    "}
                            <span className="k">await</span> <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">hello</span>
                            <span className="p">()</span>
                            {"\n"}
                        </code>
                    </pre>
                </div>
                <p>To return a synchronous client, pass sync_client=True:</p>
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <code>
                            <span className="k">with</span>{" "}
                            <span className="n">get_client</span>
                            <span className="p">(</span>
                            <span className="n">sync_client</span>
                            <span className="o">=</span>
                            <span className="kc">True</span>
                            <span className="p">)</span> <span className="k">as</span>{" "}
                            <span className="n">client</span>
                            <span className="p">:</span>
                            {"\n"}
                            {"    "}
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">hello</span>
                            <span className="p">()</span>
                            {"\n"}
                        </code>
                    </pre>
                </div>
            </div>
        </section>
        <section id="get_run_logger">
            <input
                id="get_run_logger-view-source"
                className="view-source-toggle-state"
                type="checkbox"
                aria-hidden="true"
                tabIndex={-1}
            />
            <div className="attr function">
                <span className="def">def</span>
                <span className="name">get_run_logger</span>
                <span className="signature pdoc-code multiline">
                    (
                    <span className="param">
                        {" "}
                        <span className="n">context</span>
                        <span className="p">:</span> <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">context</span>
                        <span className="o">.</span>
                        <span className="n">
                            RunContext
                        </span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="nb">str</span>
                    </span>
                    <span className="return-annotation">
                        ) -&gt; <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">logging</span>
                        <span className="o">.</span>
                        <span className="n">Logger</span>
                        <span className="p">,</span> <span className="n">logging</span>
                        <span className="o">.</span>
                        <span className="n">LoggerAdapter</span>
                        <span className="p">]</span>:
                    </span>
                </span>
                <label
                    className="view-source-button"
                    htmlFor="get_run_logger-view-source"
                >
                    <span>View Source</span>
                </label>
            </div>
            <a className="headerlink" href="#get_run_logger" />
            <div className="pdoc-code codehilite">
                <pre>
                    <span />
                    <span id="get_run_logger-100">
                        <a href="#get_run_logger-100">
                            <span className="linenos">100</span>
                        </a>
                        <span className="k">def</span>{" "}
                        <span className="nf">get_run_logger</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-101">
                        <a href="#get_run_logger-101">
                            <span className="linenos">101</span>
                        </a>
                        {"    "}
                        <span className="n">context</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"RunContext"</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span> <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="nb">str</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-102">
                        <a href="#get_run_logger-102">
                            <span className="linenos">102</span>
                        </a>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">logging</span>
                        <span className="o">.</span>
                        <span className="n">Logger</span>
                        <span className="p">,</span> <span className="n">logging</span>
                        <span className="o">.</span>
                        <span className="n">LoggerAdapter</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-103">
                        <a href="#get_run_logger-103">
                            <span className="linenos">103</span>
                        </a>
                        <span className="w">{"    "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-104">
                        <a href="#get_run_logger-104">
                            <span className="linenos">104</span>
                        </a>
                        <span className="sd">
                            {"    "}Get a Prefect logger for the current task run or flow run.
                        </span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-105">
                        <a href="#get_run_logger-105">
                            <span className="linenos">105</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-106">
                        <a href="#get_run_logger-106">
                            <span className="linenos">106</span>
                        </a>
                        <span className="sd">
                            {"    "}The logger will be named either `prefect.task_runs` or
                            `prefect.flow_runs`.
                        </span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-107">
                        <a href="#get_run_logger-107">
                            <span className="linenos">107</span>
                        </a>
                        <span className="sd">
                            {"    "}Contextual data about the run will be attached to the log
                            records.
                        </span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-108">
                        <a href="#get_run_logger-108">
                            <span className="linenos">108</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-109">
                        <a href="#get_run_logger-109">
                            <span className="linenos">109</span>
                        </a>
                        <span className="sd">
                            {"    "}These loggers are connected to the `APILogHandler` by
                            default to send log records to
                        </span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-110">
                        <a href="#get_run_logger-110">
                            <span className="linenos">110</span>
                        </a>
                        <span className="sd">{"    "}the API.</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-111">
                        <a href="#get_run_logger-111">
                            <span className="linenos">111</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-112">
                        <a href="#get_run_logger-112">
                            <span className="linenos">112</span>
                        </a>
                        <span className="sd">{"    "}Arguments:</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-113">
                        <a href="#get_run_logger-113">
                            <span className="linenos">113</span>
                        </a>
                        <span className="sd">
                            {"        "}context: A specific context may be provided as an
                            override. By default, the
                        </span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-114">
                        <a href="#get_run_logger-114">
                            <span className="linenos">114</span>
                        </a>
                        <span className="sd">
                            {"            "}context is inferred from global state and this
                            should not be needed.
                        </span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-115">
                        <a href="#get_run_logger-115">
                            <span className="linenos">115</span>
                        </a>
                        <span className="sd">
                            {"        "}**kwargs: Additional keyword arguments will be
                            attached to the log records in
                        </span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-116">
                        <a href="#get_run_logger-116">
                            <span className="linenos">116</span>
                        </a>
                        <span className="sd">
                            {"            "}addition to the run metadata
                        </span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-117">
                        <a href="#get_run_logger-117">
                            <span className="linenos">117</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-118">
                        <a href="#get_run_logger-118">
                            <span className="linenos">118</span>
                        </a>
                        <span className="sd">{"    "}Raises:</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-119">
                        <a href="#get_run_logger-119">
                            <span className="linenos">119</span>
                        </a>
                        <span className="sd">
                            {"        "}RuntimeError: If no context can be found
                        </span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-120">
                        <a href="#get_run_logger-120">
                            <span className="linenos">120</span>
                        </a>
                        <span className="sd">{"    "}"""</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-121">
                        <a href="#get_run_logger-121">
                            <span className="linenos">121</span>
                        </a>
                        {"    "}
                        <span className="c1"># Check for existing contexts</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-122">
                        <a href="#get_run_logger-122">
                            <span className="linenos">122</span>
                        </a>
                        {"    "}
                        <span className="n">task_run_context</span>{" "}
                        <span className="o">=</span> <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">context</span>
                        <span className="o">.</span>
                        <span className="n">TaskRunContext</span>
                        <span className="o">.</span>
                        <span className="n">get</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-123">
                        <a href="#get_run_logger-123">
                            <span className="linenos">123</span>
                        </a>
                        {"    "}
                        <span className="n">flow_run_context</span>{" "}
                        <span className="o">=</span> <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">context</span>
                        <span className="o">.</span>
                        <span className="n">FlowRunContext</span>
                        <span className="o">.</span>
                        <span className="n">get</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-124">
                        <a href="#get_run_logger-124">
                            <span className="linenos">124</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-125">
                        <a href="#get_run_logger-125">
                            <span className="linenos">125</span>
                        </a>
                        {"    "}
                        <span className="c1"># Apply the context override</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-126">
                        <a href="#get_run_logger-126">
                            <span className="linenos">126</span>
                        </a>
                        {"    "}
                        <span className="k">if</span> <span className="n">context</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-127">
                        <a href="#get_run_logger-127">
                            <span className="linenos">127</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="nb">isinstance</span>
                        <span className="p">(</span>
                        <span className="n">context</span>
                        <span className="p">,</span> <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">context</span>
                        <span className="o">.</span>
                        <span className="n">FlowRunContext</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-128">
                        <a href="#get_run_logger-128">
                            <span className="linenos">128</span>
                        </a>
                        {"            "}
                        <span className="n">flow_run_context</span>{" "}
                        <span className="o">=</span> <span className="n">context</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-129">
                        <a href="#get_run_logger-129">
                            <span className="linenos">129</span>
                        </a>
                        {"        "}
                        <span className="k">elif</span>{" "}
                        <span className="nb">isinstance</span>
                        <span className="p">(</span>
                        <span className="n">context</span>
                        <span className="p">,</span> <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">context</span>
                        <span className="o">.</span>
                        <span className="n">TaskRunContext</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-130">
                        <a href="#get_run_logger-130">
                            <span className="linenos">130</span>
                        </a>
                        {"            "}
                        <span className="n">task_run_context</span>{" "}
                        <span className="o">=</span> <span className="n">context</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-131">
                        <a href="#get_run_logger-131">
                            <span className="linenos">131</span>
                        </a>
                        {"        "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-132">
                        <a href="#get_run_logger-132">
                            <span className="linenos">132</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">TypeError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-133">
                        <a href="#get_run_logger-133">
                            <span className="linenos">133</span>
                        </a>
                        {"                "}
                        <span className="sa">f</span>
                        <span className="s2">"Received unexpected type </span>
                        <span className="si">{"{"}</span>
                        <span className="nb">type</span>
                        <span className="p">(</span>
                        <span className="n">context</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="vm">__name__</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2"> for context. "</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-134">
                        <a href="#get_run_logger-134">
                            <span className="linenos">134</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            "Expected one of 'None', 'FlowRunContext', or 'TaskRunContext'."
                        </span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-135">
                        <a href="#get_run_logger-135">
                            <span className="linenos">135</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-136">
                        <a href="#get_run_logger-136">
                            <span className="linenos">136</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-137">
                        <a href="#get_run_logger-137">
                            <span className="linenos">137</span>
                        </a>
                        {"    "}
                        <span className="c1">
                            # Determine if this is a task or flow run logger
                        </span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-138">
                        <a href="#get_run_logger-138">
                            <span className="linenos">138</span>
                        </a>
                        {"    "}
                        <span className="k">if</span>{" "}
                        <span className="n">task_run_context</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-139">
                        <a href="#get_run_logger-139">
                            <span className="linenos">139</span>
                        </a>
                        {"        "}
                        <span className="n">logger</span> <span className="o">=</span>{" "}
                        <span className="n">task_run_logger</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-140">
                        <a href="#get_run_logger-140">
                            <span className="linenos">140</span>
                        </a>
                        {"            "}
                        <span className="n">task_run</span>
                        <span className="o">=</span>
                        <span className="n">task_run_context</span>
                        <span className="o">.</span>
                        <span className="n">task_run</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-141">
                        <a href="#get_run_logger-141">
                            <span className="linenos">141</span>
                        </a>
                        {"            "}
                        <span className="n">task</span>
                        <span className="o">=</span>
                        <span className="n">task_run_context</span>
                        <span className="o">.</span>
                        <span className="n">task</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-142">
                        <a href="#get_run_logger-142">
                            <span className="linenos">142</span>
                        </a>
                        {"            "}
                        <span className="n">flow_run</span>
                        <span className="o">=</span>
                        <span className="n">flow_run_context</span>
                        <span className="o">.</span>
                        <span className="n">
                            flow_run
                        </span> <span className="k">if</span>{" "}
                        <span className="n">flow_run_context</span>{" "}
                        <span className="k">else</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-143">
                        <a href="#get_run_logger-143">
                            <span className="linenos">143</span>
                        </a>
                        {"            "}
                        <span className="n">flow</span>
                        <span className="o">=</span>
                        <span className="n">flow_run_context</span>
                        <span className="o">.</span>
                        <span className="n">flow</span> <span className="k">if</span>{" "}
                        <span className="n">flow_run_context</span>{" "}
                        <span className="k">else</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-144">
                        <a href="#get_run_logger-144">
                            <span className="linenos">144</span>
                        </a>
                        {"            "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-145">
                        <a href="#get_run_logger-145">
                            <span className="linenos">145</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-146">
                        <a href="#get_run_logger-146">
                            <span className="linenos">146</span>
                        </a>
                        {"    "}
                        <span className="k">elif</span>{" "}
                        <span className="n">flow_run_context</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-147">
                        <a href="#get_run_logger-147">
                            <span className="linenos">147</span>
                        </a>
                        {"        "}
                        <span className="n">logger</span> <span className="o">=</span>{" "}
                        <span className="n">flow_run_logger</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-148">
                        <a href="#get_run_logger-148">
                            <span className="linenos">148</span>
                        </a>
                        {"            "}
                        <span className="n">flow_run</span>
                        <span className="o">=</span>
                        <span className="n">flow_run_context</span>
                        <span className="o">.</span>
                        <span className="n">flow_run</span>
                        <span className="p">,</span> <span className="n">flow</span>
                        <span className="o">=</span>
                        <span className="n">flow_run_context</span>
                        <span className="o">.</span>
                        <span className="n">flow</span>
                        <span className="p">,</span> <span className="o">**</span>
                        <span className="n">kwargs</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-149">
                        <a href="#get_run_logger-149">
                            <span className="linenos">149</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-150">
                        <a href="#get_run_logger-150">
                            <span className="linenos">150</span>
                        </a>
                        {"    "}
                        <span className="k">elif</span> <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-151">
                        <a href="#get_run_logger-151">
                            <span className="linenos">151</span>
                        </a>
                        {"        "}
                        <span className="n">get_logger</span>
                        <span className="p">(</span>
                        <span className="s2">"prefect.flow_run"</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="n">disabled</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-152">
                        <a href="#get_run_logger-152">
                            <span className="linenos">152</span>
                        </a>
                        {"        "}
                        <span className="ow">and</span>{" "}
                        <span className="n">get_logger</span>
                        <span className="p">(</span>
                        <span className="s2">"prefect.task_run"</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="n">disabled</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-153">
                        <a href="#get_run_logger-153">
                            <span className="linenos">153</span>
                        </a>
                        {"    "}
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-154">
                        <a href="#get_run_logger-154">
                            <span className="linenos">154</span>
                        </a>
                        {"        "}
                        <span className="n">logger</span> <span className="o">=</span>{" "}
                        <span className="n">logging</span>
                        <span className="o">.</span>
                        <span className="n">getLogger</span>
                        <span className="p">(</span>
                        <span className="s2">"null"</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-155">
                        <a href="#get_run_logger-155">
                            <span className="linenos">155</span>
                        </a>
                        {"    "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-156">
                        <a href="#get_run_logger-156">
                            <span className="linenos">156</span>
                        </a>
                        {"        "}
                        <span className="k">raise</span>{" "}
                        <span className="n">MissingContextError</span>
                        <span className="p">(</span>
                        <span className="s2">
                            "There is no active flow or task run context."
                        </span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-157">
                        <a href="#get_run_logger-157">
                            <span className="linenos">157</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="get_run_logger-158">
                        <a href="#get_run_logger-158">
                            <span className="linenos">158</span>
                        </a>
                        {"    "}
                        <span className="k">return</span> <span className="n">logger</span>
                        {"\n"}
                    </span>
                </pre>
            </div>
            <div className="docstring">
                <p>Get a Prefect logger for the current task run or flow run.</p>
                <p>
                    The logger will be named either <code>prefect.task_runs</code> or{" "}
                    <code>prefect.flow_runs</code>. Contextual data about the run will be
                    attached to the log records.
                </p>
                <p>
                    These loggers are connected to the <code>APILogHandler</code> by
                    default to send log records to the API.
                </p>
                <p>
                    Arguments: context: A specific context may be provided as an override.
                    By default, the context is inferred from global state and this should
                    not be needed. **kwargs: Additional keyword arguments will be attached
                    to the log records in addition to the run metadata
                </p>
                <p>Raises: RuntimeError: If no context can be found</p>
            </div>
        </section>
        <section id="Manifest">
            <input
                id="Manifest-view-source"
                className="view-source-toggle-state"
                type="checkbox"
                aria-hidden="true"
                tabIndex={-1}
            />
            <div className="attr class">
                <span className="def">class</span>
                <span className="name">Manifest</span>
                <wbr />(
                <span className="base">
                    prefect._internal.pydantic._compat.BaseModel
                </span>
                ):
                <label className="view-source-button" htmlFor="Manifest-view-source">
                    <span>View Source</span>
                </label>
            </div>
            <a className="headerlink" href="#Manifest" />
            <div className="pdoc-code codehilite">
                <pre>
                    <span />
                    <span id="Manifest-12">
                        <a href="#Manifest-12">
                            <span className="linenos">12</span>
                        </a>
                        <span className="k">class</span>{" "}
                        <span className="nc">Manifest</span>
                        <span className="p">(</span>
                        <span className="n">BaseModel</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Manifest-13">
                        <a href="#Manifest-13">
                            <span className="linenos">13</span>
                        </a>
                        <span className="w">{"    "}</span>
                        <span className="sd">"""A JSON representation of a flow."""</span>
                        {"\n"}
                    </span>
                    <span id="Manifest-14">
                        <a href="#Manifest-14">
                            <span className="linenos">14</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Manifest-15">
                        <a href="#Manifest-15">
                            <span className="linenos">15</span>
                        </a>
                        {"    "}
                        <span className="n">flow_name</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="n">Field</span>
                        <span className="p">(</span>
                        <span className="n">default</span>
                        <span className="o">=...</span>
                        <span className="p">,</span> <span className="n">description</span>
                        <span className="o">=</span>
                        <span className="s2">"The name of the flow."</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Manifest-16">
                        <a href="#Manifest-16">
                            <span className="linenos">16</span>
                        </a>
                        {"    "}
                        <span className="n">import_path</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="n">Field</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Manifest-17">
                        <a href="#Manifest-17">
                            <span className="linenos">17</span>
                        </a>
                        {"        "}
                        <span className="n">default</span>
                        <span className="o">=...</span>
                        <span className="p">,</span> <span className="n">description</span>
                        <span className="o">=</span>
                        <span className="s2">"The relative import path for the flow."</span>
                        {"\n"}
                    </span>
                    <span id="Manifest-18">
                        <a href="#Manifest-18">
                            <span className="linenos">18</span>
                        </a>
                        {"    "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Manifest-19">
                        <a href="#Manifest-19">
                            <span className="linenos">19</span>
                        </a>
                        {"    "}
                        <span className="n">parameter_openapi_schema</span>
                        <span className="p">:</span>{" "}
                        <span className="n">ParameterSchema</span>{" "}
                        <span className="o">=</span> <span className="n">Field</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Manifest-20">
                        <a href="#Manifest-20">
                            <span className="linenos">20</span>
                        </a>
                        {"        "}
                        <span className="n">default</span>
                        <span className="o">=...</span>
                        <span className="p">,</span> <span className="n">description</span>
                        <span className="o">=</span>
                        <span className="s2">
                            "The OpenAPI schema of the flow's parameters."
                        </span>
                        {"\n"}
                    </span>
                    <span id="Manifest-21">
                        <a href="#Manifest-21">
                            <span className="linenos">21</span>
                        </a>
                        {"    "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                </pre>
            </div>
            <div className="docstring">
                <p>A JSON representation of a flow.</p>
            </div>
            <div id="Manifest.model_config" className="classattr">
                <div className="attr variable">
                    <span className="name">model_config</span>
                    <span className="annotation">
                        : ClassVar[pydantic.v1.config.ConfigDict]
                    </span>
                </div>
                <a className="headerlink" href="#Manifest.model_config" />
            </div>
            <div id="Manifest.flow_name" className="classattr">
                <div className="attr variable">
                    <span className="name">flow_name</span>
                    <span className="annotation">: str</span>
                </div>
                <a className="headerlink" href="#Manifest.flow_name" />
            </div>
            <div id="Manifest.import_path" className="classattr">
                <div className="attr variable">
                    <span className="name">import_path</span>
                    <span className="annotation">: str</span>
                </div>
                <a className="headerlink" href="#Manifest.import_path" />
            </div>
            <div id="Manifest.parameter_openapi_schema" className="classattr">
                <div className="attr variable">
                    <span className="name">parameter_openapi_schema</span>
                    <span className="annotation">
                        : prefect.utilities.callables.ParameterSchema
                    </span>
                </div>
                <a className="headerlink" href="#Manifest.parameter_openapi_schema" />
            </div>
            <div id="Manifest.model_fields" className="classattr">
                <div className="attr variable">
                    <span className="name">model_fields</span>
                    <span className="annotation">
                        : ClassVar[Dict[str, pydantic.v1.fields.FieldInfo]]
                    </span>{" "}
                    =
                    <input
                        id="Manifest.model_fields-view-value"
                        className="view-value-toggle-state"
                        type="checkbox"
                        aria-hidden="true"
                        tabIndex={-1}
                    />
                    <label
                        className="view-value-button pdoc-button"
                        htmlFor="Manifest.model_fields-view-value"
                    />
                    <span className="default_value">
                        {"{"}'flow_name': ModelField(name='flow_name', type=str,
                        required=True), 'import_path': ModelField(name='import_path',
                        type=str, required=True), 'parameter_openapi_schema':
                        ModelField(name='parameter_openapi_schema', type=ParameterSchema,
                        required=True){"}"}
                    </span>
                </div>
                <a className="headerlink" href="#Manifest.model_fields" />
            </div>
            <div className="inherited">
                <h5>Inherited Members</h5>
                <dl>
                    <div>
                        <dt>pydantic.v1.main.BaseModel</dt>
                        <dd id="Manifest.__init__" className="function">
                            BaseModel
                        </dd>
                        <dd id="Manifest.Config" className="variable">
                            Config
                        </dd>
                        <dd id="Manifest.dict" className="function">
                            dict
                        </dd>
                        <dd id="Manifest.json" className="function">
                            json
                        </dd>
                        <dd id="Manifest.parse_obj" className="function">
                            parse_obj
                        </dd>
                        <dd id="Manifest.parse_raw" className="function">
                            parse_raw
                        </dd>
                        <dd id="Manifest.parse_file" className="function">
                            parse_file
                        </dd>
                        <dd id="Manifest.from_orm" className="function">
                            from_orm
                        </dd>
                        <dd id="Manifest.construct" className="function">
                            construct
                        </dd>
                        <dd id="Manifest.copy" className="function">
                            copy
                        </dd>
                        <dd id="Manifest.schema" className="function">
                            schema
                        </dd>
                        <dd id="Manifest.schema_json" className="function">
                            schema_json
                        </dd>
                        <dd id="Manifest.validate" className="function">
                            validate
                        </dd>
                        <dd id="Manifest.update_forward_refs" className="function">
                            update_forward_refs
                        </dd>
                    </div>
                    <div>
                        <dt>
                            prefect._internal.pydantic.utilities.model_construct.ModelConstructMixin
                        </dt>
                        <dd id="Manifest.model_construct" className="function">
                            model_construct
                        </dd>
                    </div>
                    <div>
                        <dt>
                            prefect._internal.pydantic.utilities.model_copy.ModelCopyMixin
                        </dt>
                        <dd id="Manifest.model_copy" className="function">
                            model_copy
                        </dd>
                    </div>
                    <div>
                        <dt>
                            prefect._internal.pydantic.utilities.model_dump.ModelDumpMixin
                        </dt>
                        <dd id="Manifest.model_dump" className="function">
                            model_dump
                        </dd>
                    </div>
                    <div>
                        <dt>
                            prefect._internal.pydantic.utilities.model_dump_json.ModelDumpJsonMixin
                        </dt>
                        <dd id="Manifest.model_dump_json" className="function">
                            model_dump_json
                        </dd>
                    </div>
                    <div>
                        <dt>
                            prefect._internal.pydantic.utilities.model_json_schema.ModelJsonSchemaMixin
                        </dt>
                        <dd id="Manifest.model_json_schema" className="function">
                            model_json_schema
                        </dd>
                    </div>
                    <div>
                        <dt>
                            prefect._internal.pydantic.utilities.model_validate.ModelValidateMixin
                        </dt>
                        <dd id="Manifest.model_validate" className="function">
                            model_validate
                        </dd>
                    </div>
                    <div>
                        <dt>
                            prefect._internal.pydantic.utilities.model_validate_json.ModelValidateJsonMixin
                        </dt>
                        <dd id="Manifest.model_validate_json" className="function">
                            model_validate_json
                        </dd>
                    </div>
                    <div>
                        <dt>
                            prefect._internal.pydantic.utilities.model_fields_set.ModelFieldsSetMixin
                        </dt>
                        <dd id="Manifest.model_fields_set" className="variable">
                            model_fields_set
                        </dd>
                    </div>
                </dl>
            </div>
        </section>
        <section id="State">
            <input
                id="State-view-source"
                className="view-source-toggle-state"
                type="checkbox"
                aria-hidden="true"
                tabIndex={-1}
            />
            <div className="attr class">
                <span className="def">class</span>
                <span className="name">State</span>
                <wbr />(
                <span className="base">
                    prefect._internal.schemas.bases.ObjectBaseModel
                </span>
                , <span className="base">typing.Generic[~R]</span>):
                <label className="view-source-button" htmlFor="State-view-source">
                    <span>View Source</span>
                </label>
            </div>
            <a className="headerlink" href="#State" />
            <div className="pdoc-code codehilite">
                <pre>
                    <span />
                    <span id="State-143">
                        <a href="#State-143">
                            <span className="linenos">143</span>
                        </a>
                        <span className="k">class</span> <span className="nc">State</span>
                        <span className="p">(</span>
                        <span className="n">ObjectBaseModel</span>
                        <span className="p">,</span> <span className="n">Generic</span>
                        <span className="p">[</span>
                        <span className="n">R</span>
                        <span className="p">]):</span>
                        {"\n"}
                    </span>
                    <span id="State-144">
                        <a href="#State-144">
                            <span className="linenos">144</span>
                        </a>
                        <span className="w">{"    "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="State-145">
                        <a href="#State-145">
                            <span className="linenos">145</span>
                        </a>
                        <span className="sd">{"    "}The state of a run.</span>
                        {"\n"}
                    </span>
                    <span id="State-146">
                        <a href="#State-146">
                            <span className="linenos">146</span>
                        </a>
                        <span className="sd">{"    "}"""</span>
                        {"\n"}
                    </span>
                    <span id="State-147">
                        <a href="#State-147">
                            <span className="linenos">147</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-148">
                        <a href="#State-148">
                            <span className="linenos">148</span>
                        </a>
                        {"    "}
                        <span className="nb">type</span>
                        <span className="p">:</span> <span className="n">StateType</span>
                        {"\n"}
                    </span>
                    <span id="State-149">
                        <a href="#State-149">
                            <span className="linenos">149</span>
                        </a>
                        {"    "}
                        <span className="n">name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">Field</span>
                        <span className="p">(</span>
                        <span className="n">default</span>
                        <span className="o">=</span>
                        <span className="kc">None</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="State-150">
                        <a href="#State-150">
                            <span className="linenos">150</span>
                        </a>
                        {"    "}
                        <span className="n">timestamp</span>
                        <span className="p">
                            :
                        </span> <span className="n">DateTimeTZ</span>{" "}
                        <span className="o">=</span> <span className="n">Field</span>
                        <span className="p">(</span>
                        <span className="n">default_factory</span>
                        <span className="o">=</span>
                        <span className="k">lambda</span>
                        <span className="p">:</span> <span className="n">pendulum</span>
                        <span className="o">.</span>
                        <span className="n">now</span>
                        <span className="p">(</span>
                        <span className="s2">"UTC"</span>
                        <span className="p">))</span>
                        {"\n"}
                    </span>
                    <span id="State-151">
                        <a href="#State-151">
                            <span className="linenos">151</span>
                        </a>
                        {"    "}
                        <span className="n">message</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">Field</span>
                        <span className="p">(</span>
                        <span className="n">default</span>
                        <span className="o">=</span>
                        <span className="kc">None</span>
                        <span className="p">,</span> <span className="n">examples</span>
                        <span className="o">=</span>
                        <span className="p">[</span>
                        <span className="s2">"Run started"</span>
                        <span className="p">])</span>
                        {"\n"}
                    </span>
                    <span id="State-152">
                        <a href="#State-152">
                            <span className="linenos">152</span>
                        </a>
                        {"    "}
                        <span className="n">state_details</span>
                        <span className="p">
                            :
                        </span> <span className="n">StateDetails</span>{" "}
                        <span className="o">=</span> <span className="n">Field</span>
                        <span className="p">(</span>
                        <span className="n">default_factory</span>
                        <span className="o">=</span>
                        <span className="n">StateDetails</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="State-153">
                        <a href="#State-153">
                            <span className="linenos">153</span>
                        </a>
                        {"    "}
                        <span className="n">data</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="s2">"BaseResult[R]"</span>
                        <span className="p">,</span>{" "}
                        <span className="s2">"DataDocument[R]"</span>
                        <span className="p">,</span> <span className="n">Any</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">Field</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="State-154">
                        <a href="#State-154">
                            <span className="linenos">154</span>
                        </a>
                        {"        "}
                        <span className="n">default</span>
                        <span className="o">=</span>
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="State-155">
                        <a href="#State-155">
                            <span className="linenos">155</span>
                        </a>
                        {"    "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="State-156">
                        <a href="#State-156">
                            <span className="linenos">156</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-157">
                        <a href="#State-157">
                            <span className="linenos">157</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="State-158">
                        <a href="#State-158">
                            <span className="linenos">158</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">result</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">:</span> <span className="s2">"State[R]"</span>
                        <span className="p">,</span>{" "}
                        <span className="n">raise_on_failure</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">R</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-159">
                        <a href="#State-159">
                            <span className="linenos">159</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="State-160">
                        <a href="#State-160">
                            <span className="linenos">160</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-161">
                        <a href="#State-161">
                            <span className="linenos">161</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="State-162">
                        <a href="#State-162">
                            <span className="linenos">162</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">result</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">:</span> <span className="s2">"State[R]"</span>
                        <span className="p">,</span>{" "}
                        <span className="n">raise_on_failure</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">R</span>
                        <span className="p">,</span> <span className="ne">Exception</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="State-163">
                        <a href="#State-163">
                            <span className="linenos">163</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="State-164">
                        <a href="#State-164">
                            <span className="linenos">164</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-165">
                        <a href="#State-165">
                            <span className="linenos">165</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">result</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="State-166">
                        <a href="#State-166">
                            <span className="linenos">166</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">,</span>{" "}
                        <span className="n">raise_on_failure</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">,</span> <span className="n">fetch</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        {"\n"}
                    </span>
                    <span id="State-167">
                        <a href="#State-167">
                            <span className="linenos">167</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">R</span>
                        <span className="p">,</span> <span className="ne">Exception</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="State-168">
                        <a href="#State-168">
                            <span className="linenos">168</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="State-169">
                        <a href="#State-169">
                            <span className="linenos">169</span>
                        </a>
                        <span className="sd">
                            {"        "}Retrieve the result attached to this state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-170">
                        <a href="#State-170">
                            <span className="linenos">170</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-171">
                        <a href="#State-171">
                            <span className="linenos">171</span>
                        </a>
                        <span className="sd">{"        "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="State-172">
                        <a href="#State-172">
                            <span className="linenos">172</span>
                        </a>
                        <span className="sd">
                            {"            "}raise_on_failure: a boolean specifying whether to
                            raise an exception
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-173">
                        <a href="#State-173">
                            <span className="linenos">173</span>
                        </a>
                        <span className="sd">
                            {"                "}if the state is of type `FAILED` and the
                            underlying data is an exception
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-174">
                        <a href="#State-174">
                            <span className="linenos">174</span>
                        </a>
                        <span className="sd">
                            {"            "}fetch: a boolean specifying whether to resolve
                            references to persisted
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-175">
                        <a href="#State-175">
                            <span className="linenos">175</span>
                        </a>
                        <span className="sd">
                            {"                "}results into data. For synchronous users, this
                            defaults to `True`.
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-176">
                        <a href="#State-176">
                            <span className="linenos">176</span>
                        </a>
                        <span className="sd">
                            {"                "}For asynchronous users, this defaults to
                            `False` for backwards
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-177">
                        <a href="#State-177">
                            <span className="linenos">177</span>
                        </a>
                        <span className="sd">{"                "}compatibility.</span>
                        {"\n"}
                    </span>
                    <span id="State-178">
                        <a href="#State-178">
                            <span className="linenos">178</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-179">
                        <a href="#State-179">
                            <span className="linenos">179</span>
                        </a>
                        <span className="sd">{"        "}Raises:</span>
                        {"\n"}
                    </span>
                    <span id="State-180">
                        <a href="#State-180">
                            <span className="linenos">180</span>
                        </a>
                        <span className="sd">
                            {"            "}TypeError: If the state is failed but the result
                            is not an exception.
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-181">
                        <a href="#State-181">
                            <span className="linenos">181</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-182">
                        <a href="#State-182">
                            <span className="linenos">182</span>
                        </a>
                        <span className="sd">{"        "}Returns:</span>
                        {"\n"}
                    </span>
                    <span id="State-183">
                        <a href="#State-183">
                            <span className="linenos">183</span>
                        </a>
                        <span className="sd">{"            "}The result of the run</span>
                        {"\n"}
                    </span>
                    <span id="State-184">
                        <a href="#State-184">
                            <span className="linenos">184</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-185">
                        <a href="#State-185">
                            <span className="linenos">185</span>
                        </a>
                        <span className="sd">{"        "}Examples:</span>
                        {"\n"}
                    </span>
                    <span id="State-186">
                        <a href="#State-186">
                            <span className="linenos">186</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; from prefect import flow, task
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-187">
                        <a href="#State-187">
                            <span className="linenos">187</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                        {"\n"}
                    </span>
                    <span id="State-188">
                        <a href="#State-188">
                            <span className="linenos">188</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_task(x):
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-189">
                        <a href="#State-189">
                            <span className="linenos">189</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}return x
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-190">
                        <a href="#State-190">
                            <span className="linenos">190</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-191">
                        <a href="#State-191">
                            <span className="linenos">191</span>
                        </a>
                        <span className="sd">
                            {"            "}Get the result from a task future in a flow
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-192">
                        <a href="#State-192">
                            <span className="linenos">192</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-193">
                        <a href="#State-193">
                            <span className="linenos">193</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="State-194">
                        <a href="#State-194">
                            <span className="linenos">194</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-195">
                        <a href="#State-195">
                            <span className="linenos">195</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}future = my_task("hello")
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-196">
                        <a href="#State-196">
                            <span className="linenos">196</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}state = future.wait()
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-197">
                        <a href="#State-197">
                            <span className="linenos">197</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}result = state.result()
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-198">
                        <a href="#State-198">
                            <span className="linenos">198</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}print(result)
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-199">
                        <a href="#State-199">
                            <span className="linenos">199</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; my_flow()</span>
                        {"\n"}
                    </span>
                    <span id="State-200">
                        <a href="#State-200">
                            <span className="linenos">200</span>
                        </a>
                        <span className="sd">{"            "}hello</span>
                        {"\n"}
                    </span>
                    <span id="State-201">
                        <a href="#State-201">
                            <span className="linenos">201</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-202">
                        <a href="#State-202">
                            <span className="linenos">202</span>
                        </a>
                        <span className="sd">
                            {"            "}Get the result from a flow state
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-203">
                        <a href="#State-203">
                            <span className="linenos">203</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-204">
                        <a href="#State-204">
                            <span className="linenos">204</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="State-205">
                        <a href="#State-205">
                            <span className="linenos">205</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-206">
                        <a href="#State-206">
                            <span className="linenos">206</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}return "hello"
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-207">
                        <a href="#State-207">
                            <span className="linenos">207</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; my_flow(return_state=True).result()
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-208">
                        <a href="#State-208">
                            <span className="linenos">208</span>
                        </a>
                        <span className="sd">{"            "}hello</span>
                        {"\n"}
                    </span>
                    <span id="State-209">
                        <a href="#State-209">
                            <span className="linenos">209</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-210">
                        <a href="#State-210">
                            <span className="linenos">210</span>
                        </a>
                        <span className="sd">
                            {"            "}Get the result from a failed state
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-211">
                        <a href="#State-211">
                            <span className="linenos">211</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-212">
                        <a href="#State-212">
                            <span className="linenos">212</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="State-213">
                        <a href="#State-213">
                            <span className="linenos">213</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-214">
                        <a href="#State-214">
                            <span className="linenos">214</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}raise ValueError("oh no!")
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-215">
                        <a href="#State-215">
                            <span className="linenos">215</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; state = my_flow(return_state=True)
                            {"  "}# Error is wrapped in FAILED state
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-216">
                        <a href="#State-216">
                            <span className="linenos">216</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; state.result(){"  "}# Raises
                            `ValueError`
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-217">
                        <a href="#State-217">
                            <span className="linenos">217</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-218">
                        <a href="#State-218">
                            <span className="linenos">218</span>
                        </a>
                        <span className="sd">
                            {"            "}Get the result from a failed state without
                            erroring
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-219">
                        <a href="#State-219">
                            <span className="linenos">219</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-220">
                        <a href="#State-220">
                            <span className="linenos">220</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="State-221">
                        <a href="#State-221">
                            <span className="linenos">221</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-222">
                        <a href="#State-222">
                            <span className="linenos">222</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}raise ValueError("oh no!")
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-223">
                        <a href="#State-223">
                            <span className="linenos">223</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; state = my_flow(return_state=True)
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-224">
                        <a href="#State-224">
                            <span className="linenos">224</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; result =
                            state.result(raise_on_failure=False)
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-225">
                        <a href="#State-225">
                            <span className="linenos">225</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; print(result)
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-226">
                        <a href="#State-226">
                            <span className="linenos">226</span>
                        </a>
                        <span className="sd">{"            "}ValueError("oh no!")</span>
                        {"\n"}
                    </span>
                    <span id="State-227">
                        <a href="#State-227">
                            <span className="linenos">227</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-228">
                        <a href="#State-228">
                            <span className="linenos">228</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-229">
                        <a href="#State-229">
                            <span className="linenos">229</span>
                        </a>
                        <span className="sd">
                            {"            "}Get the result from a flow state in an async
                            context
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-230">
                        <a href="#State-230">
                            <span className="linenos">230</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-231">
                        <a href="#State-231">
                            <span className="linenos">231</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="State-232">
                        <a href="#State-232">
                            <span className="linenos">232</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; async def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-233">
                        <a href="#State-233">
                            <span className="linenos">233</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}return "hello"
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-234">
                        <a href="#State-234">
                            <span className="linenos">234</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; state = await
                            my_flow(return_state=True)
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-235">
                        <a href="#State-235">
                            <span className="linenos">235</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; await state.result()
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-236">
                        <a href="#State-236">
                            <span className="linenos">236</span>
                        </a>
                        <span className="sd">{"            "}hello</span>
                        {"\n"}
                    </span>
                    <span id="State-237">
                        <a href="#State-237">
                            <span className="linenos">237</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="State-238">
                        <a href="#State-238">
                            <span className="linenos">238</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.states</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">get_state_result</span>
                        {"\n"}
                    </span>
                    <span id="State-239">
                        <a href="#State-239">
                            <span className="linenos">239</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-240">
                        <a href="#State-240">
                            <span className="linenos">240</span>
                        </a>
                        {"        "}
                        <span className="k">return</span>{" "}
                        <span className="n">get_state_result</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">,</span>{" "}
                        <span className="n">raise_on_failure</span>
                        <span className="o">=</span>
                        <span className="n">raise_on_failure</span>
                        <span className="p">,</span> <span className="n">fetch</span>
                        <span className="o">=</span>
                        <span className="n">fetch</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="State-241">
                        <a href="#State-241">
                            <span className="linenos">241</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-242">
                        <a href="#State-242">
                            <span className="linenos">242</span>
                        </a>
                        {"    "}
                        <span className="k">def</span>{" "}
                        <span className="nf">to_state_create</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="State-243">
                        <a href="#State-243">
                            <span className="linenos">243</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="State-244">
                        <a href="#State-244">
                            <span className="linenos">244</span>
                        </a>
                        <span className="sd">
                            {"        "}Convert this state to a `StateCreate` type which can
                            be used to set the state of
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-245">
                        <a href="#State-245">
                            <span className="linenos">245</span>
                        </a>
                        <span className="sd">{"        "}a run in the API.</span>
                        {"\n"}
                    </span>
                    <span id="State-246">
                        <a href="#State-246">
                            <span className="linenos">246</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-247">
                        <a href="#State-247">
                            <span className="linenos">247</span>
                        </a>
                        <span className="sd">
                            {"        "}This method will drop this state's `data` if it is not
                            a result type. Only
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-248">
                        <a href="#State-248">
                            <span className="linenos">248</span>
                        </a>
                        <span className="sd">
                            {"        "}results should be sent to the API. Other data is only
                            available locally.
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-249">
                        <a href="#State-249">
                            <span className="linenos">249</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="State-250">
                        <a href="#State-250">
                            <span className="linenos">250</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.client.schemas.actions</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">StateCreate</span>
                        {"\n"}
                    </span>
                    <span id="State-251">
                        <a href="#State-251">
                            <span className="linenos">251</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.results</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">BaseResult</span>
                        {"\n"}
                    </span>
                    <span id="State-252">
                        <a href="#State-252">
                            <span className="linenos">252</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-253">
                        <a href="#State-253">
                            <span className="linenos">253</span>
                        </a>
                        {"        "}
                        <span className="k">return</span>{" "}
                        <span className="n">StateCreate</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="State-254">
                        <a href="#State-254">
                            <span className="linenos">254</span>
                        </a>
                        {"            "}
                        <span className="nb">type</span>
                        <span className="o">=</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">type</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="State-255">
                        <a href="#State-255">
                            <span className="linenos">255</span>
                        </a>
                        {"            "}
                        <span className="n">name</span>
                        <span className="o">=</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="State-256">
                        <a href="#State-256">
                            <span className="linenos">256</span>
                        </a>
                        {"            "}
                        <span className="n">message</span>
                        <span className="o">=</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">message</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="State-257">
                        <a href="#State-257">
                            <span className="linenos">257</span>
                        </a>
                        {"            "}
                        <span className="n">data</span>
                        <span className="o">=</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">data</span> <span className="k">if</span>{" "}
                        <span className="nb">isinstance</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">data</span>
                        <span className="p">,</span> <span className="n">BaseResult</span>
                        <span className="p">)</span> <span className="k">else</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="State-258">
                        <a href="#State-258">
                            <span className="linenos">258</span>
                        </a>
                        {"            "}
                        <span className="n">state_details</span>
                        <span className="o">=</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">state_details</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="State-259">
                        <a href="#State-259">
                            <span className="linenos">259</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="State-260">
                        <a href="#State-260">
                            <span className="linenos">260</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-261">
                        <a href="#State-261">
                            <span className="linenos">261</span>
                        </a>
                        {"    "}
                        <span className="nd">@validator</span>
                        <span className="p">(</span>
                        <span className="s2">"name"</span>
                        <span className="p">,</span> <span className="n">always</span>
                        <span className="o">=</span>
                        <span className="kc">True</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="State-262">
                        <a href="#State-262">
                            <span className="linenos">262</span>
                        </a>
                        {"    "}
                        <span className="k">def</span>{" "}
                        <span className="nf">default_name_from_type</span>
                        <span className="p">(</span>
                        <span className="bp">cls</span>
                        <span className="p">,</span> <span className="n">v</span>
                        <span className="p">,</span> <span className="o">*</span>
                        <span className="p">,</span> <span className="n">values</span>
                        <span className="p">,</span> <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="State-263">
                        <a href="#State-263">
                            <span className="linenos">263</span>
                        </a>
                        {"        "}
                        <span className="k">return</span>{" "}
                        <span className="n">get_or_create_state_name</span>
                        <span className="p">(</span>
                        <span className="n">v</span>
                        <span className="p">,</span> <span className="n">values</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="State-264">
                        <a href="#State-264">
                            <span className="linenos">264</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-265">
                        <a href="#State-265">
                            <span className="linenos">265</span>
                        </a>
                        {"    "}
                        <span className="nd">@root_validator</span>
                        {"\n"}
                    </span>
                    <span id="State-266">
                        <a href="#State-266">
                            <span className="linenos">266</span>
                        </a>
                        {"    "}
                        <span className="k">def</span>{" "}
                        <span className="nf">default_scheduled_start_time</span>
                        <span className="p">(</span>
                        <span className="bp">cls</span>
                        <span className="p">,</span> <span className="n">values</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="State-267">
                        <a href="#State-267">
                            <span className="linenos">267</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="State-268">
                        <a href="#State-268">
                            <span className="linenos">268</span>
                        </a>
                        <span className="sd">
                            {"        "}TODO: This should throw an error instead of setting a
                            default but is out of
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-269">
                        <a href="#State-269">
                            <span className="linenos">269</span>
                        </a>
                        <span className="sd">
                            {"              "}scope for
                            https://github.com/PrefectHQ/orion/pull/174/ and can be rolled
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-270">
                        <a href="#State-270">
                            <span className="linenos">270</span>
                        </a>
                        <span className="sd">
                            {"              "}into work refactoring state initialization
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-271">
                        <a href="#State-271">
                            <span className="linenos">271</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="State-272">
                        <a href="#State-272">
                            <span className="linenos">272</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="n">values</span>
                        <span className="o">.</span>
                        <span className="n">get</span>
                        <span className="p">(</span>
                        <span className="s2">"type"</span>
                        <span className="p">)</span> <span className="o">==</span>{" "}
                        <span className="n">StateType</span>
                        <span className="o">.</span>
                        <span className="n">SCHEDULED</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-273">
                        <a href="#State-273">
                            <span className="linenos">273</span>
                        </a>
                        {"            "}
                        <span className="n">state_details</span>{" "}
                        <span className="o">=</span> <span className="n">values</span>
                        <span className="o">.</span>
                        <span className="n">setdefault</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="State-274">
                        <a href="#State-274">
                            <span className="linenos">274</span>
                        </a>
                        {"                "}
                        <span className="s2">"state_details"</span>
                        <span className="p">,</span> <span className="bp">cls</span>
                        <span className="o">.</span>
                        <span className="n">__fields__</span>
                        <span className="p">[</span>
                        <span className="s2">"state_details"</span>
                        <span className="p">]</span>
                        <span className="o">.</span>
                        <span className="n">get_default</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="State-275">
                        <a href="#State-275">
                            <span className="linenos">275</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="State-276">
                        <a href="#State-276">
                            <span className="linenos">276</span>
                        </a>
                        {"            "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">state_details</span>
                        <span className="o">.</span>
                        <span className="n">scheduled_time</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-277">
                        <a href="#State-277">
                            <span className="linenos">277</span>
                        </a>
                        {"                "}
                        <span className="n">state_details</span>
                        <span className="o">.</span>
                        <span className="n">scheduled_time</span>{" "}
                        <span className="o">=</span> <span className="n">pendulum</span>
                        <span className="o">.</span>
                        <span className="n">now</span>
                        <span className="p">(</span>
                        <span className="s2">"utc"</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="State-278">
                        <a href="#State-278">
                            <span className="linenos">278</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="n">values</span>
                        {"\n"}
                    </span>
                    <span id="State-279">
                        <a href="#State-279">
                            <span className="linenos">279</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-280">
                        <a href="#State-280">
                            <span className="linenos">280</span>
                        </a>
                        {"    "}
                        <span className="k">def</span>{" "}
                        <span className="nf">is_scheduled</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="nb">bool</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-281">
                        <a href="#State-281">
                            <span className="linenos">281</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">type</span> <span className="o">==</span>{" "}
                        <span className="n">StateType</span>
                        <span className="o">.</span>
                        <span className="n">SCHEDULED</span>
                        {"\n"}
                    </span>
                    <span id="State-282">
                        <a href="#State-282">
                            <span className="linenos">282</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-283">
                        <a href="#State-283">
                            <span className="linenos">283</span>
                        </a>
                        {"    "}
                        <span className="k">def</span>{" "}
                        <span className="nf">is_pending</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="nb">bool</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-284">
                        <a href="#State-284">
                            <span className="linenos">284</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">type</span> <span className="o">==</span>{" "}
                        <span className="n">StateType</span>
                        <span className="o">.</span>
                        <span className="n">PENDING</span>
                        {"\n"}
                    </span>
                    <span id="State-285">
                        <a href="#State-285">
                            <span className="linenos">285</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-286">
                        <a href="#State-286">
                            <span className="linenos">286</span>
                        </a>
                        {"    "}
                        <span className="k">def</span>{" "}
                        <span className="nf">is_running</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="nb">bool</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-287">
                        <a href="#State-287">
                            <span className="linenos">287</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">type</span> <span className="o">==</span>{" "}
                        <span className="n">StateType</span>
                        <span className="o">.</span>
                        <span className="n">RUNNING</span>
                        {"\n"}
                    </span>
                    <span id="State-288">
                        <a href="#State-288">
                            <span className="linenos">288</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-289">
                        <a href="#State-289">
                            <span className="linenos">289</span>
                        </a>
                        {"    "}
                        <span className="k">def</span>{" "}
                        <span className="nf">is_completed</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="nb">bool</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-290">
                        <a href="#State-290">
                            <span className="linenos">290</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">type</span> <span className="o">==</span>{" "}
                        <span className="n">StateType</span>
                        <span className="o">.</span>
                        <span className="n">COMPLETED</span>
                        {"\n"}
                    </span>
                    <span id="State-291">
                        <a href="#State-291">
                            <span className="linenos">291</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-292">
                        <a href="#State-292">
                            <span className="linenos">292</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">is_failed</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="nb">bool</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-293">
                        <a href="#State-293">
                            <span className="linenos">293</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">type</span> <span className="o">==</span>{" "}
                        <span className="n">StateType</span>
                        <span className="o">.</span>
                        <span className="n">FAILED</span>
                        {"\n"}
                    </span>
                    <span id="State-294">
                        <a href="#State-294">
                            <span className="linenos">294</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-295">
                        <a href="#State-295">
                            <span className="linenos">295</span>
                        </a>
                        {"    "}
                        <span className="k">def</span>{" "}
                        <span className="nf">is_crashed</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="nb">bool</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-296">
                        <a href="#State-296">
                            <span className="linenos">296</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">type</span> <span className="o">==</span>{" "}
                        <span className="n">StateType</span>
                        <span className="o">.</span>
                        <span className="n">CRASHED</span>
                        {"\n"}
                    </span>
                    <span id="State-297">
                        <a href="#State-297">
                            <span className="linenos">297</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-298">
                        <a href="#State-298">
                            <span className="linenos">298</span>
                        </a>
                        {"    "}
                        <span className="k">def</span>{" "}
                        <span className="nf">is_cancelled</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="nb">bool</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-299">
                        <a href="#State-299">
                            <span className="linenos">299</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">type</span> <span className="o">==</span>{" "}
                        <span className="n">StateType</span>
                        <span className="o">.</span>
                        <span className="n">CANCELLED</span>
                        {"\n"}
                    </span>
                    <span id="State-300">
                        <a href="#State-300">
                            <span className="linenos">300</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-301">
                        <a href="#State-301">
                            <span className="linenos">301</span>
                        </a>
                        {"    "}
                        <span className="k">def</span>{" "}
                        <span className="nf">is_cancelling</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="nb">bool</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-302">
                        <a href="#State-302">
                            <span className="linenos">302</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">type</span> <span className="o">==</span>{" "}
                        <span className="n">StateType</span>
                        <span className="o">.</span>
                        <span className="n">CANCELLING</span>
                        {"\n"}
                    </span>
                    <span id="State-303">
                        <a href="#State-303">
                            <span className="linenos">303</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-304">
                        <a href="#State-304">
                            <span className="linenos">304</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">is_final</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="nb">bool</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-305">
                        <a href="#State-305">
                            <span className="linenos">305</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">type</span> <span className="ow">in</span>{" "}
                        <span className="p">{"{"}</span>
                        {"\n"}
                    </span>
                    <span id="State-306">
                        <a href="#State-306">
                            <span className="linenos">306</span>
                        </a>
                        {"            "}
                        <span className="n">StateType</span>
                        <span className="o">.</span>
                        <span className="n">CANCELLED</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="State-307">
                        <a href="#State-307">
                            <span className="linenos">307</span>
                        </a>
                        {"            "}
                        <span className="n">StateType</span>
                        <span className="o">.</span>
                        <span className="n">FAILED</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="State-308">
                        <a href="#State-308">
                            <span className="linenos">308</span>
                        </a>
                        {"            "}
                        <span className="n">StateType</span>
                        <span className="o">.</span>
                        <span className="n">COMPLETED</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="State-309">
                        <a href="#State-309">
                            <span className="linenos">309</span>
                        </a>
                        {"            "}
                        <span className="n">StateType</span>
                        <span className="o">.</span>
                        <span className="n">CRASHED</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="State-310">
                        <a href="#State-310">
                            <span className="linenos">310</span>
                        </a>
                        {"        "}
                        <span className="p">{"}"}</span>
                        {"\n"}
                    </span>
                    <span id="State-311">
                        <a href="#State-311">
                            <span className="linenos">311</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-312">
                        <a href="#State-312">
                            <span className="linenos">312</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">is_paused</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="nb">bool</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-313">
                        <a href="#State-313">
                            <span className="linenos">313</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">type</span> <span className="o">==</span>{" "}
                        <span className="n">StateType</span>
                        <span className="o">.</span>
                        <span className="n">PAUSED</span>
                        {"\n"}
                    </span>
                    <span id="State-314">
                        <a href="#State-314">
                            <span className="linenos">314</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-315">
                        <a href="#State-315">
                            <span className="linenos">315</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">copy</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="State-316">
                        <a href="#State-316">
                            <span className="linenos">316</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="State-317">
                        <a href="#State-317">
                            <span className="linenos">317</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="State-318">
                        <a href="#State-318">
                            <span className="linenos">318</span>
                        </a>
                        {"        "}
                        <span className="n">update</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Dict</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">Any</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="State-319">
                        <a href="#State-319">
                            <span className="linenos">319</span>
                        </a>
                        {"        "}
                        <span className="n">reset_fields</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="State-320">
                        <a href="#State-320">
                            <span className="linenos">320</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="State-321">
                        <a href="#State-321">
                            <span className="linenos">321</span>
                        </a>
                        {"    "}
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="State-322">
                        <a href="#State-322">
                            <span className="linenos">322</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="State-323">
                        <a href="#State-323">
                            <span className="linenos">323</span>
                        </a>
                        <span className="sd">
                            {"        "}Copying API models should return an object that could
                            be inserted into the
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-324">
                        <a href="#State-324">
                            <span className="linenos">324</span>
                        </a>
                        <span className="sd">
                            {"        "}database again. The 'timestamp' is reset using the
                            default factory.
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-325">
                        <a href="#State-325">
                            <span className="linenos">325</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="State-326">
                        <a href="#State-326">
                            <span className="linenos">326</span>
                        </a>
                        {"        "}
                        <span className="n">update</span> <span className="o">=</span>{" "}
                        <span className="n">update</span> <span className="ow">or</span>{" "}
                        <span className="p">
                            {"{"}
                            {"}"}
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-327">
                        <a href="#State-327">
                            <span className="linenos">327</span>
                        </a>
                        {"        "}
                        <span className="n">update</span>
                        <span className="o">.</span>
                        <span className="n">setdefault</span>
                        <span className="p">(</span>
                        <span className="s2">"timestamp"</span>
                        <span className="p">,</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">__fields__</span>
                        <span className="p">[</span>
                        <span className="s2">"timestamp"</span>
                        <span className="p">]</span>
                        <span className="o">.</span>
                        <span className="n">get_default</span>
                        <span className="p">())</span>
                        {"\n"}
                    </span>
                    <span id="State-328">
                        <a href="#State-328">
                            <span className="linenos">328</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="nb">super</span>
                        <span className="p">()</span>
                        <span className="o">.</span>
                        <span className="n">copy</span>
                        <span className="p">(</span>
                        <span className="n">reset_fields</span>
                        <span className="o">=</span>
                        <span className="n">reset_fields</span>
                        <span className="p">,</span> <span className="n">update</span>
                        <span className="o">=</span>
                        <span className="n">update</span>
                        <span className="p">,</span> <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="State-329">
                        <a href="#State-329">
                            <span className="linenos">329</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-330">
                        <a href="#State-330">
                            <span className="linenos">330</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="fm">__repr__</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="nb">str</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-331">
                        <a href="#State-331">
                            <span className="linenos">331</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="State-332">
                        <a href="#State-332">
                            <span className="linenos">332</span>
                        </a>
                        <span className="sd">
                            {"        "}Generates a complete state representation appropriate
                            for introspection
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-333">
                        <a href="#State-333">
                            <span className="linenos">333</span>
                        </a>
                        <span className="sd">
                            {"        "}and debugging, including the result:
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-334">
                        <a href="#State-334">
                            <span className="linenos">334</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-335">
                        <a href="#State-335">
                            <span className="linenos">335</span>
                        </a>
                        <span className="sd">
                            {"        "}`MyCompletedState(message="my message",
                            type=COMPLETED, result=...)`
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-336">
                        <a href="#State-336">
                            <span className="linenos">336</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="State-337">
                        <a href="#State-337">
                            <span className="linenos">337</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.deprecated.data_documents</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">DataDocument</span>
                        {"\n"}
                    </span>
                    <span id="State-338">
                        <a href="#State-338">
                            <span className="linenos">338</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-339">
                        <a href="#State-339">
                            <span className="linenos">339</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="nb">isinstance</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">data</span>
                        <span className="p">,</span> <span className="n">DataDocument</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="State-340">
                        <a href="#State-340">
                            <span className="linenos">340</span>
                        </a>
                        {"            "}
                        <span className="n">result</span> <span className="o">=</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">data</span>
                        <span className="o">.</span>
                        <span className="n">decode</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="State-341">
                        <a href="#State-341">
                            <span className="linenos">341</span>
                        </a>
                        {"        "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-342">
                        <a href="#State-342">
                            <span className="linenos">342</span>
                        </a>
                        {"            "}
                        <span className="n">result</span> <span className="o">=</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">data</span>
                        {"\n"}
                    </span>
                    <span id="State-343">
                        <a href="#State-343">
                            <span className="linenos">343</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-344">
                        <a href="#State-344">
                            <span className="linenos">344</span>
                        </a>
                        {"        "}
                        <span className="n">display</span> <span className="o">=</span>{" "}
                        <span className="nb">dict</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="State-345">
                        <a href="#State-345">
                            <span className="linenos">345</span>
                        </a>
                        {"            "}
                        <span className="n">message</span>
                        <span className="o">=</span>
                        <span className="nb">repr</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">message</span>
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="State-346">
                        <a href="#State-346">
                            <span className="linenos">346</span>
                        </a>
                        {"            "}
                        <span className="nb">type</span>
                        <span className="o">=</span>
                        <span className="nb">str</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">type</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="State-347">
                        <a href="#State-347">
                            <span className="linenos">347</span>
                        </a>
                        {"            "}
                        <span className="n">result</span>
                        <span className="o">=</span>
                        <span className="nb">repr</span>
                        <span className="p">(</span>
                        <span className="n">result</span>
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="State-348">
                        <a href="#State-348">
                            <span className="linenos">348</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="State-349">
                        <a href="#State-349">
                            <span className="linenos">349</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-350">
                        <a href="#State-350">
                            <span className="linenos">350</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="sa">f</span>
                        <span className="s2">"</span>
                        <span className="si">{"{"}</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">(</span>
                        <span className="si">{"{"}</span>
                        <span className="s1">', '</span>
                        <span className="o">.</span>
                        <span className="n">join</span>
                        <span className="p">(</span>
                        <span className="sa">f</span>
                        <span className="s1">'</span>
                        <span className="si">{"{"}</span>
                        <span className="n">k</span>
                        <span className="si">{"}"}</span>
                        <span className="s1">=</span>
                        <span className="si">{"{"}</span>
                        <span className="n">v</span>
                        <span className="si">{"}"}</span>
                        <span className="s1">'</span>
                        <span className="w"> </span>
                        <span className="k">for</span>
                        <span className="w"> </span>
                        <span className="n">k</span>
                        <span className="p">,</span>
                        <span className="w"> </span>
                        <span className="n">v</span>
                        <span className="w"> </span>
                        <span className="ow">in</span>
                        <span className="w"> </span>
                        <span className="n">display</span>
                        <span className="o">.</span>
                        <span className="n">items</span>
                        <span className="p">())</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">)"</span>
                        {"\n"}
                    </span>
                    <span id="State-351">
                        <a href="#State-351">
                            <span className="linenos">351</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-352">
                        <a href="#State-352">
                            <span className="linenos">352</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="fm">__str__</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="nb">str</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-353">
                        <a href="#State-353">
                            <span className="linenos">353</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="State-354">
                        <a href="#State-354">
                            <span className="linenos">354</span>
                        </a>
                        <span className="sd">
                            {"        "}Generates a simple state representation appropriate
                            for logging:
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-355">
                        <a href="#State-355">
                            <span className="linenos">355</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-356">
                        <a href="#State-356">
                            <span className="linenos">356</span>
                        </a>
                        <span className="sd">
                            {"        "}`MyCompletedState("my message", type=COMPLETED)`
                        </span>
                        {"\n"}
                    </span>
                    <span id="State-357">
                        <a href="#State-357">
                            <span className="linenos">357</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="State-358">
                        <a href="#State-358">
                            <span className="linenos">358</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-359">
                        <a href="#State-359">
                            <span className="linenos">359</span>
                        </a>
                        {"        "}
                        <span className="n">display</span> <span className="o">=</span>{" "}
                        <span className="p">[]</span>
                        {"\n"}
                    </span>
                    <span id="State-360">
                        <a href="#State-360">
                            <span className="linenos">360</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-361">
                        <a href="#State-361">
                            <span className="linenos">361</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">message</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-362">
                        <a href="#State-362">
                            <span className="linenos">362</span>
                        </a>
                        {"            "}
                        <span className="n">display</span>
                        <span className="o">.</span>
                        <span className="n">append</span>
                        <span className="p">(</span>
                        <span className="nb">repr</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">message</span>
                        <span className="p">))</span>
                        {"\n"}
                    </span>
                    <span id="State-363">
                        <a href="#State-363">
                            <span className="linenos">363</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-364">
                        <a href="#State-364">
                            <span className="linenos">364</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">type</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="o">.</span>
                        <span className="n">lower</span>
                        <span className="p">()</span> <span className="o">!=</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="o">.</span>
                        <span className="n">lower</span>
                        <span className="p">():</span>
                        {"\n"}
                    </span>
                    <span id="State-365">
                        <a href="#State-365">
                            <span className="linenos">365</span>
                        </a>
                        {"            "}
                        <span className="n">display</span>
                        <span className="o">.</span>
                        <span className="n">append</span>
                        <span className="p">(</span>
                        <span className="sa">f</span>
                        <span className="s2">"type=</span>
                        <span className="si">{"{"}</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">type</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">"</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="State-366">
                        <a href="#State-366">
                            <span className="linenos">366</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-367">
                        <a href="#State-367">
                            <span className="linenos">367</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="sa">f</span>
                        <span className="s2">"</span>
                        <span className="si">{"{"}</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">(</span>
                        <span className="si">{"{"}</span>
                        <span className="s1">', '</span>
                        <span className="o">.</span>
                        <span className="n">join</span>
                        <span className="p">(</span>
                        <span className="n">display</span>
                        <span className="p">)</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">)"</span>
                        {"\n"}
                    </span>
                    <span id="State-368">
                        <a href="#State-368">
                            <span className="linenos">368</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="State-369">
                        <a href="#State-369">
                            <span className="linenos">369</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="fm">__hash__</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="nb">int</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="State-370">
                        <a href="#State-370">
                            <span className="linenos">370</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="nb">hash</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="State-371">
                        <a href="#State-371">
                            <span className="linenos">371</span>
                        </a>
                        {"            "}
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="State-372">
                        <a href="#State-372">
                            <span className="linenos">372</span>
                        </a>
                        {"                "}
                        <span className="nb">getattr</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">state_details</span>
                        <span className="p">,</span>{" "}
                        <span className="s2">"flow_run_id"</span>
                        <span className="p">,</span> <span className="kc">None</span>
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="State-373">
                        <a href="#State-373">
                            <span className="linenos">373</span>
                        </a>
                        {"                "}
                        <span className="nb">getattr</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">state_details</span>
                        <span className="p">,</span>{" "}
                        <span className="s2">"task_run_id"</span>
                        <span className="p">,</span> <span className="kc">None</span>
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="State-374">
                        <a href="#State-374">
                            <span className="linenos">374</span>
                        </a>
                        {"                "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">timestamp</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="State-375">
                        <a href="#State-375">
                            <span className="linenos">375</span>
                        </a>
                        {"                "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">type</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="State-376">
                        <a href="#State-376">
                            <span className="linenos">376</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="State-377">
                        <a href="#State-377">
                            <span className="linenos">377</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                </pre>
            </div>
            <div className="docstring">
                <p>The state of a run.</p>
            </div>
            <div id="State.type" className="classattr">
                <div className="attr variable">
                    <span className="name">type</span>
                    <span className="annotation">
                        : prefect.client.schemas.objects.StateType
                    </span>
                </div>
                <a className="headerlink" href="#State.type" />
            </div>
            <div id="State.name" className="classattr">
                <div className="attr variable">
                    <span className="name">name</span>
                    <span className="annotation">: Optional[str]</span>
                </div>
                <a className="headerlink" href="#State.name" />
            </div>
            <div id="State.timestamp" className="classattr">
                <div className="attr variable">
                    <span className="name">timestamp</span>
                    <span className="annotation">: pendulum.datetime.DateTime</span>
                </div>
                <a className="headerlink" href="#State.timestamp" />
            </div>
            <div id="State.message" className="classattr">
                <div className="attr variable">
                    <span className="name">message</span>
                    <span className="annotation">: Optional[str]</span>
                </div>
                <a className="headerlink" href="#State.message" />
            </div>
            <div id="State.state_details" className="classattr">
                <div className="attr variable">
                    <span className="name">state_details</span>
                    <span className="annotation">
                        : prefect.client.schemas.objects.StateDetails
                    </span>
                </div>
                <a className="headerlink" href="#State.state_details" />
            </div>
            <div id="State.data" className="classattr">
                <div className="attr variable">
                    <span className="name">data</span>
                    <span className="annotation">
                        : Union[prefect.results.BaseResult[~R],
                        prefect.deprecated.data_documents.DataDocument[~R], Any]
                    </span>
                </div>
                <a className="headerlink" href="#State.data" />
            </div>
            <div id="State.result" className="classattr">
                <input
                    id="State.result-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">result</span>
                    <span className="signature pdoc-code multiline">
                        (
                        <span className="param">
                            <span className="bp">self</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">raise_on_failure</span>
                            <span className="p">:</span> <span className="nb">bool</span>
                            <span className="o">=</span> <span className="kc">True</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">fetch</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="o">~</span>
                            <span className="n">R</span>
                            <span className="p">,</span> <span className="ne">Exception</span>
                            <span className="p">]</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="State.result-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#State.result" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="State.result-165">
                            <a href="#State.result-165">
                                <span className="linenos">165</span>
                            </a>
                            {"    "}
                            <span className="k">def</span> <span className="nf">result</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="State.result-166">
                            <a href="#State.result-166">
                                <span className="linenos">166</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="p">,</span>{" "}
                            <span className="n">raise_on_failure</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">True</span>
                            <span className="p">,</span> <span className="n">fetch</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            {"\n"}
                        </span>
                        <span id="State.result-167">
                            <a href="#State.result-167">
                                <span className="linenos">167</span>
                            </a>
                            {"    "}
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">R</span>
                            <span className="p">,</span> <span className="ne">Exception</span>
                            <span className="p">]:</span>
                            {"\n"}
                        </span>
                        <span id="State.result-168">
                            <a href="#State.result-168">
                                <span className="linenos">168</span>
                            </a>
                            <span className="w">{"        "}</span>
                            <span className="sd">"""</span>
                            {"\n"}
                        </span>
                        <span id="State.result-169">
                            <a href="#State.result-169">
                                <span className="linenos">169</span>
                            </a>
                            <span className="sd">
                                {"        "}Retrieve the result attached to this state.
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-170">
                            <a href="#State.result-170">
                                <span className="linenos">170</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.result-171">
                            <a href="#State.result-171">
                                <span className="linenos">171</span>
                            </a>
                            <span className="sd">{"        "}Args:</span>
                            {"\n"}
                        </span>
                        <span id="State.result-172">
                            <a href="#State.result-172">
                                <span className="linenos">172</span>
                            </a>
                            <span className="sd">
                                {"            "}raise_on_failure: a boolean specifying whether
                                to raise an exception
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-173">
                            <a href="#State.result-173">
                                <span className="linenos">173</span>
                            </a>
                            <span className="sd">
                                {"                "}if the state is of type `FAILED` and the
                                underlying data is an exception
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-174">
                            <a href="#State.result-174">
                                <span className="linenos">174</span>
                            </a>
                            <span className="sd">
                                {"            "}fetch: a boolean specifying whether to resolve
                                references to persisted
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-175">
                            <a href="#State.result-175">
                                <span className="linenos">175</span>
                            </a>
                            <span className="sd">
                                {"                "}results into data. For synchronous users,
                                this defaults to `True`.
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-176">
                            <a href="#State.result-176">
                                <span className="linenos">176</span>
                            </a>
                            <span className="sd">
                                {"                "}For asynchronous users, this defaults to
                                `False` for backwards
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-177">
                            <a href="#State.result-177">
                                <span className="linenos">177</span>
                            </a>
                            <span className="sd">{"                "}compatibility.</span>
                            {"\n"}
                        </span>
                        <span id="State.result-178">
                            <a href="#State.result-178">
                                <span className="linenos">178</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.result-179">
                            <a href="#State.result-179">
                                <span className="linenos">179</span>
                            </a>
                            <span className="sd">{"        "}Raises:</span>
                            {"\n"}
                        </span>
                        <span id="State.result-180">
                            <a href="#State.result-180">
                                <span className="linenos">180</span>
                            </a>
                            <span className="sd">
                                {"            "}TypeError: If the state is failed but the result
                                is not an exception.
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-181">
                            <a href="#State.result-181">
                                <span className="linenos">181</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.result-182">
                            <a href="#State.result-182">
                                <span className="linenos">182</span>
                            </a>
                            <span className="sd">{"        "}Returns:</span>
                            {"\n"}
                        </span>
                        <span id="State.result-183">
                            <a href="#State.result-183">
                                <span className="linenos">183</span>
                            </a>
                            <span className="sd">{"            "}The result of the run</span>
                            {"\n"}
                        </span>
                        <span id="State.result-184">
                            <a href="#State.result-184">
                                <span className="linenos">184</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.result-185">
                            <a href="#State.result-185">
                                <span className="linenos">185</span>
                            </a>
                            <span className="sd">{"        "}Examples:</span>
                            {"\n"}
                        </span>
                        <span id="State.result-186">
                            <a href="#State.result-186">
                                <span className="linenos">186</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; from prefect import flow, task
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-187">
                            <a href="#State.result-187">
                                <span className="linenos">187</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                            {"\n"}
                        </span>
                        <span id="State.result-188">
                            <a href="#State.result-188">
                                <span className="linenos">188</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_task(x):
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-189">
                            <a href="#State.result-189">
                                <span className="linenos">189</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}return x
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-190">
                            <a href="#State.result-190">
                                <span className="linenos">190</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.result-191">
                            <a href="#State.result-191">
                                <span className="linenos">191</span>
                            </a>
                            <span className="sd">
                                {"            "}Get the result from a task future in a flow
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-192">
                            <a href="#State.result-192">
                                <span className="linenos">192</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.result-193">
                            <a href="#State.result-193">
                                <span className="linenos">193</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="State.result-194">
                            <a href="#State.result-194">
                                <span className="linenos">194</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-195">
                            <a href="#State.result-195">
                                <span className="linenos">195</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}future = my_task("hello")
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-196">
                            <a href="#State.result-196">
                                <span className="linenos">196</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}state = future.wait()
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-197">
                            <a href="#State.result-197">
                                <span className="linenos">197</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}result = state.result()
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-198">
                            <a href="#State.result-198">
                                <span className="linenos">198</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}print(result)
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-199">
                            <a href="#State.result-199">
                                <span className="linenos">199</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; my_flow()</span>
                            {"\n"}
                        </span>
                        <span id="State.result-200">
                            <a href="#State.result-200">
                                <span className="linenos">200</span>
                            </a>
                            <span className="sd">{"            "}hello</span>
                            {"\n"}
                        </span>
                        <span id="State.result-201">
                            <a href="#State.result-201">
                                <span className="linenos">201</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.result-202">
                            <a href="#State.result-202">
                                <span className="linenos">202</span>
                            </a>
                            <span className="sd">
                                {"            "}Get the result from a flow state
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-203">
                            <a href="#State.result-203">
                                <span className="linenos">203</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.result-204">
                            <a href="#State.result-204">
                                <span className="linenos">204</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="State.result-205">
                            <a href="#State.result-205">
                                <span className="linenos">205</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-206">
                            <a href="#State.result-206">
                                <span className="linenos">206</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}return "hello"
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-207">
                            <a href="#State.result-207">
                                <span className="linenos">207</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; my_flow(return_state=True).result()
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-208">
                            <a href="#State.result-208">
                                <span className="linenos">208</span>
                            </a>
                            <span className="sd">{"            "}hello</span>
                            {"\n"}
                        </span>
                        <span id="State.result-209">
                            <a href="#State.result-209">
                                <span className="linenos">209</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.result-210">
                            <a href="#State.result-210">
                                <span className="linenos">210</span>
                            </a>
                            <span className="sd">
                                {"            "}Get the result from a failed state
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-211">
                            <a href="#State.result-211">
                                <span className="linenos">211</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.result-212">
                            <a href="#State.result-212">
                                <span className="linenos">212</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="State.result-213">
                            <a href="#State.result-213">
                                <span className="linenos">213</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-214">
                            <a href="#State.result-214">
                                <span className="linenos">214</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}raise ValueError("oh no!")
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-215">
                            <a href="#State.result-215">
                                <span className="linenos">215</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; state = my_flow(return_state=True)
                                {"  "}# Error is wrapped in FAILED state
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-216">
                            <a href="#State.result-216">
                                <span className="linenos">216</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; state.result(){"  "}# Raises
                                `ValueError`
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-217">
                            <a href="#State.result-217">
                                <span className="linenos">217</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.result-218">
                            <a href="#State.result-218">
                                <span className="linenos">218</span>
                            </a>
                            <span className="sd">
                                {"            "}Get the result from a failed state without
                                erroring
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-219">
                            <a href="#State.result-219">
                                <span className="linenos">219</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.result-220">
                            <a href="#State.result-220">
                                <span className="linenos">220</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="State.result-221">
                            <a href="#State.result-221">
                                <span className="linenos">221</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-222">
                            <a href="#State.result-222">
                                <span className="linenos">222</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}raise ValueError("oh no!")
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-223">
                            <a href="#State.result-223">
                                <span className="linenos">223</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; state = my_flow(return_state=True)
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-224">
                            <a href="#State.result-224">
                                <span className="linenos">224</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; result =
                                state.result(raise_on_failure=False)
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-225">
                            <a href="#State.result-225">
                                <span className="linenos">225</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; print(result)
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-226">
                            <a href="#State.result-226">
                                <span className="linenos">226</span>
                            </a>
                            <span className="sd">{"            "}ValueError("oh no!")</span>
                            {"\n"}
                        </span>
                        <span id="State.result-227">
                            <a href="#State.result-227">
                                <span className="linenos">227</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.result-228">
                            <a href="#State.result-228">
                                <span className="linenos">228</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.result-229">
                            <a href="#State.result-229">
                                <span className="linenos">229</span>
                            </a>
                            <span className="sd">
                                {"            "}Get the result from a flow state in an async
                                context
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-230">
                            <a href="#State.result-230">
                                <span className="linenos">230</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.result-231">
                            <a href="#State.result-231">
                                <span className="linenos">231</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="State.result-232">
                            <a href="#State.result-232">
                                <span className="linenos">232</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; async def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-233">
                            <a href="#State.result-233">
                                <span className="linenos">233</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}return "hello"
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-234">
                            <a href="#State.result-234">
                                <span className="linenos">234</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; state = await
                                my_flow(return_state=True)
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-235">
                            <a href="#State.result-235">
                                <span className="linenos">235</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; await state.result()
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.result-236">
                            <a href="#State.result-236">
                                <span className="linenos">236</span>
                            </a>
                            <span className="sd">{"            "}hello</span>
                            {"\n"}
                        </span>
                        <span id="State.result-237">
                            <a href="#State.result-237">
                                <span className="linenos">237</span>
                            </a>
                            <span className="sd">{"        "}"""</span>
                            {"\n"}
                        </span>
                        <span id="State.result-238">
                            <a href="#State.result-238">
                                <span className="linenos">238</span>
                            </a>
                            {"        "}
                            <span className="kn">from</span>{" "}
                            <span className="nn">prefect.states</span>{" "}
                            <span className="kn">import</span>{" "}
                            <span className="n">get_state_result</span>
                            {"\n"}
                        </span>
                        <span id="State.result-239">
                            <a href="#State.result-239">
                                <span className="linenos">239</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.result-240">
                            <a href="#State.result-240">
                                <span className="linenos">240</span>
                            </a>
                            {"        "}
                            <span className="k">return</span>{" "}
                            <span className="n">get_state_result</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">,</span>{" "}
                            <span className="n">raise_on_failure</span>
                            <span className="o">=</span>
                            <span className="n">raise_on_failure</span>
                            <span className="p">,</span> <span className="n">fetch</span>
                            <span className="o">=</span>
                            <span className="n">fetch</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
                <div className="docstring">
                    <p>Retrieve the result attached to this state.</p>
                    <p>
                        Args: raise_on_failure: a boolean specifying whether to raise an
                        exception if the state is of type <code>FAILED</code> and the
                        underlying data is an exception fetch: a boolean specifying whether
                        to resolve references to persisted results into data. For
                        synchronous users, this defaults to <code>True</code>. For
                        asynchronous users, this defaults to <code>False</code> for
                        backwards compatibility.
                    </p>
                    <p>
                        Raises: TypeError: If the state is failed but the result is not an
                        exception.
                    </p>
                    <p>Returns: The result of the run</p>
                    <p>Examples:</p>
                    <blockquote>
                        <blockquote>
                            <blockquote>
                                <p>
                                    from prefect import flow, task @task def my_task(x): return x
                                </p>
                                <pre>
                                    <code>
                                        Get the result from a task future in a flow{"\n"}
                                        {"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; def my_flow():
                                        {"\n"}&gt;&gt;&gt;{"     "}future = my_task("hello"){"\n"}
                                        &gt;&gt;&gt;{"     "}state = future.wait(){"\n"}&gt;&gt;&gt;
                                        {"     "}result = state.result(){"\n"}&gt;&gt;&gt;{"     "}
                                        print(result){"\n"}&gt;&gt;&gt; my_flow(){"\n"}hello{"\n"}
                                        {"\n"}Get the result from a flow state{"\n"}
                                        {"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; def my_flow():
                                        {"\n"}&gt;&gt;&gt;{"     "}return "hello"{"\n"}&gt;&gt;&gt;
                                        my_flow(return_state=True).result(){"\n"}hello{"\n"}
                                        {"\n"}Get the result from a failed state{"\n"}
                                        {"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; def my_flow():
                                        {"\n"}&gt;&gt;&gt;{"     "}raise ValueError("oh no!"){"\n"}
                                        &gt;&gt;&gt; state = my_flow(return_state=True){"  "}# Error
                                        is wrapped in FAILED state{"\n"}&gt;&gt;&gt; state.result()
                                        {"  "}# Raises `ValueError`{"\n"}
                                        {"\n"}Get the result from a failed state without erroring
                                        {"\n"}
                                        {"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; def my_flow():
                                        {"\n"}&gt;&gt;&gt;{"     "}raise ValueError("oh no!"){"\n"}
                                        &gt;&gt;&gt; state = my_flow(return_state=True){"\n"}
                                        &gt;&gt;&gt; result = state.result(raise_on_failure=False)
                                        {"\n"}&gt;&gt;&gt; print(result){"\n"}ValueError("oh no!")
                                        {"\n"}
                                        {"\n"}
                                        {"\n"}Get the result from a flow state in an async context
                                        {"\n"}
                                        {"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; async def
                                        my_flow():{"\n"}&gt;&gt;&gt;{"     "}return "hello"{"\n"}
                                        &gt;&gt;&gt; state = await my_flow(return_state=True){"\n"}
                                        &gt;&gt;&gt; await state.result(){"\n"}hello{"\n"}
                                    </code>
                                </pre>
                            </blockquote>
                        </blockquote>
                    </blockquote>
                </div>
            </div>
            <div id="State.to_state_create" className="classattr">
                <input
                    id="State.to_state_create-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">to_state_create</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="bp">self</span>
                        </span>
                        <span className="return-annotation">):</span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="State.to_state_create-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#State.to_state_create" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="State.to_state_create-242">
                            <a href="#State.to_state_create-242">
                                <span className="linenos">242</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">to_state_create</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="State.to_state_create-243">
                            <a href="#State.to_state_create-243">
                                <span className="linenos">243</span>
                            </a>
                            <span className="w">{"        "}</span>
                            <span className="sd">"""</span>
                            {"\n"}
                        </span>
                        <span id="State.to_state_create-244">
                            <a href="#State.to_state_create-244">
                                <span className="linenos">244</span>
                            </a>
                            <span className="sd">
                                {"        "}Convert this state to a `StateCreate` type which can
                                be used to set the state of
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.to_state_create-245">
                            <a href="#State.to_state_create-245">
                                <span className="linenos">245</span>
                            </a>
                            <span className="sd">{"        "}a run in the API.</span>
                            {"\n"}
                        </span>
                        <span id="State.to_state_create-246">
                            <a href="#State.to_state_create-246">
                                <span className="linenos">246</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.to_state_create-247">
                            <a href="#State.to_state_create-247">
                                <span className="linenos">247</span>
                            </a>
                            <span className="sd">
                                {"        "}This method will drop this state's `data` if it is
                                not a result type. Only
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.to_state_create-248">
                            <a href="#State.to_state_create-248">
                                <span className="linenos">248</span>
                            </a>
                            <span className="sd">
                                {"        "}results should be sent to the API. Other data is
                                only available locally.
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.to_state_create-249">
                            <a href="#State.to_state_create-249">
                                <span className="linenos">249</span>
                            </a>
                            <span className="sd">{"        "}"""</span>
                            {"\n"}
                        </span>
                        <span id="State.to_state_create-250">
                            <a href="#State.to_state_create-250">
                                <span className="linenos">250</span>
                            </a>
                            {"        "}
                            <span className="kn">from</span>{" "}
                            <span className="nn">prefect.client.schemas.actions</span>{" "}
                            <span className="kn">import</span>{" "}
                            <span className="n">StateCreate</span>
                            {"\n"}
                        </span>
                        <span id="State.to_state_create-251">
                            <a href="#State.to_state_create-251">
                                <span className="linenos">251</span>
                            </a>
                            {"        "}
                            <span className="kn">from</span>{" "}
                            <span className="nn">prefect.results</span>{" "}
                            <span className="kn">import</span>{" "}
                            <span className="n">BaseResult</span>
                            {"\n"}
                        </span>
                        <span id="State.to_state_create-252">
                            <a href="#State.to_state_create-252">
                                <span className="linenos">252</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="State.to_state_create-253">
                            <a href="#State.to_state_create-253">
                                <span className="linenos">253</span>
                            </a>
                            {"        "}
                            <span className="k">return</span>{" "}
                            <span className="n">StateCreate</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="State.to_state_create-254">
                            <a href="#State.to_state_create-254">
                                <span className="linenos">254</span>
                            </a>
                            {"            "}
                            <span className="nb">type</span>
                            <span className="o">=</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">type</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="State.to_state_create-255">
                            <a href="#State.to_state_create-255">
                                <span className="linenos">255</span>
                            </a>
                            {"            "}
                            <span className="n">name</span>
                            <span className="o">=</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">name</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="State.to_state_create-256">
                            <a href="#State.to_state_create-256">
                                <span className="linenos">256</span>
                            </a>
                            {"            "}
                            <span className="n">message</span>
                            <span className="o">=</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">message</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="State.to_state_create-257">
                            <a href="#State.to_state_create-257">
                                <span className="linenos">257</span>
                            </a>
                            {"            "}
                            <span className="n">data</span>
                            <span className="o">=</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">data</span> <span className="k">if</span>{" "}
                            <span className="nb">isinstance</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">data</span>
                            <span className="p">,</span> <span className="n">BaseResult</span>
                            <span className="p">)</span> <span className="k">else</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="State.to_state_create-258">
                            <a href="#State.to_state_create-258">
                                <span className="linenos">258</span>
                            </a>
                            {"            "}
                            <span className="n">state_details</span>
                            <span className="o">=</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">state_details</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="State.to_state_create-259">
                            <a href="#State.to_state_create-259">
                                <span className="linenos">259</span>
                            </a>
                            {"        "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
                <div className="docstring">
                    <p>
                        Convert this state to a <code>StateCreate</code> type which can be
                        used to set the state of a run in the API.
                    </p>
                    <p>
                        This method will drop this state's{" "}
                        <code>
                            <a href="#State.data">data</a>
                        </code>{" "}
                        if it is not a result type. Only results should be sent to the API.
                        Other data is only available locally.
                    </p>
                </div>
            </div>
            <div id="State.default_name_from_type" className="classattr">
                <input
                    id="State.default_name_from_type-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <div className="decorator">@validator('name', always=True)</div>
                    <span className="def">def</span>
                    <span className="name">default_name_from_type</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="bp">cls</span>,{" "}
                        </span>
                        <span className="param">
                            <span className="n">v</span>,{" "}
                        </span>
                        <span className="param">
                            <span className="o">*</span>,{" "}
                        </span>
                        <span className="param">
                            <span className="n">values</span>,{" "}
                        </span>
                        <span className="param">
                            <span className="o">**</span>
                            <span className="n">kwargs</span>
                        </span>
                        <span className="return-annotation">):</span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="State.default_name_from_type-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#State.default_name_from_type" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="State.default_name_from_type-261">
                            <a href="#State.default_name_from_type-261">
                                <span className="linenos">261</span>
                            </a>
                            {"    "}
                            <span className="nd">@validator</span>
                            <span className="p">(</span>
                            <span className="s2">"name"</span>
                            <span className="p">,</span> <span className="n">always</span>
                            <span className="o">=</span>
                            <span className="kc">True</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="State.default_name_from_type-262">
                            <a href="#State.default_name_from_type-262">
                                <span className="linenos">262</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">default_name_from_type</span>
                            <span className="p">(</span>
                            <span className="bp">cls</span>
                            <span className="p">,</span> <span className="n">v</span>
                            <span className="p">,</span> <span className="o">*</span>
                            <span className="p">,</span> <span className="n">values</span>
                            <span className="p">,</span> <span className="o">**</span>
                            <span className="n">kwargs</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="State.default_name_from_type-263">
                            <a href="#State.default_name_from_type-263">
                                <span className="linenos">263</span>
                            </a>
                            {"        "}
                            <span className="k">return</span>{" "}
                            <span className="n">get_or_create_state_name</span>
                            <span className="p">(</span>
                            <span className="n">v</span>
                            <span className="p">,</span> <span className="n">values</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
            </div>
            <div id="State.default_scheduled_start_time" className="classattr">
                <input
                    id="State.default_scheduled_start_time-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <div className="decorator">@root_validator</div>
                    <span className="def">def</span>
                    <span className="name">default_scheduled_start_time</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="bp">cls</span>,
                        </span>
                        <span className="param">
                            <span className="n">values</span>
                        </span>
                        <span className="return-annotation">):</span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="State.default_scheduled_start_time-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#State.default_scheduled_start_time" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="State.default_scheduled_start_time-265">
                            <a href="#State.default_scheduled_start_time-265">
                                <span className="linenos">265</span>
                            </a>
                            {"    "}
                            <span className="nd">@root_validator</span>
                            {"\n"}
                        </span>
                        <span id="State.default_scheduled_start_time-266">
                            <a href="#State.default_scheduled_start_time-266">
                                <span className="linenos">266</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">default_scheduled_start_time</span>
                            <span className="p">(</span>
                            <span className="bp">cls</span>
                            <span className="p">,</span> <span className="n">values</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="State.default_scheduled_start_time-267">
                            <a href="#State.default_scheduled_start_time-267">
                                <span className="linenos">267</span>
                            </a>
                            <span className="w">{"        "}</span>
                            <span className="sd">"""</span>
                            {"\n"}
                        </span>
                        <span id="State.default_scheduled_start_time-268">
                            <a href="#State.default_scheduled_start_time-268">
                                <span className="linenos">268</span>
                            </a>
                            <span className="sd">
                                {"        "}TODO: This should throw an error instead of setting
                                a default but is out of
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.default_scheduled_start_time-269">
                            <a href="#State.default_scheduled_start_time-269">
                                <span className="linenos">269</span>
                            </a>
                            <span className="sd">
                                {"              "}scope for
                                https://github.com/PrefectHQ/orion/pull/174/ and can be rolled
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.default_scheduled_start_time-270">
                            <a href="#State.default_scheduled_start_time-270">
                                <span className="linenos">270</span>
                            </a>
                            <span className="sd">
                                {"              "}into work refactoring state initialization
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.default_scheduled_start_time-271">
                            <a href="#State.default_scheduled_start_time-271">
                                <span className="linenos">271</span>
                            </a>
                            <span className="sd">{"        "}"""</span>
                            {"\n"}
                        </span>
                        <span id="State.default_scheduled_start_time-272">
                            <a href="#State.default_scheduled_start_time-272">
                                <span className="linenos">272</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="n">values</span>
                            <span className="o">.</span>
                            <span className="n">get</span>
                            <span className="p">(</span>
                            <span className="s2">"type"</span>
                            <span className="p">)</span> <span className="o">==</span>{" "}
                            <span className="n">StateType</span>
                            <span className="o">.</span>
                            <span className="n">SCHEDULED</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="State.default_scheduled_start_time-273">
                            <a href="#State.default_scheduled_start_time-273">
                                <span className="linenos">273</span>
                            </a>
                            {"            "}
                            <span className="n">state_details</span>{" "}
                            <span className="o">=</span> <span className="n">values</span>
                            <span className="o">.</span>
                            <span className="n">setdefault</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="State.default_scheduled_start_time-274">
                            <a href="#State.default_scheduled_start_time-274">
                                <span className="linenos">274</span>
                            </a>
                            {"                "}
                            <span className="s2">"state_details"</span>
                            <span className="p">,</span> <span className="bp">cls</span>
                            <span className="o">.</span>
                            <span className="n">__fields__</span>
                            <span className="p">[</span>
                            <span className="s2">"state_details"</span>
                            <span className="p">]</span>
                            <span className="o">.</span>
                            <span className="n">get_default</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="State.default_scheduled_start_time-275">
                            <a href="#State.default_scheduled_start_time-275">
                                <span className="linenos">275</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="State.default_scheduled_start_time-276">
                            <a href="#State.default_scheduled_start_time-276">
                                <span className="linenos">276</span>
                            </a>
                            {"            "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="n">state_details</span>
                            <span className="o">.</span>
                            <span className="n">scheduled_time</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="State.default_scheduled_start_time-277">
                            <a href="#State.default_scheduled_start_time-277">
                                <span className="linenos">277</span>
                            </a>
                            {"                "}
                            <span className="n">state_details</span>
                            <span className="o">.</span>
                            <span className="n">scheduled_time</span>{" "}
                            <span className="o">=</span> <span className="n">pendulum</span>
                            <span className="o">.</span>
                            <span className="n">now</span>
                            <span className="p">(</span>
                            <span className="s2">"utc"</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="State.default_scheduled_start_time-278">
                            <a href="#State.default_scheduled_start_time-278">
                                <span className="linenos">278</span>
                            </a>
                            {"        "}
                            <span className="k">return</span>{" "}
                            <span className="n">values</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
                <div className="docstring">
                    <p>
                        TODO: This should throw an error instead of setting a default but is
                        out of scope for{" "}
                        <a href="https://github.com/PrefectHQ/orion/pull/174/">
                            https://github.com/PrefectHQ/orion/pull/174/
                        </a>
                        and can be rolled into work refactoring state initialization
                    </p>
                </div>
            </div>
            <div id="State.is_scheduled" className="classattr">
                <input
                    id="State.is_scheduled-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">is_scheduled</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="bp">self</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="nb">bool</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="State.is_scheduled-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#State.is_scheduled" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="State.is_scheduled-280">
                            <a href="#State.is_scheduled-280">
                                <span className="linenos">280</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">is_scheduled</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="nb">bool</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="State.is_scheduled-281">
                            <a href="#State.is_scheduled-281">
                                <span className="linenos">281</span>
                            </a>
                            {"        "}
                            <span className="k">return</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">type</span> <span className="o">==</span>{" "}
                            <span className="n">StateType</span>
                            <span className="o">.</span>
                            <span className="n">SCHEDULED</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
            </div>
            <div id="State.is_pending" className="classattr">
                <input
                    id="State.is_pending-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">is_pending</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="bp">self</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="nb">bool</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="State.is_pending-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#State.is_pending" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="State.is_pending-283">
                            <a href="#State.is_pending-283">
                                <span className="linenos">283</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">is_pending</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="nb">bool</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="State.is_pending-284">
                            <a href="#State.is_pending-284">
                                <span className="linenos">284</span>
                            </a>
                            {"        "}
                            <span className="k">return</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">type</span> <span className="o">==</span>{" "}
                            <span className="n">StateType</span>
                            <span className="o">.</span>
                            <span className="n">PENDING</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
            </div>
            <div id="State.is_running" className="classattr">
                <input
                    id="State.is_running-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">is_running</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="bp">self</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="nb">bool</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="State.is_running-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#State.is_running" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="State.is_running-286">
                            <a href="#State.is_running-286">
                                <span className="linenos">286</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">is_running</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="nb">bool</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="State.is_running-287">
                            <a href="#State.is_running-287">
                                <span className="linenos">287</span>
                            </a>
                            {"        "}
                            <span className="k">return</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">type</span> <span className="o">==</span>{" "}
                            <span className="n">StateType</span>
                            <span className="o">.</span>
                            <span className="n">RUNNING</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
            </div>
            <div id="State.is_completed" className="classattr">
                <input
                    id="State.is_completed-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">is_completed</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="bp">self</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="nb">bool</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="State.is_completed-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#State.is_completed" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="State.is_completed-289">
                            <a href="#State.is_completed-289">
                                <span className="linenos">289</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">is_completed</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="nb">bool</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="State.is_completed-290">
                            <a href="#State.is_completed-290">
                                <span className="linenos">290</span>
                            </a>
                            {"        "}
                            <span className="k">return</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">type</span> <span className="o">==</span>{" "}
                            <span className="n">StateType</span>
                            <span className="o">.</span>
                            <span className="n">COMPLETED</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
            </div>
            <div id="State.is_failed" className="classattr">
                <input
                    id="State.is_failed-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">is_failed</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="bp">self</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="nb">bool</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="State.is_failed-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#State.is_failed" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="State.is_failed-292">
                            <a href="#State.is_failed-292">
                                <span className="linenos">292</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">is_failed</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="nb">bool</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="State.is_failed-293">
                            <a href="#State.is_failed-293">
                                <span className="linenos">293</span>
                            </a>
                            {"        "}
                            <span className="k">return</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">type</span> <span className="o">==</span>{" "}
                            <span className="n">StateType</span>
                            <span className="o">.</span>
                            <span className="n">FAILED</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
            </div>
            <div id="State.is_crashed" className="classattr">
                <input
                    id="State.is_crashed-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">is_crashed</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="bp">self</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="nb">bool</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="State.is_crashed-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#State.is_crashed" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="State.is_crashed-295">
                            <a href="#State.is_crashed-295">
                                <span className="linenos">295</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">is_crashed</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="nb">bool</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="State.is_crashed-296">
                            <a href="#State.is_crashed-296">
                                <span className="linenos">296</span>
                            </a>
                            {"        "}
                            <span className="k">return</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">type</span> <span className="o">==</span>{" "}
                            <span className="n">StateType</span>
                            <span className="o">.</span>
                            <span className="n">CRASHED</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
            </div>
            <div id="State.is_cancelled" className="classattr">
                <input
                    id="State.is_cancelled-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">is_cancelled</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="bp">self</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="nb">bool</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="State.is_cancelled-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#State.is_cancelled" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="State.is_cancelled-298">
                            <a href="#State.is_cancelled-298">
                                <span className="linenos">298</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">is_cancelled</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="nb">bool</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="State.is_cancelled-299">
                            <a href="#State.is_cancelled-299">
                                <span className="linenos">299</span>
                            </a>
                            {"        "}
                            <span className="k">return</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">type</span> <span className="o">==</span>{" "}
                            <span className="n">StateType</span>
                            <span className="o">.</span>
                            <span className="n">CANCELLED</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
            </div>
            <div id="State.is_cancelling" className="classattr">
                <input
                    id="State.is_cancelling-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">is_cancelling</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="bp">self</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="nb">bool</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="State.is_cancelling-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#State.is_cancelling" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="State.is_cancelling-301">
                            <a href="#State.is_cancelling-301">
                                <span className="linenos">301</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">is_cancelling</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="nb">bool</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="State.is_cancelling-302">
                            <a href="#State.is_cancelling-302">
                                <span className="linenos">302</span>
                            </a>
                            {"        "}
                            <span className="k">return</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">type</span> <span className="o">==</span>{" "}
                            <span className="n">StateType</span>
                            <span className="o">.</span>
                            <span className="n">CANCELLING</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
            </div>
            <div id="State.is_final" className="classattr">
                <input
                    id="State.is_final-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">is_final</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="bp">self</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="nb">bool</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="State.is_final-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#State.is_final" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="State.is_final-304">
                            <a href="#State.is_final-304">
                                <span className="linenos">304</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">is_final</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="nb">bool</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="State.is_final-305">
                            <a href="#State.is_final-305">
                                <span className="linenos">305</span>
                            </a>
                            {"        "}
                            <span className="k">return</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">
                                type
                            </span> <span className="ow">in</span>{" "}
                            <span className="p">{"{"}</span>
                            {"\n"}
                        </span>
                        <span id="State.is_final-306">
                            <a href="#State.is_final-306">
                                <span className="linenos">306</span>
                            </a>
                            {"            "}
                            <span className="n">StateType</span>
                            <span className="o">.</span>
                            <span className="n">CANCELLED</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="State.is_final-307">
                            <a href="#State.is_final-307">
                                <span className="linenos">307</span>
                            </a>
                            {"            "}
                            <span className="n">StateType</span>
                            <span className="o">.</span>
                            <span className="n">FAILED</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="State.is_final-308">
                            <a href="#State.is_final-308">
                                <span className="linenos">308</span>
                            </a>
                            {"            "}
                            <span className="n">StateType</span>
                            <span className="o">.</span>
                            <span className="n">COMPLETED</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="State.is_final-309">
                            <a href="#State.is_final-309">
                                <span className="linenos">309</span>
                            </a>
                            {"            "}
                            <span className="n">StateType</span>
                            <span className="o">.</span>
                            <span className="n">CRASHED</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="State.is_final-310">
                            <a href="#State.is_final-310">
                                <span className="linenos">310</span>
                            </a>
                            {"        "}
                            <span className="p">{"}"}</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
            </div>
            <div id="State.is_paused" className="classattr">
                <input
                    id="State.is_paused-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">is_paused</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="bp">self</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="nb">bool</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="State.is_paused-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#State.is_paused" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="State.is_paused-312">
                            <a href="#State.is_paused-312">
                                <span className="linenos">312</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">is_paused</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="nb">bool</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="State.is_paused-313">
                            <a href="#State.is_paused-313">
                                <span className="linenos">313</span>
                            </a>
                            {"        "}
                            <span className="k">return</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">type</span> <span className="o">==</span>{" "}
                            <span className="n">StateType</span>
                            <span className="o">.</span>
                            <span className="n">PAUSED</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
            </div>
            <div id="State.copy" className="classattr">
                <input
                    id="State.copy-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">copy</span>
                    <span className="signature pdoc-code multiline">
                        (
                        <span className="param">
                            <span className="bp">self</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="o">*</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">update</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">reset_fields</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">False</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="o">**</span>
                            <span className="n">kwargs</span>
                        </span>
                        <span className="return-annotation">):</span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="State.copy-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#State.copy" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="State.copy-315">
                            <a href="#State.copy-315">
                                <span className="linenos">315</span>
                            </a>
                            {"    "}
                            <span className="k">def</span> <span className="nf">copy</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="State.copy-316">
                            <a href="#State.copy-316">
                                <span className="linenos">316</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="State.copy-317">
                            <a href="#State.copy-317">
                                <span className="linenos">317</span>
                            </a>
                            {"        "}
                            <span className="o">*</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="State.copy-318">
                            <a href="#State.copy-318">
                                <span className="linenos">318</span>
                            </a>
                            {"        "}
                            <span className="n">update</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="State.copy-319">
                            <a href="#State.copy-319">
                                <span className="linenos">319</span>
                            </a>
                            {"        "}
                            <span className="n">reset_fields</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">False</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="State.copy-320">
                            <a href="#State.copy-320">
                                <span className="linenos">320</span>
                            </a>
                            {"        "}
                            <span className="o">**</span>
                            <span className="n">kwargs</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="State.copy-321">
                            <a href="#State.copy-321">
                                <span className="linenos">321</span>
                            </a>
                            {"    "}
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="State.copy-322">
                            <a href="#State.copy-322">
                                <span className="linenos">322</span>
                            </a>
                            <span className="w">{"        "}</span>
                            <span className="sd">"""</span>
                            {"\n"}
                        </span>
                        <span id="State.copy-323">
                            <a href="#State.copy-323">
                                <span className="linenos">323</span>
                            </a>
                            <span className="sd">
                                {"        "}Copying API models should return an object that
                                could be inserted into the
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.copy-324">
                            <a href="#State.copy-324">
                                <span className="linenos">324</span>
                            </a>
                            <span className="sd">
                                {"        "}database again. The 'timestamp' is reset using the
                                default factory.
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.copy-325">
                            <a href="#State.copy-325">
                                <span className="linenos">325</span>
                            </a>
                            <span className="sd">{"        "}"""</span>
                            {"\n"}
                        </span>
                        <span id="State.copy-326">
                            <a href="#State.copy-326">
                                <span className="linenos">326</span>
                            </a>
                            {"        "}
                            <span className="n">
                                update
                            </span> <span className="o">=</span>{" "}
                            <span className="n">update</span> <span className="ow">or</span>{" "}
                            <span className="p">
                                {"{"}
                                {"}"}
                            </span>
                            {"\n"}
                        </span>
                        <span id="State.copy-327">
                            <a href="#State.copy-327">
                                <span className="linenos">327</span>
                            </a>
                            {"        "}
                            <span className="n">update</span>
                            <span className="o">.</span>
                            <span className="n">setdefault</span>
                            <span className="p">(</span>
                            <span className="s2">"timestamp"</span>
                            <span className="p">,</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">__fields__</span>
                            <span className="p">[</span>
                            <span className="s2">"timestamp"</span>
                            <span className="p">]</span>
                            <span className="o">.</span>
                            <span className="n">get_default</span>
                            <span className="p">())</span>
                            {"\n"}
                        </span>
                        <span id="State.copy-328">
                            <a href="#State.copy-328">
                                <span className="linenos">328</span>
                            </a>
                            {"        "}
                            <span className="k">return</span>{" "}
                            <span className="nb">super</span>
                            <span className="p">()</span>
                            <span className="o">.</span>
                            <span className="n">copy</span>
                            <span className="p">(</span>
                            <span className="n">reset_fields</span>
                            <span className="o">=</span>
                            <span className="n">reset_fields</span>
                            <span className="p">,</span> <span className="n">update</span>
                            <span className="o">=</span>
                            <span className="n">update</span>
                            <span className="p">,</span> <span className="o">**</span>
                            <span className="n">kwargs</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
                <div className="docstring">
                    <p>
                        Copying API models should return an object that could be inserted
                        into the database again. The 'timestamp' is reset using the default
                        factory.
                    </p>
                </div>
            </div>
            <div className="inherited">
                <h5>Inherited Members</h5>
                <dl>
                    <div>
                        <dt>pydantic.v1.main.BaseModel</dt>
                        <dd id="State.__init__" className="function">
                            BaseModel
                        </dd>
                        <dd id="State.parse_obj" className="function">
                            parse_obj
                        </dd>
                        <dd id="State.parse_raw" className="function">
                            parse_raw
                        </dd>
                        <dd id="State.parse_file" className="function">
                            parse_file
                        </dd>
                        <dd id="State.from_orm" className="function">
                            from_orm
                        </dd>
                        <dd id="State.construct" className="function">
                            construct
                        </dd>
                        <dd id="State.schema" className="function">
                            schema
                        </dd>
                        <dd id="State.schema_json" className="function">
                            schema_json
                        </dd>
                        <dd id="State.validate" className="function">
                            validate
                        </dd>
                        <dd id="State.update_forward_refs" className="function">
                            update_forward_refs
                        </dd>
                    </div>
                    <div>
                        <dt>prefect._internal.schemas.bases.ObjectBaseModel</dt>
                        <dd id="State.Config" className="class">
                            Config
                        </dd>
                        <dd id="State.created" className="variable">
                            created
                        </dd>
                        <dd id="State.updated" className="variable">
                            updated
                        </dd>
                    </div>
                    <div>
                        <dt>prefect._internal.schemas.bases.IDBaseModel</dt>
                        <dd id="State.id" className="variable">
                            id
                        </dd>
                    </div>
                    <div>
                        <dt>prefect._internal.schemas.bases.PrefectBaseModel</dt>
                        <dd id="State.json" className="function">
                            json
                        </dd>
                        <dd id="State.dict" className="function">
                            dict
                        </dd>
                    </div>
                </dl>
            </div>
        </section>
        <section id="tags">
            <input
                id="tags-view-source"
                className="view-source-toggle-state"
                type="checkbox"
                aria-hidden="true"
                tabIndex={-1}
            />
            <div className="attr function">
                <div className="decorator">@contextmanager</div>
                <span className="def">def</span>
                <span className="name">tags</span>
                <span className="signature pdoc-code condensed">
                    (
                    <span className="param">
                        <span className="o">*</span>
                        <span className="n">new_tags</span>
                        <span className="p">:</span> <span className="nb">str</span>
                    </span>
                    <span className="return-annotation">
                        ) -&gt; <span className="n">Generator</span>
                        <span className="p">[</span>
                        <span className="n">Set</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">],</span> <span className="n">NoneType</span>
                        <span className="p">,</span> <span className="n">NoneType</span>
                        <span className="p">]</span>:
                    </span>
                </span>
                <label className="view-source-button" htmlFor="tags-view-source">
                    <span>View Source</span>
                </label>
            </div>
            <a className="headerlink" href="#tags" />
            <div className="pdoc-code codehilite">
                <pre>
                    <span />
                    <span id="tags-399">
                        <a href="#tags-399">
                            <span className="linenos">399</span>
                        </a>
                        <span className="nd">@contextmanager</span>
                        {"\n"}
                    </span>
                    <span id="tags-400">
                        <a href="#tags-400">
                            <span className="linenos">400</span>
                        </a>
                        <span className="k">def</span> <span className="nf">tags</span>
                        <span className="p">(</span>
                        <span className="o">*</span>
                        <span className="n">new_tags</span>
                        <span className="p">:</span> <span className="nb">str</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Generator</span>
                        <span className="p">[</span>
                        <span className="n">Set</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">,</span> <span className="kc">None</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="tags-401">
                        <a href="#tags-401">
                            <span className="linenos">401</span>
                        </a>
                        <span className="w">{"    "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="tags-402">
                        <a href="#tags-402">
                            <span className="linenos">402</span>
                        </a>
                        <span className="sd">
                            {"    "}Context manager to add tags to flow and task run calls.
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-403">
                        <a href="#tags-403">
                            <span className="linenos">403</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="tags-404">
                        <a href="#tags-404">
                            <span className="linenos">404</span>
                        </a>
                        <span className="sd">
                            {"    "}Tags are always combined with any existing tags.
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-405">
                        <a href="#tags-405">
                            <span className="linenos">405</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="tags-406">
                        <a href="#tags-406">
                            <span className="linenos">406</span>
                        </a>
                        <span className="sd">{"    "}Yields:</span>
                        {"\n"}
                    </span>
                    <span id="tags-407">
                        <a href="#tags-407">
                            <span className="linenos">407</span>
                        </a>
                        <span className="sd">{"        "}The current set of tags</span>
                        {"\n"}
                    </span>
                    <span id="tags-408">
                        <a href="#tags-408">
                            <span className="linenos">408</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="tags-409">
                        <a href="#tags-409">
                            <span className="linenos">409</span>
                        </a>
                        <span className="sd">{"    "}Examples:</span>
                        {"\n"}
                    </span>
                    <span id="tags-410">
                        <a href="#tags-410">
                            <span className="linenos">410</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt; from prefect import tags, task, flow
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-411">
                        <a href="#tags-411">
                            <span className="linenos">411</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; @task</span>
                        {"\n"}
                    </span>
                    <span id="tags-412">
                        <a href="#tags-412">
                            <span className="linenos">412</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; def my_task():</span>
                        {"\n"}
                    </span>
                    <span id="tags-413">
                        <a href="#tags-413">
                            <span className="linenos">413</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}pass
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-414">
                        <a href="#tags-414">
                            <span className="linenos">414</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="tags-415">
                        <a href="#tags-415">
                            <span className="linenos">415</span>
                        </a>
                        <span className="sd">{"        "}Run a task with tags</span>
                        {"\n"}
                    </span>
                    <span id="tags-416">
                        <a href="#tags-416">
                            <span className="linenos">416</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="tags-417">
                        <a href="#tags-417">
                            <span className="linenos">417</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="tags-418">
                        <a href="#tags-418">
                            <span className="linenos">418</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; def my_flow():</span>
                        {"\n"}
                    </span>
                    <span id="tags-419">
                        <a href="#tags-419">
                            <span className="linenos">419</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}with tags("a", "b"):
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-420">
                        <a href="#tags-420">
                            <span className="linenos">420</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"         "}my_task(){"  "}# has tags: a,
                            b
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-421">
                        <a href="#tags-421">
                            <span className="linenos">421</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="tags-422">
                        <a href="#tags-422">
                            <span className="linenos">422</span>
                        </a>
                        <span className="sd">{"        "}Run a flow with tags</span>
                        {"\n"}
                    </span>
                    <span id="tags-423">
                        <a href="#tags-423">
                            <span className="linenos">423</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="tags-424">
                        <a href="#tags-424">
                            <span className="linenos">424</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="tags-425">
                        <a href="#tags-425">
                            <span className="linenos">425</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; def my_flow():</span>
                        {"\n"}
                    </span>
                    <span id="tags-426">
                        <a href="#tags-426">
                            <span className="linenos">426</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}pass
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-427">
                        <a href="#tags-427">
                            <span className="linenos">427</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt; with tags("a", "b"):
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-428">
                        <a href="#tags-428">
                            <span className="linenos">428</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}my_flow(){"  "}# has tags: a, b
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-429">
                        <a href="#tags-429">
                            <span className="linenos">429</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="tags-430">
                        <a href="#tags-430">
                            <span className="linenos">430</span>
                        </a>
                        <span className="sd">
                            {"        "}Run a task with nested tag contexts
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-431">
                        <a href="#tags-431">
                            <span className="linenos">431</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="tags-432">
                        <a href="#tags-432">
                            <span className="linenos">432</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="tags-433">
                        <a href="#tags-433">
                            <span className="linenos">433</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; def my_flow():</span>
                        {"\n"}
                    </span>
                    <span id="tags-434">
                        <a href="#tags-434">
                            <span className="linenos">434</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}with tags("a", "b"):
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-435">
                        <a href="#tags-435">
                            <span className="linenos">435</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"         "}with tags("c", "d"):
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-436">
                        <a href="#tags-436">
                            <span className="linenos">436</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"             "}my_task(){"  "}# has
                            tags: a, b, c, d
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-437">
                        <a href="#tags-437">
                            <span className="linenos">437</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"         "}my_task(){"  "}# has tags: a,
                            b
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-438">
                        <a href="#tags-438">
                            <span className="linenos">438</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="tags-439">
                        <a href="#tags-439">
                            <span className="linenos">439</span>
                        </a>
                        <span className="sd">{"        "}Inspect the current tags</span>
                        {"\n"}
                    </span>
                    <span id="tags-440">
                        <a href="#tags-440">
                            <span className="linenos">440</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="tags-441">
                        <a href="#tags-441">
                            <span className="linenos">441</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="tags-442">
                        <a href="#tags-442">
                            <span className="linenos">442</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; def my_flow():</span>
                        {"\n"}
                    </span>
                    <span id="tags-443">
                        <a href="#tags-443">
                            <span className="linenos">443</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}with tags("c", "d"):
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-444">
                        <a href="#tags-444">
                            <span className="linenos">444</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"         "}with tags("e", "f") as
                            current_tags:
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-445">
                        <a href="#tags-445">
                            <span className="linenos">445</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"              "}print(current_tags)
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-446">
                        <a href="#tags-446">
                            <span className="linenos">446</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt; with tags("a", "b"):
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-447">
                        <a href="#tags-447">
                            <span className="linenos">447</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}my_flow()
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-448">
                        <a href="#tags-448">
                            <span className="linenos">448</span>
                        </a>
                        <span className="sd">
                            {"        "}
                            {"{"}"a", "b", "c", "d", "e", "f"{"}"}
                        </span>
                        {"\n"}
                    </span>
                    <span id="tags-449">
                        <a href="#tags-449">
                            <span className="linenos">449</span>
                        </a>
                        <span className="sd">{"    "}"""</span>
                        {"\n"}
                    </span>
                    <span id="tags-450">
                        <a href="#tags-450">
                            <span className="linenos">450</span>
                        </a>
                        {"    "}
                        <span className="n">
                            current_tags
                        </span> <span className="o">=</span>{" "}
                        <span className="n">TagsContext</span>
                        <span className="o">.</span>
                        <span className="n">get</span>
                        <span className="p">()</span>
                        <span className="o">.</span>
                        <span className="n">current_tags</span>
                        {"\n"}
                    </span>
                    <span id="tags-451">
                        <a href="#tags-451">
                            <span className="linenos">451</span>
                        </a>
                        {"    "}
                        <span className="n">
                            new_tags
                        </span> <span className="o">=</span>{" "}
                        <span className="n">current_tags</span>
                        <span className="o">.</span>
                        <span className="n">union</span>
                        <span className="p">(</span>
                        <span className="n">new_tags</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="tags-452">
                        <a href="#tags-452">
                            <span className="linenos">452</span>
                        </a>
                        {"    "}
                        <span className="k">with</span>{" "}
                        <span className="n">TagsContext</span>
                        <span className="p">(</span>
                        <span className="n">current_tags</span>
                        <span className="o">=</span>
                        <span className="n">new_tags</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="tags-453">
                        <a href="#tags-453">
                            <span className="linenos">453</span>
                        </a>
                        {"        "}
                        <span className="k">yield</span> <span className="n">new_tags</span>
                        {"\n"}
                    </span>
                </pre>
            </div>
            <div className="docstring">
                <p>Context manager to add tags to flow and task run calls.</p>
                <p>Tags are always combined with any existing tags.</p>
                <p>Yields: The current set of tags</p>
                <p>Examples:</p>
                <blockquote>
                    <blockquote>
                        <blockquote>
                            <p>
                                from prefect import tags, task, flow @task def my_task(): pass
                            </p>
                            <pre>
                                <code>
                                    Run a task with tags{"\n"}
                                    {"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; def my_flow():
                                    {"\n"}&gt;&gt;&gt;{"     "}with tags("a", "b"):{"\n"}
                                    &gt;&gt;&gt;{"         "}my_task(){"  "}# has tags: a, b{"\n"}
                                    {"\n"}Run a flow with tags{"\n"}
                                    {"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; def my_flow():
                                    {"\n"}&gt;&gt;&gt;{"     "}pass{"\n"}&gt;&gt;&gt; with
                                    tags("a", "b"):{"\n"}&gt;&gt;&gt;{"     "}my_flow(){"  "}# has
                                    tags: a, b{"\n"}
                                    {"\n"}Run a task with nested tag contexts{"\n"}
                                    {"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; def my_flow():
                                    {"\n"}&gt;&gt;&gt;{"     "}with tags("a", "b"):{"\n"}
                                    &gt;&gt;&gt;{"         "}with tags("c", "d"):{"\n"}
                                    &gt;&gt;&gt;{"             "}my_task(){"  "}# has tags: a, b,
                                    c, d{"\n"}&gt;&gt;&gt;{"         "}my_task(){"  "}# has tags:
                                    a, b{"\n"}
                                    {"\n"}Inspect the current tags{"\n"}
                                    {"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; def my_flow():
                                    {"\n"}&gt;&gt;&gt;{"     "}with tags("c", "d"):{"\n"}
                                    &gt;&gt;&gt;{"         "}with tags("e", "f") as current_tags:
                                    {"\n"}&gt;&gt;&gt;{"              "}print(current_tags){"\n"}
                                    &gt;&gt;&gt; with tags("a", "b"):{"\n"}&gt;&gt;&gt;{"     "}
                                    my_flow(){"\n"}
                                    {"{"}"a", "b", "c", "d", "e", "f"{"}"}
                                    {"\n"}
                                </code>
                            </pre>
                        </blockquote>
                    </blockquote>
                </blockquote>
            </div>
        </section>
        <section id="task">
            <input
                id="task-view-source"
                className="view-source-toggle-state"
                type="checkbox"
                aria-hidden="true"
                tabIndex={-1}
            />
            <div className="attr function">
                <span className="def">def</span>
                <span className="name">task</span>
                <span className="signature pdoc-code multiline">
                    (
                    <span className="param">
                        {" "}
                        <span className="n">__fn</span>
                        <span className="o">=</span>
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="o">*</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">name</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">description</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">tags</span>
                        <span className="p">:</span> <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">version</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">cache_key_fn</span>
                        <span className="p">:</span> <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">context</span>
                        <span className="o">.</span>
                        <span className="n">TaskRunContext</span>
                        <span className="p">,</span> <span className="n">Dict</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">Any</span>
                        <span className="p">]],</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">cache_expiration</span>
                        <span className="p">:</span> <span className="n">datetime</span>
                        <span className="o">.</span>
                        <span className="n">
                            timedelta
                        </span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">task_run_name</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[],</span> <span className="nb">str</span>
                        <span className="p">],</span> <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">NoneType</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">retries</span>
                        <span className="p">:</span> <span className="nb">int</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">retry_delay_seconds</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">float</span>
                        <span className="p">,</span> <span className="nb">int</span>
                        <span className="p">,</span> <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="nb">float</span>
                        <span className="p">],</span> <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="nb">int</span>
                        <span className="p">],</span> <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="nb">float</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">retry_jitter_factor</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">float</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">persist_result</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">result_storage</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">filesystems</span>
                        <span className="o">.</span>
                        <span className="n">WritableFileSystem</span>
                        <span className="p">,</span> <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">NoneType</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">result_storage_key</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">result_serializer</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">serializers</span>
                        <span className="o">.</span>
                        <span className="n">Serializer</span>
                        <span className="p">,</span> <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">NoneType</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">cache_result_in_memory</span>
                        <span className="p">:</span> <span className="nb">bool</span>
                        <span className="o">=</span> <span className="kc">True</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">timeout_seconds</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">,</span> <span className="nb">float</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">log_prints</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">refresh_cache</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">on_completion</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">
                            <a href="#Task">Task</a>
                        </span>
                        <span className="p">,</span>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">schemas</span>
                        <span className="o">.</span>
                        <span className="n">objects</span>
                        <span className="o">.</span>
                        <span className="n">TaskRun</span>
                        <span className="p">,</span>{" "}
                        <span className="n">
                            <a href="#State">State</a>
                        </span>
                        <span className="p">],</span> <span className="n">NoneType</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">on_failure</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">
                            <a href="#Task">Task</a>
                        </span>
                        <span className="p">,</span> <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">schemas</span>
                        <span className="o">.</span>
                        <span className="n">objects</span>
                        <span className="o">.</span>
                        <span className="n">TaskRun</span>
                        <span className="p">,</span>{" "}
                        <span className="n">
                            <a href="#State">State</a>
                        </span>
                        <span className="p">],</span> <span className="n">NoneType</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">retry_condition_fn</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">
                            <a href="#Task">Task</a>
                        </span>
                        <span className="p">,</span>
                        <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">schemas</span>
                        <span className="o">.</span>
                        <span className="n">objects</span>
                        <span className="o">.</span>
                        <span className="n">TaskRun</span>
                        <span className="p">,</span>{" "}
                        <span className="n">
                            <a href="#State">State</a>
                        </span>
                        <span className="p">],</span> <span className="nb">bool</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">viz_return_value</span>
                        <span className="p">:</span> <span className="n">Any</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                    </span>
                    <span className="return-annotation">):</span>
                </span>
                <label className="view-source-button" htmlFor="task-view-source">
                    <span>View Source</span>
                </label>
            </div>
            <a className="headerlink" href="#task" />
            <div className="pdoc-code codehilite">
                <pre>
                    <span />
                    <span id="task-1256">
                        <a href="#task-1256">
                            <span className="linenos">1256</span>
                        </a>
                        <span className="k">def</span> <span className="nf">task</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="task-1257">
                        <a href="#task-1257">
                            <span className="linenos">1257</span>
                        </a>
                        {"    "}
                        <span className="n">__fn</span>
                        <span className="o">=</span>
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1258">
                        <a href="#task-1258">
                            <span className="linenos">1258</span>
                        </a>
                        {"    "}
                        <span className="o">*</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1259">
                        <a href="#task-1259">
                            <span className="linenos">1259</span>
                        </a>
                        {"    "}
                        <span className="n">name</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1260">
                        <a href="#task-1260">
                            <span className="linenos">1260</span>
                        </a>
                        {"    "}
                        <span className="n">description</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1261">
                        <a href="#task-1261">
                            <span className="linenos">1261</span>
                        </a>
                        {"    "}
                        <span className="n">tags</span>
                        <span className="p">:</span> <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1262">
                        <a href="#task-1262">
                            <span className="linenos">1262</span>
                        </a>
                        {"    "}
                        <span className="n">version</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1263">
                        <a href="#task-1263">
                            <span className="linenos">1263</span>
                        </a>
                        {"    "}
                        <span className="n">cache_key_fn</span>
                        <span className="p">:</span> <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="s2">"TaskRunContext"</span>
                        <span className="p">,</span> <span className="n">Dict</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">Any</span>
                        <span className="p">]],</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1264">
                        <a href="#task-1264">
                            <span className="linenos">1264</span>
                        </a>
                        {"    "}
                        <span className="n">cache_expiration</span>
                        <span className="p">:</span> <span className="n">datetime</span>
                        <span className="o">.</span>
                        <span className="n">
                            timedelta
                        </span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1265">
                        <a href="#task-1265">
                            <span className="linenos">1265</span>
                        </a>
                        {"    "}
                        <span className="n">task_run_name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[],</span> <span className="nb">str</span>
                        <span className="p">],</span> <span className="nb">str</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1266">
                        <a href="#task-1266">
                            <span className="linenos">1266</span>
                        </a>
                        {"    "}
                        <span className="n">retries</span>
                        <span className="p">:</span> <span className="nb">int</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1267">
                        <a href="#task-1267">
                            <span className="linenos">1267</span>
                        </a>
                        {"    "}
                        <span className="n">retry_delay_seconds</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="task-1268">
                        <a href="#task-1268">
                            <span className="linenos">1268</span>
                        </a>
                        {"        "}
                        <span className="nb">float</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1269">
                        <a href="#task-1269">
                            <span className="linenos">1269</span>
                        </a>
                        {"        "}
                        <span className="nb">int</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1270">
                        <a href="#task-1270">
                            <span className="linenos">1270</span>
                        </a>
                        {"        "}
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="nb">float</span>
                        <span className="p">],</span>
                        {"\n"}
                    </span>
                    <span id="task-1271">
                        <a href="#task-1271">
                            <span className="linenos">1271</span>
                        </a>
                        {"        "}
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="nb">int</span>
                        <span className="p">],</span> <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="nb">float</span>
                        <span className="p">]],</span>
                        {"\n"}
                    </span>
                    <span id="task-1272">
                        <a href="#task-1272">
                            <span className="linenos">1272</span>
                        </a>
                        {"    "}
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1273">
                        <a href="#task-1273">
                            <span className="linenos">1273</span>
                        </a>
                        {"    "}
                        <span className="n">retry_jitter_factor</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">float</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1274">
                        <a href="#task-1274">
                            <span className="linenos">1274</span>
                        </a>
                        {"    "}
                        <span className="n">persist_result</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1275">
                        <a href="#task-1275">
                            <span className="linenos">1275</span>
                        </a>
                        {"    "}
                        <span className="n">result_storage</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">ResultStorage</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1276">
                        <a href="#task-1276">
                            <span className="linenos">1276</span>
                        </a>
                        {"    "}
                        <span className="n">result_storage_key</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1277">
                        <a href="#task-1277">
                            <span className="linenos">1277</span>
                        </a>
                        {"    "}
                        <span className="n">result_serializer</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">ResultSerializer</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1278">
                        <a href="#task-1278">
                            <span className="linenos">1278</span>
                        </a>
                        {"    "}
                        <span className="n">cache_result_in_memory</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1279">
                        <a href="#task-1279">
                            <span className="linenos">1279</span>
                        </a>
                        {"    "}
                        <span className="n">timeout_seconds</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">,</span> <span className="nb">float</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1280">
                        <a href="#task-1280">
                            <span className="linenos">1280</span>
                        </a>
                        {"    "}
                        <span className="n">log_prints</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1281">
                        <a href="#task-1281">
                            <span className="linenos">1281</span>
                        </a>
                        {"    "}
                        <span className="n">refresh_cache</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1282">
                        <a href="#task-1282">
                            <span className="linenos">1282</span>
                        </a>
                        {"    "}
                        <span className="n">on_completion</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="s2">"Task"</span>
                        <span className="p">,</span> <span className="n">TaskRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1283">
                        <a href="#task-1283">
                            <span className="linenos">1283</span>
                        </a>
                        {"    "}
                        <span className="n">on_failure</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="s2">"Task"</span>
                        <span className="p">,</span> <span className="n">TaskRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1284">
                        <a href="#task-1284">
                            <span className="linenos">1284</span>
                        </a>
                        {"    "}
                        <span className="n">retry_condition_fn</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="s2">"Task"</span>
                        <span className="p">,</span> <span className="n">TaskRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="nb">bool</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1285">
                        <a href="#task-1285">
                            <span className="linenos">1285</span>
                        </a>
                        {"    "}
                        <span className="n">viz_return_value</span>
                        <span className="p">:</span> <span className="n">Any</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1286">
                        <a href="#task-1286">
                            <span className="linenos">1286</span>
                        </a>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="task-1287">
                        <a href="#task-1287">
                            <span className="linenos">1287</span>
                        </a>
                        <span className="w">{"    "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="task-1288">
                        <a href="#task-1288">
                            <span className="linenos">1288</span>
                        </a>
                        <span className="sd">
                            {"    "}Decorator to designate a function as a task in a Prefect
                            workflow.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1289">
                        <a href="#task-1289">
                            <span className="linenos">1289</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="task-1290">
                        <a href="#task-1290">
                            <span className="linenos">1290</span>
                        </a>
                        <span className="sd">
                            {"    "}This decorator may be used for asynchronous or synchronous
                            functions.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1291">
                        <a href="#task-1291">
                            <span className="linenos">1291</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="task-1292">
                        <a href="#task-1292">
                            <span className="linenos">1292</span>
                        </a>
                        <span className="sd">{"    "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="task-1293">
                        <a href="#task-1293">
                            <span className="linenos">1293</span>
                        </a>
                        <span className="sd">
                            {"        "}name: An optional name for the task; if not provided,
                            the name will be inferred
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1294">
                        <a href="#task-1294">
                            <span className="linenos">1294</span>
                        </a>
                        <span className="sd">{"            "}from the given function.</span>
                        {"\n"}
                    </span>
                    <span id="task-1295">
                        <a href="#task-1295">
                            <span className="linenos">1295</span>
                        </a>
                        <span className="sd">
                            {"        "}description: An optional string description for the
                            task.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1296">
                        <a href="#task-1296">
                            <span className="linenos">1296</span>
                        </a>
                        <span className="sd">
                            {"        "}tags: An optional set of tags to be associated with
                            runs of this task. These
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1297">
                        <a href="#task-1297">
                            <span className="linenos">1297</span>
                        </a>
                        <span className="sd">
                            {"            "}tags are combined with any tags defined by a
                            `prefect.tags` context at
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1298">
                        <a href="#task-1298">
                            <span className="linenos">1298</span>
                        </a>
                        <span className="sd">{"            "}task runtime.</span>
                        {"\n"}
                    </span>
                    <span id="task-1299">
                        <a href="#task-1299">
                            <span className="linenos">1299</span>
                        </a>
                        <span className="sd">
                            {"        "}version: An optional string specifying the version of
                            this task definition
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1300">
                        <a href="#task-1300">
                            <span className="linenos">1300</span>
                        </a>
                        <span className="sd">
                            {"        "}cache_key_fn: An optional callable that, given the
                            task run context and call
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1301">
                        <a href="#task-1301">
                            <span className="linenos">1301</span>
                        </a>
                        <span className="sd">
                            {"            "}parameters, generates a string key; if the key
                            matches a previous completed
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1302">
                        <a href="#task-1302">
                            <span className="linenos">1302</span>
                        </a>
                        <span className="sd">
                            {"            "}state, that state result will be restored instead
                            of running the task again.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1303">
                        <a href="#task-1303">
                            <span className="linenos">1303</span>
                        </a>
                        <span className="sd">
                            {"        "}cache_expiration: An optional amount of time
                            indicating how long cached states
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1304">
                        <a href="#task-1304">
                            <span className="linenos">1304</span>
                        </a>
                        <span className="sd">
                            {"            "}for this task should be restorable; if not
                            provided, cached states will
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1305">
                        <a href="#task-1305">
                            <span className="linenos">1305</span>
                        </a>
                        <span className="sd">{"            "}never expire.</span>
                        {"\n"}
                    </span>
                    <span id="task-1306">
                        <a href="#task-1306">
                            <span className="linenos">1306</span>
                        </a>
                        <span className="sd">
                            {"        "}task_run_name: An optional name to distinguish runs of
                            this task; this name can be provided
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1307">
                        <a href="#task-1307">
                            <span className="linenos">1307</span>
                        </a>
                        <span className="sd">
                            {"            "}as a string template with the task's keyword
                            arguments as variables,
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1308">
                        <a href="#task-1308">
                            <span className="linenos">1308</span>
                        </a>
                        <span className="sd">
                            {"            "}or a function that returns a string.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1309">
                        <a href="#task-1309">
                            <span className="linenos">1309</span>
                        </a>
                        <span className="sd">
                            {"        "}retries: An optional number of times to retry on task
                            run failure
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1310">
                        <a href="#task-1310">
                            <span className="linenos">1310</span>
                        </a>
                        <span className="sd">
                            {"        "}retry_delay_seconds: Optionally configures how long to
                            wait before retrying the
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1311">
                        <a href="#task-1311">
                            <span className="linenos">1311</span>
                        </a>
                        <span className="sd">
                            {"            "}task after failure. This is only applicable if
                            `retries` is nonzero. This
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1312">
                        <a href="#task-1312">
                            <span className="linenos">1312</span>
                        </a>
                        <span className="sd">
                            {"            "}setting can either be a number of seconds, a list
                            of retry delays, or a
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1313">
                        <a href="#task-1313">
                            <span className="linenos">1313</span>
                        </a>
                        <span className="sd">
                            {"            "}callable that, given the total number of retries,
                            generates a list of retry
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1314">
                        <a href="#task-1314">
                            <span className="linenos">1314</span>
                        </a>
                        <span className="sd">
                            {"            "}delays. If a number of seconds, that delay will be
                            applied to all retries.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1315">
                        <a href="#task-1315">
                            <span className="linenos">1315</span>
                        </a>
                        <span className="sd">
                            {"            "}If a list, each retry will wait for the
                            corresponding delay before retrying.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1316">
                        <a href="#task-1316">
                            <span className="linenos">1316</span>
                        </a>
                        <span className="sd">
                            {"            "}When passing a callable or a list, the number of
                            configured retry delays
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1317">
                        <a href="#task-1317">
                            <span className="linenos">1317</span>
                        </a>
                        <span className="sd">{"            "}cannot exceed 50.</span>
                        {"\n"}
                    </span>
                    <span id="task-1318">
                        <a href="#task-1318">
                            <span className="linenos">1318</span>
                        </a>
                        <span className="sd">
                            {"        "}retry_jitter_factor: An optional factor that defines
                            the factor to which a retry
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1319">
                        <a href="#task-1319">
                            <span className="linenos">1319</span>
                        </a>
                        <span className="sd">
                            {"            "}can be jittered in order to avoid a "thundering
                            herd".
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1320">
                        <a href="#task-1320">
                            <span className="linenos">1320</span>
                        </a>
                        <span className="sd">
                            {"        "}persist_result: An optional toggle indicating whether
                            the result of this task
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1321">
                        <a href="#task-1321">
                            <span className="linenos">1321</span>
                        </a>
                        <span className="sd">
                            {"            "}should be persisted to result storage. Defaults to
                            `None`, which indicates
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1322">
                        <a href="#task-1322">
                            <span className="linenos">1322</span>
                        </a>
                        <span className="sd">
                            {"            "}that Prefect should choose whether the result
                            should be persisted depending on
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1323">
                        <a href="#task-1323">
                            <span className="linenos">1323</span>
                        </a>
                        <span className="sd">{"            "}the features being used.</span>
                        {"\n"}
                    </span>
                    <span id="task-1324">
                        <a href="#task-1324">
                            <span className="linenos">1324</span>
                        </a>
                        <span className="sd">
                            {"        "}result_storage: An optional block to use to persist
                            the result of this task.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1325">
                        <a href="#task-1325">
                            <span className="linenos">1325</span>
                        </a>
                        <span className="sd">
                            {"            "}Defaults to the value set in the flow the task is
                            called in.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1326">
                        <a href="#task-1326">
                            <span className="linenos">1326</span>
                        </a>
                        <span className="sd">
                            {"        "}result_storage_key: An optional key to store the
                            result in storage at when persisted.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1327">
                        <a href="#task-1327">
                            <span className="linenos">1327</span>
                        </a>
                        <span className="sd">
                            {"            "}Defaults to a unique identifier.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1328">
                        <a href="#task-1328">
                            <span className="linenos">1328</span>
                        </a>
                        <span className="sd">
                            {"        "}result_serializer: An optional serializer to use to
                            serialize the result of this
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1329">
                        <a href="#task-1329">
                            <span className="linenos">1329</span>
                        </a>
                        <span className="sd">
                            {"            "}task for persistence. Defaults to the value set in
                            the flow the task is
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1330">
                        <a href="#task-1330">
                            <span className="linenos">1330</span>
                        </a>
                        <span className="sd">{"            "}called in.</span>
                        {"\n"}
                    </span>
                    <span id="task-1331">
                        <a href="#task-1331">
                            <span className="linenos">1331</span>
                        </a>
                        <span className="sd">
                            {"        "}timeout_seconds: An optional number of seconds
                            indicating a maximum runtime for
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1332">
                        <a href="#task-1332">
                            <span className="linenos">1332</span>
                        </a>
                        <span className="sd">
                            {"            "}the task. If the task exceeds this runtime, it
                            will be marked as failed.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1333">
                        <a href="#task-1333">
                            <span className="linenos">1333</span>
                        </a>
                        <span className="sd">
                            {"        "}log_prints: If set, `print` statements in the task
                            will be redirected to the
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1334">
                        <a href="#task-1334">
                            <span className="linenos">1334</span>
                        </a>
                        <span className="sd">
                            {"            "}Prefect logger for the task run. Defaults to
                            `None`, which indicates
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1335">
                        <a href="#task-1335">
                            <span className="linenos">1335</span>
                        </a>
                        <span className="sd">
                            {"            "}that the value from the flow should be used.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1336">
                        <a href="#task-1336">
                            <span className="linenos">1336</span>
                        </a>
                        <span className="sd">
                            {"        "}refresh_cache: If set, cached results for the cache
                            key are not used.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1337">
                        <a href="#task-1337">
                            <span className="linenos">1337</span>
                        </a>
                        <span className="sd">
                            {"            "}Defaults to `None`, which indicates that a cached
                            result from a previous
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1338">
                        <a href="#task-1338">
                            <span className="linenos">1338</span>
                        </a>
                        <span className="sd">
                            {"            "}execution with matching cache key is used.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1339">
                        <a href="#task-1339">
                            <span className="linenos">1339</span>
                        </a>
                        <span className="sd">
                            {"        "}on_failure: An optional list of callables to run when
                            the task enters a failed state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1340">
                        <a href="#task-1340">
                            <span className="linenos">1340</span>
                        </a>
                        <span className="sd">
                            {"        "}on_completion: An optional list of callables to run
                            when the task enters a completed state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1341">
                        <a href="#task-1341">
                            <span className="linenos">1341</span>
                        </a>
                        <span className="sd">
                            {"        "}retry_condition_fn: An optional callable run when a
                            task run returns a Failed state. Should
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1342">
                        <a href="#task-1342">
                            <span className="linenos">1342</span>
                        </a>
                        <span className="sd">
                            {"            "}return `True` if the task should continue to its
                            retry policy (e.g. `retries=3`), and `False` if the task
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1343">
                        <a href="#task-1343">
                            <span className="linenos">1343</span>
                        </a>
                        <span className="sd">
                            {"            "}should end as failed. Defaults to `None`,
                            indicating the task should always continue
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1344">
                        <a href="#task-1344">
                            <span className="linenos">1344</span>
                        </a>
                        <span className="sd">{"            "}to its retry policy.</span>
                        {"\n"}
                    </span>
                    <span id="task-1345">
                        <a href="#task-1345">
                            <span className="linenos">1345</span>
                        </a>
                        <span className="sd">
                            {"        "}viz_return_value: An optional value to return when the
                            task dependency tree is visualized.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1346">
                        <a href="#task-1346">
                            <span className="linenos">1346</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="task-1347">
                        <a href="#task-1347">
                            <span className="linenos">1347</span>
                        </a>
                        <span className="sd">{"    "}Returns:</span>
                        {"\n"}
                    </span>
                    <span id="task-1348">
                        <a href="#task-1348">
                            <span className="linenos">1348</span>
                        </a>
                        <span className="sd">
                            {"        "}A callable `Task` object which, when called, will
                            submit the task for execution.
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1349">
                        <a href="#task-1349">
                            <span className="linenos">1349</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="task-1350">
                        <a href="#task-1350">
                            <span className="linenos">1350</span>
                        </a>
                        <span className="sd">{"    "}Examples:</span>
                        {"\n"}
                    </span>
                    <span id="task-1351">
                        <a href="#task-1351">
                            <span className="linenos">1351</span>
                        </a>
                        <span className="sd">{"        "}Define a simple task</span>
                        {"\n"}
                    </span>
                    <span id="task-1352">
                        <a href="#task-1352">
                            <span className="linenos">1352</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="task-1353">
                        <a href="#task-1353">
                            <span className="linenos">1353</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; @task</span>
                        {"\n"}
                    </span>
                    <span id="task-1354">
                        <a href="#task-1354">
                            <span className="linenos">1354</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; def add(x, y):</span>
                        {"\n"}
                    </span>
                    <span id="task-1355">
                        <a href="#task-1355">
                            <span className="linenos">1355</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}return x + y
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1356">
                        <a href="#task-1356">
                            <span className="linenos">1356</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="task-1357">
                        <a href="#task-1357">
                            <span className="linenos">1357</span>
                        </a>
                        <span className="sd">{"        "}Define an async task</span>
                        {"\n"}
                    </span>
                    <span id="task-1358">
                        <a href="#task-1358">
                            <span className="linenos">1358</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="task-1359">
                        <a href="#task-1359">
                            <span className="linenos">1359</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; @task</span>
                        {"\n"}
                    </span>
                    <span id="task-1360">
                        <a href="#task-1360">
                            <span className="linenos">1360</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt; async def add(x, y):
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1361">
                        <a href="#task-1361">
                            <span className="linenos">1361</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}return x + y
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1362">
                        <a href="#task-1362">
                            <span className="linenos">1362</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="task-1363">
                        <a href="#task-1363">
                            <span className="linenos">1363</span>
                        </a>
                        <span className="sd">
                            {"        "}Define a task with tags and a description
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1364">
                        <a href="#task-1364">
                            <span className="linenos">1364</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="task-1365">
                        <a href="#task-1365">
                            <span className="linenos">1365</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt; @task(tags={"{"}"a", "b"{"}"},
                            description="This task is empty but its my first!")
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1366">
                        <a href="#task-1366">
                            <span className="linenos">1366</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; def my_task():</span>
                        {"\n"}
                    </span>
                    <span id="task-1367">
                        <a href="#task-1367">
                            <span className="linenos">1367</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}pass
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1368">
                        <a href="#task-1368">
                            <span className="linenos">1368</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="task-1369">
                        <a href="#task-1369">
                            <span className="linenos">1369</span>
                        </a>
                        <span className="sd">
                            {"        "}Define a task with a custom name
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1370">
                        <a href="#task-1370">
                            <span className="linenos">1370</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="task-1371">
                        <a href="#task-1371">
                            <span className="linenos">1371</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt; @task(name="The Ultimate Task")
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1372">
                        <a href="#task-1372">
                            <span className="linenos">1372</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; def my_task():</span>
                        {"\n"}
                    </span>
                    <span id="task-1373">
                        <a href="#task-1373">
                            <span className="linenos">1373</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}pass
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1374">
                        <a href="#task-1374">
                            <span className="linenos">1374</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="task-1375">
                        <a href="#task-1375">
                            <span className="linenos">1375</span>
                        </a>
                        <span className="sd">
                            {"        "}Define a task that retries 3 times with a 5 second
                            delay between attempts
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1376">
                        <a href="#task-1376">
                            <span className="linenos">1376</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="task-1377">
                        <a href="#task-1377">
                            <span className="linenos">1377</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt; from random import randint
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1378">
                        <a href="#task-1378">
                            <span className="linenos">1378</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="task-1379">
                        <a href="#task-1379">
                            <span className="linenos">1379</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt; @task(retries=3, retry_delay_seconds=5)
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1380">
                        <a href="#task-1380">
                            <span className="linenos">1380</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; def my_task():</span>
                        {"\n"}
                    </span>
                    <span id="task-1381">
                        <a href="#task-1381">
                            <span className="linenos">1381</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}x = randint(0, 5)
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1382">
                        <a href="#task-1382">
                            <span className="linenos">1382</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}if x &gt;= 3:{"  "}# Make a task
                            that fails sometimes
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1383">
                        <a href="#task-1383">
                            <span className="linenos">1383</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"         "}raise ValueError("Retry me
                            please!")
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1384">
                        <a href="#task-1384">
                            <span className="linenos">1384</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}return x
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1385">
                        <a href="#task-1385">
                            <span className="linenos">1385</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="task-1386">
                        <a href="#task-1386">
                            <span className="linenos">1386</span>
                        </a>
                        <span className="sd">
                            {"        "}Define a task that is cached for a day based on its
                            inputs
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1387">
                        <a href="#task-1387">
                            <span className="linenos">1387</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="task-1388">
                        <a href="#task-1388">
                            <span className="linenos">1388</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt; from prefect.tasks import task_input_hash
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1389">
                        <a href="#task-1389">
                            <span className="linenos">1389</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt; from datetime import timedelta
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1390">
                        <a href="#task-1390">
                            <span className="linenos">1390</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="task-1391">
                        <a href="#task-1391">
                            <span className="linenos">1391</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt; @task(cache_key_fn=task_input_hash,
                            cache_expiration=timedelta(days=1))
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1392">
                        <a href="#task-1392">
                            <span className="linenos">1392</span>
                        </a>
                        <span className="sd">{"        "}&gt;&gt;&gt; def my_task():</span>
                        {"\n"}
                    </span>
                    <span id="task-1393">
                        <a href="#task-1393">
                            <span className="linenos">1393</span>
                        </a>
                        <span className="sd">
                            {"        "}&gt;&gt;&gt;{"     "}return "hello"
                        </span>
                        {"\n"}
                    </span>
                    <span id="task-1394">
                        <a href="#task-1394">
                            <span className="linenos">1394</span>
                        </a>
                        <span className="sd">{"    "}"""</span>
                        {"\n"}
                    </span>
                    <span id="task-1395">
                        <a href="#task-1395">
                            <span className="linenos">1395</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="task-1396">
                        <a href="#task-1396">
                            <span className="linenos">1396</span>
                        </a>
                        {"    "}
                        <span className="k">if</span> <span className="n">__fn</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="task-1397">
                        <a href="#task-1397">
                            <span className="linenos">1397</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="n">cast</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="task-1398">
                        <a href="#task-1398">
                            <span className="linenos">1398</span>
                        </a>
                        {"            "}
                        <span className="n">Task</span>
                        <span className="p">[</span>
                        <span className="n">P</span>
                        <span className="p">,</span> <span className="n">R</span>
                        <span className="p">],</span>
                        {"\n"}
                    </span>
                    <span id="task-1399">
                        <a href="#task-1399">
                            <span className="linenos">1399</span>
                        </a>
                        {"            "}
                        <span className="n">Task</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="task-1400">
                        <a href="#task-1400">
                            <span className="linenos">1400</span>
                        </a>
                        {"                "}
                        <span className="n">fn</span>
                        <span className="o">=</span>
                        <span className="n">__fn</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1401">
                        <a href="#task-1401">
                            <span className="linenos">1401</span>
                        </a>
                        {"                "}
                        <span className="n">name</span>
                        <span className="o">=</span>
                        <span className="n">name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1402">
                        <a href="#task-1402">
                            <span className="linenos">1402</span>
                        </a>
                        {"                "}
                        <span className="n">description</span>
                        <span className="o">=</span>
                        <span className="n">description</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1403">
                        <a href="#task-1403">
                            <span className="linenos">1403</span>
                        </a>
                        {"                "}
                        <span className="n">tags</span>
                        <span className="o">=</span>
                        <span className="n">tags</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1404">
                        <a href="#task-1404">
                            <span className="linenos">1404</span>
                        </a>
                        {"                "}
                        <span className="n">version</span>
                        <span className="o">=</span>
                        <span className="n">version</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1405">
                        <a href="#task-1405">
                            <span className="linenos">1405</span>
                        </a>
                        {"                "}
                        <span className="n">cache_key_fn</span>
                        <span className="o">=</span>
                        <span className="n">cache_key_fn</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1406">
                        <a href="#task-1406">
                            <span className="linenos">1406</span>
                        </a>
                        {"                "}
                        <span className="n">cache_expiration</span>
                        <span className="o">=</span>
                        <span className="n">cache_expiration</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1407">
                        <a href="#task-1407">
                            <span className="linenos">1407</span>
                        </a>
                        {"                "}
                        <span className="n">task_run_name</span>
                        <span className="o">=</span>
                        <span className="n">task_run_name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1408">
                        <a href="#task-1408">
                            <span className="linenos">1408</span>
                        </a>
                        {"                "}
                        <span className="n">retries</span>
                        <span className="o">=</span>
                        <span className="n">retries</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1409">
                        <a href="#task-1409">
                            <span className="linenos">1409</span>
                        </a>
                        {"                "}
                        <span className="n">retry_delay_seconds</span>
                        <span className="o">=</span>
                        <span className="n">retry_delay_seconds</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1410">
                        <a href="#task-1410">
                            <span className="linenos">1410</span>
                        </a>
                        {"                "}
                        <span className="n">retry_jitter_factor</span>
                        <span className="o">=</span>
                        <span className="n">retry_jitter_factor</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1411">
                        <a href="#task-1411">
                            <span className="linenos">1411</span>
                        </a>
                        {"                "}
                        <span className="n">persist_result</span>
                        <span className="o">=</span>
                        <span className="n">persist_result</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1412">
                        <a href="#task-1412">
                            <span className="linenos">1412</span>
                        </a>
                        {"                "}
                        <span className="n">result_storage</span>
                        <span className="o">=</span>
                        <span className="n">result_storage</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1413">
                        <a href="#task-1413">
                            <span className="linenos">1413</span>
                        </a>
                        {"                "}
                        <span className="n">result_storage_key</span>
                        <span className="o">=</span>
                        <span className="n">result_storage_key</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1414">
                        <a href="#task-1414">
                            <span className="linenos">1414</span>
                        </a>
                        {"                "}
                        <span className="n">result_serializer</span>
                        <span className="o">=</span>
                        <span className="n">result_serializer</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1415">
                        <a href="#task-1415">
                            <span className="linenos">1415</span>
                        </a>
                        {"                "}
                        <span className="n">cache_result_in_memory</span>
                        <span className="o">=</span>
                        <span className="n">cache_result_in_memory</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1416">
                        <a href="#task-1416">
                            <span className="linenos">1416</span>
                        </a>
                        {"                "}
                        <span className="n">timeout_seconds</span>
                        <span className="o">=</span>
                        <span className="n">timeout_seconds</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1417">
                        <a href="#task-1417">
                            <span className="linenos">1417</span>
                        </a>
                        {"                "}
                        <span className="n">log_prints</span>
                        <span className="o">=</span>
                        <span className="n">log_prints</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1418">
                        <a href="#task-1418">
                            <span className="linenos">1418</span>
                        </a>
                        {"                "}
                        <span className="n">refresh_cache</span>
                        <span className="o">=</span>
                        <span className="n">refresh_cache</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1419">
                        <a href="#task-1419">
                            <span className="linenos">1419</span>
                        </a>
                        {"                "}
                        <span className="n">on_completion</span>
                        <span className="o">=</span>
                        <span className="n">on_completion</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1420">
                        <a href="#task-1420">
                            <span className="linenos">1420</span>
                        </a>
                        {"                "}
                        <span className="n">on_failure</span>
                        <span className="o">=</span>
                        <span className="n">on_failure</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1421">
                        <a href="#task-1421">
                            <span className="linenos">1421</span>
                        </a>
                        {"                "}
                        <span className="n">retry_condition_fn</span>
                        <span className="o">=</span>
                        <span className="n">retry_condition_fn</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1422">
                        <a href="#task-1422">
                            <span className="linenos">1422</span>
                        </a>
                        {"                "}
                        <span className="n">viz_return_value</span>
                        <span className="o">=</span>
                        <span className="n">viz_return_value</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1423">
                        <a href="#task-1423">
                            <span className="linenos">1423</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="task-1424">
                        <a href="#task-1424">
                            <span className="linenos">1424</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="task-1425">
                        <a href="#task-1425">
                            <span className="linenos">1425</span>
                        </a>
                        {"    "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="task-1426">
                        <a href="#task-1426">
                            <span className="linenos">1426</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="n">cast</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="task-1427">
                        <a href="#task-1427">
                            <span className="linenos">1427</span>
                        </a>
                        {"            "}
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="n">Callable</span>
                        <span className="p">[</span>
                        <span className="n">P</span>
                        <span className="p">,</span> <span className="n">R</span>
                        <span className="p">]],</span> <span className="n">Task</span>
                        <span className="p">[</span>
                        <span className="n">P</span>
                        <span className="p">,</span> <span className="n">R</span>
                        <span className="p">]],</span>
                        {"\n"}
                    </span>
                    <span id="task-1428">
                        <a href="#task-1428">
                            <span className="linenos">1428</span>
                        </a>
                        {"            "}
                        <span className="n">partial</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="task-1429">
                        <a href="#task-1429">
                            <span className="linenos">1429</span>
                        </a>
                        {"                "}
                        <span className="n">task</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1430">
                        <a href="#task-1430">
                            <span className="linenos">1430</span>
                        </a>
                        {"                "}
                        <span className="n">name</span>
                        <span className="o">=</span>
                        <span className="n">name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1431">
                        <a href="#task-1431">
                            <span className="linenos">1431</span>
                        </a>
                        {"                "}
                        <span className="n">description</span>
                        <span className="o">=</span>
                        <span className="n">description</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1432">
                        <a href="#task-1432">
                            <span className="linenos">1432</span>
                        </a>
                        {"                "}
                        <span className="n">tags</span>
                        <span className="o">=</span>
                        <span className="n">tags</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1433">
                        <a href="#task-1433">
                            <span className="linenos">1433</span>
                        </a>
                        {"                "}
                        <span className="n">version</span>
                        <span className="o">=</span>
                        <span className="n">version</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1434">
                        <a href="#task-1434">
                            <span className="linenos">1434</span>
                        </a>
                        {"                "}
                        <span className="n">cache_key_fn</span>
                        <span className="o">=</span>
                        <span className="n">cache_key_fn</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1435">
                        <a href="#task-1435">
                            <span className="linenos">1435</span>
                        </a>
                        {"                "}
                        <span className="n">cache_expiration</span>
                        <span className="o">=</span>
                        <span className="n">cache_expiration</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1436">
                        <a href="#task-1436">
                            <span className="linenos">1436</span>
                        </a>
                        {"                "}
                        <span className="n">task_run_name</span>
                        <span className="o">=</span>
                        <span className="n">task_run_name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1437">
                        <a href="#task-1437">
                            <span className="linenos">1437</span>
                        </a>
                        {"                "}
                        <span className="n">retries</span>
                        <span className="o">=</span>
                        <span className="n">retries</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1438">
                        <a href="#task-1438">
                            <span className="linenos">1438</span>
                        </a>
                        {"                "}
                        <span className="n">retry_delay_seconds</span>
                        <span className="o">=</span>
                        <span className="n">retry_delay_seconds</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1439">
                        <a href="#task-1439">
                            <span className="linenos">1439</span>
                        </a>
                        {"                "}
                        <span className="n">retry_jitter_factor</span>
                        <span className="o">=</span>
                        <span className="n">retry_jitter_factor</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1440">
                        <a href="#task-1440">
                            <span className="linenos">1440</span>
                        </a>
                        {"                "}
                        <span className="n">persist_result</span>
                        <span className="o">=</span>
                        <span className="n">persist_result</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1441">
                        <a href="#task-1441">
                            <span className="linenos">1441</span>
                        </a>
                        {"                "}
                        <span className="n">result_storage</span>
                        <span className="o">=</span>
                        <span className="n">result_storage</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1442">
                        <a href="#task-1442">
                            <span className="linenos">1442</span>
                        </a>
                        {"                "}
                        <span className="n">result_storage_key</span>
                        <span className="o">=</span>
                        <span className="n">result_storage_key</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1443">
                        <a href="#task-1443">
                            <span className="linenos">1443</span>
                        </a>
                        {"                "}
                        <span className="n">result_serializer</span>
                        <span className="o">=</span>
                        <span className="n">result_serializer</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1444">
                        <a href="#task-1444">
                            <span className="linenos">1444</span>
                        </a>
                        {"                "}
                        <span className="n">cache_result_in_memory</span>
                        <span className="o">=</span>
                        <span className="n">cache_result_in_memory</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1445">
                        <a href="#task-1445">
                            <span className="linenos">1445</span>
                        </a>
                        {"                "}
                        <span className="n">timeout_seconds</span>
                        <span className="o">=</span>
                        <span className="n">timeout_seconds</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1446">
                        <a href="#task-1446">
                            <span className="linenos">1446</span>
                        </a>
                        {"                "}
                        <span className="n">log_prints</span>
                        <span className="o">=</span>
                        <span className="n">log_prints</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1447">
                        <a href="#task-1447">
                            <span className="linenos">1447</span>
                        </a>
                        {"                "}
                        <span className="n">refresh_cache</span>
                        <span className="o">=</span>
                        <span className="n">refresh_cache</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1448">
                        <a href="#task-1448">
                            <span className="linenos">1448</span>
                        </a>
                        {"                "}
                        <span className="n">on_completion</span>
                        <span className="o">=</span>
                        <span className="n">on_completion</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1449">
                        <a href="#task-1449">
                            <span className="linenos">1449</span>
                        </a>
                        {"                "}
                        <span className="n">on_failure</span>
                        <span className="o">=</span>
                        <span className="n">on_failure</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1450">
                        <a href="#task-1450">
                            <span className="linenos">1450</span>
                        </a>
                        {"                "}
                        <span className="n">retry_condition_fn</span>
                        <span className="o">=</span>
                        <span className="n">retry_condition_fn</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1451">
                        <a href="#task-1451">
                            <span className="linenos">1451</span>
                        </a>
                        {"                "}
                        <span className="n">viz_return_value</span>
                        <span className="o">=</span>
                        <span className="n">viz_return_value</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="task-1452">
                        <a href="#task-1452">
                            <span className="linenos">1452</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="task-1453">
                        <a href="#task-1453">
                            <span className="linenos">1453</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                </pre>
            </div>
            <div className="docstring">
                <p>
                    Decorator to designate a function as a task in a Prefect workflow.
                </p>
                <p>
                    This decorator may be used for asynchronous or synchronous functions.
                </p>
                <p>
                    Args: name: An optional name for the task; if not provided, the name
                    will be inferred from the given function. description: An optional
                    string description for the task. tags: An optional set of tags to be
                    associated with runs of this task. These tags are combined with any
                    tags defined by a{" "}
                    <code>
                        <a href="#tags">prefect.tags</a>
                    </code>{" "}
                    context at task runtime. version: An optional string specifying the
                    version of this task definition cache_key_fn: An optional callable
                    that, given the task run context and call parameters, generates a
                    string key; if the key matches a previous completed state, that state
                    result will be restored instead of running the task again.
                    cache_expiration: An optional amount of time indicating how long
                    cached states for this task should be restorable; if not provided,
                    cached states will never expire. task_run_name: An optional name to
                    distinguish runs of this task; this name can be provided as a string
                    template with the task's keyword arguments as variables, or a function
                    that returns a string. retries: An optional number of times to retry
                    on task run failure retry_delay_seconds: Optionally configures how
                    long to wait before retrying the task after failure. This is only
                    applicable if <code>retries</code> is nonzero. This setting can either
                    be a number of seconds, a list of retry delays, or a callable that,
                    given the total number of retries, generates a list of retry delays.
                    If a number of seconds, that delay will be applied to all retries. If
                    a list, each retry will wait for the corresponding delay before
                    retrying. When passing a callable or a list, the number of configured
                    retry delays cannot exceed 50. retry_jitter_factor: An optional factor
                    that defines the factor to which a retry can be jittered in order to
                    avoid a "thundering herd". persist_result: An optional toggle
                    indicating whether the result of this task should be persisted to
                    result storage. Defaults to <code>None</code>, which indicates that
                    Prefect should choose whether the result should be persisted depending
                    on the features being used. result_storage: An optional block to use
                    to persist the result of this task. Defaults to the value set in the
                    flow the task is called in. result_storage_key: An optional key to
                    store the result in storage at when persisted. Defaults to a unique
                    identifier. result_serializer: An optional serializer to use to
                    serialize the result of this task for persistence. Defaults to the
                    value set in the flow the task is called in. timeout_seconds: An
                    optional number of seconds indicating a maximum runtime for the task.
                    If the task exceeds this runtime, it will be marked as failed.
                    log_prints: If set, <code>print</code> statements in the task will be
                    redirected to the Prefect logger for the task run. Defaults to{" "}
                    <code>None</code>, which indicates that the value from the flow should
                    be used. refresh_cache: If set, cached results for the cache key are
                    not used. Defaults to <code>None</code>, which indicates that a cached
                    result from a previous execution with matching cache key is used.
                    on_failure: An optional list of callables to run when the task enters
                    a failed state. on_completion: An optional list of callables to run
                    when the task enters a completed state. retry_condition_fn: An
                    optional callable run when a task run returns a Failed state. Should
                    return <code>True</code> if the task should continue to its retry
                    policy (e.g.
                    <code>retries=3</code>), and <code>False</code> if the task should end
                    as failed. Defaults to <code>None</code>, indicating the task should
                    always continue to its retry policy. viz_return_value: An optional
                    value to return when the task dependency tree is visualized.
                </p>
                <p>
                    Returns: A callable{" "}
                    <code>
                        <a href="#Task">Task</a>
                    </code>{" "}
                    object which, when called, will submit the task for execution.
                </p>
                <p>Examples: Define a simple task</p>
                <pre>
                    <code>
                        &gt;&gt;&gt; @task{"\n"}&gt;&gt;&gt; def add(x, y):{"\n"}
                        &gt;&gt;&gt;{"     "}return x + y{"\n"}
                        {"\n"}Define an async task{"\n"}
                        {"\n"}&gt;&gt;&gt; @task{"\n"}&gt;&gt;&gt; async def add(x, y):
                        {"\n"}&gt;&gt;&gt;{"     "}return x + y{"\n"}
                        {"\n"}Define a task with tags and a description{"\n"}
                        {"\n"}&gt;&gt;&gt; @task(tags={"{"}"a", "b"{"}"}, description="This
                        task is empty but its my first!"){"\n"}&gt;&gt;&gt; def my_task():
                        {"\n"}&gt;&gt;&gt;{"     "}pass{"\n"}
                        {"\n"}Define a task with a custom name{"\n"}
                        {"\n"}&gt;&gt;&gt; @task(name="The Ultimate Task"){"\n"}&gt;&gt;&gt;
                        def my_task():{"\n"}&gt;&gt;&gt;{"     "}pass{"\n"}
                        {"\n"}Define a task that retries 3 times with a 5 second delay
                        between attempts{"\n"}
                        {"\n"}&gt;&gt;&gt; from random import randint{"\n"}&gt;&gt;&gt;
                        {"\n"}&gt;&gt;&gt; @task(retries=3, retry_delay_seconds=5){"\n"}
                        &gt;&gt;&gt; def my_task():{"\n"}&gt;&gt;&gt;{"     "}x = randint(0,
                        5){"\n"}&gt;&gt;&gt;{"     "}if x &gt;= 3:{"  "}# Make a task that
                        fails sometimes{"\n"}&gt;&gt;&gt;{"         "}raise
                        ValueError("Retry me please!"){"\n"}&gt;&gt;&gt;{"     "}return x
                        {"\n"}
                        {"\n"}Define a task that is cached for a day based on its inputs
                        {"\n"}
                        {"\n"}&gt;&gt;&gt; from prefect.tasks import task_input_hash{"\n"}
                        &gt;&gt;&gt; from datetime import timedelta{"\n"}&gt;&gt;&gt;{"\n"}
                        &gt;&gt;&gt; @task(cache_key_fn=task_input_hash,
                        cache_expiration=timedelta(days=1)){"\n"}&gt;&gt;&gt; def my_task():
                        {"\n"}&gt;&gt;&gt;{"     "}return "hello"{"\n"}
                    </code>
                </pre>
            </div>
        </section>
        <section id="Task">
            <input
                id="Task-view-source"
                className="view-source-toggle-state"
                type="checkbox"
                aria-hidden="true"
                tabIndex={-1}
            />
            <div className="attr class">
                <div className="decorator">
                    @PrefectObjectRegistry.register_instances
                </div>
                <span className="def">class</span>
                <span className="name">Task</span>
                <wbr />(<span className="base">typing.Generic[~P, ~R]</span>):
                <label className="view-source-button" htmlFor="Task-view-source">
                    <span>View Source</span>
                </label>
            </div>
            <a className="headerlink" href="#Task" />
            <div className="pdoc-code codehilite">
                <pre>
                    <span />
                    <span id="Task-129">
                        <a href="#Task-129">
                            <span className="linenos"> 129</span>
                        </a>
                        <span className="nd">@PrefectObjectRegistry</span>
                        <span className="o">.</span>
                        <span className="n">register_instances</span>
                        {"\n"}
                    </span>
                    <span id="Task-130">
                        <a href="#Task-130">
                            <span className="linenos"> 130</span>
                        </a>
                        <span className="k">class</span> <span className="nc">Task</span>
                        <span className="p">(</span>
                        <span className="n">Generic</span>
                        <span className="p">[</span>
                        <span className="n">P</span>
                        <span className="p">,</span> <span className="n">R</span>
                        <span className="p">]):</span>
                        {"\n"}
                    </span>
                    <span id="Task-131">
                        <a href="#Task-131">
                            <span className="linenos"> 131</span>
                        </a>
                        <span className="w">{"    "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="Task-132">
                        <a href="#Task-132">
                            <span className="linenos"> 132</span>
                        </a>
                        <span className="sd">{"    "}A Prefect task definition.</span>
                        {"\n"}
                    </span>
                    <span id="Task-133">
                        <a href="#Task-133">
                            <span className="linenos"> 133</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-134">
                        <a href="#Task-134">
                            <span className="linenos"> 134</span>
                        </a>
                        <span className="sd">{"    "}!!! note</span>
                        {"\n"}
                    </span>
                    <span id="Task-135">
                        <a href="#Task-135">
                            <span className="linenos"> 135</span>
                        </a>
                        <span className="sd">
                            {"        "}We recommend using [the `@task`
                            decorator][prefect.tasks.task] for most use-cases.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-136">
                        <a href="#Task-136">
                            <span className="linenos"> 136</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-137">
                        <a href="#Task-137">
                            <span className="linenos"> 137</span>
                        </a>
                        <span className="sd">
                            {"    "}Wraps a function with an entrypoint to the Prefect engine.
                            Calling this class within a flow function
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-138">
                        <a href="#Task-138">
                            <span className="linenos"> 138</span>
                        </a>
                        <span className="sd">{"    "}creates a new task run.</span>
                        {"\n"}
                    </span>
                    <span id="Task-139">
                        <a href="#Task-139">
                            <span className="linenos"> 139</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-140">
                        <a href="#Task-140">
                            <span className="linenos"> 140</span>
                        </a>
                        <span className="sd">
                            {"    "}To preserve the input and output types, we use the generic
                            type variables P and R for "Parameters" and
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-141">
                        <a href="#Task-141">
                            <span className="linenos"> 141</span>
                        </a>
                        <span className="sd">{"    "}"Returns" respectively.</span>
                        {"\n"}
                    </span>
                    <span id="Task-142">
                        <a href="#Task-142">
                            <span className="linenos"> 142</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-143">
                        <a href="#Task-143">
                            <span className="linenos"> 143</span>
                        </a>
                        <span className="sd">{"    "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="Task-144">
                        <a href="#Task-144">
                            <span className="linenos"> 144</span>
                        </a>
                        <span className="sd">
                            {"        "}fn: The function defining the task.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-145">
                        <a href="#Task-145">
                            <span className="linenos"> 145</span>
                        </a>
                        <span className="sd">
                            {"        "}name: An optional name for the task; if not provided,
                            the name will be inferred
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-146">
                        <a href="#Task-146">
                            <span className="linenos"> 146</span>
                        </a>
                        <span className="sd">{"            "}from the given function.</span>
                        {"\n"}
                    </span>
                    <span id="Task-147">
                        <a href="#Task-147">
                            <span className="linenos"> 147</span>
                        </a>
                        <span className="sd">
                            {"        "}description: An optional string description for the
                            task.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-148">
                        <a href="#Task-148">
                            <span className="linenos"> 148</span>
                        </a>
                        <span className="sd">
                            {"        "}tags: An optional set of tags to be associated with
                            runs of this task. These
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-149">
                        <a href="#Task-149">
                            <span className="linenos"> 149</span>
                        </a>
                        <span className="sd">
                            {"            "}tags are combined with any tags defined by a
                            `prefect.tags` context at
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-150">
                        <a href="#Task-150">
                            <span className="linenos"> 150</span>
                        </a>
                        <span className="sd">{"            "}task runtime.</span>
                        {"\n"}
                    </span>
                    <span id="Task-151">
                        <a href="#Task-151">
                            <span className="linenos"> 151</span>
                        </a>
                        <span className="sd">
                            {"        "}version: An optional string specifying the version of
                            this task definition
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-152">
                        <a href="#Task-152">
                            <span className="linenos"> 152</span>
                        </a>
                        <span className="sd">
                            {"        "}cache_key_fn: An optional callable that, given the
                            task run context and call
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-153">
                        <a href="#Task-153">
                            <span className="linenos"> 153</span>
                        </a>
                        <span className="sd">
                            {"            "}parameters, generates a string key; if the key
                            matches a previous completed
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-154">
                        <a href="#Task-154">
                            <span className="linenos"> 154</span>
                        </a>
                        <span className="sd">
                            {"            "}state, that state result will be restored instead
                            of running the task again.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-155">
                        <a href="#Task-155">
                            <span className="linenos"> 155</span>
                        </a>
                        <span className="sd">
                            {"        "}cache_expiration: An optional amount of time
                            indicating how long cached states
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-156">
                        <a href="#Task-156">
                            <span className="linenos"> 156</span>
                        </a>
                        <span className="sd">
                            {"            "}for this task should be restorable; if not
                            provided, cached states will
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-157">
                        <a href="#Task-157">
                            <span className="linenos"> 157</span>
                        </a>
                        <span className="sd">{"            "}never expire.</span>
                        {"\n"}
                    </span>
                    <span id="Task-158">
                        <a href="#Task-158">
                            <span className="linenos"> 158</span>
                        </a>
                        <span className="sd">
                            {"        "}task_run_name: An optional name to distinguish runs of
                            this task; this name can be provided
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-159">
                        <a href="#Task-159">
                            <span className="linenos"> 159</span>
                        </a>
                        <span className="sd">
                            {"            "}as a string template with the task's keyword
                            arguments as variables,
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-160">
                        <a href="#Task-160">
                            <span className="linenos"> 160</span>
                        </a>
                        <span className="sd">
                            {"            "}or a function that returns a string.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-161">
                        <a href="#Task-161">
                            <span className="linenos"> 161</span>
                        </a>
                        <span className="sd">
                            {"        "}retries: An optional number of times to retry on task
                            run failure.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-162">
                        <a href="#Task-162">
                            <span className="linenos"> 162</span>
                        </a>
                        <span className="sd">
                            {"        "}retry_delay_seconds: Optionally configures how long to
                            wait before retrying the
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-163">
                        <a href="#Task-163">
                            <span className="linenos"> 163</span>
                        </a>
                        <span className="sd">
                            {"            "}task after failure. This is only applicable if
                            `retries` is nonzero. This
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-164">
                        <a href="#Task-164">
                            <span className="linenos"> 164</span>
                        </a>
                        <span className="sd">
                            {"            "}setting can either be a number of seconds, a list
                            of retry delays, or a
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-165">
                        <a href="#Task-165">
                            <span className="linenos"> 165</span>
                        </a>
                        <span className="sd">
                            {"            "}callable that, given the total number of retries,
                            generates a list of retry
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-166">
                        <a href="#Task-166">
                            <span className="linenos"> 166</span>
                        </a>
                        <span className="sd">
                            {"            "}delays. If a number of seconds, that delay will be
                            applied to all retries.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-167">
                        <a href="#Task-167">
                            <span className="linenos"> 167</span>
                        </a>
                        <span className="sd">
                            {"            "}If a list, each retry will wait for the
                            corresponding delay before retrying.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-168">
                        <a href="#Task-168">
                            <span className="linenos"> 168</span>
                        </a>
                        <span className="sd">
                            {"            "}When passing a callable or a list, the number of
                            configured retry delays
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-169">
                        <a href="#Task-169">
                            <span className="linenos"> 169</span>
                        </a>
                        <span className="sd">{"            "}cannot exceed 50.</span>
                        {"\n"}
                    </span>
                    <span id="Task-170">
                        <a href="#Task-170">
                            <span className="linenos"> 170</span>
                        </a>
                        <span className="sd">
                            {"        "}retry_jitter_factor: An optional factor that defines
                            the factor to which a retry
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-171">
                        <a href="#Task-171">
                            <span className="linenos"> 171</span>
                        </a>
                        <span className="sd">
                            {"            "}can be jittered in order to avoid a "thundering
                            herd".
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-172">
                        <a href="#Task-172">
                            <span className="linenos"> 172</span>
                        </a>
                        <span className="sd">
                            {"        "}persist_result: An optional toggle indicating whether
                            the result of this task
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-173">
                        <a href="#Task-173">
                            <span className="linenos"> 173</span>
                        </a>
                        <span className="sd">
                            {"            "}should be persisted to result storage. Defaults to
                            `None`, which indicates
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-174">
                        <a href="#Task-174">
                            <span className="linenos"> 174</span>
                        </a>
                        <span className="sd">
                            {"            "}that Prefect should choose whether the result
                            should be persisted depending on
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-175">
                        <a href="#Task-175">
                            <span className="linenos"> 175</span>
                        </a>
                        <span className="sd">{"            "}the features being used.</span>
                        {"\n"}
                    </span>
                    <span id="Task-176">
                        <a href="#Task-176">
                            <span className="linenos"> 176</span>
                        </a>
                        <span className="sd">
                            {"        "}result_storage: An optional block to use to persist
                            the result of this task.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-177">
                        <a href="#Task-177">
                            <span className="linenos"> 177</span>
                        </a>
                        <span className="sd">
                            {"            "}Defaults to the value set in the flow the task is
                            called in.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-178">
                        <a href="#Task-178">
                            <span className="linenos"> 178</span>
                        </a>
                        <span className="sd">
                            {"        "}result_storage_key: An optional key to store the
                            result in storage at when persisted.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-179">
                        <a href="#Task-179">
                            <span className="linenos"> 179</span>
                        </a>
                        <span className="sd">
                            {"            "}Defaults to a unique identifier.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-180">
                        <a href="#Task-180">
                            <span className="linenos"> 180</span>
                        </a>
                        <span className="sd">
                            {"        "}result_serializer: An optional serializer to use to
                            serialize the result of this
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-181">
                        <a href="#Task-181">
                            <span className="linenos"> 181</span>
                        </a>
                        <span className="sd">
                            {"            "}task for persistence. Defaults to the value set in
                            the flow the task is
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-182">
                        <a href="#Task-182">
                            <span className="linenos"> 182</span>
                        </a>
                        <span className="sd">{"            "}called in.</span>
                        {"\n"}
                    </span>
                    <span id="Task-183">
                        <a href="#Task-183">
                            <span className="linenos"> 183</span>
                        </a>
                        <span className="sd">
                            {"        "}timeout_seconds: An optional number of seconds
                            indicating a maximum runtime for
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-184">
                        <a href="#Task-184">
                            <span className="linenos"> 184</span>
                        </a>
                        <span className="sd">
                            {"            "}the task. If the task exceeds this runtime, it
                            will be marked as failed.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-185">
                        <a href="#Task-185">
                            <span className="linenos"> 185</span>
                        </a>
                        <span className="sd">
                            {"        "}log_prints: If set, `print` statements in the task
                            will be redirected to the
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-186">
                        <a href="#Task-186">
                            <span className="linenos"> 186</span>
                        </a>
                        <span className="sd">
                            {"            "}Prefect logger for the task run. Defaults to
                            `None`, which indicates
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-187">
                        <a href="#Task-187">
                            <span className="linenos"> 187</span>
                        </a>
                        <span className="sd">
                            {"            "}that the value from the flow should be used.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-188">
                        <a href="#Task-188">
                            <span className="linenos"> 188</span>
                        </a>
                        <span className="sd">
                            {"        "}refresh_cache: If set, cached results for the cache
                            key are not used.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-189">
                        <a href="#Task-189">
                            <span className="linenos"> 189</span>
                        </a>
                        <span className="sd">
                            {"            "}Defaults to `None`, which indicates that a cached
                            result from a previous
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-190">
                        <a href="#Task-190">
                            <span className="linenos"> 190</span>
                        </a>
                        <span className="sd">
                            {"            "}execution with matching cache key is used.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-191">
                        <a href="#Task-191">
                            <span className="linenos"> 191</span>
                        </a>
                        <span className="sd">
                            {"        "}on_failure: An optional list of callables to run when
                            the task enters a failed state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-192">
                        <a href="#Task-192">
                            <span className="linenos"> 192</span>
                        </a>
                        <span className="sd">
                            {"        "}on_completion: An optional list of callables to run
                            when the task enters a completed state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-193">
                        <a href="#Task-193">
                            <span className="linenos"> 193</span>
                        </a>
                        <span className="sd">
                            {"        "}retry_condition_fn: An optional callable run when a
                            task run returns a Failed state. Should
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-194">
                        <a href="#Task-194">
                            <span className="linenos"> 194</span>
                        </a>
                        <span className="sd">
                            {"            "}return `True` if the task should continue to its
                            retry policy (e.g. `retries=3`), and `False` if the task
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-195">
                        <a href="#Task-195">
                            <span className="linenos"> 195</span>
                        </a>
                        <span className="sd">
                            {"            "}should end as failed. Defaults to `None`,
                            indicating the task should always continue
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-196">
                        <a href="#Task-196">
                            <span className="linenos"> 196</span>
                        </a>
                        <span className="sd">{"            "}to its retry policy.</span>
                        {"\n"}
                    </span>
                    <span id="Task-197">
                        <a href="#Task-197">
                            <span className="linenos"> 197</span>
                        </a>
                        <span className="sd">
                            {"        "}viz_return_value: An optional value to return when the
                            task dependency tree is visualized.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-198">
                        <a href="#Task-198">
                            <span className="linenos"> 198</span>
                        </a>
                        <span className="sd">{"    "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Task-199">
                        <a href="#Task-199">
                            <span className="linenos"> 199</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-200">
                        <a href="#Task-200">
                            <span className="linenos"> 200</span>
                        </a>
                        {"    "}
                        <span className="c1">
                            # NOTE: These parameters (types, defaults, and docstrings) should
                            be duplicated
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-201">
                        <a href="#Task-201">
                            <span className="linenos"> 201</span>
                        </a>
                        {"    "}
                        <span className="c1">
                            #{"       "}exactly in the @task decorator
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-202">
                        <a href="#Task-202">
                            <span className="linenos"> 202</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="fm">__init__</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-203">
                        <a href="#Task-203">
                            <span className="linenos"> 203</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-204">
                        <a href="#Task-204">
                            <span className="linenos"> 204</span>
                        </a>
                        {"        "}
                        <span className="n">fn</span>
                        <span className="p">:</span> <span className="n">Callable</span>
                        <span className="p">[</span>
                        <span className="n">P</span>
                        <span className="p">,</span> <span className="n">R</span>
                        <span className="p">],</span>
                        {"\n"}
                    </span>
                    <span id="Task-205">
                        <a href="#Task-205">
                            <span className="linenos"> 205</span>
                        </a>
                        {"        "}
                        <span className="n">name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-206">
                        <a href="#Task-206">
                            <span className="linenos"> 206</span>
                        </a>
                        {"        "}
                        <span className="n">description</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-207">
                        <a href="#Task-207">
                            <span className="linenos"> 207</span>
                        </a>
                        {"        "}
                        <span className="n">tags</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-208">
                        <a href="#Task-208">
                            <span className="linenos"> 208</span>
                        </a>
                        {"        "}
                        <span className="n">version</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-209">
                        <a href="#Task-209">
                            <span className="linenos"> 209</span>
                        </a>
                        {"        "}
                        <span className="n">cache_key_fn</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Task-210">
                        <a href="#Task-210">
                            <span className="linenos"> 210</span>
                        </a>
                        {"            "}
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="s2">"TaskRunContext"</span>
                        <span className="p">,</span> <span className="n">Dict</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">Any</span>
                        <span className="p">]],</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]]</span>
                        {"\n"}
                    </span>
                    <span id="Task-211">
                        <a href="#Task-211">
                            <span className="linenos"> 211</span>
                        </a>
                        {"        "}
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-212">
                        <a href="#Task-212">
                            <span className="linenos"> 212</span>
                        </a>
                        {"        "}
                        <span className="n">cache_expiration</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">datetime</span>
                        <span className="o">.</span>
                        <span className="n">timedelta</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-213">
                        <a href="#Task-213">
                            <span className="linenos"> 213</span>
                        </a>
                        {"        "}
                        <span className="n">task_run_name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[],</span> <span className="nb">str</span>
                        <span className="p">],</span> <span className="nb">str</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-214">
                        <a href="#Task-214">
                            <span className="linenos"> 214</span>
                        </a>
                        {"        "}
                        <span className="n">retries</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-215">
                        <a href="#Task-215">
                            <span className="linenos"> 215</span>
                        </a>
                        {"        "}
                        <span className="n">retry_delay_seconds</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Task-216">
                        <a href="#Task-216">
                            <span className="linenos"> 216</span>
                        </a>
                        {"            "}
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Task-217">
                        <a href="#Task-217">
                            <span className="linenos"> 217</span>
                        </a>
                        {"                "}
                        <span className="nb">float</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-218">
                        <a href="#Task-218">
                            <span className="linenos"> 218</span>
                        </a>
                        {"                "}
                        <span className="nb">int</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-219">
                        <a href="#Task-219">
                            <span className="linenos"> 219</span>
                        </a>
                        {"                "}
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="nb">float</span>
                        <span className="p">],</span>
                        {"\n"}
                    </span>
                    <span id="Task-220">
                        <a href="#Task-220">
                            <span className="linenos"> 220</span>
                        </a>
                        {"                "}
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="nb">int</span>
                        <span className="p">],</span> <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="nb">float</span>
                        <span className="p">]],</span>
                        {"\n"}
                    </span>
                    <span id="Task-221">
                        <a href="#Task-221">
                            <span className="linenos"> 221</span>
                        </a>
                        {"            "}
                        <span className="p">]</span>
                        {"\n"}
                    </span>
                    <span id="Task-222">
                        <a href="#Task-222">
                            <span className="linenos"> 222</span>
                        </a>
                        {"        "}
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-223">
                        <a href="#Task-223">
                            <span className="linenos"> 223</span>
                        </a>
                        {"        "}
                        <span className="n">retry_jitter_factor</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">float</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-224">
                        <a href="#Task-224">
                            <span className="linenos"> 224</span>
                        </a>
                        {"        "}
                        <span className="n">persist_result</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-225">
                        <a href="#Task-225">
                            <span className="linenos"> 225</span>
                        </a>
                        {"        "}
                        <span className="n">result_storage</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">ResultStorage</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-226">
                        <a href="#Task-226">
                            <span className="linenos"> 226</span>
                        </a>
                        {"        "}
                        <span className="n">result_serializer</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">ResultSerializer</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-227">
                        <a href="#Task-227">
                            <span className="linenos"> 227</span>
                        </a>
                        {"        "}
                        <span className="n">result_storage_key</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-228">
                        <a href="#Task-228">
                            <span className="linenos"> 228</span>
                        </a>
                        {"        "}
                        <span className="n">cache_result_in_memory</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-229">
                        <a href="#Task-229">
                            <span className="linenos"> 229</span>
                        </a>
                        {"        "}
                        <span className="n">timeout_seconds</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">,</span> <span className="nb">float</span>
                        <span className="p">,</span> <span className="kc">None</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-230">
                        <a href="#Task-230">
                            <span className="linenos"> 230</span>
                        </a>
                        {"        "}
                        <span className="n">log_prints</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">False</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-231">
                        <a href="#Task-231">
                            <span className="linenos"> 231</span>
                        </a>
                        {"        "}
                        <span className="n">refresh_cache</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-232">
                        <a href="#Task-232">
                            <span className="linenos"> 232</span>
                        </a>
                        {"        "}
                        <span className="n">on_completion</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="s2">"Task"</span>
                        <span className="p">,</span> <span className="n">TaskRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-233">
                        <a href="#Task-233">
                            <span className="linenos"> 233</span>
                        </a>
                        {"        "}
                        <span className="n">on_failure</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="s2">"Task"</span>
                        <span className="p">,</span> <span className="n">TaskRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-234">
                        <a href="#Task-234">
                            <span className="linenos"> 234</span>
                        </a>
                        {"        "}
                        <span className="n">retry_condition_fn</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="s2">"Task"</span>
                        <span className="p">,</span> <span className="n">TaskRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="nb">bool</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-235">
                        <a href="#Task-235">
                            <span className="linenos"> 235</span>
                        </a>
                        {"        "}
                        <span className="n">viz_return_value</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Any</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-236">
                        <a href="#Task-236">
                            <span className="linenos"> 236</span>
                        </a>
                        {"    "}
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Task-237">
                        <a href="#Task-237">
                            <span className="linenos"> 237</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # Validate if hook passed is list and contains callables
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-238">
                        <a href="#Task-238">
                            <span className="linenos"> 238</span>
                        </a>
                        {"        "}
                        <span className="n">hook_categories</span>{" "}
                        <span className="o">=</span> <span className="p">[</span>
                        <span className="n">on_completion</span>
                        <span className="p">,</span> <span className="n">on_failure</span>
                        <span className="p">]</span>
                        {"\n"}
                    </span>
                    <span id="Task-239">
                        <a href="#Task-239">
                            <span className="linenos"> 239</span>
                        </a>
                        {"        "}
                        <span className="n">
                            hook_names
                        </span> <span className="o">=</span> <span className="p">[</span>
                        <span className="s2">"on_completion"</span>
                        <span className="p">,</span>{" "}
                        <span className="s2">"on_failure"</span>
                        <span className="p">]</span>
                        {"\n"}
                    </span>
                    <span id="Task-240">
                        <a href="#Task-240">
                            <span className="linenos"> 240</span>
                        </a>
                        {"        "}
                        <span className="k">for</span> <span className="n">hooks</span>
                        <span className="p">
                            ,
                        </span> <span className="n">hook_name</span>{" "}
                        <span className="ow">in</span> <span className="nb">zip</span>
                        <span className="p">(</span>
                        <span className="n">hook_categories</span>
                        <span className="p">,</span> <span className="n">hook_names</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Task-241">
                        <a href="#Task-241">
                            <span className="linenos"> 241</span>
                        </a>
                        {"            "}
                        <span className="k">if</span> <span className="n">hooks</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-242">
                        <a href="#Task-242">
                            <span className="linenos"> 242</span>
                        </a>
                        {"                "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">hooks</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-243">
                        <a href="#Task-243">
                            <span className="linenos"> 243</span>
                        </a>
                        {"                    "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">ValueError</span>
                        <span className="p">(</span>
                        <span className="sa">f</span>
                        <span className="s2">"Empty list passed for '</span>
                        <span className="si">{"{"}</span>
                        <span className="n">hook_name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">'"</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-244">
                        <a href="#Task-244">
                            <span className="linenos"> 244</span>
                        </a>
                        {"                "}
                        <span className="k">try</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-245">
                        <a href="#Task-245">
                            <span className="linenos"> 245</span>
                        </a>
                        {"                    "}
                        <span className="n">hooks</span> <span className="o">=</span>{" "}
                        <span className="nb">list</span>
                        <span className="p">(</span>
                        <span className="n">hooks</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-246">
                        <a href="#Task-246">
                            <span className="linenos"> 246</span>
                        </a>
                        {"                "}
                        <span className="k">except</span>{" "}
                        <span className="ne">TypeError</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-247">
                        <a href="#Task-247">
                            <span className="linenos"> 247</span>
                        </a>
                        {"                    "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">TypeError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-248">
                        <a href="#Task-248">
                            <span className="linenos"> 248</span>
                        </a>
                        {"                        "}
                        <span className="sa">f</span>
                        <span className="s2">"Expected iterable for '</span>
                        <span className="si">{"{"}</span>
                        <span className="n">hook_name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">'; got"</span>
                        {"\n"}
                    </span>
                    <span id="Task-249">
                        <a href="#Task-249">
                            <span className="linenos"> 249</span>
                        </a>
                        {"                        "}
                        <span className="sa">f</span>
                        <span className="s2">" </span>
                        <span className="si">{"{"}</span>
                        <span className="nb">type</span>
                        <span className="p">(</span>
                        <span className="n">hooks</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="vm">__name__</span>
                        <span className="si">{"}"}</span>
                        <span className="s2"> instead. Please provide a list of"</span>
                        {"\n"}
                    </span>
                    <span id="Task-250">
                        <a href="#Task-250">
                            <span className="linenos"> 250</span>
                        </a>
                        {"                        "}
                        <span className="sa">f</span>
                        <span className="s2">" hooks to '</span>
                        <span className="si">{"{"}</span>
                        <span className="n">hook_name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">':</span>
                        <span className="se">\n\n</span>
                        <span className="s2">"</span>
                        {"\n"}
                    </span>
                    <span id="Task-251">
                        <a href="#Task-251">
                            <span className="linenos"> 251</span>
                        </a>
                        {"                        "}
                        <span className="sa">f</span>
                        <span className="s2">"@flow(</span>
                        <span className="si">{"{"}</span>
                        <span className="n">hook_name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">=[hook1, hook2])</span>
                        <span className="se">\n</span>
                        <span className="s2">def"</span>
                        {"\n"}
                    </span>
                    <span id="Task-252">
                        <a href="#Task-252">
                            <span className="linenos"> 252</span>
                        </a>
                        {"                        "}
                        <span className="s2">" my_flow():</span>
                        <span className="se">\n\t</span>
                        <span className="s2">pass"</span>
                        {"\n"}
                    </span>
                    <span id="Task-253">
                        <a href="#Task-253">
                            <span className="linenos"> 253</span>
                        </a>
                        {"                    "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-254">
                        <a href="#Task-254">
                            <span className="linenos"> 254</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-255">
                        <a href="#Task-255">
                            <span className="linenos"> 255</span>
                        </a>
                        {"                "}
                        <span className="k">for</span> <span className="n">hook</span>{" "}
                        <span className="ow">in</span> <span className="n">hooks</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-256">
                        <a href="#Task-256">
                            <span className="linenos"> 256</span>
                        </a>
                        {"                    "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="nb">callable</span>
                        <span className="p">(</span>
                        <span className="n">hook</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Task-257">
                        <a href="#Task-257">
                            <span className="linenos"> 257</span>
                        </a>
                        {"                        "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">TypeError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-258">
                        <a href="#Task-258">
                            <span className="linenos"> 258</span>
                        </a>
                        {"                            "}
                        <span className="sa">f</span>
                        <span className="s2">"Expected callables in '</span>
                        <span className="si">{"{"}</span>
                        <span className="n">hook_name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">'; got"</span>
                        {"\n"}
                    </span>
                    <span id="Task-259">
                        <a href="#Task-259">
                            <span className="linenos"> 259</span>
                        </a>
                        {"                            "}
                        <span className="sa">f</span>
                        <span className="s2">" </span>
                        <span className="si">{"{"}</span>
                        <span className="nb">type</span>
                        <span className="p">(</span>
                        <span className="n">hook</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="vm">__name__</span>
                        <span className="si">{"}"}</span>
                        <span className="s2"> instead. Please provide a list of"</span>
                        {"\n"}
                    </span>
                    <span id="Task-260">
                        <a href="#Task-260">
                            <span className="linenos"> 260</span>
                        </a>
                        {"                            "}
                        <span className="sa">f</span>
                        <span className="s2">" hooks to '</span>
                        <span className="si">{"{"}</span>
                        <span className="n">hook_name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">':</span>
                        <span className="se">\n\n</span>
                        <span className="s2">"</span>
                        {"\n"}
                    </span>
                    <span id="Task-261">
                        <a href="#Task-261">
                            <span className="linenos"> 261</span>
                        </a>
                        {"                            "}
                        <span className="sa">f</span>
                        <span className="s2">"@flow(</span>
                        <span className="si">{"{"}</span>
                        <span className="n">hook_name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">=[hook1, hook2])</span>
                        <span className="se">\n</span>
                        <span className="s2">def"</span>
                        {"\n"}
                    </span>
                    <span id="Task-262">
                        <a href="#Task-262">
                            <span className="linenos"> 262</span>
                        </a>
                        {"                            "}
                        <span className="s2">" my_flow():</span>
                        <span className="se">\n\t</span>
                        <span className="s2">pass"</span>
                        {"\n"}
                    </span>
                    <span id="Task-263">
                        <a href="#Task-263">
                            <span className="linenos"> 263</span>
                        </a>
                        {"                        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-264">
                        <a href="#Task-264">
                            <span className="linenos"> 264</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-265">
                        <a href="#Task-265">
                            <span className="linenos"> 265</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="nb">callable</span>
                        <span className="p">(</span>
                        <span className="n">fn</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Task-266">
                        <a href="#Task-266">
                            <span className="linenos"> 266</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">TypeError</span>
                        <span className="p">(</span>
                        <span className="s2">"'fn' must be callable"</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-267">
                        <a href="#Task-267">
                            <span className="linenos"> 267</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-268">
                        <a href="#Task-268">
                            <span className="linenos"> 268</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">
                            description
                        </span> <span className="o">=</span>{" "}
                        <span className="n">description</span>{" "}
                        <span className="ow">or</span> <span className="n">inspect</span>
                        <span className="o">.</span>
                        <span className="n">getdoc</span>
                        <span className="p">(</span>
                        <span className="n">fn</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-269">
                        <a href="#Task-269">
                            <span className="linenos"> 269</span>
                        </a>
                        {"        "}
                        <span className="n">update_wrapper</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">,</span> <span className="n">fn</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-270">
                        <a href="#Task-270">
                            <span className="linenos"> 270</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span> <span className="o">=</span>{" "}
                        <span className="n">fn</span>
                        {"\n"}
                    </span>
                    <span id="Task-271">
                        <a href="#Task-271">
                            <span className="linenos"> 271</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">isasync</span> <span className="o">=</span>{" "}
                        <span className="n">inspect</span>
                        <span className="o">.</span>
                        <span className="n">iscoroutinefunction</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-272">
                        <a href="#Task-272">
                            <span className="linenos"> 272</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-273">
                        <a href="#Task-273">
                            <span className="linenos"> 273</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">name</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-274">
                        <a href="#Task-274">
                            <span className="linenos"> 274</span>
                        </a>
                        {"            "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="nb">hasattr</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">,</span> <span className="s2">"__name__"</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Task-275">
                        <a href="#Task-275">
                            <span className="linenos"> 275</span>
                        </a>
                        {"                "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span> <span className="o">=</span>{" "}
                        <span className="nb">type</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="vm">__name__</span>
                        {"\n"}
                    </span>
                    <span id="Task-276">
                        <a href="#Task-276">
                            <span className="linenos"> 276</span>
                        </a>
                        {"            "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-277">
                        <a href="#Task-277">
                            <span className="linenos"> 277</span>
                        </a>
                        {"                "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span> <span className="o">=</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="o">.</span>
                        <span className="vm">__name__</span>
                        {"\n"}
                    </span>
                    <span id="Task-278">
                        <a href="#Task-278">
                            <span className="linenos"> 278</span>
                        </a>
                        {"        "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-279">
                        <a href="#Task-279">
                            <span className="linenos"> 279</span>
                        </a>
                        {"            "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span> <span className="o">=</span>{" "}
                        <span className="n">name</span>
                        {"\n"}
                    </span>
                    <span id="Task-280">
                        <a href="#Task-280">
                            <span className="linenos"> 280</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-281">
                        <a href="#Task-281">
                            <span className="linenos"> 281</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">task_run_name</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-282">
                        <a href="#Task-282">
                            <span className="linenos"> 282</span>
                        </a>
                        {"            "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="nb">isinstance</span>
                        <span className="p">(</span>
                        <span className="n">task_run_name</span>
                        <span className="p">,</span> <span className="nb">str</span>
                        <span className="p">)</span> <span className="ow">and</span>{" "}
                        <span className="ow">not</span> <span className="nb">callable</span>
                        <span className="p">(</span>
                        <span className="n">task_run_name</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Task-283">
                        <a href="#Task-283">
                            <span className="linenos"> 283</span>
                        </a>
                        {"                "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">TypeError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-284">
                        <a href="#Task-284">
                            <span className="linenos"> 284</span>
                        </a>
                        {"                    "}
                        <span className="s2">
                            "Expected string or callable for 'task_run_name'; got"
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-285">
                        <a href="#Task-285">
                            <span className="linenos"> 285</span>
                        </a>
                        {"                    "}
                        <span className="sa">f</span>
                        <span className="s2">" </span>
                        <span className="si">{"{"}</span>
                        <span className="nb">type</span>
                        <span className="p">(</span>
                        <span className="n">task_run_name</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="vm">__name__</span>
                        <span className="si">{"}"}</span>
                        <span className="s2"> instead."</span>
                        {"\n"}
                    </span>
                    <span id="Task-286">
                        <a href="#Task-286">
                            <span className="linenos"> 286</span>
                        </a>
                        {"                "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-287">
                        <a href="#Task-287">
                            <span className="linenos"> 287</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">task_run_name</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">task_run_name</span>
                        {"\n"}
                    </span>
                    <span id="Task-288">
                        <a href="#Task-288">
                            <span className="linenos"> 288</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-289">
                        <a href="#Task-289">
                            <span className="linenos"> 289</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">version</span> <span className="o">=</span>{" "}
                        <span className="n">version</span>
                        {"\n"}
                    </span>
                    <span id="Task-290">
                        <a href="#Task-290">
                            <span className="linenos"> 290</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">
                            log_prints
                        </span> <span className="o">=</span>{" "}
                        <span className="n">log_prints</span>
                        {"\n"}
                    </span>
                    <span id="Task-291">
                        <a href="#Task-291">
                            <span className="linenos"> 291</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-292">
                        <a href="#Task-292">
                            <span className="linenos"> 292</span>
                        </a>
                        {"        "}
                        <span className="n">raise_for_reserved_arguments</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">,</span> <span className="p">[</span>
                        <span className="s2">"return_state"</span>
                        <span className="p">,</span> <span className="s2">"wait_for"</span>
                        <span className="p">])</span>
                        {"\n"}
                    </span>
                    <span id="Task-293">
                        <a href="#Task-293">
                            <span className="linenos"> 293</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-294">
                        <a href="#Task-294">
                            <span className="linenos"> 294</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">tags</span> <span className="o">=</span>{" "}
                        <span className="nb">set</span>
                        <span className="p">(</span>
                        <span className="n">tags</span> <span className="k">if</span>{" "}
                        <span className="n">tags</span> <span className="k">else</span>{" "}
                        <span className="p">[])</span>
                        {"\n"}
                    </span>
                    <span id="Task-295">
                        <a href="#Task-295">
                            <span className="linenos"> 295</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-296">
                        <a href="#Task-296">
                            <span className="linenos"> 296</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="nb">hasattr</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">,</span>{" "}
                        <span className="s2">"__qualname__"</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Task-297">
                        <a href="#Task-297">
                            <span className="linenos"> 297</span>
                        </a>
                        {"            "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">
                            task_key
                        </span> <span className="o">=</span>{" "}
                        <span className="n">to_qualified_name</span>
                        <span className="p">(</span>
                        <span className="nb">type</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">))</span>
                        {"\n"}
                    </span>
                    <span id="Task-298">
                        <a href="#Task-298">
                            <span className="linenos"> 298</span>
                        </a>
                        {"        "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-299">
                        <a href="#Task-299">
                            <span className="linenos"> 299</span>
                        </a>
                        {"            "}
                        <span className="k">try</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-300">
                        <a href="#Task-300">
                            <span className="linenos"> 300</span>
                        </a>
                        {"                "}
                        <span className="n">task_origin_hash</span>{" "}
                        <span className="o">=</span> <span className="n">hash_objects</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-301">
                        <a href="#Task-301">
                            <span className="linenos"> 301</span>
                        </a>
                        {"                    "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="p">,</span> <span className="n">os</span>
                        <span className="o">.</span>
                        <span className="n">path</span>
                        <span className="o">.</span>
                        <span className="n">abspath</span>
                        <span className="p">(</span>
                        <span className="n">inspect</span>
                        <span className="o">.</span>
                        <span className="n">getsourcefile</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">))</span>
                        {"\n"}
                    </span>
                    <span id="Task-302">
                        <a href="#Task-302">
                            <span className="linenos"> 302</span>
                        </a>
                        {"                "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-303">
                        <a href="#Task-303">
                            <span className="linenos"> 303</span>
                        </a>
                        {"            "}
                        <span className="k">except</span>{" "}
                        <span className="ne">TypeError</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-304">
                        <a href="#Task-304">
                            <span className="linenos"> 304</span>
                        </a>
                        {"                "}
                        <span className="n">task_origin_hash</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="s2">"unknown-source-file"</span>
                        {"\n"}
                    </span>
                    <span id="Task-305">
                        <a href="#Task-305">
                            <span className="linenos"> 305</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-306">
                        <a href="#Task-306">
                            <span className="linenos"> 306</span>
                        </a>
                        {"            "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">
                            task_key
                        </span> <span className="o">=</span> <span className="sa">f</span>
                        <span className="s2">"</span>
                        <span className="si">{"{"}</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="o">.</span>
                        <span className="vm">__qualname__</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">-</span>
                        <span className="si">{"{"}</span>
                        <span className="n">task_origin_hash</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">"</span>
                        {"\n"}
                    </span>
                    <span id="Task-307">
                        <a href="#Task-307">
                            <span className="linenos"> 307</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-308">
                        <a href="#Task-308">
                            <span className="linenos"> 308</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">
                            cache_key_fn
                        </span> <span className="o">=</span>{" "}
                        <span className="n">cache_key_fn</span>
                        {"\n"}
                    </span>
                    <span id="Task-309">
                        <a href="#Task-309">
                            <span className="linenos"> 309</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">cache_expiration</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">cache_expiration</span>
                        {"\n"}
                    </span>
                    <span id="Task-310">
                        <a href="#Task-310">
                            <span className="linenos"> 310</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">refresh_cache</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">refresh_cache</span>
                        {"\n"}
                    </span>
                    <span id="Task-311">
                        <a href="#Task-311">
                            <span className="linenos"> 311</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-312">
                        <a href="#Task-312">
                            <span className="linenos"> 312</span>
                        </a>
                        {"        "}
                        <span className="c1"># TaskRunPolicy settings</span>
                        {"\n"}
                    </span>
                    <span id="Task-313">
                        <a href="#Task-313">
                            <span className="linenos"> 313</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # TODO: We can instantiate a `TaskRunPolicy` and add Pydantic
                            bound checks to
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-314">
                        <a href="#Task-314">
                            <span className="linenos"> 314</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            #{"       "}validate that the user passes positive numbers here
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-315">
                        <a href="#Task-315">
                            <span className="linenos"> 315</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-316">
                        <a href="#Task-316">
                            <span className="linenos"> 316</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">retries</span> <span className="o">=</span>{" "}
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-317">
                        <a href="#Task-317">
                            <span className="linenos"> 317</span>
                        </a>
                        {"            "}
                        <span className="n">
                            retries
                        </span> <span className="k">if</span>{" "}
                        <span className="n">retries</span> <span className="ow">is</span>{" "}
                        <span className="ow">not</span> <span className="kc">None</span>{" "}
                        <span className="k">else</span>{" "}
                        <span className="n">PREFECT_TASK_DEFAULT_RETRIES</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Task-318">
                        <a href="#Task-318">
                            <span className="linenos"> 318</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-319">
                        <a href="#Task-319">
                            <span className="linenos"> 319</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">retry_delay_seconds</span>{" "}
                        <span className="ow">is</span> <span className="kc">None</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-320">
                        <a href="#Task-320">
                            <span className="linenos"> 320</span>
                        </a>
                        {"            "}
                        <span className="n">retry_delay_seconds</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Task-321">
                        <a href="#Task-321">
                            <span className="linenos"> 321</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-322">
                        <a href="#Task-322">
                            <span className="linenos"> 322</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="nb">callable</span>
                        <span className="p">(</span>
                        <span className="n">retry_delay_seconds</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Task-323">
                        <a href="#Task-323">
                            <span className="linenos"> 323</span>
                        </a>
                        {"            "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">retry_delay_seconds</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">retry_delay_seconds</span>
                        <span className="p">(</span>
                        <span className="n">retries</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-324">
                        <a href="#Task-324">
                            <span className="linenos"> 324</span>
                        </a>
                        {"        "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-325">
                        <a href="#Task-325">
                            <span className="linenos"> 325</span>
                        </a>
                        {"            "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">retry_delay_seconds</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">retry_delay_seconds</span>
                        {"\n"}
                    </span>
                    <span id="Task-326">
                        <a href="#Task-326">
                            <span className="linenos"> 326</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-327">
                        <a href="#Task-327">
                            <span className="linenos"> 327</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="nb">isinstance</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">retry_delay_seconds</span>
                        <span className="p">,</span> <span className="nb">list</span>
                        <span className="p">)</span> <span className="ow">and</span>{" "}
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-328">
                        <a href="#Task-328">
                            <span className="linenos"> 328</span>
                        </a>
                        {"            "}
                        <span className="nb">len</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">retry_delay_seconds</span>
                        <span className="p">)</span> <span className="o">&gt;</span>{" "}
                        <span className="mi">50</span>
                        {"\n"}
                    </span>
                    <span id="Task-329">
                        <a href="#Task-329">
                            <span className="linenos"> 329</span>
                        </a>
                        {"        "}
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Task-330">
                        <a href="#Task-330">
                            <span className="linenos"> 330</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">ValueError</span>
                        <span className="p">(</span>
                        <span className="s2">
                            "Can not configure more than 50 retry delays per task."
                        </span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-331">
                        <a href="#Task-331">
                            <span className="linenos"> 331</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-332">
                        <a href="#Task-332">
                            <span className="linenos"> 332</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">retry_jitter_factor</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span> <span className="ow">and</span>{" "}
                        <span className="n">retry_jitter_factor</span>{" "}
                        <span className="o">&lt;</span> <span className="mi">0</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-333">
                        <a href="#Task-333">
                            <span className="linenos"> 333</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">ValueError</span>
                        <span className="p">(</span>
                        <span className="s2">"`retry_jitter_factor` must be &gt;= 0."</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-334">
                        <a href="#Task-334">
                            <span className="linenos"> 334</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-335">
                        <a href="#Task-335">
                            <span className="linenos"> 335</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">retry_jitter_factor</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">retry_jitter_factor</span>
                        {"\n"}
                    </span>
                    <span id="Task-336">
                        <a href="#Task-336">
                            <span className="linenos"> 336</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">persist_result</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">persist_result</span>
                        {"\n"}
                    </span>
                    <span id="Task-337">
                        <a href="#Task-337">
                            <span className="linenos"> 337</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">result_storage</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">result_storage</span>
                        {"\n"}
                    </span>
                    <span id="Task-338">
                        <a href="#Task-338">
                            <span className="linenos"> 338</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">result_serializer</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">result_serializer</span>
                        {"\n"}
                    </span>
                    <span id="Task-339">
                        <a href="#Task-339">
                            <span className="linenos"> 339</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">result_storage_key</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">result_storage_key</span>
                        {"\n"}
                    </span>
                    <span id="Task-340">
                        <a href="#Task-340">
                            <span className="linenos"> 340</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">cache_result_in_memory</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">cache_result_in_memory</span>
                        {"\n"}
                    </span>
                    <span id="Task-341">
                        <a href="#Task-341">
                            <span className="linenos"> 341</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">timeout_seconds</span>{" "}
                        <span className="o">=</span> <span className="nb">float</span>
                        <span className="p">(</span>
                        <span className="n">timeout_seconds</span>
                        <span className="p">)</span> <span className="k">if</span>{" "}
                        <span className="n">timeout_seconds</span>{" "}
                        <span className="k">else</span> <span className="kc">None</span>
                        {"\n"}
                    </span>
                    <span id="Task-342">
                        <a href="#Task-342">
                            <span className="linenos"> 342</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">on_completion</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">on_completion</span>
                        {"\n"}
                    </span>
                    <span id="Task-343">
                        <a href="#Task-343">
                            <span className="linenos"> 343</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">
                            on_failure
                        </span> <span className="o">=</span>{" "}
                        <span className="n">on_failure</span>
                        {"\n"}
                    </span>
                    <span id="Task-344">
                        <a href="#Task-344">
                            <span className="linenos"> 344</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-345">
                        <a href="#Task-345">
                            <span className="linenos"> 345</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # retry_condition_fn must be a callable or None. If it is neither,
                            raise a TypeError
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-346">
                        <a href="#Task-346">
                            <span className="linenos"> 346</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">retry_condition_fn</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span> <span className="ow">and</span>{" "}
                        <span className="ow">not</span> <span className="p">(</span>
                        <span className="nb">callable</span>
                        <span className="p">(</span>
                        <span className="n">retry_condition_fn</span>
                        <span className="p">)):</span>
                        {"\n"}
                    </span>
                    <span id="Task-347">
                        <a href="#Task-347">
                            <span className="linenos"> 347</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">TypeError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-348">
                        <a href="#Task-348">
                            <span className="linenos"> 348</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            "Expected `retry_condition_fn` to be callable, got"
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-349">
                        <a href="#Task-349">
                            <span className="linenos"> 349</span>
                        </a>
                        {"                "}
                        <span className="sa">f</span>
                        <span className="s2">" </span>
                        <span className="si">{"{"}</span>
                        <span className="nb">type</span>
                        <span className="p">(</span>
                        <span className="n">retry_condition_fn</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="vm">__name__</span>
                        <span className="si">{"}"}</span>
                        <span className="s2"> instead."</span>
                        {"\n"}
                    </span>
                    <span id="Task-350">
                        <a href="#Task-350">
                            <span className="linenos"> 350</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-351">
                        <a href="#Task-351">
                            <span className="linenos"> 351</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-352">
                        <a href="#Task-352">
                            <span className="linenos"> 352</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">retry_condition_fn</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">retry_condition_fn</span>
                        {"\n"}
                    </span>
                    <span id="Task-353">
                        <a href="#Task-353">
                            <span className="linenos"> 353</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">viz_return_value</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">viz_return_value</span>
                        {"\n"}
                    </span>
                    <span id="Task-354">
                        <a href="#Task-354">
                            <span className="linenos"> 354</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-355">
                        <a href="#Task-355">
                            <span className="linenos"> 355</span>
                        </a>
                        {"    "}
                        <span className="k">def</span>{" "}
                        <span className="nf">with_options</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-356">
                        <a href="#Task-356">
                            <span className="linenos"> 356</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-357">
                        <a href="#Task-357">
                            <span className="linenos"> 357</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-358">
                        <a href="#Task-358">
                            <span className="linenos"> 358</span>
                        </a>
                        {"        "}
                        <span className="n">name</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-359">
                        <a href="#Task-359">
                            <span className="linenos"> 359</span>
                        </a>
                        {"        "}
                        <span className="n">description</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-360">
                        <a href="#Task-360">
                            <span className="linenos"> 360</span>
                        </a>
                        {"        "}
                        <span className="n">tags</span>
                        <span className="p">:</span> <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-361">
                        <a href="#Task-361">
                            <span className="linenos"> 361</span>
                        </a>
                        {"        "}
                        <span className="n">cache_key_fn</span>
                        <span className="p">:</span> <span className="n">Callable</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Task-362">
                        <a href="#Task-362">
                            <span className="linenos"> 362</span>
                        </a>
                        {"            "}
                        <span className="p">[</span>
                        <span className="s2">"TaskRunContext"</span>
                        <span className="p">,</span> <span className="n">Dict</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">Any</span>
                        <span className="p">]],</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span>
                        {"\n"}
                    </span>
                    <span id="Task-363">
                        <a href="#Task-363">
                            <span className="linenos"> 363</span>
                        </a>
                        {"        "}
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-364">
                        <a href="#Task-364">
                            <span className="linenos"> 364</span>
                        </a>
                        {"        "}
                        <span className="n">task_run_name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[],</span> <span className="nb">str</span>
                        <span className="p">],</span> <span className="nb">str</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-365">
                        <a href="#Task-365">
                            <span className="linenos"> 365</span>
                        </a>
                        {"        "}
                        <span className="n">cache_expiration</span>
                        <span className="p">:</span> <span className="n">datetime</span>
                        <span className="o">.</span>
                        <span className="n">
                            timedelta
                        </span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-366">
                        <a href="#Task-366">
                            <span className="linenos"> 366</span>
                        </a>
                        {"        "}
                        <span className="n">retries</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">NotSet</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-367">
                        <a href="#Task-367">
                            <span className="linenos"> 367</span>
                        </a>
                        {"        "}
                        <span className="n">retry_delay_seconds</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Task-368">
                        <a href="#Task-368">
                            <span className="linenos"> 368</span>
                        </a>
                        {"            "}
                        <span className="nb">float</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-369">
                        <a href="#Task-369">
                            <span className="linenos"> 369</span>
                        </a>
                        {"            "}
                        <span className="nb">int</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-370">
                        <a href="#Task-370">
                            <span className="linenos"> 370</span>
                        </a>
                        {"            "}
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="nb">float</span>
                        <span className="p">],</span>
                        {"\n"}
                    </span>
                    <span id="Task-371">
                        <a href="#Task-371">
                            <span className="linenos"> 371</span>
                        </a>
                        {"            "}
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="nb">int</span>
                        <span className="p">],</span> <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="nb">float</span>
                        <span className="p">]],</span>
                        {"\n"}
                    </span>
                    <span id="Task-372">
                        <a href="#Task-372">
                            <span className="linenos"> 372</span>
                        </a>
                        {"        "}
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">NotSet</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-373">
                        <a href="#Task-373">
                            <span className="linenos"> 373</span>
                        </a>
                        {"        "}
                        <span className="n">retry_jitter_factor</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">float</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">NotSet</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-374">
                        <a href="#Task-374">
                            <span className="linenos"> 374</span>
                        </a>
                        {"        "}
                        <span className="n">persist_result</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">NotSet</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-375">
                        <a href="#Task-375">
                            <span className="linenos"> 375</span>
                        </a>
                        {"        "}
                        <span className="n">result_storage</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">ResultStorage</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">NotSet</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-376">
                        <a href="#Task-376">
                            <span className="linenos"> 376</span>
                        </a>
                        {"        "}
                        <span className="n">result_serializer</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">ResultSerializer</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">NotSet</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-377">
                        <a href="#Task-377">
                            <span className="linenos"> 377</span>
                        </a>
                        {"        "}
                        <span className="n">result_storage_key</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">NotSet</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-378">
                        <a href="#Task-378">
                            <span className="linenos"> 378</span>
                        </a>
                        {"        "}
                        <span className="n">cache_result_in_memory</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-379">
                        <a href="#Task-379">
                            <span className="linenos"> 379</span>
                        </a>
                        {"        "}
                        <span className="n">timeout_seconds</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">,</span> <span className="nb">float</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-380">
                        <a href="#Task-380">
                            <span className="linenos"> 380</span>
                        </a>
                        {"        "}
                        <span className="n">log_prints</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">NotSet</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-381">
                        <a href="#Task-381">
                            <span className="linenos"> 381</span>
                        </a>
                        {"        "}
                        <span className="n">refresh_cache</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">bool</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">NotSet</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-382">
                        <a href="#Task-382">
                            <span className="linenos"> 382</span>
                        </a>
                        {"        "}
                        <span className="n">on_completion</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Task-383">
                        <a href="#Task-383">
                            <span className="linenos"> 383</span>
                        </a>
                        {"            "}
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="s2">"Task"</span>
                        <span className="p">,</span> <span className="n">TaskRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Awaitable</span>
                        <span className="p">[</span>
                        <span className="kc">None</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]]</span>
                        {"\n"}
                    </span>
                    <span id="Task-384">
                        <a href="#Task-384">
                            <span className="linenos"> 384</span>
                        </a>
                        {"        "}
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-385">
                        <a href="#Task-385">
                            <span className="linenos"> 385</span>
                        </a>
                        {"        "}
                        <span className="n">on_failure</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Task-386">
                        <a href="#Task-386">
                            <span className="linenos"> 386</span>
                        </a>
                        {"            "}
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="s2">"Task"</span>
                        <span className="p">,</span> <span className="n">TaskRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">Awaitable</span>
                        <span className="p">[</span>
                        <span className="kc">None</span>
                        <span className="p">],</span> <span className="kc">None</span>
                        <span className="p">]]]</span>
                        {"\n"}
                    </span>
                    <span id="Task-387">
                        <a href="#Task-387">
                            <span className="linenos"> 387</span>
                        </a>
                        {"        "}
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-388">
                        <a href="#Task-388">
                            <span className="linenos"> 388</span>
                        </a>
                        {"        "}
                        <span className="n">retry_condition_fn</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Callable</span>
                        <span className="p">[[</span>
                        <span className="s2">"Task"</span>
                        <span className="p">,</span> <span className="n">TaskRun</span>
                        <span className="p">,</span> <span className="n">State</span>
                        <span className="p">],</span> <span className="nb">bool</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-389">
                        <a href="#Task-389">
                            <span className="linenos"> 389</span>
                        </a>
                        {"        "}
                        <span className="n">viz_return_value</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Any</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-390">
                        <a href="#Task-390">
                            <span className="linenos"> 390</span>
                        </a>
                        {"    "}
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Task-391">
                        <a href="#Task-391">
                            <span className="linenos"> 391</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="Task-392">
                        <a href="#Task-392">
                            <span className="linenos"> 392</span>
                        </a>
                        <span className="sd">
                            {"        "}Create a new task from the current object, updating
                            provided options.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-393">
                        <a href="#Task-393">
                            <span className="linenos"> 393</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-394">
                        <a href="#Task-394">
                            <span className="linenos"> 394</span>
                        </a>
                        <span className="sd">{"        "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="Task-395">
                        <a href="#Task-395">
                            <span className="linenos"> 395</span>
                        </a>
                        <span className="sd">
                            {"            "}name: A new name for the task.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-396">
                        <a href="#Task-396">
                            <span className="linenos"> 396</span>
                        </a>
                        <span className="sd">
                            {"            "}description: A new description for the task.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-397">
                        <a href="#Task-397">
                            <span className="linenos"> 397</span>
                        </a>
                        <span className="sd">
                            {"            "}tags: A new set of tags for the task. If given,
                            existing tags are ignored,
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-398">
                        <a href="#Task-398">
                            <span className="linenos"> 398</span>
                        </a>
                        <span className="sd">{"                "}not merged.</span>
                        {"\n"}
                    </span>
                    <span id="Task-399">
                        <a href="#Task-399">
                            <span className="linenos"> 399</span>
                        </a>
                        <span className="sd">
                            {"            "}cache_key_fn: A new cache key function for the
                            task.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-400">
                        <a href="#Task-400">
                            <span className="linenos"> 400</span>
                        </a>
                        <span className="sd">
                            {"            "}cache_expiration: A new cache expiration time for
                            the task.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-401">
                        <a href="#Task-401">
                            <span className="linenos"> 401</span>
                        </a>
                        <span className="sd">
                            {"            "}task_run_name: An optional name to distinguish
                            runs of this task; this name can be provided
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-402">
                        <a href="#Task-402">
                            <span className="linenos"> 402</span>
                        </a>
                        <span className="sd">
                            {"                "}as a string template with the task's keyword
                            arguments as variables,
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-403">
                        <a href="#Task-403">
                            <span className="linenos"> 403</span>
                        </a>
                        <span className="sd">
                            {"                "}or a function that returns a string.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-404">
                        <a href="#Task-404">
                            <span className="linenos"> 404</span>
                        </a>
                        <span className="sd">
                            {"            "}retries: A new number of times to retry on task
                            run failure.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-405">
                        <a href="#Task-405">
                            <span className="linenos"> 405</span>
                        </a>
                        <span className="sd">
                            {"            "}retry_delay_seconds: Optionally configures how
                            long to wait before retrying
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-406">
                        <a href="#Task-406">
                            <span className="linenos"> 406</span>
                        </a>
                        <span className="sd">
                            {"                "}the task after failure. This is only
                            applicable if `retries` is nonzero.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-407">
                        <a href="#Task-407">
                            <span className="linenos"> 407</span>
                        </a>
                        <span className="sd">
                            {"                "}This setting can either be a number of
                            seconds, a list of retry delays,
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-408">
                        <a href="#Task-408">
                            <span className="linenos"> 408</span>
                        </a>
                        <span className="sd">
                            {"                "}or a callable that, given the total number of
                            retries, generates a list
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-409">
                        <a href="#Task-409">
                            <span className="linenos"> 409</span>
                        </a>
                        <span className="sd">
                            {"                "}of retry delays. If a number of seconds, that
                            delay will be applied to
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-410">
                        <a href="#Task-410">
                            <span className="linenos"> 410</span>
                        </a>
                        <span className="sd">
                            {"                "}all retries. If a list, each retry will wait
                            for the corresponding delay
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-411">
                        <a href="#Task-411">
                            <span className="linenos"> 411</span>
                        </a>
                        <span className="sd">
                            {"                "}before retrying. When passing a callable or a
                            list, the number of
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-412">
                        <a href="#Task-412">
                            <span className="linenos"> 412</span>
                        </a>
                        <span className="sd">
                            {"                "}configured retry delays cannot exceed 50.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-413">
                        <a href="#Task-413">
                            <span className="linenos"> 413</span>
                        </a>
                        <span className="sd">
                            {"            "}retry_jitter_factor: An optional factor that
                            defines the factor to which a
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-414">
                        <a href="#Task-414">
                            <span className="linenos"> 414</span>
                        </a>
                        <span className="sd">
                            {"                "}retry can be jittered in order to avoid a
                            "thundering herd".
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-415">
                        <a href="#Task-415">
                            <span className="linenos"> 415</span>
                        </a>
                        <span className="sd">
                            {"            "}persist_result: A new option for enabling or
                            disabling result persistence.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-416">
                        <a href="#Task-416">
                            <span className="linenos"> 416</span>
                        </a>
                        <span className="sd">
                            {"            "}result_storage: A new storage type to use for
                            results.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-417">
                        <a href="#Task-417">
                            <span className="linenos"> 417</span>
                        </a>
                        <span className="sd">
                            {"            "}result_serializer: A new serializer to use for
                            results.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-418">
                        <a href="#Task-418">
                            <span className="linenos"> 418</span>
                        </a>
                        <span className="sd">
                            {"            "}result_storage_key: A new key for the persisted
                            result to be stored at.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-419">
                        <a href="#Task-419">
                            <span className="linenos"> 419</span>
                        </a>
                        <span className="sd">
                            {"            "}timeout_seconds: A new maximum time for the task
                            to complete in seconds.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-420">
                        <a href="#Task-420">
                            <span className="linenos"> 420</span>
                        </a>
                        <span className="sd">
                            {"            "}log_prints: A new option for enabling or disabling
                            redirection of `print` statements.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-421">
                        <a href="#Task-421">
                            <span className="linenos"> 421</span>
                        </a>
                        <span className="sd">
                            {"            "}refresh_cache: A new option for enabling or
                            disabling cache refresh.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-422">
                        <a href="#Task-422">
                            <span className="linenos"> 422</span>
                        </a>
                        <span className="sd">
                            {"            "}on_completion: A new list of callables to run when
                            the task enters a completed state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-423">
                        <a href="#Task-423">
                            <span className="linenos"> 423</span>
                        </a>
                        <span className="sd">
                            {"            "}on_failure: A new list of callables to run when
                            the task enters a failed state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-424">
                        <a href="#Task-424">
                            <span className="linenos"> 424</span>
                        </a>
                        <span className="sd">
                            {"            "}retry_condition_fn: An optional callable run when
                            a task run returns a Failed state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-425">
                        <a href="#Task-425">
                            <span className="linenos"> 425</span>
                        </a>
                        <span className="sd">
                            {"                "}Should return `True` if the task should
                            continue to its retry policy, and `False`
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-426">
                        <a href="#Task-426">
                            <span className="linenos"> 426</span>
                        </a>
                        <span className="sd">
                            {"                "}if the task should end as failed. Defaults to
                            `None`, indicating the task should
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-427">
                        <a href="#Task-427">
                            <span className="linenos"> 427</span>
                        </a>
                        <span className="sd">
                            {"                "}always continue to its retry policy.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-428">
                        <a href="#Task-428">
                            <span className="linenos"> 428</span>
                        </a>
                        <span className="sd">
                            {"            "}viz_return_value: An optional value to return when
                            the task dependency tree is visualized.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-429">
                        <a href="#Task-429">
                            <span className="linenos"> 429</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-430">
                        <a href="#Task-430">
                            <span className="linenos"> 430</span>
                        </a>
                        <span className="sd">{"        "}Returns:</span>
                        {"\n"}
                    </span>
                    <span id="Task-431">
                        <a href="#Task-431">
                            <span className="linenos"> 431</span>
                        </a>
                        <span className="sd">{"            "}A new `Task` instance.</span>
                        {"\n"}
                    </span>
                    <span id="Task-432">
                        <a href="#Task-432">
                            <span className="linenos"> 432</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-433">
                        <a href="#Task-433">
                            <span className="linenos"> 433</span>
                        </a>
                        <span className="sd">{"        "}Examples:</span>
                        {"\n"}
                    </span>
                    <span id="Task-434">
                        <a href="#Task-434">
                            <span className="linenos"> 434</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-435">
                        <a href="#Task-435">
                            <span className="linenos"> 435</span>
                        </a>
                        <span className="sd">
                            {"            "}Create a new task from an existing task and update
                            the name
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-436">
                        <a href="#Task-436">
                            <span className="linenos"> 436</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-437">
                        <a href="#Task-437">
                            <span className="linenos"> 437</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; @task(name="My task")
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-438">
                        <a href="#Task-438">
                            <span className="linenos"> 438</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_task():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-439">
                        <a href="#Task-439">
                            <span className="linenos"> 439</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}return 1
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-440">
                        <a href="#Task-440">
                            <span className="linenos"> 440</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Task-441">
                        <a href="#Task-441">
                            <span className="linenos"> 441</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; new_task =
                            my_task.with_options(name="My new task")
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-442">
                        <a href="#Task-442">
                            <span className="linenos"> 442</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-443">
                        <a href="#Task-443">
                            <span className="linenos"> 443</span>
                        </a>
                        <span className="sd">
                            {"            "}Create a new task from an existing task and update
                            the retry settings
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-444">
                        <a href="#Task-444">
                            <span className="linenos"> 444</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-445">
                        <a href="#Task-445">
                            <span className="linenos"> 445</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; from random import randint
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-446">
                        <a href="#Task-446">
                            <span className="linenos"> 446</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Task-447">
                        <a href="#Task-447">
                            <span className="linenos"> 447</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; @task(retries=1,
                            retry_delay_seconds=5)
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-448">
                        <a href="#Task-448">
                            <span className="linenos"> 448</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_task():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-449">
                        <a href="#Task-449">
                            <span className="linenos"> 449</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}x = randint(0, 5)
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-450">
                        <a href="#Task-450">
                            <span className="linenos"> 450</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}if x &gt;= 3:{"  "}# Make a
                            task that fails sometimes
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-451">
                        <a href="#Task-451">
                            <span className="linenos"> 451</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"         "}raise ValueError("Retry
                            me please!")
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-452">
                        <a href="#Task-452">
                            <span className="linenos"> 452</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}return x
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-453">
                        <a href="#Task-453">
                            <span className="linenos"> 453</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Task-454">
                        <a href="#Task-454">
                            <span className="linenos"> 454</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; new_task =
                            my_task.with_options(retries=5, retry_delay_seconds=2)
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-455">
                        <a href="#Task-455">
                            <span className="linenos"> 455</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-456">
                        <a href="#Task-456">
                            <span className="linenos"> 456</span>
                        </a>
                        <span className="sd">
                            {"            "}Use a task with updated options within a flow
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-457">
                        <a href="#Task-457">
                            <span className="linenos"> 457</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-458">
                        <a href="#Task-458">
                            <span className="linenos"> 458</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; @task(name="My task")
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-459">
                        <a href="#Task-459">
                            <span className="linenos"> 459</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_task():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-460">
                        <a href="#Task-460">
                            <span className="linenos"> 460</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}return 1
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-461">
                        <a href="#Task-461">
                            <span className="linenos"> 461</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Task-462">
                        <a href="#Task-462">
                            <span className="linenos"> 462</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="Task-463">
                        <a href="#Task-463">
                            <span className="linenos"> 463</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; my_flow():</span>
                        {"\n"}
                    </span>
                    <span id="Task-464">
                        <a href="#Task-464">
                            <span className="linenos"> 464</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}new_task =
                            my_task.with_options(name="My new task")
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-465">
                        <a href="#Task-465">
                            <span className="linenos"> 465</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}new_task()
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-466">
                        <a href="#Task-466">
                            <span className="linenos"> 466</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Task-467">
                        <a href="#Task-467">
                            <span className="linenos"> 467</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="n">Task</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-468">
                        <a href="#Task-468">
                            <span className="linenos"> 468</span>
                        </a>
                        {"            "}
                        <span className="n">fn</span>
                        <span className="o">=</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-469">
                        <a href="#Task-469">
                            <span className="linenos"> 469</span>
                        </a>
                        {"            "}
                        <span className="n">name</span>
                        <span className="o">=</span>
                        <span className="n">name</span> <span className="ow">or</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-470">
                        <a href="#Task-470">
                            <span className="linenos"> 470</span>
                        </a>
                        {"            "}
                        <span className="n">description</span>
                        <span className="o">=</span>
                        <span className="n">description</span>{" "}
                        <span className="ow">or</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">description</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-471">
                        <a href="#Task-471">
                            <span className="linenos"> 471</span>
                        </a>
                        {"            "}
                        <span className="n">tags</span>
                        <span className="o">=</span>
                        <span className="n">tags</span> <span className="ow">or</span>{" "}
                        <span className="n">copy</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">tags</span>
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Task-472">
                        <a href="#Task-472">
                            <span className="linenos"> 472</span>
                        </a>
                        {"            "}
                        <span className="n">cache_key_fn</span>
                        <span className="o">=</span>
                        <span className="n">cache_key_fn</span>{" "}
                        <span className="ow">or</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">cache_key_fn</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-473">
                        <a href="#Task-473">
                            <span className="linenos"> 473</span>
                        </a>
                        {"            "}
                        <span className="n">cache_expiration</span>
                        <span className="o">=</span>
                        <span className="n">cache_expiration</span>{" "}
                        <span className="ow">or</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">cache_expiration</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-474">
                        <a href="#Task-474">
                            <span className="linenos"> 474</span>
                        </a>
                        {"            "}
                        <span className="n">task_run_name</span>
                        <span className="o">=</span>
                        <span className="n">task_run_name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-475">
                        <a href="#Task-475">
                            <span className="linenos"> 475</span>
                        </a>
                        {"            "}
                        <span className="n">retries</span>
                        <span className="o">=</span>
                        <span className="n">
                            retries
                        </span> <span className="k">if</span>{" "}
                        <span className="n">retries</span> <span className="ow">is</span>{" "}
                        <span className="ow">not</span> <span className="n">NotSet</span>{" "}
                        <span className="k">else</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">retries</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-476">
                        <a href="#Task-476">
                            <span className="linenos"> 476</span>
                        </a>
                        {"            "}
                        <span className="n">retry_delay_seconds</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-477">
                        <a href="#Task-477">
                            <span className="linenos"> 477</span>
                        </a>
                        {"                "}
                        <span className="n">retry_delay_seconds</span>
                        {"\n"}
                    </span>
                    <span id="Task-478">
                        <a href="#Task-478">
                            <span className="linenos"> 478</span>
                        </a>
                        {"                "}
                        <span className="k">if</span>{" "}
                        <span className="n">retry_delay_seconds</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="n">NotSet</span>
                        {"\n"}
                    </span>
                    <span id="Task-479">
                        <a href="#Task-479">
                            <span className="linenos"> 479</span>
                        </a>
                        {"                "}
                        <span className="k">else</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">retry_delay_seconds</span>
                        {"\n"}
                    </span>
                    <span id="Task-480">
                        <a href="#Task-480">
                            <span className="linenos"> 480</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Task-481">
                        <a href="#Task-481">
                            <span className="linenos"> 481</span>
                        </a>
                        {"            "}
                        <span className="n">retry_jitter_factor</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-482">
                        <a href="#Task-482">
                            <span className="linenos"> 482</span>
                        </a>
                        {"                "}
                        <span className="n">retry_jitter_factor</span>
                        {"\n"}
                    </span>
                    <span id="Task-483">
                        <a href="#Task-483">
                            <span className="linenos"> 483</span>
                        </a>
                        {"                "}
                        <span className="k">if</span>{" "}
                        <span className="n">retry_jitter_factor</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="n">NotSet</span>
                        {"\n"}
                    </span>
                    <span id="Task-484">
                        <a href="#Task-484">
                            <span className="linenos"> 484</span>
                        </a>
                        {"                "}
                        <span className="k">else</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">retry_jitter_factor</span>
                        {"\n"}
                    </span>
                    <span id="Task-485">
                        <a href="#Task-485">
                            <span className="linenos"> 485</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Task-486">
                        <a href="#Task-486">
                            <span className="linenos"> 486</span>
                        </a>
                        {"            "}
                        <span className="n">persist_result</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-487">
                        <a href="#Task-487">
                            <span className="linenos"> 487</span>
                        </a>
                        {"                "}
                        <span className="n">persist_result</span>{" "}
                        <span className="k">if</span>{" "}
                        <span className="n">persist_result</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="n">NotSet</span> <span className="k">else</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">persist_result</span>
                        {"\n"}
                    </span>
                    <span id="Task-488">
                        <a href="#Task-488">
                            <span className="linenos"> 488</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Task-489">
                        <a href="#Task-489">
                            <span className="linenos"> 489</span>
                        </a>
                        {"            "}
                        <span className="n">result_storage</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-490">
                        <a href="#Task-490">
                            <span className="linenos"> 490</span>
                        </a>
                        {"                "}
                        <span className="n">result_storage</span>{" "}
                        <span className="k">if</span>{" "}
                        <span className="n">result_storage</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="n">NotSet</span> <span className="k">else</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">result_storage</span>
                        {"\n"}
                    </span>
                    <span id="Task-491">
                        <a href="#Task-491">
                            <span className="linenos"> 491</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Task-492">
                        <a href="#Task-492">
                            <span className="linenos"> 492</span>
                        </a>
                        {"            "}
                        <span className="n">result_storage_key</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-493">
                        <a href="#Task-493">
                            <span className="linenos"> 493</span>
                        </a>
                        {"                "}
                        <span className="n">result_storage_key</span>
                        {"\n"}
                    </span>
                    <span id="Task-494">
                        <a href="#Task-494">
                            <span className="linenos"> 494</span>
                        </a>
                        {"                "}
                        <span className="k">if</span>{" "}
                        <span className="n">result_storage_key</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="n">NotSet</span>
                        {"\n"}
                    </span>
                    <span id="Task-495">
                        <a href="#Task-495">
                            <span className="linenos"> 495</span>
                        </a>
                        {"                "}
                        <span className="k">else</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">result_storage_key</span>
                        {"\n"}
                    </span>
                    <span id="Task-496">
                        <a href="#Task-496">
                            <span className="linenos"> 496</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Task-497">
                        <a href="#Task-497">
                            <span className="linenos"> 497</span>
                        </a>
                        {"            "}
                        <span className="n">result_serializer</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-498">
                        <a href="#Task-498">
                            <span className="linenos"> 498</span>
                        </a>
                        {"                "}
                        <span className="n">result_serializer</span>
                        {"\n"}
                    </span>
                    <span id="Task-499">
                        <a href="#Task-499">
                            <span className="linenos"> 499</span>
                        </a>
                        {"                "}
                        <span className="k">if</span>{" "}
                        <span className="n">result_serializer</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="n">NotSet</span>
                        {"\n"}
                    </span>
                    <span id="Task-500">
                        <a href="#Task-500">
                            <span className="linenos"> 500</span>
                        </a>
                        {"                "}
                        <span className="k">else</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">result_serializer</span>
                        {"\n"}
                    </span>
                    <span id="Task-501">
                        <a href="#Task-501">
                            <span className="linenos"> 501</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Task-502">
                        <a href="#Task-502">
                            <span className="linenos"> 502</span>
                        </a>
                        {"            "}
                        <span className="n">cache_result_in_memory</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-503">
                        <a href="#Task-503">
                            <span className="linenos"> 503</span>
                        </a>
                        {"                "}
                        <span className="n">cache_result_in_memory</span>
                        {"\n"}
                    </span>
                    <span id="Task-504">
                        <a href="#Task-504">
                            <span className="linenos"> 504</span>
                        </a>
                        {"                "}
                        <span className="k">if</span>{" "}
                        <span className="n">cache_result_in_memory</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span>
                        {"\n"}
                    </span>
                    <span id="Task-505">
                        <a href="#Task-505">
                            <span className="linenos"> 505</span>
                        </a>
                        {"                "}
                        <span className="k">else</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">cache_result_in_memory</span>
                        {"\n"}
                    </span>
                    <span id="Task-506">
                        <a href="#Task-506">
                            <span className="linenos"> 506</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Task-507">
                        <a href="#Task-507">
                            <span className="linenos"> 507</span>
                        </a>
                        {"            "}
                        <span className="n">timeout_seconds</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-508">
                        <a href="#Task-508">
                            <span className="linenos"> 508</span>
                        </a>
                        {"                "}
                        <span className="n">timeout_seconds</span>{" "}
                        <span className="k">if</span>{" "}
                        <span className="n">timeout_seconds</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span> <span className="k">else</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">timeout_seconds</span>
                        {"\n"}
                    </span>
                    <span id="Task-509">
                        <a href="#Task-509">
                            <span className="linenos"> 509</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Task-510">
                        <a href="#Task-510">
                            <span className="linenos"> 510</span>
                        </a>
                        {"            "}
                        <span className="n">log_prints</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        <span className="n">
                            log_prints
                        </span> <span className="k">if</span>{" "}
                        <span className="n">log_prints</span> <span className="ow">is</span>{" "}
                        <span className="ow">not</span> <span className="n">NotSet</span>{" "}
                        <span className="k">else</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">log_prints</span>
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Task-511">
                        <a href="#Task-511">
                            <span className="linenos"> 511</span>
                        </a>
                        {"            "}
                        <span className="n">refresh_cache</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-512">
                        <a href="#Task-512">
                            <span className="linenos"> 512</span>
                        </a>
                        {"                "}
                        <span className="n">refresh_cache</span>{" "}
                        <span className="k">if</span>{" "}
                        <span className="n">refresh_cache</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="n">NotSet</span> <span className="k">else</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">refresh_cache</span>
                        {"\n"}
                    </span>
                    <span id="Task-513">
                        <a href="#Task-513">
                            <span className="linenos"> 513</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Task-514">
                        <a href="#Task-514">
                            <span className="linenos"> 514</span>
                        </a>
                        {"            "}
                        <span className="n">on_completion</span>
                        <span className="o">=</span>
                        <span className="n">on_completion</span>{" "}
                        <span className="ow">or</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">on_completion</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-515">
                        <a href="#Task-515">
                            <span className="linenos"> 515</span>
                        </a>
                        {"            "}
                        <span className="n">on_failure</span>
                        <span className="o">=</span>
                        <span className="n">
                            on_failure
                        </span> <span className="ow">or</span>{" "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">on_failure</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-516">
                        <a href="#Task-516">
                            <span className="linenos"> 516</span>
                        </a>
                        {"            "}
                        <span className="n">retry_condition_fn</span>
                        <span className="o">=</span>
                        <span className="n">retry_condition_fn</span>{" "}
                        <span className="ow">or</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">retry_condition_fn</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-517">
                        <a href="#Task-517">
                            <span className="linenos"> 517</span>
                        </a>
                        {"            "}
                        <span className="n">viz_return_value</span>
                        <span className="o">=</span>
                        <span className="n">viz_return_value</span>{" "}
                        <span className="ow">or</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">viz_return_value</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-518">
                        <a href="#Task-518">
                            <span className="linenos"> 518</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-519">
                        <a href="#Task-519">
                            <span className="linenos"> 519</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-520">
                        <a href="#Task-520">
                            <span className="linenos"> 520</span>
                        </a>
                        {"    "}
                        <span className="k">async</span> <span className="k">def</span>{" "}
                        <span className="nf">create_run</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-521">
                        <a href="#Task-521">
                            <span className="linenos"> 521</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-522">
                        <a href="#Task-522">
                            <span className="linenos"> 522</span>
                        </a>
                        {"        "}
                        <span className="n">client</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">PrefectClient</span>
                        <span className="p">,</span>{" "}
                        <span className="n">SyncPrefectClient</span>
                        <span className="p">]],</span>
                        {"\n"}
                    </span>
                    <span id="Task-523">
                        <a href="#Task-523">
                            <span className="linenos"> 523</span>
                        </a>
                        {"        "}
                        <span className="n">parameters</span>
                        <span className="p">:</span> <span className="n">Dict</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">Any</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-524">
                        <a href="#Task-524">
                            <span className="linenos"> 524</span>
                        </a>
                        {"        "}
                        <span className="n">flow_run_context</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">FlowRunContext</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-525">
                        <a href="#Task-525">
                            <span className="linenos"> 525</span>
                        </a>
                        {"        "}
                        <span className="n">parent_task_run_context</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">TaskRunContext</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-526">
                        <a href="#Task-526">
                            <span className="linenos"> 526</span>
                        </a>
                        {"        "}
                        <span className="n">wait_for</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="n">PrefectFuture</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-527">
                        <a href="#Task-527">
                            <span className="linenos"> 527</span>
                        </a>
                        {"        "}
                        <span className="n">extra_task_inputs</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Dict</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">Set</span>
                        <span className="p">[</span>
                        <span className="n">TaskRunInput</span>
                        <span className="p">]]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-528">
                        <a href="#Task-528">
                            <span className="linenos"> 528</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">TaskRun</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-529">
                        <a href="#Task-529">
                            <span className="linenos"> 529</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.utilities.engine</span>{" "}
                        <span className="kn">import</span> <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-530">
                        <a href="#Task-530">
                            <span className="linenos"> 530</span>
                        </a>
                        {"            "}
                        <span className="n">_dynamic_key_for_task_run</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-531">
                        <a href="#Task-531">
                            <span className="linenos"> 531</span>
                        </a>
                        {"            "}
                        <span className="n">_resolve_custom_task_run_name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-532">
                        <a href="#Task-532">
                            <span className="linenos"> 532</span>
                        </a>
                        {"            "}
                        <span className="n">collect_task_run_inputs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-533">
                        <a href="#Task-533">
                            <span className="linenos"> 533</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-534">
                        <a href="#Task-534">
                            <span className="linenos"> 534</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-535">
                        <a href="#Task-535">
                            <span className="linenos"> 535</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">flow_run_context</span>{" "}
                        <span className="ow">is</span> <span className="kc">None</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-536">
                        <a href="#Task-536">
                            <span className="linenos"> 536</span>
                        </a>
                        {"            "}
                        <span className="n">flow_run_context</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">FlowRunContext</span>
                        <span className="o">.</span>
                        <span className="n">get</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Task-537">
                        <a href="#Task-537">
                            <span className="linenos"> 537</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">parent_task_run_context</span>{" "}
                        <span className="ow">is</span> <span className="kc">None</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-538">
                        <a href="#Task-538">
                            <span className="linenos"> 538</span>
                        </a>
                        {"            "}
                        <span className="n">parent_task_run_context</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">TaskRunContext</span>
                        <span className="o">.</span>
                        <span className="n">get</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Task-539">
                        <a href="#Task-539">
                            <span className="linenos"> 539</span>
                        </a>
                        {"        "}
                        <span className="k">
                            if
                        </span> <span className="n">parameters</span>{" "}
                        <span className="ow">is</span> <span className="kc">None</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-540">
                        <a href="#Task-540">
                            <span className="linenos"> 540</span>
                        </a>
                        {"            "}
                        <span className="n">
                            parameters
                        </span> <span className="o">=</span>{" "}
                        <span className="p">
                            {"{"}
                            {"}"}
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-541">
                        <a href="#Task-541">
                            <span className="linenos"> 541</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-542">
                        <a href="#Task-542">
                            <span className="linenos"> 542</span>
                        </a>
                        {"        "}
                        <span className="k">try</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-543">
                        <a href="#Task-543">
                            <span className="linenos"> 543</span>
                        </a>
                        {"            "}
                        <span className="n">task_run_name</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">_resolve_custom_task_run_name</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">,</span> <span className="n">parameters</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-544">
                        <a href="#Task-544">
                            <span className="linenos"> 544</span>
                        </a>
                        {"        "}
                        <span className="k">except</span>{" "}
                        <span className="ne">TypeError</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-545">
                        <a href="#Task-545">
                            <span className="linenos"> 545</span>
                        </a>
                        {"            "}
                        <span className="n">task_run_name</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        {"\n"}
                    </span>
                    <span id="Task-546">
                        <a href="#Task-546">
                            <span className="linenos"> 546</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-547">
                        <a href="#Task-547">
                            <span className="linenos"> 547</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">flow_run_context</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-548">
                        <a href="#Task-548">
                            <span className="linenos"> 548</span>
                        </a>
                        {"            "}
                        <span className="n">
                            dynamic_key
                        </span> <span className="o">=</span>{" "}
                        <span className="n">_dynamic_key_for_task_run</span>
                        <span className="p">(</span>
                        <span className="n">context</span>
                        <span className="o">=</span>
                        <span className="n">flow_run_context</span>
                        <span className="p">,</span> <span className="n">task</span>
                        <span className="o">=</span>
                        <span className="bp">self</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-549">
                        <a href="#Task-549">
                            <span className="linenos"> 549</span>
                        </a>
                        {"        "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-550">
                        <a href="#Task-550">
                            <span className="linenos"> 550</span>
                        </a>
                        {"            "}
                        <span className="n">
                            dynamic_key
                        </span> <span className="o">=</span>{" "}
                        <span className="n">uuid4</span>
                        <span className="p">()</span>
                        <span className="o">.</span>
                        <span className="n">hex</span>
                        {"\n"}
                    </span>
                    <span id="Task-551">
                        <a href="#Task-551">
                            <span className="linenos"> 551</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-552">
                        <a href="#Task-552">
                            <span className="linenos"> 552</span>
                        </a>
                        {"        "}
                        <span className="c1"># collect task inputs</span>
                        {"\n"}
                    </span>
                    <span id="Task-553">
                        <a href="#Task-553">
                            <span className="linenos"> 553</span>
                        </a>
                        {"        "}
                        <span className="n">
                            task_inputs
                        </span> <span className="o">=</span>{" "}
                        <span className="p">{"{"}</span>
                        {"\n"}
                    </span>
                    <span id="Task-554">
                        <a href="#Task-554">
                            <span className="linenos"> 554</span>
                        </a>
                        {"            "}
                        <span className="n">k</span>
                        <span className="p">:</span> <span className="k">await</span>{" "}
                        <span className="n">collect_task_run_inputs</span>
                        <span className="p">(</span>
                        <span className="n">v</span>
                        <span className="p">)</span> <span className="k">for</span>{" "}
                        <span className="n">k</span>
                        <span className="p">,</span> <span className="n">v</span>{" "}
                        <span className="ow">in</span> <span className="n">parameters</span>
                        <span className="o">.</span>
                        <span className="n">items</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Task-555">
                        <a href="#Task-555">
                            <span className="linenos"> 555</span>
                        </a>
                        {"        "}
                        <span className="p">{"}"}</span>
                        {"\n"}
                    </span>
                    <span id="Task-556">
                        <a href="#Task-556">
                            <span className="linenos"> 556</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-557">
                        <a href="#Task-557">
                            <span className="linenos"> 557</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # check if this task has a parent task run based on running in
                            another
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-558">
                        <a href="#Task-558">
                            <span className="linenos"> 558</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # task run's existing context. A task run is only considered a
                            parent if
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-559">
                        <a href="#Task-559">
                            <span className="linenos"> 559</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # it is in the same flow run (because otherwise presumably the
                            child is
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-560">
                        <a href="#Task-560">
                            <span className="linenos"> 560</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # in a subflow, so the subflow serves as the parent) or if there
                            is no
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-561">
                        <a href="#Task-561">
                            <span className="linenos"> 561</span>
                        </a>
                        {"        "}
                        <span className="c1"># flow run</span>
                        {"\n"}
                    </span>
                    <span id="Task-562">
                        <a href="#Task-562">
                            <span className="linenos"> 562</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">parent_task_run_context</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-563">
                        <a href="#Task-563">
                            <span className="linenos"> 563</span>
                        </a>
                        {"            "}
                        <span className="c1"># there is no flow run</span>
                        {"\n"}
                    </span>
                    <span id="Task-564">
                        <a href="#Task-564">
                            <span className="linenos"> 564</span>
                        </a>
                        {"            "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">flow_run_context</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-565">
                        <a href="#Task-565">
                            <span className="linenos"> 565</span>
                        </a>
                        {"                "}
                        <span className="n">task_inputs</span>
                        <span className="p">[</span>
                        <span className="s2">"__parents__"</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Task-566">
                        <a href="#Task-566">
                            <span className="linenos"> 566</span>
                        </a>
                        {"                    "}
                        <span className="n">TaskRunResult</span>
                        <span className="p">(</span>
                        <span className="nb">id</span>
                        <span className="o">=</span>
                        <span className="n">parent_task_run_context</span>
                        <span className="o">.</span>
                        <span className="n">task_run</span>
                        <span className="o">.</span>
                        <span className="n">id</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-567">
                        <a href="#Task-567">
                            <span className="linenos"> 567</span>
                        </a>
                        {"                "}
                        <span className="p">]</span>
                        {"\n"}
                    </span>
                    <span id="Task-568">
                        <a href="#Task-568">
                            <span className="linenos"> 568</span>
                        </a>
                        {"            "}
                        <span className="c1">
                            # there is a flow run and the task run is in the same flow run
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-569">
                        <a href="#Task-569">
                            <span className="linenos"> 569</span>
                        </a>
                        {"            "}
                        <span className="k">elif</span> <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-570">
                        <a href="#Task-570">
                            <span className="linenos"> 570</span>
                        </a>
                        {"                "}
                        <span className="n">flow_run_context</span>
                        {"\n"}
                    </span>
                    <span id="Task-571">
                        <a href="#Task-571">
                            <span className="linenos"> 571</span>
                        </a>
                        {"                "}
                        <span className="ow">and</span>{" "}
                        <span className="n">parent_task_run_context</span>
                        <span className="o">.</span>
                        <span className="n">task_run</span>
                        <span className="o">.</span>
                        <span className="n">flow_run_id</span>
                        {"\n"}
                    </span>
                    <span id="Task-572">
                        <a href="#Task-572">
                            <span className="linenos"> 572</span>
                        </a>
                        {"                "}
                        <span className="o">==</span>{" "}
                        <span className="n">flow_run_context</span>
                        <span className="o">.</span>
                        <span className="n">flow_run</span>
                        <span className="o">.</span>
                        <span className="n">id</span>
                        {"\n"}
                    </span>
                    <span id="Task-573">
                        <a href="#Task-573">
                            <span className="linenos"> 573</span>
                        </a>
                        {"            "}
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Task-574">
                        <a href="#Task-574">
                            <span className="linenos"> 574</span>
                        </a>
                        {"                "}
                        <span className="n">task_inputs</span>
                        <span className="p">[</span>
                        <span className="s2">"__parents__"</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="p">[</span>
                        {"\n"}
                    </span>
                    <span id="Task-575">
                        <a href="#Task-575">
                            <span className="linenos"> 575</span>
                        </a>
                        {"                    "}
                        <span className="n">TaskRunResult</span>
                        <span className="p">(</span>
                        <span className="nb">id</span>
                        <span className="o">=</span>
                        <span className="n">parent_task_run_context</span>
                        <span className="o">.</span>
                        <span className="n">task_run</span>
                        <span className="o">.</span>
                        <span className="n">id</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-576">
                        <a href="#Task-576">
                            <span className="linenos"> 576</span>
                        </a>
                        {"                "}
                        <span className="p">]</span>
                        {"\n"}
                    </span>
                    <span id="Task-577">
                        <a href="#Task-577">
                            <span className="linenos"> 577</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-578">
                        <a href="#Task-578">
                            <span className="linenos"> 578</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="n">wait_for</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-579">
                        <a href="#Task-579">
                            <span className="linenos"> 579</span>
                        </a>
                        {"            "}
                        <span className="n">task_inputs</span>
                        <span className="p">[</span>
                        <span className="s2">"wait_for"</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="k">await</span>{" "}
                        <span className="n">collect_task_run_inputs</span>
                        <span className="p">(</span>
                        <span className="n">wait_for</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-580">
                        <a href="#Task-580">
                            <span className="linenos"> 580</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-581">
                        <a href="#Task-581">
                            <span className="linenos"> 581</span>
                        </a>
                        {"        "}
                        <span className="c1"># Join extra task inputs</span>
                        {"\n"}
                    </span>
                    <span id="Task-582">
                        <a href="#Task-582">
                            <span className="linenos"> 582</span>
                        </a>
                        {"        "}
                        <span className="k">for</span> <span className="n">k</span>
                        <span className="p">,</span> <span className="n">extras</span>{" "}
                        <span className="ow">in</span> <span className="p">(</span>
                        <span className="n">extra_task_inputs</span>{" "}
                        <span className="ow">or</span>{" "}
                        <span className="p">
                            {"{"}
                            {"}"})
                        </span>
                        <span className="o">.</span>
                        <span className="n">items</span>
                        <span className="p">():</span>
                        {"\n"}
                    </span>
                    <span id="Task-583">
                        <a href="#Task-583">
                            <span className="linenos"> 583</span>
                        </a>
                        {"            "}
                        <span className="n">task_inputs</span>
                        <span className="p">[</span>
                        <span className="n">k</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="n">task_inputs</span>
                        <span className="p">[</span>
                        <span className="n">k</span>
                        <span className="p">]</span>
                        <span className="o">.</span>
                        <span className="n">union</span>
                        <span className="p">(</span>
                        <span className="n">extras</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-584">
                        <a href="#Task-584">
                            <span className="linenos"> 584</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-585">
                        <a href="#Task-585">
                            <span className="linenos"> 585</span>
                        </a>
                        {"        "}
                        <span className="c1"># create the task run</span>
                        {"\n"}
                    </span>
                    <span id="Task-586">
                        <a href="#Task-586">
                            <span className="linenos"> 586</span>
                        </a>
                        {"        "}
                        <span className="n">
                            task_run
                        </span> <span className="o">=</span>{" "}
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">create_task_run</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-587">
                        <a href="#Task-587">
                            <span className="linenos"> 587</span>
                        </a>
                        {"            "}
                        <span className="n">task</span>
                        <span className="o">=</span>
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-588">
                        <a href="#Task-588">
                            <span className="linenos"> 588</span>
                        </a>
                        {"            "}
                        <span className="n">name</span>
                        <span className="o">=</span>
                        <span className="n">task_run_name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-589">
                        <a href="#Task-589">
                            <span className="linenos"> 589</span>
                        </a>
                        {"            "}
                        <span className="n">flow_run_id</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-590">
                        <a href="#Task-590">
                            <span className="linenos"> 590</span>
                        </a>
                        {"                "}
                        <span className="nb">getattr</span>
                        <span className="p">(</span>
                        <span className="n">flow_run_context</span>
                        <span className="o">.</span>
                        <span className="n">flow_run</span>
                        <span className="p">,</span> <span className="s2">"id"</span>
                        <span className="p">,</span> <span className="kc">None</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-591">
                        <a href="#Task-591">
                            <span className="linenos"> 591</span>
                        </a>
                        {"                "}
                        <span className="k">if</span>{" "}
                        <span className="n">flow_run_context</span>{" "}
                        <span className="ow">and</span>{" "}
                        <span className="n">flow_run_context</span>
                        <span className="o">.</span>
                        <span className="n">flow_run</span>
                        {"\n"}
                    </span>
                    <span id="Task-592">
                        <a href="#Task-592">
                            <span className="linenos"> 592</span>
                        </a>
                        {"                "}
                        <span className="k">else</span> <span className="kc">None</span>
                        {"\n"}
                    </span>
                    <span id="Task-593">
                        <a href="#Task-593">
                            <span className="linenos"> 593</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Task-594">
                        <a href="#Task-594">
                            <span className="linenos"> 594</span>
                        </a>
                        {"            "}
                        <span className="n">dynamic_key</span>
                        <span className="o">=</span>
                        <span className="nb">str</span>
                        <span className="p">(</span>
                        <span className="n">dynamic_key</span>
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Task-595">
                        <a href="#Task-595">
                            <span className="linenos"> 595</span>
                        </a>
                        {"            "}
                        <span className="n">state</span>
                        <span className="o">=</span>
                        <span className="n">Pending</span>
                        <span className="p">(),</span>
                        {"\n"}
                    </span>
                    <span id="Task-596">
                        <a href="#Task-596">
                            <span className="linenos"> 596</span>
                        </a>
                        {"            "}
                        <span className="n">task_inputs</span>
                        <span className="o">=</span>
                        <span className="n">task_inputs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-597">
                        <a href="#Task-597">
                            <span className="linenos"> 597</span>
                        </a>
                        {"            "}
                        <span className="n">extra_tags</span>
                        <span className="o">=</span>
                        <span className="n">TagsContext</span>
                        <span className="o">.</span>
                        <span className="n">get</span>
                        <span className="p">()</span>
                        <span className="o">.</span>
                        <span className="n">current_tags</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-598">
                        <a href="#Task-598">
                            <span className="linenos"> 598</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-599">
                        <a href="#Task-599">
                            <span className="linenos"> 599</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # the new engine uses sync clients but old engines use async
                            clients
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-600">
                        <a href="#Task-600">
                            <span className="linenos"> 600</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="n">inspect</span>
                        <span className="o">.</span>
                        <span className="n">isawaitable</span>
                        <span className="p">(</span>
                        <span className="n">task_run</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Task-601">
                        <a href="#Task-601">
                            <span className="linenos"> 601</span>
                        </a>
                        {"            "}
                        <span className="n">
                            task_run
                        </span> <span className="o">=</span>{" "}
                        <span className="k">await</span> <span className="n">task_run</span>
                        {"\n"}
                    </span>
                    <span id="Task-602">
                        <a href="#Task-602">
                            <span className="linenos"> 602</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-603">
                        <a href="#Task-603">
                            <span className="linenos"> 603</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">flow_run_context</span>{" "}
                        <span className="ow">and</span>{" "}
                        <span className="n">flow_run_context</span>
                        <span className="o">.</span>
                        <span className="n">flow_run</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-604">
                        <a href="#Task-604">
                            <span className="linenos"> 604</span>
                        </a>
                        {"            "}
                        <span className="n">get_run_logger</span>
                        <span className="p">(</span>
                        <span className="n">flow_run_context</span>
                        <span className="p">)</span>
                        <span className="o">.</span>
                        <span className="n">debug</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-605">
                        <a href="#Task-605">
                            <span className="linenos"> 605</span>
                        </a>
                        {"                "}
                        <span className="sa">f</span>
                        <span className="s2">"Created task run </span>
                        <span className="si">{"{"}</span>
                        <span className="n">task_run</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2"> for task </span>
                        <span className="si">{"{"}</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2">"</span>
                        {"\n"}
                    </span>
                    <span id="Task-606">
                        <a href="#Task-606">
                            <span className="linenos"> 606</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-607">
                        <a href="#Task-607">
                            <span className="linenos"> 607</span>
                        </a>
                        {"        "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-608">
                        <a href="#Task-608">
                            <span className="linenos"> 608</span>
                        </a>
                        {"            "}
                        <span className="n">logger</span>
                        <span className="o">.</span>
                        <span className="n">debug</span>
                        <span className="p">(</span>
                        <span className="sa">f</span>
                        <span className="s2">"Created task run </span>
                        <span className="si">{"{"}</span>
                        <span className="n">task_run</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2"> for task </span>
                        <span className="si">{"{"}</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2">"</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-609">
                        <a href="#Task-609">
                            <span className="linenos"> 609</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-610">
                        <a href="#Task-610">
                            <span className="linenos"> 610</span>
                        </a>
                        {"        "}
                        <span className="k">return</span>{" "}
                        <span className="n">task_run</span>
                        {"\n"}
                    </span>
                    <span id="Task-611">
                        <a href="#Task-611">
                            <span className="linenos"> 611</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-612">
                        <a href="#Task-612">
                            <span className="linenos"> 612</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Task-613">
                        <a href="#Task-613">
                            <span className="linenos"> 613</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="fm">__call__</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-614">
                        <a href="#Task-614">
                            <span className="linenos"> 614</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Task[P, NoReturn]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-615">
                        <a href="#Task-615">
                            <span className="linenos"> 615</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-616">
                        <a href="#Task-616">
                            <span className="linenos"> 616</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-617">
                        <a href="#Task-617">
                            <span className="linenos"> 617</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-618">
                        <a href="#Task-618">
                            <span className="linenos"> 618</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # `NoReturn` matches if a type can't be inferred for the function
                            which stops a
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-619">
                        <a href="#Task-619">
                            <span className="linenos"> 619</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # sync function from matching the `Coroutine` overload
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-620">
                        <a href="#Task-620">
                            <span className="linenos"> 620</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Task-621">
                        <a href="#Task-621">
                            <span className="linenos"> 621</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-622">
                        <a href="#Task-622">
                            <span className="linenos"> 622</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Task-623">
                        <a href="#Task-623">
                            <span className="linenos"> 623</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="fm">__call__</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-624">
                        <a href="#Task-624">
                            <span className="linenos"> 624</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Task[P, T]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-625">
                        <a href="#Task-625">
                            <span className="linenos"> 625</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-626">
                        <a href="#Task-626">
                            <span className="linenos"> 626</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-627">
                        <a href="#Task-627">
                            <span className="linenos"> 627</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">T</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-628">
                        <a href="#Task-628">
                            <span className="linenos"> 628</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Task-629">
                        <a href="#Task-629">
                            <span className="linenos"> 629</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-630">
                        <a href="#Task-630">
                            <span className="linenos"> 630</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Task-631">
                        <a href="#Task-631">
                            <span className="linenos"> 631</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="fm">__call__</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-632">
                        <a href="#Task-632">
                            <span className="linenos"> 632</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Task[P, T]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-633">
                        <a href="#Task-633">
                            <span className="linenos"> 633</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-634">
                        <a href="#Task-634">
                            <span className="linenos"> 634</span>
                        </a>
                        {"        "}
                        <span className="n">return_state</span>
                        <span className="p">:</span> <span className="n">Literal</span>
                        <span className="p">[</span>
                        <span className="kc">True</span>
                        <span className="p">],</span>
                        {"\n"}
                    </span>
                    <span id="Task-635">
                        <a href="#Task-635">
                            <span className="linenos"> 635</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-636">
                        <a href="#Task-636">
                            <span className="linenos"> 636</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">State</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="Task-637">
                        <a href="#Task-637">
                            <span className="linenos"> 637</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Task-638">
                        <a href="#Task-638">
                            <span className="linenos"> 638</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-639">
                        <a href="#Task-639">
                            <span className="linenos"> 639</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="fm">__call__</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-640">
                        <a href="#Task-640">
                            <span className="linenos"> 640</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-641">
                        <a href="#Task-641">
                            <span className="linenos"> 641</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-642">
                        <a href="#Task-642">
                            <span className="linenos"> 642</span>
                        </a>
                        {"        "}
                        <span className="n">return_state</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-643">
                        <a href="#Task-643">
                            <span className="linenos"> 643</span>
                        </a>
                        {"        "}
                        <span className="n">wait_for</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="n">PrefectFuture</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-644">
                        <a href="#Task-644">
                            <span className="linenos"> 644</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-645">
                        <a href="#Task-645">
                            <span className="linenos"> 645</span>
                        </a>
                        {"    "}
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Task-646">
                        <a href="#Task-646">
                            <span className="linenos"> 646</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="Task-647">
                        <a href="#Task-647">
                            <span className="linenos"> 647</span>
                        </a>
                        <span className="sd">
                            {"        "}Run the task and return the result. If `return_state`
                            is True returns
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-648">
                        <a href="#Task-648">
                            <span className="linenos"> 648</span>
                        </a>
                        <span className="sd">
                            {"        "}the result is wrapped in a Prefect State which
                            provides error handling.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-649">
                        <a href="#Task-649">
                            <span className="linenos"> 649</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Task-650">
                        <a href="#Task-650">
                            <span className="linenos"> 650</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.engine</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">enter_task_run_engine</span>
                        {"\n"}
                    </span>
                    <span id="Task-651">
                        <a href="#Task-651">
                            <span className="linenos"> 651</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.task_engine</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">submit_autonomous_task_run_to_engine</span>
                        {"\n"}
                    </span>
                    <span id="Task-652">
                        <a href="#Task-652">
                            <span className="linenos"> 652</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.task_runners</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">SequentialTaskRunner</span>
                        {"\n"}
                    </span>
                    <span id="Task-653">
                        <a href="#Task-653">
                            <span className="linenos"> 653</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-654">
                        <a href="#Task-654">
                            <span className="linenos"> 654</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # Convert the call args/kwargs to a parameter dict
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-655">
                        <a href="#Task-655">
                            <span className="linenos"> 655</span>
                        </a>
                        {"        "}
                        <span className="n">
                            parameters
                        </span> <span className="o">=</span>{" "}
                        <span className="n">get_call_parameters</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">,</span> <span className="n">args</span>
                        <span className="p">,</span> <span className="n">kwargs</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-656">
                        <a href="#Task-656">
                            <span className="linenos"> 656</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-657">
                        <a href="#Task-657">
                            <span className="linenos"> 657</span>
                        </a>
                        {"        "}
                        <span className="n">
                            return_type
                        </span> <span className="o">=</span>{" "}
                        <span className="s2">"state"</span> <span className="k">if</span>{" "}
                        <span className="n">return_state</span>{" "}
                        <span className="k">else</span> <span className="s2">"result"</span>
                        {"\n"}
                    </span>
                    <span id="Task-658">
                        <a href="#Task-658">
                            <span className="linenos"> 658</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-659">
                        <a href="#Task-659">
                            <span className="linenos"> 659</span>
                        </a>
                        {"        "}
                        <span className="n">task_run_tracker</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">get_task_viz_tracker</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Task-660">
                        <a href="#Task-660">
                            <span className="linenos"> 660</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">task_run_tracker</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-661">
                        <a href="#Task-661">
                            <span className="linenos"> 661</span>
                        </a>
                        {"            "}
                        <span className="k">return</span>{" "}
                        <span className="n">track_viz_task</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-662">
                        <a href="#Task-662">
                            <span className="linenos"> 662</span>
                        </a>
                        {"                "}
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">isasync</span>
                        <span className="p">,</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="p">,</span> <span className="n">parameters</span>
                        <span className="p">,</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">viz_return_value</span>
                        {"\n"}
                    </span>
                    <span id="Task-663">
                        <a href="#Task-663">
                            <span className="linenos"> 663</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-664">
                        <a href="#Task-664">
                            <span className="linenos"> 664</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-665">
                        <a href="#Task-665">
                            <span className="linenos"> 665</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">PREFECT_EXPERIMENTAL_ENABLE_NEW_ENGINE</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">():</span>
                        {"\n"}
                    </span>
                    <span id="Task-666">
                        <a href="#Task-666">
                            <span className="linenos"> 666</span>
                        </a>
                        {"            "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.new_task_engine</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">run_task</span>
                        {"\n"}
                    </span>
                    <span id="Task-667">
                        <a href="#Task-667">
                            <span className="linenos"> 667</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-668">
                        <a href="#Task-668">
                            <span className="linenos"> 668</span>
                        </a>
                        {"            "}
                        <span className="k">return</span>{" "}
                        <span className="n">run_task</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-669">
                        <a href="#Task-669">
                            <span className="linenos"> 669</span>
                        </a>
                        {"                "}
                        <span className="n">task</span>
                        <span className="o">=</span>
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-670">
                        <a href="#Task-670">
                            <span className="linenos"> 670</span>
                        </a>
                        {"                "}
                        <span className="n">parameters</span>
                        <span className="o">=</span>
                        <span className="n">parameters</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-671">
                        <a href="#Task-671">
                            <span className="linenos"> 671</span>
                        </a>
                        {"                "}
                        <span className="n">wait_for</span>
                        <span className="o">=</span>
                        <span className="n">wait_for</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-672">
                        <a href="#Task-672">
                            <span className="linenos"> 672</span>
                        </a>
                        {"                "}
                        <span className="n">return_type</span>
                        <span className="o">=</span>
                        <span className="n">return_type</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-673">
                        <a href="#Task-673">
                            <span className="linenos"> 673</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-674">
                        <a href="#Task-674">
                            <span className="linenos"> 674</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-675">
                        <a href="#Task-675">
                            <span className="linenos"> 675</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-676">
                        <a href="#Task-676">
                            <span className="linenos"> 676</span>
                        </a>
                        {"            "}
                        <span className="n">
                            PREFECT_EXPERIMENTAL_ENABLE_TASK_SCHEDULING
                        </span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Task-677">
                        <a href="#Task-677">
                            <span className="linenos"> 677</span>
                        </a>
                        {"            "}
                        <span className="ow">and</span> <span className="ow">not</span>{" "}
                        <span className="n">FlowRunContext</span>
                        <span className="o">.</span>
                        <span className="n">get</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Task-678">
                        <a href="#Task-678">
                            <span className="linenos"> 678</span>
                        </a>
                        {"        "}
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Task-679">
                        <a href="#Task-679">
                            <span className="linenos"> 679</span>
                        </a>
                        {"            "}
                        <span className="kn">
                            from
                        </span> <span className="nn">prefect</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">get_client</span>
                        {"\n"}
                    </span>
                    <span id="Task-680">
                        <a href="#Task-680">
                            <span className="linenos"> 680</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-681">
                        <a href="#Task-681">
                            <span className="linenos"> 681</span>
                        </a>
                        {"            "}
                        <span className="k">return</span>{" "}
                        <span className="n">submit_autonomous_task_run_to_engine</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-682">
                        <a href="#Task-682">
                            <span className="linenos"> 682</span>
                        </a>
                        {"                "}
                        <span className="n">task</span>
                        <span className="o">=</span>
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-683">
                        <a href="#Task-683">
                            <span className="linenos"> 683</span>
                        </a>
                        {"                "}
                        <span className="n">task_run</span>
                        <span className="o">=</span>
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-684">
                        <a href="#Task-684">
                            <span className="linenos"> 684</span>
                        </a>
                        {"                "}
                        <span className="n">task_runner</span>
                        <span className="o">=</span>
                        <span className="n">SequentialTaskRunner</span>
                        <span className="p">(),</span>
                        {"\n"}
                    </span>
                    <span id="Task-685">
                        <a href="#Task-685">
                            <span className="linenos"> 685</span>
                        </a>
                        {"                "}
                        <span className="n">parameters</span>
                        <span className="o">=</span>
                        <span className="n">parameters</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-686">
                        <a href="#Task-686">
                            <span className="linenos"> 686</span>
                        </a>
                        {"                "}
                        <span className="n">return_type</span>
                        <span className="o">=</span>
                        <span className="n">return_type</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-687">
                        <a href="#Task-687">
                            <span className="linenos"> 687</span>
                        </a>
                        {"                "}
                        <span className="n">client</span>
                        <span className="o">=</span>
                        <span className="n">get_client</span>
                        <span className="p">(),</span>
                        {"\n"}
                    </span>
                    <span id="Task-688">
                        <a href="#Task-688">
                            <span className="linenos"> 688</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-689">
                        <a href="#Task-689">
                            <span className="linenos"> 689</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-690">
                        <a href="#Task-690">
                            <span className="linenos"> 690</span>
                        </a>
                        {"        "}
                        <span className="k">return</span>{" "}
                        <span className="n">enter_task_run_engine</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-691">
                        <a href="#Task-691">
                            <span className="linenos"> 691</span>
                        </a>
                        {"            "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-692">
                        <a href="#Task-692">
                            <span className="linenos"> 692</span>
                        </a>
                        {"            "}
                        <span className="n">parameters</span>
                        <span className="o">=</span>
                        <span className="n">parameters</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-693">
                        <a href="#Task-693">
                            <span className="linenos"> 693</span>
                        </a>
                        {"            "}
                        <span className="n">wait_for</span>
                        <span className="o">=</span>
                        <span className="n">wait_for</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-694">
                        <a href="#Task-694">
                            <span className="linenos"> 694</span>
                        </a>
                        {"            "}
                        <span className="n">task_runner</span>
                        <span className="o">=</span>
                        <span className="n">SequentialTaskRunner</span>
                        <span className="p">(),</span>
                        {"\n"}
                    </span>
                    <span id="Task-695">
                        <a href="#Task-695">
                            <span className="linenos"> 695</span>
                        </a>
                        {"            "}
                        <span className="n">return_type</span>
                        <span className="o">=</span>
                        <span className="n">return_type</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-696">
                        <a href="#Task-696">
                            <span className="linenos"> 696</span>
                        </a>
                        {"            "}
                        <span className="n">mapped</span>
                        <span className="o">=</span>
                        <span className="kc">False</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-697">
                        <a href="#Task-697">
                            <span className="linenos"> 697</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-698">
                        <a href="#Task-698">
                            <span className="linenos"> 698</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-699">
                        <a href="#Task-699">
                            <span className="linenos"> 699</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Task-700">
                        <a href="#Task-700">
                            <span className="linenos"> 700</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">_run</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-701">
                        <a href="#Task-701">
                            <span className="linenos"> 701</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Task[P, NoReturn]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-702">
                        <a href="#Task-702">
                            <span className="linenos"> 702</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-703">
                        <a href="#Task-703">
                            <span className="linenos"> 703</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-704">
                        <a href="#Task-704">
                            <span className="linenos"> 704</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">PrefectFuture</span>
                        <span className="p">[</span>
                        <span className="kc">None</span>
                        <span className="p">,</span> <span className="n">Sync</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="Task-705">
                        <a href="#Task-705">
                            <span className="linenos"> 705</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # `NoReturn` matches if a type can't be inferred for the function
                            which stops a
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-706">
                        <a href="#Task-706">
                            <span className="linenos"> 706</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # sync function from matching the `Coroutine` overload
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-707">
                        <a href="#Task-707">
                            <span className="linenos"> 707</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Task-708">
                        <a href="#Task-708">
                            <span className="linenos"> 708</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-709">
                        <a href="#Task-709">
                            <span className="linenos"> 709</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Task-710">
                        <a href="#Task-710">
                            <span className="linenos"> 710</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">_run</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-711">
                        <a href="#Task-711">
                            <span className="linenos"> 711</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Task[P, Coroutine[Any, Any, T]]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-712">
                        <a href="#Task-712">
                            <span className="linenos"> 712</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-713">
                        <a href="#Task-713">
                            <span className="linenos"> 713</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-714">
                        <a href="#Task-714">
                            <span className="linenos"> 714</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Awaitable</span>
                        <span className="p">[</span>
                        <span className="n">State</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">]]:</span>
                        {"\n"}
                    </span>
                    <span id="Task-715">
                        <a href="#Task-715">
                            <span className="linenos"> 715</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Task-716">
                        <a href="#Task-716">
                            <span className="linenos"> 716</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-717">
                        <a href="#Task-717">
                            <span className="linenos"> 717</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Task-718">
                        <a href="#Task-718">
                            <span className="linenos"> 718</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">_run</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-719">
                        <a href="#Task-719">
                            <span className="linenos"> 719</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Task[P, T]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-720">
                        <a href="#Task-720">
                            <span className="linenos"> 720</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-721">
                        <a href="#Task-721">
                            <span className="linenos"> 721</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-722">
                        <a href="#Task-722">
                            <span className="linenos"> 722</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">State</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="Task-723">
                        <a href="#Task-723">
                            <span className="linenos"> 723</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Task-724">
                        <a href="#Task-724">
                            <span className="linenos"> 724</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-725">
                        <a href="#Task-725">
                            <span className="linenos"> 725</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">_run</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-726">
                        <a href="#Task-726">
                            <span className="linenos"> 726</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-727">
                        <a href="#Task-727">
                            <span className="linenos"> 727</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-728">
                        <a href="#Task-728">
                            <span className="linenos"> 728</span>
                        </a>
                        {"        "}
                        <span className="n">wait_for</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="n">PrefectFuture</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-729">
                        <a href="#Task-729">
                            <span className="linenos"> 729</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-730">
                        <a href="#Task-730">
                            <span className="linenos"> 730</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">State</span>
                        <span className="p">,</span> <span className="n">Awaitable</span>
                        <span className="p">[</span>
                        <span className="n">State</span>
                        <span className="p">]]:</span>
                        {"\n"}
                    </span>
                    <span id="Task-731">
                        <a href="#Task-731">
                            <span className="linenos"> 731</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="Task-732">
                        <a href="#Task-732">
                            <span className="linenos"> 732</span>
                        </a>
                        <span className="sd">
                            {"        "}Run the task and return the final state.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-733">
                        <a href="#Task-733">
                            <span className="linenos"> 733</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Task-734">
                        <a href="#Task-734">
                            <span className="linenos"> 734</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.engine</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">enter_task_run_engine</span>
                        {"\n"}
                    </span>
                    <span id="Task-735">
                        <a href="#Task-735">
                            <span className="linenos"> 735</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.task_runners</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">SequentialTaskRunner</span>
                        {"\n"}
                    </span>
                    <span id="Task-736">
                        <a href="#Task-736">
                            <span className="linenos"> 736</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-737">
                        <a href="#Task-737">
                            <span className="linenos"> 737</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # Convert the call args/kwargs to a parameter dict
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-738">
                        <a href="#Task-738">
                            <span className="linenos"> 738</span>
                        </a>
                        {"        "}
                        <span className="n">
                            parameters
                        </span> <span className="o">=</span>{" "}
                        <span className="n">get_call_parameters</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">,</span> <span className="n">args</span>
                        <span className="p">,</span> <span className="n">kwargs</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-739">
                        <a href="#Task-739">
                            <span className="linenos"> 739</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-740">
                        <a href="#Task-740">
                            <span className="linenos"> 740</span>
                        </a>
                        {"        "}
                        <span className="k">return</span>{" "}
                        <span className="n">enter_task_run_engine</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-741">
                        <a href="#Task-741">
                            <span className="linenos"> 741</span>
                        </a>
                        {"            "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-742">
                        <a href="#Task-742">
                            <span className="linenos"> 742</span>
                        </a>
                        {"            "}
                        <span className="n">parameters</span>
                        <span className="o">=</span>
                        <span className="n">parameters</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-743">
                        <a href="#Task-743">
                            <span className="linenos"> 743</span>
                        </a>
                        {"            "}
                        <span className="n">wait_for</span>
                        <span className="o">=</span>
                        <span className="n">wait_for</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-744">
                        <a href="#Task-744">
                            <span className="linenos"> 744</span>
                        </a>
                        {"            "}
                        <span className="n">return_type</span>
                        <span className="o">=</span>
                        <span className="s2">"state"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-745">
                        <a href="#Task-745">
                            <span className="linenos"> 745</span>
                        </a>
                        {"            "}
                        <span className="n">task_runner</span>
                        <span className="o">=</span>
                        <span className="n">SequentialTaskRunner</span>
                        <span className="p">(),</span>
                        {"\n"}
                    </span>
                    <span id="Task-746">
                        <a href="#Task-746">
                            <span className="linenos"> 746</span>
                        </a>
                        {"            "}
                        <span className="n">mapped</span>
                        <span className="o">=</span>
                        <span className="kc">False</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-747">
                        <a href="#Task-747">
                            <span className="linenos"> 747</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-748">
                        <a href="#Task-748">
                            <span className="linenos"> 748</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-749">
                        <a href="#Task-749">
                            <span className="linenos"> 749</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Task-750">
                        <a href="#Task-750">
                            <span className="linenos"> 750</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">submit</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-751">
                        <a href="#Task-751">
                            <span className="linenos"> 751</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Task[P, NoReturn]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-752">
                        <a href="#Task-752">
                            <span className="linenos"> 752</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-753">
                        <a href="#Task-753">
                            <span className="linenos"> 753</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-754">
                        <a href="#Task-754">
                            <span className="linenos"> 754</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">PrefectFuture</span>
                        <span className="p">[</span>
                        <span className="kc">None</span>
                        <span className="p">,</span> <span className="n">Sync</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="Task-755">
                        <a href="#Task-755">
                            <span className="linenos"> 755</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # `NoReturn` matches if a type can't be inferred for the function
                            which stops a
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-756">
                        <a href="#Task-756">
                            <span className="linenos"> 756</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # sync function from matching the `Coroutine` overload
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-757">
                        <a href="#Task-757">
                            <span className="linenos"> 757</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Task-758">
                        <a href="#Task-758">
                            <span className="linenos"> 758</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-759">
                        <a href="#Task-759">
                            <span className="linenos"> 759</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Task-760">
                        <a href="#Task-760">
                            <span className="linenos"> 760</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">submit</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-761">
                        <a href="#Task-761">
                            <span className="linenos"> 761</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Task[P, Coroutine[Any, Any, T]]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-762">
                        <a href="#Task-762">
                            <span className="linenos"> 762</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-763">
                        <a href="#Task-763">
                            <span className="linenos"> 763</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-764">
                        <a href="#Task-764">
                            <span className="linenos"> 764</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Awaitable</span>
                        <span className="p">[</span>
                        <span className="n">PrefectFuture</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">,</span> <span className="n">Async</span>
                        <span className="p">]]:</span>
                        {"\n"}
                    </span>
                    <span id="Task-765">
                        <a href="#Task-765">
                            <span className="linenos"> 765</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Task-766">
                        <a href="#Task-766">
                            <span className="linenos"> 766</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-767">
                        <a href="#Task-767">
                            <span className="linenos"> 767</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Task-768">
                        <a href="#Task-768">
                            <span className="linenos"> 768</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">submit</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-769">
                        <a href="#Task-769">
                            <span className="linenos"> 769</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Task[P, T]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-770">
                        <a href="#Task-770">
                            <span className="linenos"> 770</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-771">
                        <a href="#Task-771">
                            <span className="linenos"> 771</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-772">
                        <a href="#Task-772">
                            <span className="linenos"> 772</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">PrefectFuture</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">,</span> <span className="n">Sync</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="Task-773">
                        <a href="#Task-773">
                            <span className="linenos"> 773</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Task-774">
                        <a href="#Task-774">
                            <span className="linenos"> 774</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-775">
                        <a href="#Task-775">
                            <span className="linenos"> 775</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Task-776">
                        <a href="#Task-776">
                            <span className="linenos"> 776</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">submit</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-777">
                        <a href="#Task-777">
                            <span className="linenos"> 777</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Task[P, T]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-778">
                        <a href="#Task-778">
                            <span className="linenos"> 778</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-779">
                        <a href="#Task-779">
                            <span className="linenos"> 779</span>
                        </a>
                        {"        "}
                        <span className="n">return_state</span>
                        <span className="p">:</span> <span className="n">Literal</span>
                        <span className="p">[</span>
                        <span className="kc">True</span>
                        <span className="p">],</span>
                        {"\n"}
                    </span>
                    <span id="Task-780">
                        <a href="#Task-780">
                            <span className="linenos"> 780</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-781">
                        <a href="#Task-781">
                            <span className="linenos"> 781</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">State</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="Task-782">
                        <a href="#Task-782">
                            <span className="linenos"> 782</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Task-783">
                        <a href="#Task-783">
                            <span className="linenos"> 783</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-784">
                        <a href="#Task-784">
                            <span className="linenos"> 784</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Task-785">
                        <a href="#Task-785">
                            <span className="linenos"> 785</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">submit</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-786">
                        <a href="#Task-786">
                            <span className="linenos"> 786</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Task[P, T]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-787">
                        <a href="#Task-787">
                            <span className="linenos"> 787</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-788">
                        <a href="#Task-788">
                            <span className="linenos"> 788</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-789">
                        <a href="#Task-789">
                            <span className="linenos"> 789</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">TaskRun</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-790">
                        <a href="#Task-790">
                            <span className="linenos"> 790</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Task-791">
                        <a href="#Task-791">
                            <span className="linenos"> 791</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-792">
                        <a href="#Task-792">
                            <span className="linenos"> 792</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Task-793">
                        <a href="#Task-793">
                            <span className="linenos"> 793</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">submit</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-794">
                        <a href="#Task-794">
                            <span className="linenos"> 794</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Task[P, Coroutine[Any, Any, T]]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-795">
                        <a href="#Task-795">
                            <span className="linenos"> 795</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-796">
                        <a href="#Task-796">
                            <span className="linenos"> 796</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-797">
                        <a href="#Task-797">
                            <span className="linenos"> 797</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Awaitable</span>
                        <span className="p">[</span>
                        <span className="n">TaskRun</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="Task-798">
                        <a href="#Task-798">
                            <span className="linenos"> 798</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Task-799">
                        <a href="#Task-799">
                            <span className="linenos"> 799</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-800">
                        <a href="#Task-800">
                            <span className="linenos"> 800</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">submit</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-801">
                        <a href="#Task-801">
                            <span className="linenos"> 801</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-802">
                        <a href="#Task-802">
                            <span className="linenos"> 802</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">Any</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-803">
                        <a href="#Task-803">
                            <span className="linenos"> 803</span>
                        </a>
                        {"        "}
                        <span className="n">return_state</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-804">
                        <a href="#Task-804">
                            <span className="linenos"> 804</span>
                        </a>
                        {"        "}
                        <span className="n">wait_for</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="n">PrefectFuture</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-805">
                        <a href="#Task-805">
                            <span className="linenos"> 805</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">Any</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-806">
                        <a href="#Task-806">
                            <span className="linenos"> 806</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="n">PrefectFuture</span>
                        <span className="p">,</span> <span className="n">Awaitable</span>
                        <span className="p">[</span>
                        <span className="n">PrefectFuture</span>
                        <span className="p">],</span> <span className="n">TaskRun</span>
                        <span className="p">,</span> <span className="n">Awaitable</span>
                        <span className="p">[</span>
                        <span className="n">TaskRun</span>
                        <span className="p">]]:</span>
                        {"\n"}
                    </span>
                    <span id="Task-807">
                        <a href="#Task-807">
                            <span className="linenos"> 807</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="Task-808">
                        <a href="#Task-808">
                            <span className="linenos"> 808</span>
                        </a>
                        <span className="sd">
                            {"        "}Submit a run of the task to the engine.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-809">
                        <a href="#Task-809">
                            <span className="linenos"> 809</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-810">
                        <a href="#Task-810">
                            <span className="linenos"> 810</span>
                        </a>
                        <span className="sd">
                            {"        "}If writing an async task, this call must be awaited.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-811">
                        <a href="#Task-811">
                            <span className="linenos"> 811</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-812">
                        <a href="#Task-812">
                            <span className="linenos"> 812</span>
                        </a>
                        <span className="sd">
                            {"        "}If called from within a flow function,
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-813">
                        <a href="#Task-813">
                            <span className="linenos"> 813</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-814">
                        <a href="#Task-814">
                            <span className="linenos"> 814</span>
                        </a>
                        <span className="sd">
                            {"        "}Will create a new task run in the backing API and
                            submit the task to the flow's
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-815">
                        <a href="#Task-815">
                            <span className="linenos"> 815</span>
                        </a>
                        <span className="sd">
                            {"        "}task runner. This call only blocks execution while the
                            task is being submitted,
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-816">
                        <a href="#Task-816">
                            <span className="linenos"> 816</span>
                        </a>
                        <span className="sd">
                            {"        "}once it is submitted, the flow function will continue
                            executing. However, note
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-817">
                        <a href="#Task-817">
                            <span className="linenos"> 817</span>
                        </a>
                        <span className="sd">
                            {"        "}that the `SequentialTaskRunner` does not implement
                            parallel execution for sync tasks
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-818">
                        <a href="#Task-818">
                            <span className="linenos"> 818</span>
                        </a>
                        <span className="sd">
                            {"        "}and they are fully resolved on submission.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-819">
                        <a href="#Task-819">
                            <span className="linenos"> 819</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-820">
                        <a href="#Task-820">
                            <span className="linenos"> 820</span>
                        </a>
                        <span className="sd">{"        "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="Task-821">
                        <a href="#Task-821">
                            <span className="linenos"> 821</span>
                        </a>
                        <span className="sd">
                            {"            "}*args: Arguments to run the task with
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-822">
                        <a href="#Task-822">
                            <span className="linenos"> 822</span>
                        </a>
                        <span className="sd">
                            {"            "}return_state: Return the result of the flow run
                            wrapped in a
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-823">
                        <a href="#Task-823">
                            <span className="linenos"> 823</span>
                        </a>
                        <span className="sd">{"                "}Prefect State.</span>
                        {"\n"}
                    </span>
                    <span id="Task-824">
                        <a href="#Task-824">
                            <span className="linenos"> 824</span>
                        </a>
                        <span className="sd">
                            {"            "}wait_for: Upstream task futures to wait for before
                            starting the task
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-825">
                        <a href="#Task-825">
                            <span className="linenos"> 825</span>
                        </a>
                        <span className="sd">
                            {"            "}**kwargs: Keyword arguments to run the task with
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-826">
                        <a href="#Task-826">
                            <span className="linenos"> 826</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-827">
                        <a href="#Task-827">
                            <span className="linenos"> 827</span>
                        </a>
                        <span className="sd">{"        "}Returns:</span>
                        {"\n"}
                    </span>
                    <span id="Task-828">
                        <a href="#Task-828">
                            <span className="linenos"> 828</span>
                        </a>
                        <span className="sd">
                            {"            "}If `return_state` is False a future allowing
                            asynchronous access to
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-829">
                        <a href="#Task-829">
                            <span className="linenos"> 829</span>
                        </a>
                        <span className="sd">
                            {"                "}the state of the task
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-830">
                        <a href="#Task-830">
                            <span className="linenos"> 830</span>
                        </a>
                        <span className="sd">
                            {"            "}If `return_state` is True a future wrapped in a
                            Prefect State allowing asynchronous access to
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-831">
                        <a href="#Task-831">
                            <span className="linenos"> 831</span>
                        </a>
                        <span className="sd">
                            {"                "}the state of the task
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-832">
                        <a href="#Task-832">
                            <span className="linenos"> 832</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-833">
                        <a href="#Task-833">
                            <span className="linenos"> 833</span>
                        </a>
                        <span className="sd">{"        "}Examples:</span>
                        {"\n"}
                    </span>
                    <span id="Task-834">
                        <a href="#Task-834">
                            <span className="linenos"> 834</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-835">
                        <a href="#Task-835">
                            <span className="linenos"> 835</span>
                        </a>
                        <span className="sd">{"            "}Define a task</span>
                        {"\n"}
                    </span>
                    <span id="Task-836">
                        <a href="#Task-836">
                            <span className="linenos"> 836</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-837">
                        <a href="#Task-837">
                            <span className="linenos"> 837</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; from prefect import task
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-838">
                        <a href="#Task-838">
                            <span className="linenos"> 838</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                        {"\n"}
                    </span>
                    <span id="Task-839">
                        <a href="#Task-839">
                            <span className="linenos"> 839</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_task():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-840">
                        <a href="#Task-840">
                            <span className="linenos"> 840</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}return "hello"
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-841">
                        <a href="#Task-841">
                            <span className="linenos"> 841</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-842">
                        <a href="#Task-842">
                            <span className="linenos"> 842</span>
                        </a>
                        <span className="sd">{"            "}Run a task in a flow</span>
                        {"\n"}
                    </span>
                    <span id="Task-843">
                        <a href="#Task-843">
                            <span className="linenos"> 843</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-844">
                        <a href="#Task-844">
                            <span className="linenos"> 844</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; from prefect import flow
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-845">
                        <a href="#Task-845">
                            <span className="linenos"> 845</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="Task-846">
                        <a href="#Task-846">
                            <span className="linenos"> 846</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-847">
                        <a href="#Task-847">
                            <span className="linenos"> 847</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}my_task.submit()
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-848">
                        <a href="#Task-848">
                            <span className="linenos"> 848</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-849">
                        <a href="#Task-849">
                            <span className="linenos"> 849</span>
                        </a>
                        <span className="sd">
                            {"            "}Wait for a task to finish
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-850">
                        <a href="#Task-850">
                            <span className="linenos"> 850</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-851">
                        <a href="#Task-851">
                            <span className="linenos"> 851</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="Task-852">
                        <a href="#Task-852">
                            <span className="linenos"> 852</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-853">
                        <a href="#Task-853">
                            <span className="linenos"> 853</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}my_task.submit().wait()
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-854">
                        <a href="#Task-854">
                            <span className="linenos"> 854</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-855">
                        <a href="#Task-855">
                            <span className="linenos"> 855</span>
                        </a>
                        <span className="sd">
                            {"            "}Use the result from a task in a flow
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-856">
                        <a href="#Task-856">
                            <span className="linenos"> 856</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-857">
                        <a href="#Task-857">
                            <span className="linenos"> 857</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="Task-858">
                        <a href="#Task-858">
                            <span className="linenos"> 858</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-859">
                        <a href="#Task-859">
                            <span className="linenos"> 859</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}
                            print(my_task.submit().result())
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-860">
                        <a href="#Task-860">
                            <span className="linenos"> 860</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Task-861">
                        <a href="#Task-861">
                            <span className="linenos"> 861</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; my_flow()</span>
                        {"\n"}
                    </span>
                    <span id="Task-862">
                        <a href="#Task-862">
                            <span className="linenos"> 862</span>
                        </a>
                        <span className="sd">{"            "}hello</span>
                        {"\n"}
                    </span>
                    <span id="Task-863">
                        <a href="#Task-863">
                            <span className="linenos"> 863</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-864">
                        <a href="#Task-864">
                            <span className="linenos"> 864</span>
                        </a>
                        <span className="sd">
                            {"            "}Run an async task in an async flow
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-865">
                        <a href="#Task-865">
                            <span className="linenos"> 865</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-866">
                        <a href="#Task-866">
                            <span className="linenos"> 866</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                        {"\n"}
                    </span>
                    <span id="Task-867">
                        <a href="#Task-867">
                            <span className="linenos"> 867</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; async def my_async_task():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-868">
                        <a href="#Task-868">
                            <span className="linenos"> 868</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}pass
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-869">
                        <a href="#Task-869">
                            <span className="linenos"> 869</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Task-870">
                        <a href="#Task-870">
                            <span className="linenos"> 870</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="Task-871">
                        <a href="#Task-871">
                            <span className="linenos"> 871</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; async def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-872">
                        <a href="#Task-872">
                            <span className="linenos"> 872</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}await my_async_task.submit()
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-873">
                        <a href="#Task-873">
                            <span className="linenos"> 873</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-874">
                        <a href="#Task-874">
                            <span className="linenos"> 874</span>
                        </a>
                        <span className="sd">
                            {"            "}Run a sync task in an async flow
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-875">
                        <a href="#Task-875">
                            <span className="linenos"> 875</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-876">
                        <a href="#Task-876">
                            <span className="linenos"> 876</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="Task-877">
                        <a href="#Task-877">
                            <span className="linenos"> 877</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; async def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-878">
                        <a href="#Task-878">
                            <span className="linenos"> 878</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}my_task.submit()
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-879">
                        <a href="#Task-879">
                            <span className="linenos"> 879</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-880">
                        <a href="#Task-880">
                            <span className="linenos"> 880</span>
                        </a>
                        <span className="sd">
                            {"            "}Enforce ordering between tasks that do not
                            exchange data
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-881">
                        <a href="#Task-881">
                            <span className="linenos"> 881</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                        {"\n"}
                    </span>
                    <span id="Task-882">
                        <a href="#Task-882">
                            <span className="linenos"> 882</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def task_1():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-883">
                        <a href="#Task-883">
                            <span className="linenos"> 883</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}pass
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-884">
                        <a href="#Task-884">
                            <span className="linenos"> 884</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Task-885">
                        <a href="#Task-885">
                            <span className="linenos"> 885</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                        {"\n"}
                    </span>
                    <span id="Task-886">
                        <a href="#Task-886">
                            <span className="linenos"> 886</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def task_2():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-887">
                        <a href="#Task-887">
                            <span className="linenos"> 887</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}pass
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-888">
                        <a href="#Task-888">
                            <span className="linenos"> 888</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Task-889">
                        <a href="#Task-889">
                            <span className="linenos"> 889</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="Task-890">
                        <a href="#Task-890">
                            <span className="linenos"> 890</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-891">
                        <a href="#Task-891">
                            <span className="linenos"> 891</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}x = task_1.submit()
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-892">
                        <a href="#Task-892">
                            <span className="linenos"> 892</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Task-893">
                        <a href="#Task-893">
                            <span className="linenos"> 893</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}# task 2 will wait for task_1
                            to complete
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-894">
                        <a href="#Task-894">
                            <span className="linenos"> 894</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}y =
                            task_2.submit(wait_for=[x])
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-895">
                        <a href="#Task-895">
                            <span className="linenos"> 895</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-896">
                        <a href="#Task-896">
                            <span className="linenos"> 896</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Task-897">
                        <a href="#Task-897">
                            <span className="linenos"> 897</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-898">
                        <a href="#Task-898">
                            <span className="linenos"> 898</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.engine</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">create_autonomous_task_run</span>
                        <span className="p">,</span>{" "}
                        <span className="n">enter_task_run_engine</span>
                        {"\n"}
                    </span>
                    <span id="Task-899">
                        <a href="#Task-899">
                            <span className="linenos"> 899</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-900">
                        <a href="#Task-900">
                            <span className="linenos"> 900</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # Convert the call args/kwargs to a parameter dict
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-901">
                        <a href="#Task-901">
                            <span className="linenos"> 901</span>
                        </a>
                        {"        "}
                        <span className="n">
                            parameters
                        </span> <span className="o">=</span>{" "}
                        <span className="n">get_call_parameters</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">,</span> <span className="n">args</span>
                        <span className="p">,</span> <span className="n">kwargs</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-902">
                        <a href="#Task-902">
                            <span className="linenos"> 902</span>
                        </a>
                        {"        "}
                        <span className="n">
                            return_type
                        </span> <span className="o">=</span>{" "}
                        <span className="s2">"state"</span> <span className="k">if</span>{" "}
                        <span className="n">return_state</span>{" "}
                        <span className="k">else</span> <span className="s2">"future"</span>
                        {"\n"}
                    </span>
                    <span id="Task-903">
                        <a href="#Task-903">
                            <span className="linenos"> 903</span>
                        </a>
                        {"        "}
                        <span className="n">flow_run_context</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">FlowRunContext</span>
                        <span className="o">.</span>
                        <span className="n">get</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Task-904">
                        <a href="#Task-904">
                            <span className="linenos"> 904</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-905">
                        <a href="#Task-905">
                            <span className="linenos"> 905</span>
                        </a>
                        {"        "}
                        <span className="n">task_viz_tracker</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">get_task_viz_tracker</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Task-906">
                        <a href="#Task-906">
                            <span className="linenos"> 906</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">task_viz_tracker</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-907">
                        <a href="#Task-907">
                            <span className="linenos"> 907</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="n">VisualizationUnsupportedError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-908">
                        <a href="#Task-908">
                            <span className="linenos"> 908</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            "`task.submit()` is not currently supported by `flow.visualize()`"
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-909">
                        <a href="#Task-909">
                            <span className="linenos"> 909</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-910">
                        <a href="#Task-910">
                            <span className="linenos"> 910</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-911">
                        <a href="#Task-911">
                            <span className="linenos"> 911</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">
                            PREFECT_EXPERIMENTAL_ENABLE_TASK_SCHEDULING
                        </span>{" "}
                        <span className="ow">and</span> <span className="ow">not</span>{" "}
                        <span className="n">flow_run_context</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-912">
                        <a href="#Task-912">
                            <span className="linenos"> 912</span>
                        </a>
                        {"            "}
                        <span className="n">create_autonomous_task_run_call</span>{" "}
                        <span className="o">=</span> <span className="n">create_call</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-913">
                        <a href="#Task-913">
                            <span className="linenos"> 913</span>
                        </a>
                        {"                "}
                        <span className="n">create_autonomous_task_run</span>
                        <span className="p">,</span> <span className="n">task</span>
                        <span className="o">=</span>
                        <span className="bp">self</span>
                        <span className="p">,</span> <span className="n">parameters</span>
                        <span className="o">=</span>
                        <span className="n">parameters</span>
                        {"\n"}
                    </span>
                    <span id="Task-914">
                        <a href="#Task-914">
                            <span className="linenos"> 914</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-915">
                        <a href="#Task-915">
                            <span className="linenos"> 915</span>
                        </a>
                        {"            "}
                        <span className="k">if</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">isasync</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-916">
                        <a href="#Task-916">
                            <span className="linenos"> 916</span>
                        </a>
                        {"                "}
                        <span className="k">return</span>{" "}
                        <span className="n">from_async</span>
                        <span className="o">.</span>
                        <span className="n">wait_for_call_in_loop_thread</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-917">
                        <a href="#Task-917">
                            <span className="linenos"> 917</span>
                        </a>
                        {"                    "}
                        <span className="n">create_autonomous_task_run_call</span>
                        {"\n"}
                    </span>
                    <span id="Task-918">
                        <a href="#Task-918">
                            <span className="linenos"> 918</span>
                        </a>
                        {"                "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-919">
                        <a href="#Task-919">
                            <span className="linenos"> 919</span>
                        </a>
                        {"            "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-920">
                        <a href="#Task-920">
                            <span className="linenos"> 920</span>
                        </a>
                        {"                "}
                        <span className="k">return</span>{" "}
                        <span className="n">from_sync</span>
                        <span className="o">.</span>
                        <span className="n">wait_for_call_in_loop_thread</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-921">
                        <a href="#Task-921">
                            <span className="linenos"> 921</span>
                        </a>
                        {"                    "}
                        <span className="n">create_autonomous_task_run_call</span>
                        {"\n"}
                    </span>
                    <span id="Task-922">
                        <a href="#Task-922">
                            <span className="linenos"> 922</span>
                        </a>
                        {"                "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-923">
                        <a href="#Task-923">
                            <span className="linenos"> 923</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">PREFECT_EXPERIMENTAL_ENABLE_NEW_ENGINE</span>{" "}
                        <span className="ow">and</span>{" "}
                        <span className="n">flow_run_context</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-924">
                        <a href="#Task-924">
                            <span className="linenos"> 924</span>
                        </a>
                        {"            "}
                        <span className="k">if</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">isasync</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-925">
                        <a href="#Task-925">
                            <span className="linenos"> 925</span>
                        </a>
                        {"                "}
                        <span className="k">return</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">_submit_async</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-926">
                        <a href="#Task-926">
                            <span className="linenos"> 926</span>
                        </a>
                        {"                    "}
                        <span className="n">parameters</span>
                        <span className="o">=</span>
                        <span className="n">parameters</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-927">
                        <a href="#Task-927">
                            <span className="linenos"> 927</span>
                        </a>
                        {"                    "}
                        <span className="n">flow_run_context</span>
                        <span className="o">=</span>
                        <span className="n">flow_run_context</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-928">
                        <a href="#Task-928">
                            <span className="linenos"> 928</span>
                        </a>
                        {"                    "}
                        <span className="n">wait_for</span>
                        <span className="o">=</span>
                        <span className="n">wait_for</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-929">
                        <a href="#Task-929">
                            <span className="linenos"> 929</span>
                        </a>
                        {"                    "}
                        <span className="n">return_state</span>
                        <span className="o">=</span>
                        <span className="n">return_state</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-930">
                        <a href="#Task-930">
                            <span className="linenos"> 930</span>
                        </a>
                        {"                "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-931">
                        <a href="#Task-931">
                            <span className="linenos"> 931</span>
                        </a>
                        {"            "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-932">
                        <a href="#Task-932">
                            <span className="linenos"> 932</span>
                        </a>
                        {"                "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">NotImplementedError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-933">
                        <a href="#Task-933">
                            <span className="linenos"> 933</span>
                        </a>
                        {"                    "}
                        <span className="s2">
                            "Submitting sync tasks with the new engine has not be implemented
                            yet."
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-934">
                        <a href="#Task-934">
                            <span className="linenos"> 934</span>
                        </a>
                        {"                "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-935">
                        <a href="#Task-935">
                            <span className="linenos"> 935</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-936">
                        <a href="#Task-936">
                            <span className="linenos"> 936</span>
                        </a>
                        {"        "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-937">
                        <a href="#Task-937">
                            <span className="linenos"> 937</span>
                        </a>
                        {"            "}
                        <span className="k">return</span>{" "}
                        <span className="n">enter_task_run_engine</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-938">
                        <a href="#Task-938">
                            <span className="linenos"> 938</span>
                        </a>
                        {"                "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-939">
                        <a href="#Task-939">
                            <span className="linenos"> 939</span>
                        </a>
                        {"                "}
                        <span className="n">parameters</span>
                        <span className="o">=</span>
                        <span className="n">parameters</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-940">
                        <a href="#Task-940">
                            <span className="linenos"> 940</span>
                        </a>
                        {"                "}
                        <span className="n">wait_for</span>
                        <span className="o">=</span>
                        <span className="n">wait_for</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-941">
                        <a href="#Task-941">
                            <span className="linenos"> 941</span>
                        </a>
                        {"                "}
                        <span className="n">return_type</span>
                        <span className="o">=</span>
                        <span className="n">return_type</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-942">
                        <a href="#Task-942">
                            <span className="linenos"> 942</span>
                        </a>
                        {"                "}
                        <span className="n">task_runner</span>
                        <span className="o">=</span>
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"  "}
                        <span className="c1"># Use the flow's task runner</span>
                        {"\n"}
                    </span>
                    <span id="Task-943">
                        <a href="#Task-943">
                            <span className="linenos"> 943</span>
                        </a>
                        {"                "}
                        <span className="n">mapped</span>
                        <span className="o">=</span>
                        <span className="kc">False</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-944">
                        <a href="#Task-944">
                            <span className="linenos"> 944</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-945">
                        <a href="#Task-945">
                            <span className="linenos"> 945</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-946">
                        <a href="#Task-946">
                            <span className="linenos"> 946</span>
                        </a>
                        {"    "}
                        <span className="k">async</span> <span className="k">def</span>{" "}
                        <span className="nf">_submit_async</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-947">
                        <a href="#Task-947">
                            <span className="linenos"> 947</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-948">
                        <a href="#Task-948">
                            <span className="linenos"> 948</span>
                        </a>
                        {"        "}
                        <span className="n">parameters</span>
                        <span className="p">:</span> <span className="n">Dict</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">Any</span>
                        <span className="p">],</span>
                        {"\n"}
                    </span>
                    <span id="Task-949">
                        <a href="#Task-949">
                            <span className="linenos"> 949</span>
                        </a>
                        {"        "}
                        <span className="n">flow_run_context</span>
                        <span className="p">:</span>{" "}
                        <span className="n">FlowRunContext</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-950">
                        <a href="#Task-950">
                            <span className="linenos"> 950</span>
                        </a>
                        {"        "}
                        <span className="n">wait_for</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="n">PrefectFuture</span>
                        <span className="p">]],</span>
                        {"\n"}
                    </span>
                    <span id="Task-951">
                        <a href="#Task-951">
                            <span className="linenos"> 951</span>
                        </a>
                        {"        "}
                        <span className="n">return_state</span>
                        <span className="p">:</span> <span className="nb">bool</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-952">
                        <a href="#Task-952">
                            <span className="linenos"> 952</span>
                        </a>
                        {"    "}
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Task-953">
                        <a href="#Task-953">
                            <span className="linenos"> 953</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.new_task_engine</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">run_task_async</span>
                        {"\n"}
                    </span>
                    <span id="Task-954">
                        <a href="#Task-954">
                            <span className="linenos"> 954</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-955">
                        <a href="#Task-955">
                            <span className="linenos"> 955</span>
                        </a>
                        {"        "}
                        <span className="n">
                            task_runner
                        </span> <span className="o">=</span>{" "}
                        <span className="n">flow_run_context</span>
                        <span className="o">.</span>
                        <span className="n">task_runner</span>
                        {"\n"}
                    </span>
                    <span id="Task-956">
                        <a href="#Task-956">
                            <span className="linenos"> 956</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-957">
                        <a href="#Task-957">
                            <span className="linenos"> 957</span>
                        </a>
                        {"        "}
                        <span className="n">
                            task_run
                        </span> <span className="o">=</span>{" "}
                        <span className="k">await</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">create_run</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-958">
                        <a href="#Task-958">
                            <span className="linenos"> 958</span>
                        </a>
                        {"            "}
                        <span className="n">client</span>
                        <span className="o">=</span>
                        <span className="n">flow_run_context</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-959">
                        <a href="#Task-959">
                            <span className="linenos"> 959</span>
                        </a>
                        {"            "}
                        <span className="n">flow_run_context</span>
                        <span className="o">=</span>
                        <span className="n">flow_run_context</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-960">
                        <a href="#Task-960">
                            <span className="linenos"> 960</span>
                        </a>
                        {"            "}
                        <span className="n">parameters</span>
                        <span className="o">=</span>
                        <span className="n">parameters</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-961">
                        <a href="#Task-961">
                            <span className="linenos"> 961</span>
                        </a>
                        {"            "}
                        <span className="n">wait_for</span>
                        <span className="o">=</span>
                        <span className="n">wait_for</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-962">
                        <a href="#Task-962">
                            <span className="linenos"> 962</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-963">
                        <a href="#Task-963">
                            <span className="linenos"> 963</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-964">
                        <a href="#Task-964">
                            <span className="linenos"> 964</span>
                        </a>
                        {"        "}
                        <span className="n">future</span> <span className="o">=</span>{" "}
                        <span className="n">PrefectFuture</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-965">
                        <a href="#Task-965">
                            <span className="linenos"> 965</span>
                        </a>
                        {"            "}
                        <span className="n">name</span>
                        <span className="o">=</span>
                        <span className="n">task_run</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-966">
                        <a href="#Task-966">
                            <span className="linenos"> 966</span>
                        </a>
                        {"            "}
                        <span className="n">key</span>
                        <span className="o">=</span>
                        <span className="n">uuid4</span>
                        <span className="p">(),</span>
                        {"\n"}
                    </span>
                    <span id="Task-967">
                        <a href="#Task-967">
                            <span className="linenos"> 967</span>
                        </a>
                        {"            "}
                        <span className="n">task_runner</span>
                        <span className="o">=</span>
                        <span className="n">task_runner</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-968">
                        <a href="#Task-968">
                            <span className="linenos"> 968</span>
                        </a>
                        {"            "}
                        <span className="n">asynchronous</span>
                        <span className="o">=</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">
                            isasync
                        </span> <span className="ow">and</span>{" "}
                        <span className="n">flow_run_context</span>
                        <span className="o">.</span>
                        <span className="n">flow</span>
                        <span className="o">.</span>
                        <span className="n">isasync</span>
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Task-969">
                        <a href="#Task-969">
                            <span className="linenos"> 969</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-970">
                        <a href="#Task-970">
                            <span className="linenos"> 970</span>
                        </a>
                        {"        "}
                        <span className="n">future</span>
                        <span className="o">.</span>
                        <span className="n">
                            task_run
                        </span> <span className="o">=</span>{" "}
                        <span className="n">task_run</span>
                        {"\n"}
                    </span>
                    <span id="Task-971">
                        <a href="#Task-971">
                            <span className="linenos"> 971</span>
                        </a>
                        {"        "}
                        <span className="n">flow_run_context</span>
                        <span className="o">.</span>
                        <span className="n">task_run_futures</span>
                        <span className="o">.</span>
                        <span className="n">append</span>
                        <span className="p">(</span>
                        <span className="n">future</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-972">
                        <a href="#Task-972">
                            <span className="linenos"> 972</span>
                        </a>
                        {"        "}
                        <span className="k">await</span>{" "}
                        <span className="n">task_runner</span>
                        <span className="o">.</span>
                        <span className="n">submit</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-973">
                        <a href="#Task-973">
                            <span className="linenos"> 973</span>
                        </a>
                        {"            "}
                        <span className="n">key</span>
                        <span className="o">=</span>
                        <span className="n">future</span>
                        <span className="o">.</span>
                        <span className="n">key</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-974">
                        <a href="#Task-974">
                            <span className="linenos"> 974</span>
                        </a>
                        {"            "}
                        <span className="n">call</span>
                        <span className="o">=</span>
                        <span className="n">partial</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-975">
                        <a href="#Task-975">
                            <span className="linenos"> 975</span>
                        </a>
                        {"                "}
                        <span className="n">run_task_async</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-976">
                        <a href="#Task-976">
                            <span className="linenos"> 976</span>
                        </a>
                        {"                "}
                        <span className="n">task</span>
                        <span className="o">=</span>
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-977">
                        <a href="#Task-977">
                            <span className="linenos"> 977</span>
                        </a>
                        {"                "}
                        <span className="n">task_run</span>
                        <span className="o">=</span>
                        <span className="n">task_run</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-978">
                        <a href="#Task-978">
                            <span className="linenos"> 978</span>
                        </a>
                        {"                "}
                        <span className="n">parameters</span>
                        <span className="o">=</span>
                        <span className="n">parameters</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-979">
                        <a href="#Task-979">
                            <span className="linenos"> 979</span>
                        </a>
                        {"                "}
                        <span className="n">wait_for</span>
                        <span className="o">=</span>
                        <span className="n">wait_for</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-980">
                        <a href="#Task-980">
                            <span className="linenos"> 980</span>
                        </a>
                        {"                "}
                        <span className="n">return_type</span>
                        <span className="o">=</span>
                        <span className="s2">"state"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-981">
                        <a href="#Task-981">
                            <span className="linenos"> 981</span>
                        </a>
                        {"            "}
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="Task-982">
                        <a href="#Task-982">
                            <span className="linenos"> 982</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-983">
                        <a href="#Task-983">
                            <span className="linenos"> 983</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # TODO: I don't like this. Can we move responsibility for creating
                            the future
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-984">
                        <a href="#Task-984">
                            <span className="linenos"> 984</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # and setting this anyio.Event to the task runner?
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-985">
                        <a href="#Task-985">
                            <span className="linenos"> 985</span>
                        </a>
                        {"        "}
                        <span className="n">future</span>
                        <span className="o">.</span>
                        <span className="n">_submitted</span>
                        <span className="o">.</span>
                        <span className="n">set</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Task-986">
                        <a href="#Task-986">
                            <span className="linenos"> 986</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-987">
                        <a href="#Task-987">
                            <span className="linenos"> 987</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">return_state</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-988">
                        <a href="#Task-988">
                            <span className="linenos"> 988</span>
                        </a>
                        {"            "}
                        <span className="k">
                            return
                        </span> <span className="k">await</span>{" "}
                        <span className="n">future</span>
                        <span className="o">.</span>
                        <span className="n">wait</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Task-989">
                        <a href="#Task-989">
                            <span className="linenos"> 989</span>
                        </a>
                        {"        "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-990">
                        <a href="#Task-990">
                            <span className="linenos"> 990</span>
                        </a>
                        {"            "}
                        <span className="k">return</span> <span className="n">future</span>
                        {"\n"}
                    </span>
                    <span id="Task-991">
                        <a href="#Task-991">
                            <span className="linenos"> 991</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-992">
                        <a href="#Task-992">
                            <span className="linenos"> 992</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Task-993">
                        <a href="#Task-993">
                            <span className="linenos"> 993</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">map</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-994">
                        <a href="#Task-994">
                            <span className="linenos"> 994</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Task[P, NoReturn]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-995">
                        <a href="#Task-995">
                            <span className="linenos"> 995</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-996">
                        <a href="#Task-996">
                            <span className="linenos"> 996</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-997">
                        <a href="#Task-997">
                            <span className="linenos"> 997</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">PrefectFuture</span>
                        <span className="p">[</span>
                        <span className="kc">None</span>
                        <span className="p">,</span> <span className="n">Sync</span>
                        <span className="p">]]:</span>
                        {"\n"}
                    </span>
                    <span id="Task-998">
                        <a href="#Task-998">
                            <span className="linenos"> 998</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # `NoReturn` matches if a type can't be inferred for the function
                            which stops a
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-999">
                        <a href="#Task-999">
                            <span className="linenos"> 999</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # sync function from matching the `Coroutine` overload
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1000">
                        <a href="#Task-1000">
                            <span className="linenos">1000</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Task-1001">
                        <a href="#Task-1001">
                            <span className="linenos">1001</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1002">
                        <a href="#Task-1002">
                            <span className="linenos">1002</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Task-1003">
                        <a href="#Task-1003">
                            <span className="linenos">1003</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">map</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-1004">
                        <a href="#Task-1004">
                            <span className="linenos">1004</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Task[P, Coroutine[Any, Any, T]]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1005">
                        <a href="#Task-1005">
                            <span className="linenos">1005</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1006">
                        <a href="#Task-1006">
                            <span className="linenos">1006</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1007">
                        <a href="#Task-1007">
                            <span className="linenos">1007</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Awaitable</span>
                        <span className="p">[</span>
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">PrefectFuture</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">,</span> <span className="n">Async</span>
                        <span className="p">]]]:</span>
                        {"\n"}
                    </span>
                    <span id="Task-1008">
                        <a href="#Task-1008">
                            <span className="linenos">1008</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Task-1009">
                        <a href="#Task-1009">
                            <span className="linenos">1009</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1010">
                        <a href="#Task-1010">
                            <span className="linenos">1010</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Task-1011">
                        <a href="#Task-1011">
                            <span className="linenos">1011</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">map</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-1012">
                        <a href="#Task-1012">
                            <span className="linenos">1012</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Task[P, T]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1013">
                        <a href="#Task-1013">
                            <span className="linenos">1013</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1014">
                        <a href="#Task-1014">
                            <span className="linenos">1014</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1015">
                        <a href="#Task-1015">
                            <span className="linenos">1015</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">PrefectFuture</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">,</span> <span className="n">Sync</span>
                        <span className="p">]]:</span>
                        {"\n"}
                    </span>
                    <span id="Task-1016">
                        <a href="#Task-1016">
                            <span className="linenos">1016</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Task-1017">
                        <a href="#Task-1017">
                            <span className="linenos">1017</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1018">
                        <a href="#Task-1018">
                            <span className="linenos">1018</span>
                        </a>
                        {"    "}
                        <span className="nd">@overload</span>
                        {"\n"}
                    </span>
                    <span id="Task-1019">
                        <a href="#Task-1019">
                            <span className="linenos">1019</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">map</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-1020">
                        <a href="#Task-1020">
                            <span className="linenos">1020</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"Task[P, T]"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1021">
                        <a href="#Task-1021">
                            <span className="linenos">1021</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">args</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1022">
                        <a href="#Task-1022">
                            <span className="linenos">1022</span>
                        </a>
                        {"        "}
                        <span className="n">return_state</span>
                        <span className="p">:</span> <span className="n">Literal</span>
                        <span className="p">[</span>
                        <span className="kc">True</span>
                        <span className="p">],</span>
                        {"\n"}
                    </span>
                    <span id="Task-1023">
                        <a href="#Task-1023">
                            <span className="linenos">1023</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">P</span>
                        <span className="o">.</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1024">
                        <a href="#Task-1024">
                            <span className="linenos">1024</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">State</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">]]:</span>
                        {"\n"}
                    </span>
                    <span id="Task-1025">
                        <a href="#Task-1025">
                            <span className="linenos">1025</span>
                        </a>
                        {"        "}
                        <span className="o">...</span>
                        {"\n"}
                    </span>
                    <span id="Task-1026">
                        <a href="#Task-1026">
                            <span className="linenos">1026</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1027">
                        <a href="#Task-1027">
                            <span className="linenos">1027</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">map</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-1028">
                        <a href="#Task-1028">
                            <span className="linenos">1028</span>
                        </a>
                        {"        "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1029">
                        <a href="#Task-1029">
                            <span className="linenos">1029</span>
                        </a>
                        {"        "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">Any</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1030">
                        <a href="#Task-1030">
                            <span className="linenos">1030</span>
                        </a>
                        {"        "}
                        <span className="n">return_state</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1031">
                        <a href="#Task-1031">
                            <span className="linenos">1031</span>
                        </a>
                        {"        "}
                        <span className="n">wait_for</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Iterable</span>
                        <span className="p">[</span>
                        <span className="n">PrefectFuture</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1032">
                        <a href="#Task-1032">
                            <span className="linenos">1032</span>
                        </a>
                        {"        "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">:</span> <span className="n">Any</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1033">
                        <a href="#Task-1033">
                            <span className="linenos">1033</span>
                        </a>
                        {"    "}
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Any</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-1034">
                        <a href="#Task-1034">
                            <span className="linenos">1034</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="Task-1035">
                        <a href="#Task-1035">
                            <span className="linenos">1035</span>
                        </a>
                        <span className="sd">
                            {"        "}Submit a mapped run of the task to a worker.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1036">
                        <a href="#Task-1036">
                            <span className="linenos">1036</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1037">
                        <a href="#Task-1037">
                            <span className="linenos">1037</span>
                        </a>
                        <span className="sd">
                            {"        "}Must be called within a flow function. If writing an
                            async task, this
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1038">
                        <a href="#Task-1038">
                            <span className="linenos">1038</span>
                        </a>
                        <span className="sd">{"        "}call must be awaited.</span>
                        {"\n"}
                    </span>
                    <span id="Task-1039">
                        <a href="#Task-1039">
                            <span className="linenos">1039</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1040">
                        <a href="#Task-1040">
                            <span className="linenos">1040</span>
                        </a>
                        <span className="sd">
                            {"        "}Must be called with at least one iterable and all
                            iterables must be
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1041">
                        <a href="#Task-1041">
                            <span className="linenos">1041</span>
                        </a>
                        <span className="sd">
                            {"        "}the same length. Any arguments that are not iterable
                            will be treated as
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1042">
                        <a href="#Task-1042">
                            <span className="linenos">1042</span>
                        </a>
                        <span className="sd">
                            {"        "}a static value and each task run will receive the same
                            value.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1043">
                        <a href="#Task-1043">
                            <span className="linenos">1043</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1044">
                        <a href="#Task-1044">
                            <span className="linenos">1044</span>
                        </a>
                        <span className="sd">
                            {"        "}Will create as many task runs as the length of the
                            iterable(s) in the
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1045">
                        <a href="#Task-1045">
                            <span className="linenos">1045</span>
                        </a>
                        <span className="sd">
                            {"        "}backing API and submit the task runs to the flow's
                            task runner. This
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1046">
                        <a href="#Task-1046">
                            <span className="linenos">1046</span>
                        </a>
                        <span className="sd">
                            {"        "}call blocks if given a future as input while the
                            future is resolved. It
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1047">
                        <a href="#Task-1047">
                            <span className="linenos">1047</span>
                        </a>
                        <span className="sd">
                            {"        "}also blocks while the tasks are being submitted, once
                            they are
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1048">
                        <a href="#Task-1048">
                            <span className="linenos">1048</span>
                        </a>
                        <span className="sd">
                            {"        "}submitted, the flow function will continue executing.
                            However, note
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1049">
                        <a href="#Task-1049">
                            <span className="linenos">1049</span>
                        </a>
                        <span className="sd">
                            {"        "}that the `SequentialTaskRunner` does not implement
                            parallel execution
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1050">
                        <a href="#Task-1050">
                            <span className="linenos">1050</span>
                        </a>
                        <span className="sd">
                            {"        "}for sync tasks and they are fully resolved on
                            submission.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1051">
                        <a href="#Task-1051">
                            <span className="linenos">1051</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1052">
                        <a href="#Task-1052">
                            <span className="linenos">1052</span>
                        </a>
                        <span className="sd">{"        "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="Task-1053">
                        <a href="#Task-1053">
                            <span className="linenos">1053</span>
                        </a>
                        <span className="sd">
                            {"            "}*args: Iterable and static arguments to run the
                            tasks with
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1054">
                        <a href="#Task-1054">
                            <span className="linenos">1054</span>
                        </a>
                        <span className="sd">
                            {"            "}return_state: Return a list of Prefect States that
                            wrap the results
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1055">
                        <a href="#Task-1055">
                            <span className="linenos">1055</span>
                        </a>
                        <span className="sd">{"                "}of each task run.</span>
                        {"\n"}
                    </span>
                    <span id="Task-1056">
                        <a href="#Task-1056">
                            <span className="linenos">1056</span>
                        </a>
                        <span className="sd">
                            {"            "}wait_for: Upstream task futures to wait for before
                            starting the
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1057">
                        <a href="#Task-1057">
                            <span className="linenos">1057</span>
                        </a>
                        <span className="sd">{"                "}task</span>
                        {"\n"}
                    </span>
                    <span id="Task-1058">
                        <a href="#Task-1058">
                            <span className="linenos">1058</span>
                        </a>
                        <span className="sd">
                            {"            "}**kwargs: Keyword iterable arguments to run the
                            task with
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1059">
                        <a href="#Task-1059">
                            <span className="linenos">1059</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1060">
                        <a href="#Task-1060">
                            <span className="linenos">1060</span>
                        </a>
                        <span className="sd">{"        "}Returns:</span>
                        {"\n"}
                    </span>
                    <span id="Task-1061">
                        <a href="#Task-1061">
                            <span className="linenos">1061</span>
                        </a>
                        <span className="sd">
                            {"            "}A list of futures allowing asynchronous access to
                            the state of the
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1062">
                        <a href="#Task-1062">
                            <span className="linenos">1062</span>
                        </a>
                        <span className="sd">{"            "}tasks</span>
                        {"\n"}
                    </span>
                    <span id="Task-1063">
                        <a href="#Task-1063">
                            <span className="linenos">1063</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1064">
                        <a href="#Task-1064">
                            <span className="linenos">1064</span>
                        </a>
                        <span className="sd">{"        "}Examples:</span>
                        {"\n"}
                    </span>
                    <span id="Task-1065">
                        <a href="#Task-1065">
                            <span className="linenos">1065</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1066">
                        <a href="#Task-1066">
                            <span className="linenos">1066</span>
                        </a>
                        <span className="sd">{"            "}Define a task</span>
                        {"\n"}
                    </span>
                    <span id="Task-1067">
                        <a href="#Task-1067">
                            <span className="linenos">1067</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1068">
                        <a href="#Task-1068">
                            <span className="linenos">1068</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; from prefect import task
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1069">
                        <a href="#Task-1069">
                            <span className="linenos">1069</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                        {"\n"}
                    </span>
                    <span id="Task-1070">
                        <a href="#Task-1070">
                            <span className="linenos">1070</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_task(x):
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1071">
                        <a href="#Task-1071">
                            <span className="linenos">1071</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}return x + 1
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1072">
                        <a href="#Task-1072">
                            <span className="linenos">1072</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1073">
                        <a href="#Task-1073">
                            <span className="linenos">1073</span>
                        </a>
                        <span className="sd">{"            "}Create mapped tasks</span>
                        {"\n"}
                    </span>
                    <span id="Task-1074">
                        <a href="#Task-1074">
                            <span className="linenos">1074</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1075">
                        <a href="#Task-1075">
                            <span className="linenos">1075</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; from prefect import flow
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1076">
                        <a href="#Task-1076">
                            <span className="linenos">1076</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="Task-1077">
                        <a href="#Task-1077">
                            <span className="linenos">1077</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1078">
                        <a href="#Task-1078">
                            <span className="linenos">1078</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}my_task.map([1, 2, 3])
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1079">
                        <a href="#Task-1079">
                            <span className="linenos">1079</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1080">
                        <a href="#Task-1080">
                            <span className="linenos">1080</span>
                        </a>
                        <span className="sd">
                            {"            "}Wait for all mapped tasks to finish
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1081">
                        <a href="#Task-1081">
                            <span className="linenos">1081</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1082">
                        <a href="#Task-1082">
                            <span className="linenos">1082</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="Task-1083">
                        <a href="#Task-1083">
                            <span className="linenos">1083</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1084">
                        <a href="#Task-1084">
                            <span className="linenos">1084</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}futures = my_task.map([1, 2,
                            3])
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1085">
                        <a href="#Task-1085">
                            <span className="linenos">1085</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}for future in futures:
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1086">
                        <a href="#Task-1086">
                            <span className="linenos">1086</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"         "}future.wait()
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1087">
                        <a href="#Task-1087">
                            <span className="linenos">1087</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}# Now all of the mapped tasks
                            have finished
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1088">
                        <a href="#Task-1088">
                            <span className="linenos">1088</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}my_task(10)
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1089">
                        <a href="#Task-1089">
                            <span className="linenos">1089</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1090">
                        <a href="#Task-1090">
                            <span className="linenos">1090</span>
                        </a>
                        <span className="sd">
                            {"            "}Use the result from mapped tasks in a flow
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1091">
                        <a href="#Task-1091">
                            <span className="linenos">1091</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1092">
                        <a href="#Task-1092">
                            <span className="linenos">1092</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="Task-1093">
                        <a href="#Task-1093">
                            <span className="linenos">1093</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1094">
                        <a href="#Task-1094">
                            <span className="linenos">1094</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}futures = my_task.map([1, 2,
                            3])
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1095">
                        <a href="#Task-1095">
                            <span className="linenos">1095</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}for future in futures:
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1096">
                        <a href="#Task-1096">
                            <span className="linenos">1096</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"         "}print(future.result())
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1097">
                        <a href="#Task-1097">
                            <span className="linenos">1097</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; my_flow()</span>
                        {"\n"}
                    </span>
                    <span id="Task-1098">
                        <a href="#Task-1098">
                            <span className="linenos">1098</span>
                        </a>
                        <span className="sd">{"            "}2</span>
                        {"\n"}
                    </span>
                    <span id="Task-1099">
                        <a href="#Task-1099">
                            <span className="linenos">1099</span>
                        </a>
                        <span className="sd">{"            "}3</span>
                        {"\n"}
                    </span>
                    <span id="Task-1100">
                        <a href="#Task-1100">
                            <span className="linenos">1100</span>
                        </a>
                        <span className="sd">{"            "}4</span>
                        {"\n"}
                    </span>
                    <span id="Task-1101">
                        <a href="#Task-1101">
                            <span className="linenos">1101</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1102">
                        <a href="#Task-1102">
                            <span className="linenos">1102</span>
                        </a>
                        <span className="sd">
                            {"            "}Enforce ordering between tasks that do not
                            exchange data
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1103">
                        <a href="#Task-1103">
                            <span className="linenos">1103</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                        {"\n"}
                    </span>
                    <span id="Task-1104">
                        <a href="#Task-1104">
                            <span className="linenos">1104</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def task_1(x):
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1105">
                        <a href="#Task-1105">
                            <span className="linenos">1105</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}pass
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1106">
                        <a href="#Task-1106">
                            <span className="linenos">1106</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Task-1107">
                        <a href="#Task-1107">
                            <span className="linenos">1107</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                        {"\n"}
                    </span>
                    <span id="Task-1108">
                        <a href="#Task-1108">
                            <span className="linenos">1108</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def task_2(y):
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1109">
                        <a href="#Task-1109">
                            <span className="linenos">1109</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}pass
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1110">
                        <a href="#Task-1110">
                            <span className="linenos">1110</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Task-1111">
                        <a href="#Task-1111">
                            <span className="linenos">1111</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="Task-1112">
                        <a href="#Task-1112">
                            <span className="linenos">1112</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1113">
                        <a href="#Task-1113">
                            <span className="linenos">1113</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}x = task_1.submit()
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1114">
                        <a href="#Task-1114">
                            <span className="linenos">1114</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Task-1115">
                        <a href="#Task-1115">
                            <span className="linenos">1115</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}# task 2 will wait for task_1
                            to complete
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1116">
                        <a href="#Task-1116">
                            <span className="linenos">1116</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}y = task_2.map([1, 2, 3],
                            wait_for=[x])
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1117">
                        <a href="#Task-1117">
                            <span className="linenos">1117</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1118">
                        <a href="#Task-1118">
                            <span className="linenos">1118</span>
                        </a>
                        <span className="sd">
                            {"            "}Use a non-iterable input as a constant across
                            mapped tasks
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1119">
                        <a href="#Task-1119">
                            <span className="linenos">1119</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                        {"\n"}
                    </span>
                    <span id="Task-1120">
                        <a href="#Task-1120">
                            <span className="linenos">1120</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def display(prefix, item):
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1121">
                        <a href="#Task-1121">
                            <span className="linenos">1121</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"    "}print(prefix, item)
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1122">
                        <a href="#Task-1122">
                            <span className="linenos">1122</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Task-1123">
                        <a href="#Task-1123">
                            <span className="linenos">1123</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="Task-1124">
                        <a href="#Task-1124">
                            <span className="linenos">1124</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1125">
                        <a href="#Task-1125">
                            <span className="linenos">1125</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}display.map("Check it out: ",
                            [1, 2, 3])
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1126">
                        <a href="#Task-1126">
                            <span className="linenos">1126</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Task-1127">
                        <a href="#Task-1127">
                            <span className="linenos">1127</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; my_flow()</span>
                        {"\n"}
                    </span>
                    <span id="Task-1128">
                        <a href="#Task-1128">
                            <span className="linenos">1128</span>
                        </a>
                        <span className="sd">{"            "}Check it out: 1</span>
                        {"\n"}
                    </span>
                    <span id="Task-1129">
                        <a href="#Task-1129">
                            <span className="linenos">1129</span>
                        </a>
                        <span className="sd">{"            "}Check it out: 2</span>
                        {"\n"}
                    </span>
                    <span id="Task-1130">
                        <a href="#Task-1130">
                            <span className="linenos">1130</span>
                        </a>
                        <span className="sd">{"            "}Check it out: 3</span>
                        {"\n"}
                    </span>
                    <span id="Task-1131">
                        <a href="#Task-1131">
                            <span className="linenos">1131</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1132">
                        <a href="#Task-1132">
                            <span className="linenos">1132</span>
                        </a>
                        <span className="sd">
                            {"            "}Use `unmapped` to treat an iterable argument as a
                            constant
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1133">
                        <a href="#Task-1133">
                            <span className="linenos">1133</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; from prefect import unmapped
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1134">
                        <a href="#Task-1134">
                            <span className="linenos">1134</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Task-1135">
                        <a href="#Task-1135">
                            <span className="linenos">1135</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                        {"\n"}
                    </span>
                    <span id="Task-1136">
                        <a href="#Task-1136">
                            <span className="linenos">1136</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def add_n_to_items(items, n):
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1137">
                        <a href="#Task-1137">
                            <span className="linenos">1137</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}return [item + n for item in
                            items]
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1138">
                        <a href="#Task-1138">
                            <span className="linenos">1138</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Task-1139">
                        <a href="#Task-1139">
                            <span className="linenos">1139</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                        {"\n"}
                    </span>
                    <span id="Task-1140">
                        <a href="#Task-1140">
                            <span className="linenos">1140</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_flow():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1141">
                        <a href="#Task-1141">
                            <span className="linenos">1141</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}return
                            add_n_to_items.map(unmapped([10, 20]), n=[1, 2, 3])
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1142">
                        <a href="#Task-1142">
                            <span className="linenos">1142</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt;</span>
                        {"\n"}
                    </span>
                    <span id="Task-1143">
                        <a href="#Task-1143">
                            <span className="linenos">1143</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; my_flow()</span>
                        {"\n"}
                    </span>
                    <span id="Task-1144">
                        <a href="#Task-1144">
                            <span className="linenos">1144</span>
                        </a>
                        <span className="sd">
                            {"            "}[[11, 21], [12, 22], [13, 23]]
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1145">
                        <a href="#Task-1145">
                            <span className="linenos">1145</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Task-1146">
                        <a href="#Task-1146">
                            <span className="linenos">1146</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1147">
                        <a href="#Task-1147">
                            <span className="linenos">1147</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.engine</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">begin_task_map</span>
                        <span className="p">,</span>{" "}
                        <span className="n">enter_task_run_engine</span>
                        {"\n"}
                    </span>
                    <span id="Task-1148">
                        <a href="#Task-1148">
                            <span className="linenos">1148</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1149">
                        <a href="#Task-1149">
                            <span className="linenos">1149</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # Convert the call args/kwargs to a parameter dict; do not apply
                            defaults
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1150">
                        <a href="#Task-1150">
                            <span className="linenos">1150</span>
                        </a>
                        {"        "}
                        <span className="c1"># since they should not be mapped over</span>
                        {"\n"}
                    </span>
                    <span id="Task-1151">
                        <a href="#Task-1151">
                            <span className="linenos">1151</span>
                        </a>
                        {"        "}
                        <span className="n">
                            parameters
                        </span> <span className="o">=</span>{" "}
                        <span className="n">get_call_parameters</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">fn</span>
                        <span className="p">,</span> <span className="n">args</span>
                        <span className="p">,</span> <span className="n">kwargs</span>
                        <span className="p">,</span>{" "}
                        <span className="n">apply_defaults</span>
                        <span className="o">=</span>
                        <span className="kc">False</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-1152">
                        <a href="#Task-1152">
                            <span className="linenos">1152</span>
                        </a>
                        {"        "}
                        <span className="n">
                            return_type
                        </span> <span className="o">=</span>{" "}
                        <span className="s2">"state"</span> <span className="k">if</span>{" "}
                        <span className="n">return_state</span>{" "}
                        <span className="k">else</span> <span className="s2">"future"</span>
                        {"\n"}
                    </span>
                    <span id="Task-1153">
                        <a href="#Task-1153">
                            <span className="linenos">1153</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1154">
                        <a href="#Task-1154">
                            <span className="linenos">1154</span>
                        </a>
                        {"        "}
                        <span className="n">task_viz_tracker</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">get_task_viz_tracker</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Task-1155">
                        <a href="#Task-1155">
                            <span className="linenos">1155</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">task_viz_tracker</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-1156">
                        <a href="#Task-1156">
                            <span className="linenos">1156</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="n">VisualizationUnsupportedError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-1157">
                        <a href="#Task-1157">
                            <span className="linenos">1157</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            "`task.map()` is not currently supported by `flow.visualize()`"
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1158">
                        <a href="#Task-1158">
                            <span className="linenos">1158</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-1159">
                        <a href="#Task-1159">
                            <span className="linenos">1159</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1160">
                        <a href="#Task-1160">
                            <span className="linenos">1160</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-1161">
                        <a href="#Task-1161">
                            <span className="linenos">1161</span>
                        </a>
                        {"            "}
                        <span className="n">
                            PREFECT_EXPERIMENTAL_ENABLE_TASK_SCHEDULING
                        </span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Task-1162">
                        <a href="#Task-1162">
                            <span className="linenos">1162</span>
                        </a>
                        {"            "}
                        <span className="ow">and</span> <span className="ow">not</span>{" "}
                        <span className="n">FlowRunContext</span>
                        <span className="o">.</span>
                        <span className="n">get</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="Task-1163">
                        <a href="#Task-1163">
                            <span className="linenos">1163</span>
                        </a>
                        {"        "}
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="Task-1164">
                        <a href="#Task-1164">
                            <span className="linenos">1164</span>
                        </a>
                        {"            "}
                        <span className="n">
                            map_call
                        </span> <span className="o">=</span>{" "}
                        <span className="n">create_call</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-1165">
                        <a href="#Task-1165">
                            <span className="linenos">1165</span>
                        </a>
                        {"                "}
                        <span className="n">begin_task_map</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1166">
                        <a href="#Task-1166">
                            <span className="linenos">1166</span>
                        </a>
                        {"                "}
                        <span className="n">task</span>
                        <span className="o">=</span>
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1167">
                        <a href="#Task-1167">
                            <span className="linenos">1167</span>
                        </a>
                        {"                "}
                        <span className="n">parameters</span>
                        <span className="o">=</span>
                        <span className="n">parameters</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1168">
                        <a href="#Task-1168">
                            <span className="linenos">1168</span>
                        </a>
                        {"                "}
                        <span className="n">flow_run_context</span>
                        <span className="o">=</span>
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1169">
                        <a href="#Task-1169">
                            <span className="linenos">1169</span>
                        </a>
                        {"                "}
                        <span className="n">wait_for</span>
                        <span className="o">=</span>
                        <span className="n">wait_for</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1170">
                        <a href="#Task-1170">
                            <span className="linenos">1170</span>
                        </a>
                        {"                "}
                        <span className="n">return_type</span>
                        <span className="o">=</span>
                        <span className="n">return_type</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1171">
                        <a href="#Task-1171">
                            <span className="linenos">1171</span>
                        </a>
                        {"                "}
                        <span className="n">task_runner</span>
                        <span className="o">=</span>
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1172">
                        <a href="#Task-1172">
                            <span className="linenos">1172</span>
                        </a>
                        {"                "}
                        <span className="n">autonomous</span>
                        <span className="o">=</span>
                        <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1173">
                        <a href="#Task-1173">
                            <span className="linenos">1173</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-1174">
                        <a href="#Task-1174">
                            <span className="linenos">1174</span>
                        </a>
                        {"            "}
                        <span className="k">if</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">isasync</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-1175">
                        <a href="#Task-1175">
                            <span className="linenos">1175</span>
                        </a>
                        {"                "}
                        <span className="k">return</span>{" "}
                        <span className="n">from_async</span>
                        <span className="o">.</span>
                        <span className="n">wait_for_call_in_loop_thread</span>
                        <span className="p">(</span>
                        <span className="n">map_call</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-1176">
                        <a href="#Task-1176">
                            <span className="linenos">1176</span>
                        </a>
                        {"            "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-1177">
                        <a href="#Task-1177">
                            <span className="linenos">1177</span>
                        </a>
                        {"                "}
                        <span className="k">return</span>{" "}
                        <span className="n">from_sync</span>
                        <span className="o">.</span>
                        <span className="n">wait_for_call_in_loop_thread</span>
                        <span className="p">(</span>
                        <span className="n">map_call</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-1178">
                        <a href="#Task-1178">
                            <span className="linenos">1178</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1179">
                        <a href="#Task-1179">
                            <span className="linenos">1179</span>
                        </a>
                        {"        "}
                        <span className="k">return</span>{" "}
                        <span className="n">enter_task_run_engine</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-1180">
                        <a href="#Task-1180">
                            <span className="linenos">1180</span>
                        </a>
                        {"            "}
                        <span className="bp">self</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1181">
                        <a href="#Task-1181">
                            <span className="linenos">1181</span>
                        </a>
                        {"            "}
                        <span className="n">parameters</span>
                        <span className="o">=</span>
                        <span className="n">parameters</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1182">
                        <a href="#Task-1182">
                            <span className="linenos">1182</span>
                        </a>
                        {"            "}
                        <span className="n">wait_for</span>
                        <span className="o">=</span>
                        <span className="n">wait_for</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1183">
                        <a href="#Task-1183">
                            <span className="linenos">1183</span>
                        </a>
                        {"            "}
                        <span className="n">return_type</span>
                        <span className="o">=</span>
                        <span className="n">return_type</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1184">
                        <a href="#Task-1184">
                            <span className="linenos">1184</span>
                        </a>
                        {"            "}
                        <span className="n">task_runner</span>
                        <span className="o">=</span>
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1185">
                        <a href="#Task-1185">
                            <span className="linenos">1185</span>
                        </a>
                        {"            "}
                        <span className="n">mapped</span>
                        <span className="o">=</span>
                        <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="Task-1186">
                        <a href="#Task-1186">
                            <span className="linenos">1186</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-1187">
                        <a href="#Task-1187">
                            <span className="linenos">1187</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1188">
                        <a href="#Task-1188">
                            <span className="linenos">1188</span>
                        </a>
                        {"    "}
                        <span className="k">def</span> <span className="nf">serve</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">,</span> <span className="n">task_runner</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">BaseTaskRunner</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="s2">"Task"</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-1189">
                        <a href="#Task-1189">
                            <span className="linenos">1189</span>
                        </a>
                        <span className="w">{"        "}</span>
                        <span className="sd">
                            """Serve the task using the provided task runner. This method is
                            used to
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1190">
                        <a href="#Task-1190">
                            <span className="linenos">1190</span>
                        </a>
                        <span className="sd">
                            {"        "}establish a websocket connection with the Prefect
                            server and listen for
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1191">
                        <a href="#Task-1191">
                            <span className="linenos">1191</span>
                        </a>
                        <span className="sd">
                            {"        "}submitted task runs to execute.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1192">
                        <a href="#Task-1192">
                            <span className="linenos">1192</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1193">
                        <a href="#Task-1193">
                            <span className="linenos">1193</span>
                        </a>
                        <span className="sd">{"        "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="Task-1194">
                        <a href="#Task-1194">
                            <span className="linenos">1194</span>
                        </a>
                        <span className="sd">
                            {"            "}task_runner: The task runner to use for serving
                            the task. If not provided,
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1195">
                        <a href="#Task-1195">
                            <span className="linenos">1195</span>
                        </a>
                        <span className="sd">
                            {"                "}the default ConcurrentTaskRunner will be used.
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1196">
                        <a href="#Task-1196">
                            <span className="linenos">1196</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1197">
                        <a href="#Task-1197">
                            <span className="linenos">1197</span>
                        </a>
                        <span className="sd">{"        "}Examples:</span>
                        {"\n"}
                    </span>
                    <span id="Task-1198">
                        <a href="#Task-1198">
                            <span className="linenos">1198</span>
                        </a>
                        <span className="sd">
                            {"            "}Serve a task using the default task runner
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1199">
                        <a href="#Task-1199">
                            <span className="linenos">1199</span>
                        </a>
                        <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                        {"\n"}
                    </span>
                    <span id="Task-1200">
                        <a href="#Task-1200">
                            <span className="linenos">1200</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; def my_task():
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1201">
                        <a href="#Task-1201">
                            <span className="linenos">1201</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt;{"     "}return 1
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1202">
                        <a href="#Task-1202">
                            <span className="linenos">1202</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1203">
                        <a href="#Task-1203">
                            <span className="linenos">1203</span>
                        </a>
                        <span className="sd">
                            {"            "}&gt;&gt;&gt; my_task.serve()
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1204">
                        <a href="#Task-1204">
                            <span className="linenos">1204</span>
                        </a>
                        <span className="sd">{"        "}"""</span>
                        {"\n"}
                    </span>
                    <span id="Task-1205">
                        <a href="#Task-1205">
                            <span className="linenos">1205</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1206">
                        <a href="#Task-1206">
                            <span className="linenos">1206</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">
                            PREFECT_EXPERIMENTAL_ENABLE_TASK_SCHEDULING
                        </span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="Task-1207">
                        <a href="#Task-1207">
                            <span className="linenos">1207</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">ValueError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="Task-1208">
                        <a href="#Task-1208">
                            <span className="linenos">1208</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            "Task's `serve` method is an experimental feature and must be
                            enabled with "
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1209">
                        <a href="#Task-1209">
                            <span className="linenos">1209</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            "`prefect config set
                            PREFECT_EXPERIMENTAL_ENABLE_TASK_SCHEDULING=True`"
                        </span>
                        {"\n"}
                    </span>
                    <span id="Task-1210">
                        <a href="#Task-1210">
                            <span className="linenos">1210</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="Task-1211">
                        <a href="#Task-1211">
                            <span className="linenos">1211</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1212">
                        <a href="#Task-1212">
                            <span className="linenos">1212</span>
                        </a>
                        {"        "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.task_server</span>{" "}
                        <span className="kn">import</span> <span className="n">serve</span>
                        {"\n"}
                    </span>
                    <span id="Task-1213">
                        <a href="#Task-1213">
                            <span className="linenos">1213</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="Task-1214">
                        <a href="#Task-1214">
                            <span className="linenos">1214</span>
                        </a>
                        {"        "}
                        <span className="n">serve</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">,</span> <span className="n">task_runner</span>
                        <span className="o">=</span>
                        <span className="n">task_runner</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                </pre>
            </div>
            <div className="docstring">
                <p>A Prefect task definition.</p>
                <p>
                    !!! note We recommend using [the <code>@task</code> decorator][
                    <a href="#task">task</a>] for most use-cases.
                </p>
                <p>
                    Wraps a function with an entrypoint to the Prefect engine. Calling
                    this class within a flow function creates a new task run.
                </p>
                <p>
                    To preserve the input and output types, we use the generic type
                    variables P and R for "Parameters" and "Returns" respectively.
                </p>
                <p>
                    Args: fn: The function defining the task. name: An optional name for
                    the task; if not provided, the name will be inferred from the given
                    function. description: An optional string description for the task.
                    tags: An optional set of tags to be associated with runs of this task.
                    These tags are combined with any tags defined by a{" "}
                    <code>
                        <a href="#tags">prefect.tags</a>
                    </code>{" "}
                    context at task runtime. version: An optional string specifying the
                    version of this task definition cache_key_fn: An optional callable
                    that, given the task run context and call parameters, generates a
                    string key; if the key matches a previous completed state, that state
                    result will be restored instead of running the task again.
                    cache_expiration: An optional amount of time indicating how long
                    cached states for this task should be restorable; if not provided,
                    cached states will never expire. task_run_name: An optional name to
                    distinguish runs of this task; this name can be provided as a string
                    template with the task's keyword arguments as variables, or a function
                    that returns a string. retries: An optional number of times to retry
                    on task run failure. retry_delay_seconds: Optionally configures how
                    long to wait before retrying the task after failure. This is only
                    applicable if{" "}
                    <code>
                        <a href="#Task.retries">retries</a>
                    </code>{" "}
                    is nonzero. This setting can either be a number of seconds, a list of
                    retry delays, or a callable that, given the total number of retries,
                    generates a list of retry delays. If a number of seconds, that delay
                    will be applied to all retries. If a list, each retry will wait for
                    the corresponding delay before retrying. When passing a callable or a
                    list, the number of configured retry delays cannot exceed 50.
                    retry_jitter_factor: An optional factor that defines the factor to
                    which a retry can be jittered in order to avoid a "thundering herd".
                    persist_result: An optional toggle indicating whether the result of
                    this task should be persisted to result storage. Defaults to{" "}
                    <code>None</code>, which indicates that Prefect should choose whether
                    the result should be persisted depending on the features being used.
                    result_storage: An optional block to use to persist the result of this
                    task. Defaults to the value set in the flow the task is called in.
                    result_storage_key: An optional key to store the result in storage at
                    when persisted. Defaults to a unique identifier. result_serializer: An
                    optional serializer to use to serialize the result of this task for
                    persistence. Defaults to the value set in the flow the task is called
                    in. timeout_seconds: An optional number of seconds indicating a
                    maximum runtime for the task. If the task exceeds this runtime, it
                    will be marked as failed. log_prints: If set, <code>print</code>{" "}
                    statements in the task will be redirected to the Prefect logger for
                    the task run. Defaults to <code>None</code>, which indicates that the
                    value from the flow should be used. refresh_cache: If set, cached
                    results for the cache key are not used. Defaults to <code>None</code>,
                    which indicates that a cached result from a previous execution with
                    matching cache key is used. on_failure: An optional list of callables
                    to run when the task enters a failed state. on_completion: An optional
                    list of callables to run when the task enters a completed state.
                    retry_condition_fn: An optional callable run when a task run returns a
                    Failed state. Should return <code>True</code> if the task should
                    continue to its retry policy (e.g.
                    <code>retries=3</code>), and <code>False</code> if the task should end
                    as failed. Defaults to <code>None</code>, indicating the task should
                    always continue to its retry policy. viz_return_value: An optional
                    value to return when the task dependency tree is visualized.
                </p>
            </div>
            <div id="Task.__init__" className="classattr">
                <input
                    id="Task.__init__-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="name">Task</span>
                    <span className="signature pdoc-code multiline">
                        (
                        <span className="param">
                            <span className="n">fn</span>
                            <span className="p">:</span> <span className="n">Callable</span>
                            <span className="p">[</span>
                            <span className="o">~</span>
                            <span className="n">P</span>
                            <span className="p">,</span> <span className="o">~</span>
                            <span className="n">R</span>
                            <span className="p">]</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">description</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">tags</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">version</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">cache_key_fn</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">context</span>
                            <span className="o">.</span>
                            <span className="n">TaskRunContext</span>
                            <span className="p">,</span> <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">]],</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">cache_expiration</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">datetime</span>
                            <span className="o">.</span>
                            <span className="n">timedelta</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">task_run_name</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[],</span> <span className="nb">str</span>
                            <span className="p">],</span> <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">retries</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">retry_delay_seconds</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">float</span>
                            <span className="p">,</span> <span className="nb">int</span>
                            <span className="p">,</span> <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="nb">float</span>
                            <span className="p">],</span> <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="nb">int</span>
                            <span className="p">],</span> <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="nb">float</span>
                            <span className="p">]],</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">retry_jitter_factor</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">float</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">persist_result</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">result_storage</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">filesystems</span>
                            <span className="o">.</span>
                            <span className="n">WritableFileSystem</span>
                            <span className="p">,</span> <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">result_serializer</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">serializers</span>
                            <span className="o">.</span>
                            <span className="n">Serializer</span>
                            <span className="p">,</span> <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">result_storage_key</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">cache_result_in_memory</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">True</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">timeout_seconds</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">log_prints</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">False</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">refresh_cache</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">on_completion</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">
                                <a href="#Task">Task</a>
                            </span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">TaskRun</span>
                            <span className="p">,</span>{" "}
                            <span className="n">
                                <a href="#State">State</a>
                            </span>
                            <span className="p">],</span> <span className="n">NoneType</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">on_failure</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">
                                <a href="#Task">Task</a>
                            </span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">TaskRun</span>
                            <span className="p">,</span>{" "}
                            <span className="n">
                                <a href="#State">State</a>
                            </span>
                            <span className="p">],</span> <span className="n">NoneType</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">retry_condition_fn</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">
                                <a href="#Task">Task</a>
                            </span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">TaskRun</span>
                            <span className="p">,</span>{" "}
                            <span className="n">
                                <a href="#State">State</a>
                            </span>
                            <span className="p">],</span> <span className="nb">bool</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">viz_return_value</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Any</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                        </span>
                        )
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="Task.__init__-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#Task.__init__" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="Task.__init__-202">
                            <a href="#Task.__init__-202">
                                <span className="linenos">202</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="fm">__init__</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-203">
                            <a href="#Task.__init__-203">
                                <span className="linenos">203</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-204">
                            <a href="#Task.__init__-204">
                                <span className="linenos">204</span>
                            </a>
                            {"        "}
                            <span className="n">fn</span>
                            <span className="p">:</span> <span className="n">Callable</span>
                            <span className="p">[</span>
                            <span className="n">P</span>
                            <span className="p">,</span> <span className="n">R</span>
                            <span className="p">],</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-205">
                            <a href="#Task.__init__-205">
                                <span className="linenos">205</span>
                            </a>
                            {"        "}
                            <span className="n">name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-206">
                            <a href="#Task.__init__-206">
                                <span className="linenos">206</span>
                            </a>
                            {"        "}
                            <span className="n">description</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-207">
                            <a href="#Task.__init__-207">
                                <span className="linenos">207</span>
                            </a>
                            {"        "}
                            <span className="n">tags</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-208">
                            <a href="#Task.__init__-208">
                                <span className="linenos">208</span>
                            </a>
                            {"        "}
                            <span className="n">version</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-209">
                            <a href="#Task.__init__-209">
                                <span className="linenos">209</span>
                            </a>
                            {"        "}
                            <span className="n">cache_key_fn</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-210">
                            <a href="#Task.__init__-210">
                                <span className="linenos">210</span>
                            </a>
                            {"            "}
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="s2">"TaskRunContext"</span>
                            <span className="p">,</span> <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">]],</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]]</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-211">
                            <a href="#Task.__init__-211">
                                <span className="linenos">211</span>
                            </a>
                            {"        "}
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-212">
                            <a href="#Task.__init__-212">
                                <span className="linenos">212</span>
                            </a>
                            {"        "}
                            <span className="n">cache_expiration</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">datetime</span>
                            <span className="o">.</span>
                            <span className="n">timedelta</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-213">
                            <a href="#Task.__init__-213">
                                <span className="linenos">213</span>
                            </a>
                            {"        "}
                            <span className="n">task_run_name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[],</span> <span className="nb">str</span>
                            <span className="p">],</span> <span className="nb">str</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-214">
                            <a href="#Task.__init__-214">
                                <span className="linenos">214</span>
                            </a>
                            {"        "}
                            <span className="n">retries</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-215">
                            <a href="#Task.__init__-215">
                                <span className="linenos">215</span>
                            </a>
                            {"        "}
                            <span className="n">retry_delay_seconds</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-216">
                            <a href="#Task.__init__-216">
                                <span className="linenos">216</span>
                            </a>
                            {"            "}
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-217">
                            <a href="#Task.__init__-217">
                                <span className="linenos">217</span>
                            </a>
                            {"                "}
                            <span className="nb">float</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-218">
                            <a href="#Task.__init__-218">
                                <span className="linenos">218</span>
                            </a>
                            {"                "}
                            <span className="nb">int</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-219">
                            <a href="#Task.__init__-219">
                                <span className="linenos">219</span>
                            </a>
                            {"                "}
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="nb">float</span>
                            <span className="p">],</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-220">
                            <a href="#Task.__init__-220">
                                <span className="linenos">220</span>
                            </a>
                            {"                "}
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="nb">int</span>
                            <span className="p">],</span> <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="nb">float</span>
                            <span className="p">]],</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-221">
                            <a href="#Task.__init__-221">
                                <span className="linenos">221</span>
                            </a>
                            {"            "}
                            <span className="p">]</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-222">
                            <a href="#Task.__init__-222">
                                <span className="linenos">222</span>
                            </a>
                            {"        "}
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-223">
                            <a href="#Task.__init__-223">
                                <span className="linenos">223</span>
                            </a>
                            {"        "}
                            <span className="n">retry_jitter_factor</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">float</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-224">
                            <a href="#Task.__init__-224">
                                <span className="linenos">224</span>
                            </a>
                            {"        "}
                            <span className="n">persist_result</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-225">
                            <a href="#Task.__init__-225">
                                <span className="linenos">225</span>
                            </a>
                            {"        "}
                            <span className="n">result_storage</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">ResultStorage</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-226">
                            <a href="#Task.__init__-226">
                                <span className="linenos">226</span>
                            </a>
                            {"        "}
                            <span className="n">result_serializer</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">ResultSerializer</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-227">
                            <a href="#Task.__init__-227">
                                <span className="linenos">227</span>
                            </a>
                            {"        "}
                            <span className="n">result_storage_key</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-228">
                            <a href="#Task.__init__-228">
                                <span className="linenos">228</span>
                            </a>
                            {"        "}
                            <span className="n">cache_result_in_memory</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">True</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-229">
                            <a href="#Task.__init__-229">
                                <span className="linenos">229</span>
                            </a>
                            {"        "}
                            <span className="n">timeout_seconds</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">,</span> <span className="kc">None</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-230">
                            <a href="#Task.__init__-230">
                                <span className="linenos">230</span>
                            </a>
                            {"        "}
                            <span className="n">log_prints</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">False</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-231">
                            <a href="#Task.__init__-231">
                                <span className="linenos">231</span>
                            </a>
                            {"        "}
                            <span className="n">refresh_cache</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-232">
                            <a href="#Task.__init__-232">
                                <span className="linenos">232</span>
                            </a>
                            {"        "}
                            <span className="n">on_completion</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="s2">"Task"</span>
                            <span className="p">,</span> <span className="n">TaskRun</span>
                            <span className="p">,</span> <span className="n">State</span>
                            <span className="p">],</span> <span className="kc">None</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-233">
                            <a href="#Task.__init__-233">
                                <span className="linenos">233</span>
                            </a>
                            {"        "}
                            <span className="n">on_failure</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="s2">"Task"</span>
                            <span className="p">,</span> <span className="n">TaskRun</span>
                            <span className="p">,</span> <span className="n">State</span>
                            <span className="p">],</span> <span className="kc">None</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-234">
                            <a href="#Task.__init__-234">
                                <span className="linenos">234</span>
                            </a>
                            {"        "}
                            <span className="n">retry_condition_fn</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="s2">"Task"</span>
                            <span className="p">,</span> <span className="n">TaskRun</span>
                            <span className="p">,</span> <span className="n">State</span>
                            <span className="p">],</span> <span className="nb">bool</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-235">
                            <a href="#Task.__init__-235">
                                <span className="linenos">235</span>
                            </a>
                            {"        "}
                            <span className="n">viz_return_value</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Any</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-236">
                            <a href="#Task.__init__-236">
                                <span className="linenos">236</span>
                            </a>
                            {"    "}
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-237">
                            <a href="#Task.__init__-237">
                                <span className="linenos">237</span>
                            </a>
                            {"        "}
                            <span className="c1">
                                # Validate if hook passed is list and contains callables
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-238">
                            <a href="#Task.__init__-238">
                                <span className="linenos">238</span>
                            </a>
                            {"        "}
                            <span className="n">hook_categories</span>{" "}
                            <span className="o">=</span> <span className="p">[</span>
                            <span className="n">on_completion</span>
                            <span className="p">,</span> <span className="n">on_failure</span>
                            <span className="p">]</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-239">
                            <a href="#Task.__init__-239">
                                <span className="linenos">239</span>
                            </a>
                            {"        "}
                            <span className="n">
                                hook_names
                            </span> <span className="o">=</span> <span className="p">[</span>
                            <span className="s2">"on_completion"</span>
                            <span className="p">,</span>{" "}
                            <span className="s2">"on_failure"</span>
                            <span className="p">]</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-240">
                            <a href="#Task.__init__-240">
                                <span className="linenos">240</span>
                            </a>
                            {"        "}
                            <span className="k">for</span> <span className="n">hooks</span>
                            <span className="p">
                                ,
                            </span> <span className="n">hook_name</span>{" "}
                            <span className="ow">in</span> <span className="nb">zip</span>
                            <span className="p">(</span>
                            <span className="n">hook_categories</span>
                            <span className="p">,</span> <span className="n">hook_names</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-241">
                            <a href="#Task.__init__-241">
                                <span className="linenos">241</span>
                            </a>
                            {"            "}
                            <span className="k">
                                if
                            </span> <span className="n">hooks</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-242">
                            <a href="#Task.__init__-242">
                                <span className="linenos">242</span>
                            </a>
                            {"                "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="n">hooks</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-243">
                            <a href="#Task.__init__-243">
                                <span className="linenos">243</span>
                            </a>
                            {"                    "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">ValueError</span>
                            <span className="p">(</span>
                            <span className="sa">f</span>
                            <span className="s2">"Empty list passed for '</span>
                            <span className="si">{"{"}</span>
                            <span className="n">hook_name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">'"</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-244">
                            <a href="#Task.__init__-244">
                                <span className="linenos">244</span>
                            </a>
                            {"                "}
                            <span className="k">try</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-245">
                            <a href="#Task.__init__-245">
                                <span className="linenos">245</span>
                            </a>
                            {"                    "}
                            <span className="n">hooks</span> <span className="o">=</span>{" "}
                            <span className="nb">list</span>
                            <span className="p">(</span>
                            <span className="n">hooks</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-246">
                            <a href="#Task.__init__-246">
                                <span className="linenos">246</span>
                            </a>
                            {"                "}
                            <span className="k">except</span>{" "}
                            <span className="ne">TypeError</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-247">
                            <a href="#Task.__init__-247">
                                <span className="linenos">247</span>
                            </a>
                            {"                    "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">TypeError</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-248">
                            <a href="#Task.__init__-248">
                                <span className="linenos">248</span>
                            </a>
                            {"                        "}
                            <span className="sa">f</span>
                            <span className="s2">"Expected iterable for '</span>
                            <span className="si">{"{"}</span>
                            <span className="n">hook_name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">'; got"</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-249">
                            <a href="#Task.__init__-249">
                                <span className="linenos">249</span>
                            </a>
                            {"                        "}
                            <span className="sa">f</span>
                            <span className="s2">" </span>
                            <span className="si">{"{"}</span>
                            <span className="nb">type</span>
                            <span className="p">(</span>
                            <span className="n">hooks</span>
                            <span className="p">)</span>
                            <span className="o">.</span>
                            <span className="vm">__name__</span>
                            <span className="si">{"}"}</span>
                            <span className="s2"> instead. Please provide a list of"</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-250">
                            <a href="#Task.__init__-250">
                                <span className="linenos">250</span>
                            </a>
                            {"                        "}
                            <span className="sa">f</span>
                            <span className="s2">" hooks to '</span>
                            <span className="si">{"{"}</span>
                            <span className="n">hook_name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">':</span>
                            <span className="se">\n\n</span>
                            <span className="s2">"</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-251">
                            <a href="#Task.__init__-251">
                                <span className="linenos">251</span>
                            </a>
                            {"                        "}
                            <span className="sa">f</span>
                            <span className="s2">"@flow(</span>
                            <span className="si">{"{"}</span>
                            <span className="n">hook_name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">=[hook1, hook2])</span>
                            <span className="se">\n</span>
                            <span className="s2">def"</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-252">
                            <a href="#Task.__init__-252">
                                <span className="linenos">252</span>
                            </a>
                            {"                        "}
                            <span className="s2">" my_flow():</span>
                            <span className="se">\n\t</span>
                            <span className="s2">pass"</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-253">
                            <a href="#Task.__init__-253">
                                <span className="linenos">253</span>
                            </a>
                            {"                    "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-254">
                            <a href="#Task.__init__-254">
                                <span className="linenos">254</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-255">
                            <a href="#Task.__init__-255">
                                <span className="linenos">255</span>
                            </a>
                            {"                "}
                            <span className="k">
                                for
                            </span> <span className="n">hook</span>{" "}
                            <span className="ow">in</span> <span className="n">hooks</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-256">
                            <a href="#Task.__init__-256">
                                <span className="linenos">256</span>
                            </a>
                            {"                    "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="nb">callable</span>
                            <span className="p">(</span>
                            <span className="n">hook</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-257">
                            <a href="#Task.__init__-257">
                                <span className="linenos">257</span>
                            </a>
                            {"                        "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">TypeError</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-258">
                            <a href="#Task.__init__-258">
                                <span className="linenos">258</span>
                            </a>
                            {"                            "}
                            <span className="sa">f</span>
                            <span className="s2">"Expected callables in '</span>
                            <span className="si">{"{"}</span>
                            <span className="n">hook_name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">'; got"</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-259">
                            <a href="#Task.__init__-259">
                                <span className="linenos">259</span>
                            </a>
                            {"                            "}
                            <span className="sa">f</span>
                            <span className="s2">" </span>
                            <span className="si">{"{"}</span>
                            <span className="nb">type</span>
                            <span className="p">(</span>
                            <span className="n">hook</span>
                            <span className="p">)</span>
                            <span className="o">.</span>
                            <span className="vm">__name__</span>
                            <span className="si">{"}"}</span>
                            <span className="s2"> instead. Please provide a list of"</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-260">
                            <a href="#Task.__init__-260">
                                <span className="linenos">260</span>
                            </a>
                            {"                            "}
                            <span className="sa">f</span>
                            <span className="s2">" hooks to '</span>
                            <span className="si">{"{"}</span>
                            <span className="n">hook_name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">':</span>
                            <span className="se">\n\n</span>
                            <span className="s2">"</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-261">
                            <a href="#Task.__init__-261">
                                <span className="linenos">261</span>
                            </a>
                            {"                            "}
                            <span className="sa">f</span>
                            <span className="s2">"@flow(</span>
                            <span className="si">{"{"}</span>
                            <span className="n">hook_name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">=[hook1, hook2])</span>
                            <span className="se">\n</span>
                            <span className="s2">def"</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-262">
                            <a href="#Task.__init__-262">
                                <span className="linenos">262</span>
                            </a>
                            {"                            "}
                            <span className="s2">" my_flow():</span>
                            <span className="se">\n\t</span>
                            <span className="s2">pass"</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-263">
                            <a href="#Task.__init__-263">
                                <span className="linenos">263</span>
                            </a>
                            {"                        "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-264">
                            <a href="#Task.__init__-264">
                                <span className="linenos">264</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-265">
                            <a href="#Task.__init__-265">
                                <span className="linenos">265</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="nb">callable</span>
                            <span className="p">(</span>
                            <span className="n">fn</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-266">
                            <a href="#Task.__init__-266">
                                <span className="linenos">266</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">TypeError</span>
                            <span className="p">(</span>
                            <span className="s2">"'fn' must be callable"</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-267">
                            <a href="#Task.__init__-267">
                                <span className="linenos">267</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-268">
                            <a href="#Task.__init__-268">
                                <span className="linenos">268</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">description</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">description</span>{" "}
                            <span className="ow">or</span> <span className="n">inspect</span>
                            <span className="o">.</span>
                            <span className="n">getdoc</span>
                            <span className="p">(</span>
                            <span className="n">fn</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-269">
                            <a href="#Task.__init__-269">
                                <span className="linenos">269</span>
                            </a>
                            {"        "}
                            <span className="n">update_wrapper</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">,</span> <span className="n">fn</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-270">
                            <a href="#Task.__init__-270">
                                <span className="linenos">270</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span> <span className="o">=</span>{" "}
                            <span className="n">fn</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-271">
                            <a href="#Task.__init__-271">
                                <span className="linenos">271</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">
                                isasync
                            </span> <span className="o">=</span>{" "}
                            <span className="n">inspect</span>
                            <span className="o">.</span>
                            <span className="n">iscoroutinefunction</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-272">
                            <a href="#Task.__init__-272">
                                <span className="linenos">272</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-273">
                            <a href="#Task.__init__-273">
                                <span className="linenos">273</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="n">name</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-274">
                            <a href="#Task.__init__-274">
                                <span className="linenos">274</span>
                            </a>
                            {"            "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="nb">hasattr</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">,</span>{" "}
                            <span className="s2">"__name__"</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-275">
                            <a href="#Task.__init__-275">
                                <span className="linenos">275</span>
                            </a>
                            {"                "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">name</span> <span className="o">=</span>{" "}
                            <span className="nb">type</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">)</span>
                            <span className="o">.</span>
                            <span className="vm">__name__</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-276">
                            <a href="#Task.__init__-276">
                                <span className="linenos">276</span>
                            </a>
                            {"            "}
                            <span className="k">else</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-277">
                            <a href="#Task.__init__-277">
                                <span className="linenos">277</span>
                            </a>
                            {"                "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">name</span> <span className="o">=</span>{" "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="o">.</span>
                            <span className="vm">__name__</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-278">
                            <a href="#Task.__init__-278">
                                <span className="linenos">278</span>
                            </a>
                            {"        "}
                            <span className="k">else</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-279">
                            <a href="#Task.__init__-279">
                                <span className="linenos">279</span>
                            </a>
                            {"            "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">name</span> <span className="o">=</span>{" "}
                            <span className="n">name</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-280">
                            <a href="#Task.__init__-280">
                                <span className="linenos">280</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-281">
                            <a href="#Task.__init__-281">
                                <span className="linenos">281</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">task_run_name</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-282">
                            <a href="#Task.__init__-282">
                                <span className="linenos">282</span>
                            </a>
                            {"            "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="nb">isinstance</span>
                            <span className="p">(</span>
                            <span className="n">task_run_name</span>
                            <span className="p">,</span> <span className="nb">str</span>
                            <span className="p">)</span> <span className="ow">and</span>{" "}
                            <span className="ow">not</span>{" "}
                            <span className="nb">callable</span>
                            <span className="p">(</span>
                            <span className="n">task_run_name</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-283">
                            <a href="#Task.__init__-283">
                                <span className="linenos">283</span>
                            </a>
                            {"                "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">TypeError</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-284">
                            <a href="#Task.__init__-284">
                                <span className="linenos">284</span>
                            </a>
                            {"                    "}
                            <span className="s2">
                                "Expected string or callable for 'task_run_name'; got"
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-285">
                            <a href="#Task.__init__-285">
                                <span className="linenos">285</span>
                            </a>
                            {"                    "}
                            <span className="sa">f</span>
                            <span className="s2">" </span>
                            <span className="si">{"{"}</span>
                            <span className="nb">type</span>
                            <span className="p">(</span>
                            <span className="n">task_run_name</span>
                            <span className="p">)</span>
                            <span className="o">.</span>
                            <span className="vm">__name__</span>
                            <span className="si">{"}"}</span>
                            <span className="s2"> instead."</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-286">
                            <a href="#Task.__init__-286">
                                <span className="linenos">286</span>
                            </a>
                            {"                "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-287">
                            <a href="#Task.__init__-287">
                                <span className="linenos">287</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">task_run_name</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">task_run_name</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-288">
                            <a href="#Task.__init__-288">
                                <span className="linenos">288</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-289">
                            <a href="#Task.__init__-289">
                                <span className="linenos">289</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">
                                version
                            </span> <span className="o">=</span>{" "}
                            <span className="n">version</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-290">
                            <a href="#Task.__init__-290">
                                <span className="linenos">290</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">
                                log_prints
                            </span> <span className="o">=</span>{" "}
                            <span className="n">log_prints</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-291">
                            <a href="#Task.__init__-291">
                                <span className="linenos">291</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-292">
                            <a href="#Task.__init__-292">
                                <span className="linenos">292</span>
                            </a>
                            {"        "}
                            <span className="n">raise_for_reserved_arguments</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">,</span> <span className="p">[</span>
                            <span className="s2">"return_state"</span>
                            <span className="p">,</span>{" "}
                            <span className="s2">"wait_for"</span>
                            <span className="p">])</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-293">
                            <a href="#Task.__init__-293">
                                <span className="linenos">293</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-294">
                            <a href="#Task.__init__-294">
                                <span className="linenos">294</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">tags</span> <span className="o">=</span>{" "}
                            <span className="nb">set</span>
                            <span className="p">(</span>
                            <span className="n">tags</span> <span className="k">if</span>{" "}
                            <span className="n">tags</span> <span className="k">else</span>{" "}
                            <span className="p">[])</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-295">
                            <a href="#Task.__init__-295">
                                <span className="linenos">295</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-296">
                            <a href="#Task.__init__-296">
                                <span className="linenos">296</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="nb">hasattr</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">,</span>{" "}
                            <span className="s2">"__qualname__"</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-297">
                            <a href="#Task.__init__-297">
                                <span className="linenos">297</span>
                            </a>
                            {"            "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">
                                task_key
                            </span> <span className="o">=</span>{" "}
                            <span className="n">to_qualified_name</span>
                            <span className="p">(</span>
                            <span className="nb">type</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">))</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-298">
                            <a href="#Task.__init__-298">
                                <span className="linenos">298</span>
                            </a>
                            {"        "}
                            <span className="k">else</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-299">
                            <a href="#Task.__init__-299">
                                <span className="linenos">299</span>
                            </a>
                            {"            "}
                            <span className="k">try</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-300">
                            <a href="#Task.__init__-300">
                                <span className="linenos">300</span>
                            </a>
                            {"                "}
                            <span className="n">task_origin_hash</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">hash_objects</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-301">
                            <a href="#Task.__init__-301">
                                <span className="linenos">301</span>
                            </a>
                            {"                    "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">name</span>
                            <span className="p">,</span> <span className="n">os</span>
                            <span className="o">.</span>
                            <span className="n">path</span>
                            <span className="o">.</span>
                            <span className="n">abspath</span>
                            <span className="p">(</span>
                            <span className="n">inspect</span>
                            <span className="o">.</span>
                            <span className="n">getsourcefile</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">))</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-302">
                            <a href="#Task.__init__-302">
                                <span className="linenos">302</span>
                            </a>
                            {"                "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-303">
                            <a href="#Task.__init__-303">
                                <span className="linenos">303</span>
                            </a>
                            {"            "}
                            <span className="k">except</span>{" "}
                            <span className="ne">TypeError</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-304">
                            <a href="#Task.__init__-304">
                                <span className="linenos">304</span>
                            </a>
                            {"                "}
                            <span className="n">task_origin_hash</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="s2">"unknown-source-file"</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-305">
                            <a href="#Task.__init__-305">
                                <span className="linenos">305</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-306">
                            <a href="#Task.__init__-306">
                                <span className="linenos">306</span>
                            </a>
                            {"            "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">
                                task_key
                            </span> <span className="o">=</span> <span className="sa">f</span>
                            <span className="s2">"</span>
                            <span className="si">{"{"}</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="o">.</span>
                            <span className="vm">__qualname__</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">-</span>
                            <span className="si">{"{"}</span>
                            <span className="n">task_origin_hash</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">"</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-307">
                            <a href="#Task.__init__-307">
                                <span className="linenos">307</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-308">
                            <a href="#Task.__init__-308">
                                <span className="linenos">308</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">cache_key_fn</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">cache_key_fn</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-309">
                            <a href="#Task.__init__-309">
                                <span className="linenos">309</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">cache_expiration</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">cache_expiration</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-310">
                            <a href="#Task.__init__-310">
                                <span className="linenos">310</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">refresh_cache</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">refresh_cache</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-311">
                            <a href="#Task.__init__-311">
                                <span className="linenos">311</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-312">
                            <a href="#Task.__init__-312">
                                <span className="linenos">312</span>
                            </a>
                            {"        "}
                            <span className="c1"># TaskRunPolicy settings</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-313">
                            <a href="#Task.__init__-313">
                                <span className="linenos">313</span>
                            </a>
                            {"        "}
                            <span className="c1">
                                # TODO: We can instantiate a `TaskRunPolicy` and add Pydantic
                                bound checks to
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-314">
                            <a href="#Task.__init__-314">
                                <span className="linenos">314</span>
                            </a>
                            {"        "}
                            <span className="c1">
                                #{"       "}validate that the user passes positive numbers here
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-315">
                            <a href="#Task.__init__-315">
                                <span className="linenos">315</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-316">
                            <a href="#Task.__init__-316">
                                <span className="linenos">316</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">
                                retries
                            </span> <span className="o">=</span> <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-317">
                            <a href="#Task.__init__-317">
                                <span className="linenos">317</span>
                            </a>
                            {"            "}
                            <span className="n">
                                retries
                            </span> <span className="k">if</span>{" "}
                            <span className="n">retries</span> <span className="ow">is</span>{" "}
                            <span className="ow">not</span> <span className="kc">None</span>{" "}
                            <span className="k">else</span>{" "}
                            <span className="n">PREFECT_TASK_DEFAULT_RETRIES</span>
                            <span className="o">.</span>
                            <span className="n">value</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-318">
                            <a href="#Task.__init__-318">
                                <span className="linenos">318</span>
                            </a>
                            {"        "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-319">
                            <a href="#Task.__init__-319">
                                <span className="linenos">319</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">retry_delay_seconds</span>{" "}
                            <span className="ow">is</span> <span className="kc">None</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-320">
                            <a href="#Task.__init__-320">
                                <span className="linenos">320</span>
                            </a>
                            {"            "}
                            <span className="n">retry_delay_seconds</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">
                                PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS
                            </span>
                            <span className="o">.</span>
                            <span className="n">value</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-321">
                            <a href="#Task.__init__-321">
                                <span className="linenos">321</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-322">
                            <a href="#Task.__init__-322">
                                <span className="linenos">322</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="nb">callable</span>
                            <span className="p">(</span>
                            <span className="n">retry_delay_seconds</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-323">
                            <a href="#Task.__init__-323">
                                <span className="linenos">323</span>
                            </a>
                            {"            "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">retry_delay_seconds</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">retry_delay_seconds</span>
                            <span className="p">(</span>
                            <span className="n">retries</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-324">
                            <a href="#Task.__init__-324">
                                <span className="linenos">324</span>
                            </a>
                            {"        "}
                            <span className="k">else</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-325">
                            <a href="#Task.__init__-325">
                                <span className="linenos">325</span>
                            </a>
                            {"            "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">retry_delay_seconds</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">retry_delay_seconds</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-326">
                            <a href="#Task.__init__-326">
                                <span className="linenos">326</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-327">
                            <a href="#Task.__init__-327">
                                <span className="linenos">327</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="nb">isinstance</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">retry_delay_seconds</span>
                            <span className="p">,</span> <span className="nb">list</span>
                            <span className="p">)</span> <span className="ow">and</span>{" "}
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-328">
                            <a href="#Task.__init__-328">
                                <span className="linenos">328</span>
                            </a>
                            {"            "}
                            <span className="nb">len</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">retry_delay_seconds</span>
                            <span className="p">)</span> <span className="o">&gt;</span>{" "}
                            <span className="mi">50</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-329">
                            <a href="#Task.__init__-329">
                                <span className="linenos">329</span>
                            </a>
                            {"        "}
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-330">
                            <a href="#Task.__init__-330">
                                <span className="linenos">330</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">ValueError</span>
                            <span className="p">(</span>
                            <span className="s2">
                                "Can not configure more than 50 retry delays per task."
                            </span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-331">
                            <a href="#Task.__init__-331">
                                <span className="linenos">331</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-332">
                            <a href="#Task.__init__-332">
                                <span className="linenos">332</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">retry_jitter_factor</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="kc">None</span> <span className="ow">and</span>{" "}
                            <span className="n">retry_jitter_factor</span>{" "}
                            <span className="o">&lt;</span> <span className="mi">0</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-333">
                            <a href="#Task.__init__-333">
                                <span className="linenos">333</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">ValueError</span>
                            <span className="p">(</span>
                            <span className="s2">
                                "`retry_jitter_factor` must be &gt;= 0."
                            </span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-334">
                            <a href="#Task.__init__-334">
                                <span className="linenos">334</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-335">
                            <a href="#Task.__init__-335">
                                <span className="linenos">335</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">retry_jitter_factor</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">retry_jitter_factor</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-336">
                            <a href="#Task.__init__-336">
                                <span className="linenos">336</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">persist_result</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">persist_result</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-337">
                            <a href="#Task.__init__-337">
                                <span className="linenos">337</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">result_storage</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">result_storage</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-338">
                            <a href="#Task.__init__-338">
                                <span className="linenos">338</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">result_serializer</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">result_serializer</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-339">
                            <a href="#Task.__init__-339">
                                <span className="linenos">339</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">result_storage_key</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">result_storage_key</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-340">
                            <a href="#Task.__init__-340">
                                <span className="linenos">340</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">cache_result_in_memory</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">cache_result_in_memory</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-341">
                            <a href="#Task.__init__-341">
                                <span className="linenos">341</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">timeout_seconds</span>{" "}
                            <span className="o">=</span> <span className="nb">float</span>
                            <span className="p">(</span>
                            <span className="n">timeout_seconds</span>
                            <span className="p">)</span> <span className="k">if</span>{" "}
                            <span className="n">timeout_seconds</span>{" "}
                            <span className="k">else</span> <span className="kc">None</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-342">
                            <a href="#Task.__init__-342">
                                <span className="linenos">342</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">on_completion</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">on_completion</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-343">
                            <a href="#Task.__init__-343">
                                <span className="linenos">343</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">
                                on_failure
                            </span> <span className="o">=</span>{" "}
                            <span className="n">on_failure</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-344">
                            <a href="#Task.__init__-344">
                                <span className="linenos">344</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-345">
                            <a href="#Task.__init__-345">
                                <span className="linenos">345</span>
                            </a>
                            {"        "}
                            <span className="c1">
                                # retry_condition_fn must be a callable or None. If it is
                                neither, raise a TypeError
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-346">
                            <a href="#Task.__init__-346">
                                <span className="linenos">346</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">retry_condition_fn</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="kc">None</span> <span className="ow">and</span>{" "}
                            <span className="ow">not</span> <span className="p">(</span>
                            <span className="nb">callable</span>
                            <span className="p">(</span>
                            <span className="n">retry_condition_fn</span>
                            <span className="p">)):</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-347">
                            <a href="#Task.__init__-347">
                                <span className="linenos">347</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">TypeError</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-348">
                            <a href="#Task.__init__-348">
                                <span className="linenos">348</span>
                            </a>
                            {"                "}
                            <span className="s2">
                                "Expected `retry_condition_fn` to be callable, got"
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-349">
                            <a href="#Task.__init__-349">
                                <span className="linenos">349</span>
                            </a>
                            {"                "}
                            <span className="sa">f</span>
                            <span className="s2">" </span>
                            <span className="si">{"{"}</span>
                            <span className="nb">type</span>
                            <span className="p">(</span>
                            <span className="n">retry_condition_fn</span>
                            <span className="p">)</span>
                            <span className="o">.</span>
                            <span className="vm">__name__</span>
                            <span className="si">{"}"}</span>
                            <span className="s2"> instead."</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-350">
                            <a href="#Task.__init__-350">
                                <span className="linenos">350</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-351">
                            <a href="#Task.__init__-351">
                                <span className="linenos">351</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-352">
                            <a href="#Task.__init__-352">
                                <span className="linenos">352</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">retry_condition_fn</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">retry_condition_fn</span>
                            {"\n"}
                        </span>
                        <span id="Task.__init__-353">
                            <a href="#Task.__init__-353">
                                <span className="linenos">353</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">viz_return_value</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">viz_return_value</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
            </div>
            <div id="Task.description" className="classattr">
                <div className="attr variable">
                    <span className="name">description</span>
                </div>
                <a className="headerlink" href="#Task.description" />
            </div>
            <div id="Task.fn" className="classattr">
                <div className="attr variable">
                    <span className="name">fn</span>
                </div>
                <a className="headerlink" href="#Task.fn" />
            </div>
            <div id="Task.isasync" className="classattr">
                <div className="attr variable">
                    <span className="name">isasync</span>
                </div>
                <a className="headerlink" href="#Task.isasync" />
            </div>
            <div id="Task.task_run_name" className="classattr">
                <div className="attr variable">
                    <span className="name">task_run_name</span>
                </div>
                <a className="headerlink" href="#Task.task_run_name" />
            </div>
            <div id="Task.version" className="classattr">
                <div className="attr variable">
                    <span className="name">version</span>
                </div>
                <a className="headerlink" href="#Task.version" />
            </div>
            <div id="Task.log_prints" className="classattr">
                <div className="attr variable">
                    <span className="name">log_prints</span>
                </div>
                <a className="headerlink" href="#Task.log_prints" />
            </div>
            <div id="Task.tags" className="classattr">
                <div className="attr variable">
                    <span className="name">tags</span>
                </div>
                <a className="headerlink" href="#Task.tags" />
            </div>
            <div id="Task.cache_key_fn" className="classattr">
                <div className="attr variable">
                    <span className="name">cache_key_fn</span>
                </div>
                <a className="headerlink" href="#Task.cache_key_fn" />
            </div>
            <div id="Task.cache_expiration" className="classattr">
                <div className="attr variable">
                    <span className="name">cache_expiration</span>
                </div>
                <a className="headerlink" href="#Task.cache_expiration" />
            </div>
            <div id="Task.refresh_cache" className="classattr">
                <div className="attr variable">
                    <span className="name">refresh_cache</span>
                </div>
                <a className="headerlink" href="#Task.refresh_cache" />
            </div>
            <div id="Task.retries" className="classattr">
                <div className="attr variable">
                    <span className="name">retries</span>
                </div>
                <a className="headerlink" href="#Task.retries" />
            </div>
            <div id="Task.retry_jitter_factor" className="classattr">
                <div className="attr variable">
                    <span className="name">retry_jitter_factor</span>
                </div>
                <a className="headerlink" href="#Task.retry_jitter_factor" />
            </div>
            <div id="Task.persist_result" className="classattr">
                <div className="attr variable">
                    <span className="name">persist_result</span>
                </div>
                <a className="headerlink" href="#Task.persist_result" />
            </div>
            <div id="Task.result_storage" className="classattr">
                <div className="attr variable">
                    <span className="name">result_storage</span>
                </div>
                <a className="headerlink" href="#Task.result_storage" />
            </div>
            <div id="Task.result_serializer" className="classattr">
                <div className="attr variable">
                    <span className="name">result_serializer</span>
                </div>
                <a className="headerlink" href="#Task.result_serializer" />
            </div>
            <div id="Task.result_storage_key" className="classattr">
                <div className="attr variable">
                    <span className="name">result_storage_key</span>
                </div>
                <a className="headerlink" href="#Task.result_storage_key" />
            </div>
            <div id="Task.cache_result_in_memory" className="classattr">
                <div className="attr variable">
                    <span className="name">cache_result_in_memory</span>
                </div>
                <a className="headerlink" href="#Task.cache_result_in_memory" />
            </div>
            <div id="Task.timeout_seconds" className="classattr">
                <div className="attr variable">
                    <span className="name">timeout_seconds</span>
                </div>
                <a className="headerlink" href="#Task.timeout_seconds" />
            </div>
            <div id="Task.on_completion" className="classattr">
                <div className="attr variable">
                    <span className="name">on_completion</span>
                </div>
                <a className="headerlink" href="#Task.on_completion" />
            </div>
            <div id="Task.on_failure" className="classattr">
                <div className="attr variable">
                    <span className="name">on_failure</span>
                </div>
                <a className="headerlink" href="#Task.on_failure" />
            </div>
            <div id="Task.retry_condition_fn" className="classattr">
                <div className="attr variable">
                    <span className="name">retry_condition_fn</span>
                </div>
                <a className="headerlink" href="#Task.retry_condition_fn" />
            </div>
            <div id="Task.viz_return_value" className="classattr">
                <div className="attr variable">
                    <span className="name">viz_return_value</span>
                </div>
                <a className="headerlink" href="#Task.viz_return_value" />
            </div>
            <div id="Task.with_options" className="classattr">
                <input
                    id="Task.with_options-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">with_options</span>
                    <span className="signature pdoc-code multiline">
                        (
                        <span className="param">
                            {" "}
                            <span className="bp">self</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="o">*</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">name</span>
                            <span className="p">:</span> <span className="nb">str</span>{" "}
                            <span className="o">=</span> <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">description</span>
                            <span className="p">:</span> <span className="nb">str</span>{" "}
                            <span className="o">=</span> <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">tags</span>
                            <span className="p">:</span> <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">cache_key_fn</span>
                            <span className="p">:</span> <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">context</span>
                            <span className="o">.</span>
                            <span className="n">TaskRunContext</span>
                            <span className="p">,</span> <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">]],</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">task_run_name</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[],</span> <span className="nb">str</span>
                            <span className="p">],</span> <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">cache_expiration</span>
                            <span className="p">:</span> <span className="n">datetime</span>
                            <span className="o">.</span>
                            <span className="n">
                                timedelta
                            </span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            retries: Optional[int] = &lt;class
                            'prefect.utilities.annotations.NotSet'&gt;,
                        </span>
                        <span className="param">
                            {" "}
                            retry_delay_seconds: Union[float, int, List[float],
                            Callable[[int], List[float]]] = &lt;class
                            'prefect.utilities.annotations.NotSet'&gt;,
                        </span>
                        <span className="param">
                            {" "}
                            retry_jitter_factor: Optional[float] = &lt;class
                            'prefect.utilities.annotations.NotSet'&gt;,
                        </span>
                        <span className="param">
                            persist_result: Optional[bool] = &lt;class
                            'prefect.utilities.annotations.NotSet'&gt;,
                        </span>
                        <span className="param">
                            result_storage: Union[prefect.filesystems.WritableFileSystem, str,
                            NoneType] = &lt;class 'prefect.utilities.annotations.NotSet'&gt;,
                        </span>
                        <span className="param">
                            result_serializer: Union[prefect.serializers.Serializer, str,
                            NoneType] = &lt;class 'prefect.utilities.annotations.NotSet'&gt;,
                        </span>
                        <span className="param">
                            result_storage_key: Optional[str] = &lt;class
                            'prefect.utilities.annotations.NotSet'&gt;,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">cache_result_in_memory</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">timeout_seconds</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            log_prints: Optional[bool] = &lt;class
                            'prefect.utilities.annotations.NotSet'&gt;,
                        </span>
                        <span className="param">
                            {" "}
                            refresh_cache: Optional[bool] = &lt;class
                            'prefect.utilities.annotations.NotSet'&gt;,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">on_completion</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">
                                <a href="#Task">Task</a>
                            </span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">TaskRun</span>
                            <span className="p">,</span>{" "}
                            <span className="n">
                                <a href="#State">State</a>
                            </span>
                            <span className="p">],</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Awaitable</span>
                            <span className="p">[</span>
                            <span className="n">NoneType</span>
                            <span className="p">]]]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">on_failure</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">
                                <a href="#Task">Task</a>
                            </span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">TaskRun</span>
                            <span className="p">,</span>{" "}
                            <span className="n">
                                <a href="#State">State</a>
                            </span>
                            <span className="p">],</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Awaitable</span>
                            <span className="p">[</span>
                            <span className="n">NoneType</span>
                            <span className="p">]]]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">retry_condition_fn</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="n">
                                <a href="#Task">Task</a>
                            </span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">TaskRun</span>
                            <span className="p">,</span>{" "}
                            <span className="n">
                                <a href="#State">State</a>
                            </span>
                            <span className="p">],</span> <span className="nb">bool</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">viz_return_value</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Any</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                        </span>
                        <span className="return-annotation">):</span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="Task.with_options-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#Task.with_options" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="Task.with_options-355">
                            <a href="#Task.with_options-355">
                                <span className="linenos">355</span>
                            </a>
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">with_options</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-356">
                            <a href="#Task.with_options-356">
                                <span className="linenos">356</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-357">
                            <a href="#Task.with_options-357">
                                <span className="linenos">357</span>
                            </a>
                            {"        "}
                            <span className="o">*</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-358">
                            <a href="#Task.with_options-358">
                                <span className="linenos">358</span>
                            </a>
                            {"        "}
                            <span className="n">name</span>
                            <span className="p">:</span> <span className="nb">str</span>{" "}
                            <span className="o">=</span> <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-359">
                            <a href="#Task.with_options-359">
                                <span className="linenos">359</span>
                            </a>
                            {"        "}
                            <span className="n">description</span>
                            <span className="p">:</span> <span className="nb">str</span>{" "}
                            <span className="o">=</span> <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-360">
                            <a href="#Task.with_options-360">
                                <span className="linenos">360</span>
                            </a>
                            {"        "}
                            <span className="n">tags</span>
                            <span className="p">:</span> <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-361">
                            <a href="#Task.with_options-361">
                                <span className="linenos">361</span>
                            </a>
                            {"        "}
                            <span className="n">cache_key_fn</span>
                            <span className="p">:</span> <span className="n">Callable</span>
                            <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-362">
                            <a href="#Task.with_options-362">
                                <span className="linenos">362</span>
                            </a>
                            {"            "}
                            <span className="p">[</span>
                            <span className="s2">"TaskRunContext"</span>
                            <span className="p">,</span> <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">]],</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-363">
                            <a href="#Task.with_options-363">
                                <span className="linenos">363</span>
                            </a>
                            {"        "}
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-364">
                            <a href="#Task.with_options-364">
                                <span className="linenos">364</span>
                            </a>
                            {"        "}
                            <span className="n">task_run_name</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[],</span> <span className="nb">str</span>
                            <span className="p">],</span> <span className="nb">str</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-365">
                            <a href="#Task.with_options-365">
                                <span className="linenos">365</span>
                            </a>
                            {"        "}
                            <span className="n">cache_expiration</span>
                            <span className="p">:</span> <span className="n">datetime</span>
                            <span className="o">.</span>
                            <span className="n">
                                timedelta
                            </span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-366">
                            <a href="#Task.with_options-366">
                                <span className="linenos">366</span>
                            </a>
                            {"        "}
                            <span className="n">retries</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="n">NotSet</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-367">
                            <a href="#Task.with_options-367">
                                <span className="linenos">367</span>
                            </a>
                            {"        "}
                            <span className="n">retry_delay_seconds</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-368">
                            <a href="#Task.with_options-368">
                                <span className="linenos">368</span>
                            </a>
                            {"            "}
                            <span className="nb">float</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-369">
                            <a href="#Task.with_options-369">
                                <span className="linenos">369</span>
                            </a>
                            {"            "}
                            <span className="nb">int</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-370">
                            <a href="#Task.with_options-370">
                                <span className="linenos">370</span>
                            </a>
                            {"            "}
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="nb">float</span>
                            <span className="p">],</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-371">
                            <a href="#Task.with_options-371">
                                <span className="linenos">371</span>
                            </a>
                            {"            "}
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="nb">int</span>
                            <span className="p">],</span> <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="nb">float</span>
                            <span className="p">]],</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-372">
                            <a href="#Task.with_options-372">
                                <span className="linenos">372</span>
                            </a>
                            {"        "}
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="n">NotSet</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-373">
                            <a href="#Task.with_options-373">
                                <span className="linenos">373</span>
                            </a>
                            {"        "}
                            <span className="n">retry_jitter_factor</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">float</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="n">NotSet</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-374">
                            <a href="#Task.with_options-374">
                                <span className="linenos">374</span>
                            </a>
                            {"        "}
                            <span className="n">persist_result</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="n">NotSet</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-375">
                            <a href="#Task.with_options-375">
                                <span className="linenos">375</span>
                            </a>
                            {"        "}
                            <span className="n">result_storage</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">ResultStorage</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="n">NotSet</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-376">
                            <a href="#Task.with_options-376">
                                <span className="linenos">376</span>
                            </a>
                            {"        "}
                            <span className="n">result_serializer</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">ResultSerializer</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="n">NotSet</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-377">
                            <a href="#Task.with_options-377">
                                <span className="linenos">377</span>
                            </a>
                            {"        "}
                            <span className="n">result_storage_key</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="n">NotSet</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-378">
                            <a href="#Task.with_options-378">
                                <span className="linenos">378</span>
                            </a>
                            {"        "}
                            <span className="n">cache_result_in_memory</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-379">
                            <a href="#Task.with_options-379">
                                <span className="linenos">379</span>
                            </a>
                            {"        "}
                            <span className="n">timeout_seconds</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="nb">int</span>
                            <span className="p">,</span> <span className="nb">float</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-380">
                            <a href="#Task.with_options-380">
                                <span className="linenos">380</span>
                            </a>
                            {"        "}
                            <span className="n">log_prints</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="n">NotSet</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-381">
                            <a href="#Task.with_options-381">
                                <span className="linenos">381</span>
                            </a>
                            {"        "}
                            <span className="n">refresh_cache</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="nb">bool</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="n">NotSet</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-382">
                            <a href="#Task.with_options-382">
                                <span className="linenos">382</span>
                            </a>
                            {"        "}
                            <span className="n">on_completion</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-383">
                            <a href="#Task.with_options-383">
                                <span className="linenos">383</span>
                            </a>
                            {"            "}
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="s2">"Task"</span>
                            <span className="p">,</span> <span className="n">TaskRun</span>
                            <span className="p">,</span> <span className="n">State</span>
                            <span className="p">],</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Awaitable</span>
                            <span className="p">[</span>
                            <span className="kc">None</span>
                            <span className="p">],</span> <span className="kc">None</span>
                            <span className="p">]]]</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-384">
                            <a href="#Task.with_options-384">
                                <span className="linenos">384</span>
                            </a>
                            {"        "}
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-385">
                            <a href="#Task.with_options-385">
                                <span className="linenos">385</span>
                            </a>
                            {"        "}
                            <span className="n">on_failure</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-386">
                            <a href="#Task.with_options-386">
                                <span className="linenos">386</span>
                            </a>
                            {"            "}
                            <span className="n">List</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="s2">"Task"</span>
                            <span className="p">,</span> <span className="n">TaskRun</span>
                            <span className="p">,</span> <span className="n">State</span>
                            <span className="p">],</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">Awaitable</span>
                            <span className="p">[</span>
                            <span className="kc">None</span>
                            <span className="p">],</span> <span className="kc">None</span>
                            <span className="p">]]]</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-387">
                            <a href="#Task.with_options-387">
                                <span className="linenos">387</span>
                            </a>
                            {"        "}
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-388">
                            <a href="#Task.with_options-388">
                                <span className="linenos">388</span>
                            </a>
                            {"        "}
                            <span className="n">retry_condition_fn</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Callable</span>
                            <span className="p">[[</span>
                            <span className="s2">"Task"</span>
                            <span className="p">,</span> <span className="n">TaskRun</span>
                            <span className="p">,</span> <span className="n">State</span>
                            <span className="p">],</span> <span className="nb">bool</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-389">
                            <a href="#Task.with_options-389">
                                <span className="linenos">389</span>
                            </a>
                            {"        "}
                            <span className="n">viz_return_value</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Any</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-390">
                            <a href="#Task.with_options-390">
                                <span className="linenos">390</span>
                            </a>
                            {"    "}
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-391">
                            <a href="#Task.with_options-391">
                                <span className="linenos">391</span>
                            </a>
                            <span className="w">{"        "}</span>
                            <span className="sd">"""</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-392">
                            <a href="#Task.with_options-392">
                                <span className="linenos">392</span>
                            </a>
                            <span className="sd">
                                {"        "}Create a new task from the current object, updating
                                provided options.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-393">
                            <a href="#Task.with_options-393">
                                <span className="linenos">393</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-394">
                            <a href="#Task.with_options-394">
                                <span className="linenos">394</span>
                            </a>
                            <span className="sd">{"        "}Args:</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-395">
                            <a href="#Task.with_options-395">
                                <span className="linenos">395</span>
                            </a>
                            <span className="sd">
                                {"            "}name: A new name for the task.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-396">
                            <a href="#Task.with_options-396">
                                <span className="linenos">396</span>
                            </a>
                            <span className="sd">
                                {"            "}description: A new description for the task.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-397">
                            <a href="#Task.with_options-397">
                                <span className="linenos">397</span>
                            </a>
                            <span className="sd">
                                {"            "}tags: A new set of tags for the task. If given,
                                existing tags are ignored,
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-398">
                            <a href="#Task.with_options-398">
                                <span className="linenos">398</span>
                            </a>
                            <span className="sd">{"                "}not merged.</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-399">
                            <a href="#Task.with_options-399">
                                <span className="linenos">399</span>
                            </a>
                            <span className="sd">
                                {"            "}cache_key_fn: A new cache key function for the
                                task.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-400">
                            <a href="#Task.with_options-400">
                                <span className="linenos">400</span>
                            </a>
                            <span className="sd">
                                {"            "}cache_expiration: A new cache expiration time
                                for the task.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-401">
                            <a href="#Task.with_options-401">
                                <span className="linenos">401</span>
                            </a>
                            <span className="sd">
                                {"            "}task_run_name: An optional name to distinguish
                                runs of this task; this name can be provided
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-402">
                            <a href="#Task.with_options-402">
                                <span className="linenos">402</span>
                            </a>
                            <span className="sd">
                                {"                "}as a string template with the task's keyword
                                arguments as variables,
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-403">
                            <a href="#Task.with_options-403">
                                <span className="linenos">403</span>
                            </a>
                            <span className="sd">
                                {"                "}or a function that returns a string.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-404">
                            <a href="#Task.with_options-404">
                                <span className="linenos">404</span>
                            </a>
                            <span className="sd">
                                {"            "}retries: A new number of times to retry on task
                                run failure.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-405">
                            <a href="#Task.with_options-405">
                                <span className="linenos">405</span>
                            </a>
                            <span className="sd">
                                {"            "}retry_delay_seconds: Optionally configures how
                                long to wait before retrying
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-406">
                            <a href="#Task.with_options-406">
                                <span className="linenos">406</span>
                            </a>
                            <span className="sd">
                                {"                "}the task after failure. This is only
                                applicable if `retries` is nonzero.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-407">
                            <a href="#Task.with_options-407">
                                <span className="linenos">407</span>
                            </a>
                            <span className="sd">
                                {"                "}This setting can either be a number of
                                seconds, a list of retry delays,
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-408">
                            <a href="#Task.with_options-408">
                                <span className="linenos">408</span>
                            </a>
                            <span className="sd">
                                {"                "}or a callable that, given the total number
                                of retries, generates a list
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-409">
                            <a href="#Task.with_options-409">
                                <span className="linenos">409</span>
                            </a>
                            <span className="sd">
                                {"                "}of retry delays. If a number of seconds,
                                that delay will be applied to
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-410">
                            <a href="#Task.with_options-410">
                                <span className="linenos">410</span>
                            </a>
                            <span className="sd">
                                {"                "}all retries. If a list, each retry will wait
                                for the corresponding delay
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-411">
                            <a href="#Task.with_options-411">
                                <span className="linenos">411</span>
                            </a>
                            <span className="sd">
                                {"                "}before retrying. When passing a callable or
                                a list, the number of
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-412">
                            <a href="#Task.with_options-412">
                                <span className="linenos">412</span>
                            </a>
                            <span className="sd">
                                {"                "}configured retry delays cannot exceed 50.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-413">
                            <a href="#Task.with_options-413">
                                <span className="linenos">413</span>
                            </a>
                            <span className="sd">
                                {"            "}retry_jitter_factor: An optional factor that
                                defines the factor to which a
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-414">
                            <a href="#Task.with_options-414">
                                <span className="linenos">414</span>
                            </a>
                            <span className="sd">
                                {"                "}retry can be jittered in order to avoid a
                                "thundering herd".
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-415">
                            <a href="#Task.with_options-415">
                                <span className="linenos">415</span>
                            </a>
                            <span className="sd">
                                {"            "}persist_result: A new option for enabling or
                                disabling result persistence.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-416">
                            <a href="#Task.with_options-416">
                                <span className="linenos">416</span>
                            </a>
                            <span className="sd">
                                {"            "}result_storage: A new storage type to use for
                                results.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-417">
                            <a href="#Task.with_options-417">
                                <span className="linenos">417</span>
                            </a>
                            <span className="sd">
                                {"            "}result_serializer: A new serializer to use for
                                results.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-418">
                            <a href="#Task.with_options-418">
                                <span className="linenos">418</span>
                            </a>
                            <span className="sd">
                                {"            "}result_storage_key: A new key for the persisted
                                result to be stored at.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-419">
                            <a href="#Task.with_options-419">
                                <span className="linenos">419</span>
                            </a>
                            <span className="sd">
                                {"            "}timeout_seconds: A new maximum time for the task
                                to complete in seconds.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-420">
                            <a href="#Task.with_options-420">
                                <span className="linenos">420</span>
                            </a>
                            <span className="sd">
                                {"            "}log_prints: A new option for enabling or
                                disabling redirection of `print` statements.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-421">
                            <a href="#Task.with_options-421">
                                <span className="linenos">421</span>
                            </a>
                            <span className="sd">
                                {"            "}refresh_cache: A new option for enabling or
                                disabling cache refresh.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-422">
                            <a href="#Task.with_options-422">
                                <span className="linenos">422</span>
                            </a>
                            <span className="sd">
                                {"            "}on_completion: A new list of callables to run
                                when the task enters a completed state.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-423">
                            <a href="#Task.with_options-423">
                                <span className="linenos">423</span>
                            </a>
                            <span className="sd">
                                {"            "}on_failure: A new list of callables to run when
                                the task enters a failed state.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-424">
                            <a href="#Task.with_options-424">
                                <span className="linenos">424</span>
                            </a>
                            <span className="sd">
                                {"            "}retry_condition_fn: An optional callable run
                                when a task run returns a Failed state.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-425">
                            <a href="#Task.with_options-425">
                                <span className="linenos">425</span>
                            </a>
                            <span className="sd">
                                {"                "}Should return `True` if the task should
                                continue to its retry policy, and `False`
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-426">
                            <a href="#Task.with_options-426">
                                <span className="linenos">426</span>
                            </a>
                            <span className="sd">
                                {"                "}if the task should end as failed. Defaults
                                to `None`, indicating the task should
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-427">
                            <a href="#Task.with_options-427">
                                <span className="linenos">427</span>
                            </a>
                            <span className="sd">
                                {"                "}always continue to its retry policy.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-428">
                            <a href="#Task.with_options-428">
                                <span className="linenos">428</span>
                            </a>
                            <span className="sd">
                                {"            "}viz_return_value: An optional value to return
                                when the task dependency tree is visualized.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-429">
                            <a href="#Task.with_options-429">
                                <span className="linenos">429</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-430">
                            <a href="#Task.with_options-430">
                                <span className="linenos">430</span>
                            </a>
                            <span className="sd">{"        "}Returns:</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-431">
                            <a href="#Task.with_options-431">
                                <span className="linenos">431</span>
                            </a>
                            <span className="sd">{"            "}A new `Task` instance.</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-432">
                            <a href="#Task.with_options-432">
                                <span className="linenos">432</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-433">
                            <a href="#Task.with_options-433">
                                <span className="linenos">433</span>
                            </a>
                            <span className="sd">{"        "}Examples:</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-434">
                            <a href="#Task.with_options-434">
                                <span className="linenos">434</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-435">
                            <a href="#Task.with_options-435">
                                <span className="linenos">435</span>
                            </a>
                            <span className="sd">
                                {"            "}Create a new task from an existing task and
                                update the name
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-436">
                            <a href="#Task.with_options-436">
                                <span className="linenos">436</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-437">
                            <a href="#Task.with_options-437">
                                <span className="linenos">437</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; @task(name="My task")
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-438">
                            <a href="#Task.with_options-438">
                                <span className="linenos">438</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_task():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-439">
                            <a href="#Task.with_options-439">
                                <span className="linenos">439</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}return 1
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-440">
                            <a href="#Task.with_options-440">
                                <span className="linenos">440</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-441">
                            <a href="#Task.with_options-441">
                                <span className="linenos">441</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; new_task =
                                my_task.with_options(name="My new task")
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-442">
                            <a href="#Task.with_options-442">
                                <span className="linenos">442</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-443">
                            <a href="#Task.with_options-443">
                                <span className="linenos">443</span>
                            </a>
                            <span className="sd">
                                {"            "}Create a new task from an existing task and
                                update the retry settings
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-444">
                            <a href="#Task.with_options-444">
                                <span className="linenos">444</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-445">
                            <a href="#Task.with_options-445">
                                <span className="linenos">445</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; from random import randint
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-446">
                            <a href="#Task.with_options-446">
                                <span className="linenos">446</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-447">
                            <a href="#Task.with_options-447">
                                <span className="linenos">447</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; @task(retries=1,
                                retry_delay_seconds=5)
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-448">
                            <a href="#Task.with_options-448">
                                <span className="linenos">448</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_task():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-449">
                            <a href="#Task.with_options-449">
                                <span className="linenos">449</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}x = randint(0, 5)
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-450">
                            <a href="#Task.with_options-450">
                                <span className="linenos">450</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}if x &gt;= 3:{"  "}# Make a
                                task that fails sometimes
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-451">
                            <a href="#Task.with_options-451">
                                <span className="linenos">451</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"         "}raise ValueError("Retry
                                me please!")
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-452">
                            <a href="#Task.with_options-452">
                                <span className="linenos">452</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}return x
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-453">
                            <a href="#Task.with_options-453">
                                <span className="linenos">453</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-454">
                            <a href="#Task.with_options-454">
                                <span className="linenos">454</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; new_task =
                                my_task.with_options(retries=5, retry_delay_seconds=2)
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-455">
                            <a href="#Task.with_options-455">
                                <span className="linenos">455</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-456">
                            <a href="#Task.with_options-456">
                                <span className="linenos">456</span>
                            </a>
                            <span className="sd">
                                {"            "}Use a task with updated options within a flow
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-457">
                            <a href="#Task.with_options-457">
                                <span className="linenos">457</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-458">
                            <a href="#Task.with_options-458">
                                <span className="linenos">458</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; @task(name="My task")
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-459">
                            <a href="#Task.with_options-459">
                                <span className="linenos">459</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_task():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-460">
                            <a href="#Task.with_options-460">
                                <span className="linenos">460</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}return 1
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-461">
                            <a href="#Task.with_options-461">
                                <span className="linenos">461</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-462">
                            <a href="#Task.with_options-462">
                                <span className="linenos">462</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-463">
                            <a href="#Task.with_options-463">
                                <span className="linenos">463</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-464">
                            <a href="#Task.with_options-464">
                                <span className="linenos">464</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}new_task =
                                my_task.with_options(name="My new task")
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-465">
                            <a href="#Task.with_options-465">
                                <span className="linenos">465</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}new_task()
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-466">
                            <a href="#Task.with_options-466">
                                <span className="linenos">466</span>
                            </a>
                            <span className="sd">{"        "}"""</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-467">
                            <a href="#Task.with_options-467">
                                <span className="linenos">467</span>
                            </a>
                            {"        "}
                            <span className="k">return</span> <span className="n">Task</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-468">
                            <a href="#Task.with_options-468">
                                <span className="linenos">468</span>
                            </a>
                            {"            "}
                            <span className="n">fn</span>
                            <span className="o">=</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-469">
                            <a href="#Task.with_options-469">
                                <span className="linenos">469</span>
                            </a>
                            {"            "}
                            <span className="n">name</span>
                            <span className="o">=</span>
                            <span className="n">
                                name
                            </span> <span className="ow">or</span>{" "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">name</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-470">
                            <a href="#Task.with_options-470">
                                <span className="linenos">470</span>
                            </a>
                            {"            "}
                            <span className="n">description</span>
                            <span className="o">=</span>
                            <span className="n">description</span>{" "}
                            <span className="ow">or</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">description</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-471">
                            <a href="#Task.with_options-471">
                                <span className="linenos">471</span>
                            </a>
                            {"            "}
                            <span className="n">tags</span>
                            <span className="o">=</span>
                            <span className="n">
                                tags
                            </span> <span className="ow">or</span>{" "}
                            <span className="n">copy</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">tags</span>
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-472">
                            <a href="#Task.with_options-472">
                                <span className="linenos">472</span>
                            </a>
                            {"            "}
                            <span className="n">cache_key_fn</span>
                            <span className="o">=</span>
                            <span className="n">cache_key_fn</span>{" "}
                            <span className="ow">or</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">cache_key_fn</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-473">
                            <a href="#Task.with_options-473">
                                <span className="linenos">473</span>
                            </a>
                            {"            "}
                            <span className="n">cache_expiration</span>
                            <span className="o">=</span>
                            <span className="n">cache_expiration</span>{" "}
                            <span className="ow">or</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">cache_expiration</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-474">
                            <a href="#Task.with_options-474">
                                <span className="linenos">474</span>
                            </a>
                            {"            "}
                            <span className="n">task_run_name</span>
                            <span className="o">=</span>
                            <span className="n">task_run_name</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-475">
                            <a href="#Task.with_options-475">
                                <span className="linenos">475</span>
                            </a>
                            {"            "}
                            <span className="n">retries</span>
                            <span className="o">=</span>
                            <span className="n">
                                retries
                            </span> <span className="k">if</span>{" "}
                            <span className="n">retries</span> <span className="ow">is</span>{" "}
                            <span className="ow">not</span> <span className="n">NotSet</span>{" "}
                            <span className="k">else</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">retries</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-476">
                            <a href="#Task.with_options-476">
                                <span className="linenos">476</span>
                            </a>
                            {"            "}
                            <span className="n">retry_delay_seconds</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-477">
                            <a href="#Task.with_options-477">
                                <span className="linenos">477</span>
                            </a>
                            {"                "}
                            <span className="n">retry_delay_seconds</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-478">
                            <a href="#Task.with_options-478">
                                <span className="linenos">478</span>
                            </a>
                            {"                "}
                            <span className="k">if</span>{" "}
                            <span className="n">retry_delay_seconds</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="n">NotSet</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-479">
                            <a href="#Task.with_options-479">
                                <span className="linenos">479</span>
                            </a>
                            {"                "}
                            <span className="k">else</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">retry_delay_seconds</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-480">
                            <a href="#Task.with_options-480">
                                <span className="linenos">480</span>
                            </a>
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-481">
                            <a href="#Task.with_options-481">
                                <span className="linenos">481</span>
                            </a>
                            {"            "}
                            <span className="n">retry_jitter_factor</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-482">
                            <a href="#Task.with_options-482">
                                <span className="linenos">482</span>
                            </a>
                            {"                "}
                            <span className="n">retry_jitter_factor</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-483">
                            <a href="#Task.with_options-483">
                                <span className="linenos">483</span>
                            </a>
                            {"                "}
                            <span className="k">if</span>{" "}
                            <span className="n">retry_jitter_factor</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="n">NotSet</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-484">
                            <a href="#Task.with_options-484">
                                <span className="linenos">484</span>
                            </a>
                            {"                "}
                            <span className="k">else</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">retry_jitter_factor</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-485">
                            <a href="#Task.with_options-485">
                                <span className="linenos">485</span>
                            </a>
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-486">
                            <a href="#Task.with_options-486">
                                <span className="linenos">486</span>
                            </a>
                            {"            "}
                            <span className="n">persist_result</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-487">
                            <a href="#Task.with_options-487">
                                <span className="linenos">487</span>
                            </a>
                            {"                "}
                            <span className="n">persist_result</span>{" "}
                            <span className="k">if</span>{" "}
                            <span className="n">persist_result</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="n">NotSet</span> <span className="k">else</span>{" "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">persist_result</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-488">
                            <a href="#Task.with_options-488">
                                <span className="linenos">488</span>
                            </a>
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-489">
                            <a href="#Task.with_options-489">
                                <span className="linenos">489</span>
                            </a>
                            {"            "}
                            <span className="n">result_storage</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-490">
                            <a href="#Task.with_options-490">
                                <span className="linenos">490</span>
                            </a>
                            {"                "}
                            <span className="n">result_storage</span>{" "}
                            <span className="k">if</span>{" "}
                            <span className="n">result_storage</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="n">NotSet</span> <span className="k">else</span>{" "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">result_storage</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-491">
                            <a href="#Task.with_options-491">
                                <span className="linenos">491</span>
                            </a>
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-492">
                            <a href="#Task.with_options-492">
                                <span className="linenos">492</span>
                            </a>
                            {"            "}
                            <span className="n">result_storage_key</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-493">
                            <a href="#Task.with_options-493">
                                <span className="linenos">493</span>
                            </a>
                            {"                "}
                            <span className="n">result_storage_key</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-494">
                            <a href="#Task.with_options-494">
                                <span className="linenos">494</span>
                            </a>
                            {"                "}
                            <span className="k">if</span>{" "}
                            <span className="n">result_storage_key</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="n">NotSet</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-495">
                            <a href="#Task.with_options-495">
                                <span className="linenos">495</span>
                            </a>
                            {"                "}
                            <span className="k">else</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">result_storage_key</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-496">
                            <a href="#Task.with_options-496">
                                <span className="linenos">496</span>
                            </a>
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-497">
                            <a href="#Task.with_options-497">
                                <span className="linenos">497</span>
                            </a>
                            {"            "}
                            <span className="n">result_serializer</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-498">
                            <a href="#Task.with_options-498">
                                <span className="linenos">498</span>
                            </a>
                            {"                "}
                            <span className="n">result_serializer</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-499">
                            <a href="#Task.with_options-499">
                                <span className="linenos">499</span>
                            </a>
                            {"                "}
                            <span className="k">if</span>{" "}
                            <span className="n">result_serializer</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="n">NotSet</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-500">
                            <a href="#Task.with_options-500">
                                <span className="linenos">500</span>
                            </a>
                            {"                "}
                            <span className="k">else</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">result_serializer</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-501">
                            <a href="#Task.with_options-501">
                                <span className="linenos">501</span>
                            </a>
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-502">
                            <a href="#Task.with_options-502">
                                <span className="linenos">502</span>
                            </a>
                            {"            "}
                            <span className="n">cache_result_in_memory</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-503">
                            <a href="#Task.with_options-503">
                                <span className="linenos">503</span>
                            </a>
                            {"                "}
                            <span className="n">cache_result_in_memory</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-504">
                            <a href="#Task.with_options-504">
                                <span className="linenos">504</span>
                            </a>
                            {"                "}
                            <span className="k">if</span>{" "}
                            <span className="n">cache_result_in_memory</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="kc">None</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-505">
                            <a href="#Task.with_options-505">
                                <span className="linenos">505</span>
                            </a>
                            {"                "}
                            <span className="k">else</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">cache_result_in_memory</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-506">
                            <a href="#Task.with_options-506">
                                <span className="linenos">506</span>
                            </a>
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-507">
                            <a href="#Task.with_options-507">
                                <span className="linenos">507</span>
                            </a>
                            {"            "}
                            <span className="n">timeout_seconds</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-508">
                            <a href="#Task.with_options-508">
                                <span className="linenos">508</span>
                            </a>
                            {"                "}
                            <span className="n">timeout_seconds</span>{" "}
                            <span className="k">if</span>{" "}
                            <span className="n">timeout_seconds</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="kc">None</span> <span className="k">else</span>{" "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">timeout_seconds</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-509">
                            <a href="#Task.with_options-509">
                                <span className="linenos">509</span>
                            </a>
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-510">
                            <a href="#Task.with_options-510">
                                <span className="linenos">510</span>
                            </a>
                            {"            "}
                            <span className="n">log_prints</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            <span className="n">log_prints</span>{" "}
                            <span className="k">if</span>{" "}
                            <span className="n">log_prints</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="n">NotSet</span> <span className="k">else</span>{" "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">log_prints</span>
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-511">
                            <a href="#Task.with_options-511">
                                <span className="linenos">511</span>
                            </a>
                            {"            "}
                            <span className="n">refresh_cache</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-512">
                            <a href="#Task.with_options-512">
                                <span className="linenos">512</span>
                            </a>
                            {"                "}
                            <span className="n">refresh_cache</span>{" "}
                            <span className="k">if</span>{" "}
                            <span className="n">refresh_cache</span>{" "}
                            <span className="ow">is</span> <span className="ow">not</span>{" "}
                            <span className="n">NotSet</span> <span className="k">else</span>{" "}
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">refresh_cache</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-513">
                            <a href="#Task.with_options-513">
                                <span className="linenos">513</span>
                            </a>
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-514">
                            <a href="#Task.with_options-514">
                                <span className="linenos">514</span>
                            </a>
                            {"            "}
                            <span className="n">on_completion</span>
                            <span className="o">=</span>
                            <span className="n">on_completion</span>{" "}
                            <span className="ow">or</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">on_completion</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-515">
                            <a href="#Task.with_options-515">
                                <span className="linenos">515</span>
                            </a>
                            {"            "}
                            <span className="n">on_failure</span>
                            <span className="o">=</span>
                            <span className="n">on_failure</span>{" "}
                            <span className="ow">or</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">on_failure</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-516">
                            <a href="#Task.with_options-516">
                                <span className="linenos">516</span>
                            </a>
                            {"            "}
                            <span className="n">retry_condition_fn</span>
                            <span className="o">=</span>
                            <span className="n">retry_condition_fn</span>{" "}
                            <span className="ow">or</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">retry_condition_fn</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-517">
                            <a href="#Task.with_options-517">
                                <span className="linenos">517</span>
                            </a>
                            {"            "}
                            <span className="n">viz_return_value</span>
                            <span className="o">=</span>
                            <span className="n">viz_return_value</span>{" "}
                            <span className="ow">or</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">viz_return_value</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.with_options-518">
                            <a href="#Task.with_options-518">
                                <span className="linenos">518</span>
                            </a>
                            {"        "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
                <div className="docstring">
                    <p>
                        Create a new task from the current object, updating provided
                        options.
                    </p>
                    <p>
                        Args: name: A new name for the task. description: A new description
                        for the task. tags: A new set of tags for the task. If given,
                        existing tags are ignored, not merged. cache_key_fn: A new cache key
                        function for the task. cache_expiration: A new cache expiration time
                        for the task. task_run_name: An optional name to distinguish runs of
                        this task; this name can be provided as a string template with the
                        task's keyword arguments as variables, or a function that returns a
                        string. retries: A new number of times to retry on task run failure.
                        retry_delay_seconds: Optionally configures how long to wait before
                        retrying the task after failure. This is only applicable if
                        <code>
                            <a href="#Task.retries">retries</a>
                        </code>{" "}
                        is nonzero. This setting can either be a number of seconds, a list
                        of retry delays, or a callable that, given the total number of
                        retries, generates a list of retry delays. If a number of seconds,
                        that delay will be applied to all retries. If a list, each retry
                        will wait for the corresponding delay before retrying. When passing
                        a callable or a list, the number of configured retry delays cannot
                        exceed 50. retry_jitter_factor: An optional factor that defines the
                        factor to which a retry can be jittered in order to avoid a
                        "thundering herd". persist_result: A new option for enabling or
                        disabling result persistence. result_storage: A new storage type to
                        use for results. result_serializer: A new serializer to use for
                        results. result_storage_key: A new key for the persisted result to
                        be stored at. timeout_seconds: A new maximum time for the task to
                        complete in seconds. log_prints: A new option for enabling or
                        disabling redirection of <code>print</code> statements.
                        refresh_cache: A new option for enabling or disabling cache refresh.
                        on_completion: A new list of callables to run when the task enters a
                        completed state. on_failure: A new list of callables to run when the
                        task enters a failed state. retry_condition_fn: An optional callable
                        run when a task run returns a Failed state. Should return{" "}
                        <code>True</code> if the task should continue to its retry policy,
                        and
                        <code>False</code>
                        if the task should end as failed. Defaults to <code>None</code>,
                        indicating the task should always continue to its retry policy.
                        viz_return_value: An optional value to return when the task
                        dependency tree is visualized.
                    </p>
                    <p>
                        Returns: A new{" "}
                        <code>
                            <a href="#Task">Task</a>
                        </code>{" "}
                        instance.
                    </p>
                    <p>Examples:</p>
                    <pre>
                        <code>
                            Create a new task from an existing task and update the name{"\n"}
                            {"\n"}&gt;&gt;&gt; @task(name="My task"){"\n"}&gt;&gt;&gt; def
                            my_task():{"\n"}&gt;&gt;&gt;{"     "}return 1{"\n"}&gt;&gt;&gt;
                            {"\n"}&gt;&gt;&gt; new_task = my_task.with_options(name="My new
                            task"){"\n"}
                            {"\n"}Create a new task from an existing task and update the retry
                            settings{"\n"}
                            {"\n"}&gt;&gt;&gt; from random import randint{"\n"}&gt;&gt;&gt;
                            {"\n"}&gt;&gt;&gt; @task(retries=1, retry_delay_seconds=5){"\n"}
                            &gt;&gt;&gt; def my_task():{"\n"}&gt;&gt;&gt;{"     "}x =
                            randint(0, 5){"\n"}&gt;&gt;&gt;{"     "}if x &gt;= 3:{"  "}# Make
                            a task that fails sometimes{"\n"}&gt;&gt;&gt;{"         "}raise
                            ValueError("Retry me please!"){"\n"}&gt;&gt;&gt;{"     "}return x
                            {"\n"}&gt;&gt;&gt;{"\n"}&gt;&gt;&gt; new_task =
                            my_task.with_options(retries=5, retry_delay_seconds=2){"\n"}
                            {"\n"}Use a task with updated options within a flow{"\n"}
                            {"\n"}&gt;&gt;&gt; @task(name="My task"){"\n"}&gt;&gt;&gt; def
                            my_task():{"\n"}&gt;&gt;&gt;{"     "}return 1{"\n"}&gt;&gt;&gt;
                            {"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; my_flow():{"\n"}
                            &gt;&gt;&gt;{"     "}new_task = my_task.with_options(name="My new
                            task"){"\n"}&gt;&gt;&gt;{"     "}new_task(){"\n"}
                        </code>
                    </pre>
                </div>
            </div>
            <div id="Task.create_run" className="classattr">
                <input
                    id="Task.create_run-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">async def</span>
                    <span className="name">create_run</span>
                    <span className="signature pdoc-code multiline">
                        (
                        <span className="param">
                            {" "}
                            <span className="bp">self</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">client</span>
                            <span className="p">:</span> <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">orchestration</span>
                            <span className="o">.</span>
                            <span className="n">PrefectClient</span>
                            <span className="p">,</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">orchestration</span>
                            <span className="o">.</span>
                            <span className="n">SyncPrefectClient</span>
                            <span className="p">,</span> <span className="n">NoneType</span>
                            <span className="p">]</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">parameters</span>
                            <span className="p">:</span> <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">flow_run_context</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">context</span>
                            <span className="o">.</span>
                            <span className="n">EngineContext</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">parent_task_run_context</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">context</span>
                            <span className="o">.</span>
                            <span className="n">TaskRunContext</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">wait_for</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">futures</span>
                            <span className="o">.</span>
                            <span className="n">PrefectFuture</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">extra_task_inputs</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Set</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">TaskRunInput</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">TaskRun</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="Task.create_run-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#Task.create_run" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="Task.create_run-520">
                            <a href="#Task.create_run-520">
                                <span className="linenos">520</span>
                            </a>
                            {"    "}
                            <span className="k">
                                async
                            </span> <span className="k">def</span>{" "}
                            <span className="nf">create_run</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-521">
                            <a href="#Task.create_run-521">
                                <span className="linenos">521</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-522">
                            <a href="#Task.create_run-522">
                                <span className="linenos">522</span>
                            </a>
                            {"        "}
                            <span className="n">client</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">PrefectClient</span>
                            <span className="p">,</span>{" "}
                            <span className="n">SyncPrefectClient</span>
                            <span className="p">]],</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-523">
                            <a href="#Task.create_run-523">
                                <span className="linenos">523</span>
                            </a>
                            {"        "}
                            <span className="n">parameters</span>
                            <span className="p">:</span> <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Any</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-524">
                            <a href="#Task.create_run-524">
                                <span className="linenos">524</span>
                            </a>
                            {"        "}
                            <span className="n">flow_run_context</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">FlowRunContext</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-525">
                            <a href="#Task.create_run-525">
                                <span className="linenos">525</span>
                            </a>
                            {"        "}
                            <span className="n">parent_task_run_context</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">TaskRunContext</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-526">
                            <a href="#Task.create_run-526">
                                <span className="linenos">526</span>
                            </a>
                            {"        "}
                            <span className="n">wait_for</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="n">PrefectFuture</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-527">
                            <a href="#Task.create_run-527">
                                <span className="linenos">527</span>
                            </a>
                            {"        "}
                            <span className="n">extra_task_inputs</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Dict</span>
                            <span className="p">[</span>
                            <span className="nb">str</span>
                            <span className="p">,</span> <span className="n">Set</span>
                            <span className="p">[</span>
                            <span className="n">TaskRunInput</span>
                            <span className="p">]]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-528">
                            <a href="#Task.create_run-528">
                                <span className="linenos">528</span>
                            </a>
                            {"    "}
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="n">TaskRun</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-529">
                            <a href="#Task.create_run-529">
                                <span className="linenos">529</span>
                            </a>
                            {"        "}
                            <span className="kn">from</span>{" "}
                            <span className="nn">prefect.utilities.engine</span>{" "}
                            <span className="kn">import</span> <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-530">
                            <a href="#Task.create_run-530">
                                <span className="linenos">530</span>
                            </a>
                            {"            "}
                            <span className="n">_dynamic_key_for_task_run</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-531">
                            <a href="#Task.create_run-531">
                                <span className="linenos">531</span>
                            </a>
                            {"            "}
                            <span className="n">_resolve_custom_task_run_name</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-532">
                            <a href="#Task.create_run-532">
                                <span className="linenos">532</span>
                            </a>
                            {"            "}
                            <span className="n">collect_task_run_inputs</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-533">
                            <a href="#Task.create_run-533">
                                <span className="linenos">533</span>
                            </a>
                            {"        "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-534">
                            <a href="#Task.create_run-534">
                                <span className="linenos">534</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-535">
                            <a href="#Task.create_run-535">
                                <span className="linenos">535</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">flow_run_context</span>{" "}
                            <span className="ow">is</span> <span className="kc">None</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-536">
                            <a href="#Task.create_run-536">
                                <span className="linenos">536</span>
                            </a>
                            {"            "}
                            <span className="n">flow_run_context</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">FlowRunContext</span>
                            <span className="o">.</span>
                            <span className="n">get</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-537">
                            <a href="#Task.create_run-537">
                                <span className="linenos">537</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">parent_task_run_context</span>{" "}
                            <span className="ow">is</span> <span className="kc">None</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-538">
                            <a href="#Task.create_run-538">
                                <span className="linenos">538</span>
                            </a>
                            {"            "}
                            <span className="n">parent_task_run_context</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">TaskRunContext</span>
                            <span className="o">.</span>
                            <span className="n">get</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-539">
                            <a href="#Task.create_run-539">
                                <span className="linenos">539</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">parameters</span>{" "}
                            <span className="ow">is</span> <span className="kc">None</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-540">
                            <a href="#Task.create_run-540">
                                <span className="linenos">540</span>
                            </a>
                            {"            "}
                            <span className="n">
                                parameters
                            </span> <span className="o">=</span>{" "}
                            <span className="p">
                                {"{"}
                                {"}"}
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-541">
                            <a href="#Task.create_run-541">
                                <span className="linenos">541</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-542">
                            <a href="#Task.create_run-542">
                                <span className="linenos">542</span>
                            </a>
                            {"        "}
                            <span className="k">try</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-543">
                            <a href="#Task.create_run-543">
                                <span className="linenos">543</span>
                            </a>
                            {"            "}
                            <span className="n">task_run_name</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">_resolve_custom_task_run_name</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">,</span> <span className="n">parameters</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-544">
                            <a href="#Task.create_run-544">
                                <span className="linenos">544</span>
                            </a>
                            {"        "}
                            <span className="k">except</span>{" "}
                            <span className="ne">TypeError</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-545">
                            <a href="#Task.create_run-545">
                                <span className="linenos">545</span>
                            </a>
                            {"            "}
                            <span className="n">task_run_name</span>{" "}
                            <span className="o">=</span> <span className="kc">None</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-546">
                            <a href="#Task.create_run-546">
                                <span className="linenos">546</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-547">
                            <a href="#Task.create_run-547">
                                <span className="linenos">547</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">flow_run_context</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-548">
                            <a href="#Task.create_run-548">
                                <span className="linenos">548</span>
                            </a>
                            {"            "}
                            <span className="n">dynamic_key</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">_dynamic_key_for_task_run</span>
                            <span className="p">(</span>
                            <span className="n">context</span>
                            <span className="o">=</span>
                            <span className="n">flow_run_context</span>
                            <span className="p">,</span> <span className="n">task</span>
                            <span className="o">=</span>
                            <span className="bp">self</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-549">
                            <a href="#Task.create_run-549">
                                <span className="linenos">549</span>
                            </a>
                            {"        "}
                            <span className="k">else</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-550">
                            <a href="#Task.create_run-550">
                                <span className="linenos">550</span>
                            </a>
                            {"            "}
                            <span className="n">dynamic_key</span>{" "}
                            <span className="o">=</span> <span className="n">uuid4</span>
                            <span className="p">()</span>
                            <span className="o">.</span>
                            <span className="n">hex</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-551">
                            <a href="#Task.create_run-551">
                                <span className="linenos">551</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-552">
                            <a href="#Task.create_run-552">
                                <span className="linenos">552</span>
                            </a>
                            {"        "}
                            <span className="c1"># collect task inputs</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-553">
                            <a href="#Task.create_run-553">
                                <span className="linenos">553</span>
                            </a>
                            {"        "}
                            <span className="n">task_inputs</span>{" "}
                            <span className="o">=</span> <span className="p">{"{"}</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-554">
                            <a href="#Task.create_run-554">
                                <span className="linenos">554</span>
                            </a>
                            {"            "}
                            <span className="n">k</span>
                            <span className="p">:</span> <span className="k">await</span>{" "}
                            <span className="n">collect_task_run_inputs</span>
                            <span className="p">(</span>
                            <span className="n">v</span>
                            <span className="p">)</span> <span className="k">for</span>{" "}
                            <span className="n">k</span>
                            <span className="p">,</span> <span className="n">v</span>{" "}
                            <span className="ow">in</span>{" "}
                            <span className="n">parameters</span>
                            <span className="o">.</span>
                            <span className="n">items</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-555">
                            <a href="#Task.create_run-555">
                                <span className="linenos">555</span>
                            </a>
                            {"        "}
                            <span className="p">{"}"}</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-556">
                            <a href="#Task.create_run-556">
                                <span className="linenos">556</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-557">
                            <a href="#Task.create_run-557">
                                <span className="linenos">557</span>
                            </a>
                            {"        "}
                            <span className="c1">
                                # check if this task has a parent task run based on running in
                                another
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-558">
                            <a href="#Task.create_run-558">
                                <span className="linenos">558</span>
                            </a>
                            {"        "}
                            <span className="c1">
                                # task run's existing context. A task run is only considered a
                                parent if
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-559">
                            <a href="#Task.create_run-559">
                                <span className="linenos">559</span>
                            </a>
                            {"        "}
                            <span className="c1">
                                # it is in the same flow run (because otherwise presumably the
                                child is
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-560">
                            <a href="#Task.create_run-560">
                                <span className="linenos">560</span>
                            </a>
                            {"        "}
                            <span className="c1">
                                # in a subflow, so the subflow serves as the parent) or if there
                                is no
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-561">
                            <a href="#Task.create_run-561">
                                <span className="linenos">561</span>
                            </a>
                            {"        "}
                            <span className="c1"># flow run</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-562">
                            <a href="#Task.create_run-562">
                                <span className="linenos">562</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">parent_task_run_context</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-563">
                            <a href="#Task.create_run-563">
                                <span className="linenos">563</span>
                            </a>
                            {"            "}
                            <span className="c1"># there is no flow run</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-564">
                            <a href="#Task.create_run-564">
                                <span className="linenos">564</span>
                            </a>
                            {"            "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="n">flow_run_context</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-565">
                            <a href="#Task.create_run-565">
                                <span className="linenos">565</span>
                            </a>
                            {"                "}
                            <span className="n">task_inputs</span>
                            <span className="p">[</span>
                            <span className="s2">"__parents__"</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-566">
                            <a href="#Task.create_run-566">
                                <span className="linenos">566</span>
                            </a>
                            {"                    "}
                            <span className="n">TaskRunResult</span>
                            <span className="p">(</span>
                            <span className="nb">id</span>
                            <span className="o">=</span>
                            <span className="n">parent_task_run_context</span>
                            <span className="o">.</span>
                            <span className="n">task_run</span>
                            <span className="o">.</span>
                            <span className="n">id</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-567">
                            <a href="#Task.create_run-567">
                                <span className="linenos">567</span>
                            </a>
                            {"                "}
                            <span className="p">]</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-568">
                            <a href="#Task.create_run-568">
                                <span className="linenos">568</span>
                            </a>
                            {"            "}
                            <span className="c1">
                                # there is a flow run and the task run is in the same flow run
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-569">
                            <a href="#Task.create_run-569">
                                <span className="linenos">569</span>
                            </a>
                            {"            "}
                            <span className="k">elif</span> <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-570">
                            <a href="#Task.create_run-570">
                                <span className="linenos">570</span>
                            </a>
                            {"                "}
                            <span className="n">flow_run_context</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-571">
                            <a href="#Task.create_run-571">
                                <span className="linenos">571</span>
                            </a>
                            {"                "}
                            <span className="ow">and</span>{" "}
                            <span className="n">parent_task_run_context</span>
                            <span className="o">.</span>
                            <span className="n">task_run</span>
                            <span className="o">.</span>
                            <span className="n">flow_run_id</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-572">
                            <a href="#Task.create_run-572">
                                <span className="linenos">572</span>
                            </a>
                            {"                "}
                            <span className="o">==</span>{" "}
                            <span className="n">flow_run_context</span>
                            <span className="o">.</span>
                            <span className="n">flow_run</span>
                            <span className="o">.</span>
                            <span className="n">id</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-573">
                            <a href="#Task.create_run-573">
                                <span className="linenos">573</span>
                            </a>
                            {"            "}
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-574">
                            <a href="#Task.create_run-574">
                                <span className="linenos">574</span>
                            </a>
                            {"                "}
                            <span className="n">task_inputs</span>
                            <span className="p">[</span>
                            <span className="s2">"__parents__"</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="p">[</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-575">
                            <a href="#Task.create_run-575">
                                <span className="linenos">575</span>
                            </a>
                            {"                    "}
                            <span className="n">TaskRunResult</span>
                            <span className="p">(</span>
                            <span className="nb">id</span>
                            <span className="o">=</span>
                            <span className="n">parent_task_run_context</span>
                            <span className="o">.</span>
                            <span className="n">task_run</span>
                            <span className="o">.</span>
                            <span className="n">id</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-576">
                            <a href="#Task.create_run-576">
                                <span className="linenos">576</span>
                            </a>
                            {"                "}
                            <span className="p">]</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-577">
                            <a href="#Task.create_run-577">
                                <span className="linenos">577</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-578">
                            <a href="#Task.create_run-578">
                                <span className="linenos">578</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="n">wait_for</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-579">
                            <a href="#Task.create_run-579">
                                <span className="linenos">579</span>
                            </a>
                            {"            "}
                            <span className="n">task_inputs</span>
                            <span className="p">[</span>
                            <span className="s2">"wait_for"</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="k">await</span>{" "}
                            <span className="n">collect_task_run_inputs</span>
                            <span className="p">(</span>
                            <span className="n">wait_for</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-580">
                            <a href="#Task.create_run-580">
                                <span className="linenos">580</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-581">
                            <a href="#Task.create_run-581">
                                <span className="linenos">581</span>
                            </a>
                            {"        "}
                            <span className="c1"># Join extra task inputs</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-582">
                            <a href="#Task.create_run-582">
                                <span className="linenos">582</span>
                            </a>
                            {"        "}
                            <span className="k">for</span> <span className="n">k</span>
                            <span className="p">
                                ,
                            </span> <span className="n">extras</span>{" "}
                            <span className="ow">in</span> <span className="p">(</span>
                            <span className="n">extra_task_inputs</span>{" "}
                            <span className="ow">or</span>{" "}
                            <span className="p">
                                {"{"}
                                {"}"})
                            </span>
                            <span className="o">.</span>
                            <span className="n">items</span>
                            <span className="p">():</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-583">
                            <a href="#Task.create_run-583">
                                <span className="linenos">583</span>
                            </a>
                            {"            "}
                            <span className="n">task_inputs</span>
                            <span className="p">[</span>
                            <span className="n">k</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="n">task_inputs</span>
                            <span className="p">[</span>
                            <span className="n">k</span>
                            <span className="p">]</span>
                            <span className="o">.</span>
                            <span className="n">union</span>
                            <span className="p">(</span>
                            <span className="n">extras</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-584">
                            <a href="#Task.create_run-584">
                                <span className="linenos">584</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-585">
                            <a href="#Task.create_run-585">
                                <span className="linenos">585</span>
                            </a>
                            {"        "}
                            <span className="c1"># create the task run</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-586">
                            <a href="#Task.create_run-586">
                                <span className="linenos">586</span>
                            </a>
                            {"        "}
                            <span className="n">
                                task_run
                            </span> <span className="o">=</span>{" "}
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">create_task_run</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-587">
                            <a href="#Task.create_run-587">
                                <span className="linenos">587</span>
                            </a>
                            {"            "}
                            <span className="n">task</span>
                            <span className="o">=</span>
                            <span className="bp">self</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-588">
                            <a href="#Task.create_run-588">
                                <span className="linenos">588</span>
                            </a>
                            {"            "}
                            <span className="n">name</span>
                            <span className="o">=</span>
                            <span className="n">task_run_name</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-589">
                            <a href="#Task.create_run-589">
                                <span className="linenos">589</span>
                            </a>
                            {"            "}
                            <span className="n">flow_run_id</span>
                            <span className="o">=</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-590">
                            <a href="#Task.create_run-590">
                                <span className="linenos">590</span>
                            </a>
                            {"                "}
                            <span className="nb">getattr</span>
                            <span className="p">(</span>
                            <span className="n">flow_run_context</span>
                            <span className="o">.</span>
                            <span className="n">flow_run</span>
                            <span className="p">,</span> <span className="s2">"id"</span>
                            <span className="p">,</span> <span className="kc">None</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-591">
                            <a href="#Task.create_run-591">
                                <span className="linenos">591</span>
                            </a>
                            {"                "}
                            <span className="k">if</span>{" "}
                            <span className="n">flow_run_context</span>{" "}
                            <span className="ow">and</span>{" "}
                            <span className="n">flow_run_context</span>
                            <span className="o">.</span>
                            <span className="n">flow_run</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-592">
                            <a href="#Task.create_run-592">
                                <span className="linenos">592</span>
                            </a>
                            {"                "}
                            <span className="k">else</span> <span className="kc">None</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-593">
                            <a href="#Task.create_run-593">
                                <span className="linenos">593</span>
                            </a>
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-594">
                            <a href="#Task.create_run-594">
                                <span className="linenos">594</span>
                            </a>
                            {"            "}
                            <span className="n">dynamic_key</span>
                            <span className="o">=</span>
                            <span className="nb">str</span>
                            <span className="p">(</span>
                            <span className="n">dynamic_key</span>
                            <span className="p">),</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-595">
                            <a href="#Task.create_run-595">
                                <span className="linenos">595</span>
                            </a>
                            {"            "}
                            <span className="n">state</span>
                            <span className="o">=</span>
                            <span className="n">Pending</span>
                            <span className="p">(),</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-596">
                            <a href="#Task.create_run-596">
                                <span className="linenos">596</span>
                            </a>
                            {"            "}
                            <span className="n">task_inputs</span>
                            <span className="o">=</span>
                            <span className="n">task_inputs</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-597">
                            <a href="#Task.create_run-597">
                                <span className="linenos">597</span>
                            </a>
                            {"            "}
                            <span className="n">extra_tags</span>
                            <span className="o">=</span>
                            <span className="n">TagsContext</span>
                            <span className="o">.</span>
                            <span className="n">get</span>
                            <span className="p">()</span>
                            <span className="o">.</span>
                            <span className="n">current_tags</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-598">
                            <a href="#Task.create_run-598">
                                <span className="linenos">598</span>
                            </a>
                            {"        "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-599">
                            <a href="#Task.create_run-599">
                                <span className="linenos">599</span>
                            </a>
                            {"        "}
                            <span className="c1">
                                # the new engine uses sync clients but old engines use async
                                clients
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-600">
                            <a href="#Task.create_run-600">
                                <span className="linenos">600</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="n">inspect</span>
                            <span className="o">.</span>
                            <span className="n">isawaitable</span>
                            <span className="p">(</span>
                            <span className="n">task_run</span>
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-601">
                            <a href="#Task.create_run-601">
                                <span className="linenos">601</span>
                            </a>
                            {"            "}
                            <span className="n">
                                task_run
                            </span> <span className="o">=</span>{" "}
                            <span className="k">await</span>{" "}
                            <span className="n">task_run</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-602">
                            <a href="#Task.create_run-602">
                                <span className="linenos">602</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-603">
                            <a href="#Task.create_run-603">
                                <span className="linenos">603</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">flow_run_context</span>{" "}
                            <span className="ow">and</span>{" "}
                            <span className="n">flow_run_context</span>
                            <span className="o">.</span>
                            <span className="n">flow_run</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-604">
                            <a href="#Task.create_run-604">
                                <span className="linenos">604</span>
                            </a>
                            {"            "}
                            <span className="n">get_run_logger</span>
                            <span className="p">(</span>
                            <span className="n">flow_run_context</span>
                            <span className="p">)</span>
                            <span className="o">.</span>
                            <span className="n">debug</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-605">
                            <a href="#Task.create_run-605">
                                <span className="linenos">605</span>
                            </a>
                            {"                "}
                            <span className="sa">f</span>
                            <span className="s2">"Created task run </span>
                            <span className="si">{"{"}</span>
                            <span className="n">task_run</span>
                            <span className="o">.</span>
                            <span className="n">name</span>
                            <span className="si">!r{"}"}</span>
                            <span className="s2"> for task </span>
                            <span className="si">{"{"}</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">name</span>
                            <span className="si">!r{"}"}</span>
                            <span className="s2">"</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-606">
                            <a href="#Task.create_run-606">
                                <span className="linenos">606</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-607">
                            <a href="#Task.create_run-607">
                                <span className="linenos">607</span>
                            </a>
                            {"        "}
                            <span className="k">else</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-608">
                            <a href="#Task.create_run-608">
                                <span className="linenos">608</span>
                            </a>
                            {"            "}
                            <span className="n">logger</span>
                            <span className="o">.</span>
                            <span className="n">debug</span>
                            <span className="p">(</span>
                            <span className="sa">f</span>
                            <span className="s2">"Created task run </span>
                            <span className="si">{"{"}</span>
                            <span className="n">task_run</span>
                            <span className="o">.</span>
                            <span className="n">name</span>
                            <span className="si">!r{"}"}</span>
                            <span className="s2"> for task </span>
                            <span className="si">{"{"}</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">name</span>
                            <span className="si">!r{"}"}</span>
                            <span className="s2">"</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-609">
                            <a href="#Task.create_run-609">
                                <span className="linenos">609</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.create_run-610">
                            <a href="#Task.create_run-610">
                                <span className="linenos">610</span>
                            </a>
                            {"        "}
                            <span className="k">return</span>{" "}
                            <span className="n">task_run</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
            </div>
            <div id="Task.submit" className="classattr">
                <input
                    id="Task.submit-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">submit</span>
                    <span className="signature pdoc-code multiline">
                        (
                        <span className="param">
                            <span className="bp">self</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="o">*</span>
                            <span className="n">args</span>
                            <span className="p">:</span> <span className="n">Any</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">return_state</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">False</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">wait_for</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">futures</span>
                            <span className="o">.</span>
                            <span className="n">PrefectFuture</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="o">**</span>
                            <span className="n">kwargs</span>
                            <span className="p">:</span> <span className="n">Any</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">futures</span>
                            <span className="o">.</span>
                            <span className="n">PrefectFuture</span>
                            <span className="p">,</span> <span className="n">Awaitable</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">futures</span>
                            <span className="o">.</span>
                            <span className="n">PrefectFuture</span>
                            <span className="p">],</span> <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">TaskRun</span>
                            <span className="p">,</span> <span className="n">Awaitable</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">client</span>
                            <span className="o">.</span>
                            <span className="n">schemas</span>
                            <span className="o">.</span>
                            <span className="n">objects</span>
                            <span className="o">.</span>
                            <span className="n">TaskRun</span>
                            <span className="p">]]</span>:
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="Task.submit-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#Task.submit" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="Task.submit-800">
                            <a href="#Task.submit-800">
                                <span className="linenos">800</span>
                            </a>
                            {"    "}
                            <span className="k">def</span> <span className="nf">submit</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-801">
                            <a href="#Task.submit-801">
                                <span className="linenos">801</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-802">
                            <a href="#Task.submit-802">
                                <span className="linenos">802</span>
                            </a>
                            {"        "}
                            <span className="o">*</span>
                            <span className="n">args</span>
                            <span className="p">:</span> <span className="n">Any</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-803">
                            <a href="#Task.submit-803">
                                <span className="linenos">803</span>
                            </a>
                            {"        "}
                            <span className="n">return_state</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">False</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-804">
                            <a href="#Task.submit-804">
                                <span className="linenos">804</span>
                            </a>
                            {"        "}
                            <span className="n">wait_for</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="n">PrefectFuture</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-805">
                            <a href="#Task.submit-805">
                                <span className="linenos">805</span>
                            </a>
                            {"        "}
                            <span className="o">**</span>
                            <span className="n">kwargs</span>
                            <span className="p">:</span> <span className="n">Any</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-806">
                            <a href="#Task.submit-806">
                                <span className="linenos">806</span>
                            </a>
                            {"    "}
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="n">Union</span>
                            <span className="p">[</span>
                            <span className="n">PrefectFuture</span>
                            <span className="p">,</span> <span className="n">Awaitable</span>
                            <span className="p">[</span>
                            <span className="n">PrefectFuture</span>
                            <span className="p">],</span> <span className="n">TaskRun</span>
                            <span className="p">,</span> <span className="n">Awaitable</span>
                            <span className="p">[</span>
                            <span className="n">TaskRun</span>
                            <span className="p">]]:</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-807">
                            <a href="#Task.submit-807">
                                <span className="linenos">807</span>
                            </a>
                            <span className="w">{"        "}</span>
                            <span className="sd">"""</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-808">
                            <a href="#Task.submit-808">
                                <span className="linenos">808</span>
                            </a>
                            <span className="sd">
                                {"        "}Submit a run of the task to the engine.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-809">
                            <a href="#Task.submit-809">
                                <span className="linenos">809</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-810">
                            <a href="#Task.submit-810">
                                <span className="linenos">810</span>
                            </a>
                            <span className="sd">
                                {"        "}If writing an async task, this call must be awaited.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-811">
                            <a href="#Task.submit-811">
                                <span className="linenos">811</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-812">
                            <a href="#Task.submit-812">
                                <span className="linenos">812</span>
                            </a>
                            <span className="sd">
                                {"        "}If called from within a flow function,
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-813">
                            <a href="#Task.submit-813">
                                <span className="linenos">813</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-814">
                            <a href="#Task.submit-814">
                                <span className="linenos">814</span>
                            </a>
                            <span className="sd">
                                {"        "}Will create a new task run in the backing API and
                                submit the task to the flow's
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-815">
                            <a href="#Task.submit-815">
                                <span className="linenos">815</span>
                            </a>
                            <span className="sd">
                                {"        "}task runner. This call only blocks execution while
                                the task is being submitted,
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-816">
                            <a href="#Task.submit-816">
                                <span className="linenos">816</span>
                            </a>
                            <span className="sd">
                                {"        "}once it is submitted, the flow function will
                                continue executing. However, note
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-817">
                            <a href="#Task.submit-817">
                                <span className="linenos">817</span>
                            </a>
                            <span className="sd">
                                {"        "}that the `SequentialTaskRunner` does not implement
                                parallel execution for sync tasks
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-818">
                            <a href="#Task.submit-818">
                                <span className="linenos">818</span>
                            </a>
                            <span className="sd">
                                {"        "}and they are fully resolved on submission.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-819">
                            <a href="#Task.submit-819">
                                <span className="linenos">819</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-820">
                            <a href="#Task.submit-820">
                                <span className="linenos">820</span>
                            </a>
                            <span className="sd">{"        "}Args:</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-821">
                            <a href="#Task.submit-821">
                                <span className="linenos">821</span>
                            </a>
                            <span className="sd">
                                {"            "}*args: Arguments to run the task with
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-822">
                            <a href="#Task.submit-822">
                                <span className="linenos">822</span>
                            </a>
                            <span className="sd">
                                {"            "}return_state: Return the result of the flow run
                                wrapped in a
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-823">
                            <a href="#Task.submit-823">
                                <span className="linenos">823</span>
                            </a>
                            <span className="sd">{"                "}Prefect State.</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-824">
                            <a href="#Task.submit-824">
                                <span className="linenos">824</span>
                            </a>
                            <span className="sd">
                                {"            "}wait_for: Upstream task futures to wait for
                                before starting the task
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-825">
                            <a href="#Task.submit-825">
                                <span className="linenos">825</span>
                            </a>
                            <span className="sd">
                                {"            "}**kwargs: Keyword arguments to run the task with
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-826">
                            <a href="#Task.submit-826">
                                <span className="linenos">826</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-827">
                            <a href="#Task.submit-827">
                                <span className="linenos">827</span>
                            </a>
                            <span className="sd">{"        "}Returns:</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-828">
                            <a href="#Task.submit-828">
                                <span className="linenos">828</span>
                            </a>
                            <span className="sd">
                                {"            "}If `return_state` is False a future allowing
                                asynchronous access to
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-829">
                            <a href="#Task.submit-829">
                                <span className="linenos">829</span>
                            </a>
                            <span className="sd">
                                {"                "}the state of the task
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-830">
                            <a href="#Task.submit-830">
                                <span className="linenos">830</span>
                            </a>
                            <span className="sd">
                                {"            "}If `return_state` is True a future wrapped in a
                                Prefect State allowing asynchronous access to
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-831">
                            <a href="#Task.submit-831">
                                <span className="linenos">831</span>
                            </a>
                            <span className="sd">
                                {"                "}the state of the task
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-832">
                            <a href="#Task.submit-832">
                                <span className="linenos">832</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-833">
                            <a href="#Task.submit-833">
                                <span className="linenos">833</span>
                            </a>
                            <span className="sd">{"        "}Examples:</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-834">
                            <a href="#Task.submit-834">
                                <span className="linenos">834</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-835">
                            <a href="#Task.submit-835">
                                <span className="linenos">835</span>
                            </a>
                            <span className="sd">{"            "}Define a task</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-836">
                            <a href="#Task.submit-836">
                                <span className="linenos">836</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-837">
                            <a href="#Task.submit-837">
                                <span className="linenos">837</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; from prefect import task
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-838">
                            <a href="#Task.submit-838">
                                <span className="linenos">838</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-839">
                            <a href="#Task.submit-839">
                                <span className="linenos">839</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_task():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-840">
                            <a href="#Task.submit-840">
                                <span className="linenos">840</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}return "hello"
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-841">
                            <a href="#Task.submit-841">
                                <span className="linenos">841</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-842">
                            <a href="#Task.submit-842">
                                <span className="linenos">842</span>
                            </a>
                            <span className="sd">{"            "}Run a task in a flow</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-843">
                            <a href="#Task.submit-843">
                                <span className="linenos">843</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-844">
                            <a href="#Task.submit-844">
                                <span className="linenos">844</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; from prefect import flow
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-845">
                            <a href="#Task.submit-845">
                                <span className="linenos">845</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-846">
                            <a href="#Task.submit-846">
                                <span className="linenos">846</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-847">
                            <a href="#Task.submit-847">
                                <span className="linenos">847</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}my_task.submit()
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-848">
                            <a href="#Task.submit-848">
                                <span className="linenos">848</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-849">
                            <a href="#Task.submit-849">
                                <span className="linenos">849</span>
                            </a>
                            <span className="sd">
                                {"            "}Wait for a task to finish
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-850">
                            <a href="#Task.submit-850">
                                <span className="linenos">850</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-851">
                            <a href="#Task.submit-851">
                                <span className="linenos">851</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-852">
                            <a href="#Task.submit-852">
                                <span className="linenos">852</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-853">
                            <a href="#Task.submit-853">
                                <span className="linenos">853</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}my_task.submit().wait()
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-854">
                            <a href="#Task.submit-854">
                                <span className="linenos">854</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-855">
                            <a href="#Task.submit-855">
                                <span className="linenos">855</span>
                            </a>
                            <span className="sd">
                                {"            "}Use the result from a task in a flow
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-856">
                            <a href="#Task.submit-856">
                                <span className="linenos">856</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-857">
                            <a href="#Task.submit-857">
                                <span className="linenos">857</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-858">
                            <a href="#Task.submit-858">
                                <span className="linenos">858</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-859">
                            <a href="#Task.submit-859">
                                <span className="linenos">859</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}
                                print(my_task.submit().result())
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-860">
                            <a href="#Task.submit-860">
                                <span className="linenos">860</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-861">
                            <a href="#Task.submit-861">
                                <span className="linenos">861</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; my_flow()</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-862">
                            <a href="#Task.submit-862">
                                <span className="linenos">862</span>
                            </a>
                            <span className="sd">{"            "}hello</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-863">
                            <a href="#Task.submit-863">
                                <span className="linenos">863</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-864">
                            <a href="#Task.submit-864">
                                <span className="linenos">864</span>
                            </a>
                            <span className="sd">
                                {"            "}Run an async task in an async flow
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-865">
                            <a href="#Task.submit-865">
                                <span className="linenos">865</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-866">
                            <a href="#Task.submit-866">
                                <span className="linenos">866</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-867">
                            <a href="#Task.submit-867">
                                <span className="linenos">867</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; async def my_async_task():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-868">
                            <a href="#Task.submit-868">
                                <span className="linenos">868</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}pass
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-869">
                            <a href="#Task.submit-869">
                                <span className="linenos">869</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-870">
                            <a href="#Task.submit-870">
                                <span className="linenos">870</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-871">
                            <a href="#Task.submit-871">
                                <span className="linenos">871</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; async def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-872">
                            <a href="#Task.submit-872">
                                <span className="linenos">872</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}await
                                my_async_task.submit()
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-873">
                            <a href="#Task.submit-873">
                                <span className="linenos">873</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-874">
                            <a href="#Task.submit-874">
                                <span className="linenos">874</span>
                            </a>
                            <span className="sd">
                                {"            "}Run a sync task in an async flow
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-875">
                            <a href="#Task.submit-875">
                                <span className="linenos">875</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-876">
                            <a href="#Task.submit-876">
                                <span className="linenos">876</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-877">
                            <a href="#Task.submit-877">
                                <span className="linenos">877</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; async def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-878">
                            <a href="#Task.submit-878">
                                <span className="linenos">878</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}my_task.submit()
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-879">
                            <a href="#Task.submit-879">
                                <span className="linenos">879</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-880">
                            <a href="#Task.submit-880">
                                <span className="linenos">880</span>
                            </a>
                            <span className="sd">
                                {"            "}Enforce ordering between tasks that do not
                                exchange data
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-881">
                            <a href="#Task.submit-881">
                                <span className="linenos">881</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-882">
                            <a href="#Task.submit-882">
                                <span className="linenos">882</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def task_1():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-883">
                            <a href="#Task.submit-883">
                                <span className="linenos">883</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}pass
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-884">
                            <a href="#Task.submit-884">
                                <span className="linenos">884</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-885">
                            <a href="#Task.submit-885">
                                <span className="linenos">885</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-886">
                            <a href="#Task.submit-886">
                                <span className="linenos">886</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def task_2():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-887">
                            <a href="#Task.submit-887">
                                <span className="linenos">887</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}pass
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-888">
                            <a href="#Task.submit-888">
                                <span className="linenos">888</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-889">
                            <a href="#Task.submit-889">
                                <span className="linenos">889</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-890">
                            <a href="#Task.submit-890">
                                <span className="linenos">890</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-891">
                            <a href="#Task.submit-891">
                                <span className="linenos">891</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}x = task_1.submit()
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-892">
                            <a href="#Task.submit-892">
                                <span className="linenos">892</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-893">
                            <a href="#Task.submit-893">
                                <span className="linenos">893</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}# task 2 will wait for
                                task_1 to complete
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-894">
                            <a href="#Task.submit-894">
                                <span className="linenos">894</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}y =
                                task_2.submit(wait_for=[x])
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-895">
                            <a href="#Task.submit-895">
                                <span className="linenos">895</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-896">
                            <a href="#Task.submit-896">
                                <span className="linenos">896</span>
                            </a>
                            <span className="sd">{"        "}"""</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-897">
                            <a href="#Task.submit-897">
                                <span className="linenos">897</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-898">
                            <a href="#Task.submit-898">
                                <span className="linenos">898</span>
                            </a>
                            {"        "}
                            <span className="kn">from</span>{" "}
                            <span className="nn">prefect.engine</span>{" "}
                            <span className="kn">import</span>{" "}
                            <span className="n">create_autonomous_task_run</span>
                            <span className="p">,</span>{" "}
                            <span className="n">enter_task_run_engine</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-899">
                            <a href="#Task.submit-899">
                                <span className="linenos">899</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-900">
                            <a href="#Task.submit-900">
                                <span className="linenos">900</span>
                            </a>
                            {"        "}
                            <span className="c1">
                                # Convert the call args/kwargs to a parameter dict
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-901">
                            <a href="#Task.submit-901">
                                <span className="linenos">901</span>
                            </a>
                            {"        "}
                            <span className="n">
                                parameters
                            </span> <span className="o">=</span>{" "}
                            <span className="n">get_call_parameters</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">,</span> <span className="n">args</span>
                            <span className="p">,</span> <span className="n">kwargs</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-902">
                            <a href="#Task.submit-902">
                                <span className="linenos">902</span>
                            </a>
                            {"        "}
                            <span className="n">return_type</span>{" "}
                            <span className="o">=</span> <span className="s2">"state"</span>{" "}
                            <span className="k">if</span>{" "}
                            <span className="n">return_state</span>{" "}
                            <span className="k">else</span>{" "}
                            <span className="s2">"future"</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-903">
                            <a href="#Task.submit-903">
                                <span className="linenos">903</span>
                            </a>
                            {"        "}
                            <span className="n">flow_run_context</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">FlowRunContext</span>
                            <span className="o">.</span>
                            <span className="n">get</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-904">
                            <a href="#Task.submit-904">
                                <span className="linenos">904</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-905">
                            <a href="#Task.submit-905">
                                <span className="linenos">905</span>
                            </a>
                            {"        "}
                            <span className="n">task_viz_tracker</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">get_task_viz_tracker</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-906">
                            <a href="#Task.submit-906">
                                <span className="linenos">906</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">task_viz_tracker</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-907">
                            <a href="#Task.submit-907">
                                <span className="linenos">907</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>{" "}
                            <span className="n">VisualizationUnsupportedError</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-908">
                            <a href="#Task.submit-908">
                                <span className="linenos">908</span>
                            </a>
                            {"                "}
                            <span className="s2">
                                "`task.submit()` is not currently supported by
                                `flow.visualize()`"
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-909">
                            <a href="#Task.submit-909">
                                <span className="linenos">909</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-910">
                            <a href="#Task.submit-910">
                                <span className="linenos">910</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-911">
                            <a href="#Task.submit-911">
                                <span className="linenos">911</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">
                                PREFECT_EXPERIMENTAL_ENABLE_TASK_SCHEDULING
                            </span>{" "}
                            <span className="ow">and</span> <span className="ow">not</span>{" "}
                            <span className="n">flow_run_context</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-912">
                            <a href="#Task.submit-912">
                                <span className="linenos">912</span>
                            </a>
                            {"            "}
                            <span className="n">create_autonomous_task_run_call</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">create_call</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-913">
                            <a href="#Task.submit-913">
                                <span className="linenos">913</span>
                            </a>
                            {"                "}
                            <span className="n">create_autonomous_task_run</span>
                            <span className="p">,</span> <span className="n">task</span>
                            <span className="o">=</span>
                            <span className="bp">self</span>
                            <span className="p">,</span> <span className="n">parameters</span>
                            <span className="o">=</span>
                            <span className="n">parameters</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-914">
                            <a href="#Task.submit-914">
                                <span className="linenos">914</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-915">
                            <a href="#Task.submit-915">
                                <span className="linenos">915</span>
                            </a>
                            {"            "}
                            <span className="k">if</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">isasync</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-916">
                            <a href="#Task.submit-916">
                                <span className="linenos">916</span>
                            </a>
                            {"                "}
                            <span className="k">return</span>{" "}
                            <span className="n">from_async</span>
                            <span className="o">.</span>
                            <span className="n">wait_for_call_in_loop_thread</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-917">
                            <a href="#Task.submit-917">
                                <span className="linenos">917</span>
                            </a>
                            {"                    "}
                            <span className="n">create_autonomous_task_run_call</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-918">
                            <a href="#Task.submit-918">
                                <span className="linenos">918</span>
                            </a>
                            {"                "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-919">
                            <a href="#Task.submit-919">
                                <span className="linenos">919</span>
                            </a>
                            {"            "}
                            <span className="k">else</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-920">
                            <a href="#Task.submit-920">
                                <span className="linenos">920</span>
                            </a>
                            {"                "}
                            <span className="k">return</span>{" "}
                            <span className="n">from_sync</span>
                            <span className="o">.</span>
                            <span className="n">wait_for_call_in_loop_thread</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-921">
                            <a href="#Task.submit-921">
                                <span className="linenos">921</span>
                            </a>
                            {"                    "}
                            <span className="n">create_autonomous_task_run_call</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-922">
                            <a href="#Task.submit-922">
                                <span className="linenos">922</span>
                            </a>
                            {"                "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-923">
                            <a href="#Task.submit-923">
                                <span className="linenos">923</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">PREFECT_EXPERIMENTAL_ENABLE_NEW_ENGINE</span>{" "}
                            <span className="ow">and</span>{" "}
                            <span className="n">flow_run_context</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-924">
                            <a href="#Task.submit-924">
                                <span className="linenos">924</span>
                            </a>
                            {"            "}
                            <span className="k">if</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">isasync</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-925">
                            <a href="#Task.submit-925">
                                <span className="linenos">925</span>
                            </a>
                            {"                "}
                            <span className="k">return</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">_submit_async</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-926">
                            <a href="#Task.submit-926">
                                <span className="linenos">926</span>
                            </a>
                            {"                    "}
                            <span className="n">parameters</span>
                            <span className="o">=</span>
                            <span className="n">parameters</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-927">
                            <a href="#Task.submit-927">
                                <span className="linenos">927</span>
                            </a>
                            {"                    "}
                            <span className="n">flow_run_context</span>
                            <span className="o">=</span>
                            <span className="n">flow_run_context</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-928">
                            <a href="#Task.submit-928">
                                <span className="linenos">928</span>
                            </a>
                            {"                    "}
                            <span className="n">wait_for</span>
                            <span className="o">=</span>
                            <span className="n">wait_for</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-929">
                            <a href="#Task.submit-929">
                                <span className="linenos">929</span>
                            </a>
                            {"                    "}
                            <span className="n">return_state</span>
                            <span className="o">=</span>
                            <span className="n">return_state</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-930">
                            <a href="#Task.submit-930">
                                <span className="linenos">930</span>
                            </a>
                            {"                "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-931">
                            <a href="#Task.submit-931">
                                <span className="linenos">931</span>
                            </a>
                            {"            "}
                            <span className="k">else</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-932">
                            <a href="#Task.submit-932">
                                <span className="linenos">932</span>
                            </a>
                            {"                "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">NotImplementedError</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-933">
                            <a href="#Task.submit-933">
                                <span className="linenos">933</span>
                            </a>
                            {"                    "}
                            <span className="s2">
                                "Submitting sync tasks with the new engine has not be
                                implemented yet."
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-934">
                            <a href="#Task.submit-934">
                                <span className="linenos">934</span>
                            </a>
                            {"                "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-935">
                            <a href="#Task.submit-935">
                                <span className="linenos">935</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.submit-936">
                            <a href="#Task.submit-936">
                                <span className="linenos">936</span>
                            </a>
                            {"        "}
                            <span className="k">else</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-937">
                            <a href="#Task.submit-937">
                                <span className="linenos">937</span>
                            </a>
                            {"            "}
                            <span className="k">return</span>{" "}
                            <span className="n">enter_task_run_engine</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-938">
                            <a href="#Task.submit-938">
                                <span className="linenos">938</span>
                            </a>
                            {"                "}
                            <span className="bp">self</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-939">
                            <a href="#Task.submit-939">
                                <span className="linenos">939</span>
                            </a>
                            {"                "}
                            <span className="n">parameters</span>
                            <span className="o">=</span>
                            <span className="n">parameters</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-940">
                            <a href="#Task.submit-940">
                                <span className="linenos">940</span>
                            </a>
                            {"                "}
                            <span className="n">wait_for</span>
                            <span className="o">=</span>
                            <span className="n">wait_for</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-941">
                            <a href="#Task.submit-941">
                                <span className="linenos">941</span>
                            </a>
                            {"                "}
                            <span className="n">return_type</span>
                            <span className="o">=</span>
                            <span className="n">return_type</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-942">
                            <a href="#Task.submit-942">
                                <span className="linenos">942</span>
                            </a>
                            {"                "}
                            <span className="n">task_runner</span>
                            <span className="o">=</span>
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"  "}
                            <span className="c1"># Use the flow's task runner</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-943">
                            <a href="#Task.submit-943">
                                <span className="linenos">943</span>
                            </a>
                            {"                "}
                            <span className="n">mapped</span>
                            <span className="o">=</span>
                            <span className="kc">False</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.submit-944">
                            <a href="#Task.submit-944">
                                <span className="linenos">944</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
                <div className="docstring">
                    <p>Submit a run of the task to the engine.</p>
                    <p>If writing an async task, this call must be awaited.</p>
                    <p>If called from within a flow function,</p>
                    <p>
                        Will create a new task run in the backing API and submit the task to
                        the flow's task runner. This call only blocks execution while the
                        task is being submitted, once it is submitted, the flow function
                        will continue executing. However, note that the{" "}
                        <code>SequentialTaskRunner</code> does not implement parallel
                        execution for sync tasks and they are fully resolved on submission.
                    </p>
                    <p>
                        Args:
                        <em>
                            args: Arguments to run the task with return_state: Return the
                            result of the flow run wrapped in a Prefect State. wait_for:
                            Upstream task futures to wait for before starting the task *
                        </em>
                        kwargs: Keyword arguments to run the task with
                    </p>
                    <p>
                        Returns: If <code>return_state</code> is False a future allowing
                        asynchronous access to the state of the task If{" "}
                        <code>return_state</code> is True a future wrapped in a Prefect
                        State allowing asynchronous access to the state of the task
                    </p>
                    <p>Examples:</p>
                    <pre>
                        <code>
                            Define a task{"\n"}
                            {"\n"}&gt;&gt;&gt; from prefect import task{"\n"}&gt;&gt;&gt;
                            @task{"\n"}&gt;&gt;&gt; def my_task():{"\n"}&gt;&gt;&gt;{"     "}
                            return "hello"{"\n"}
                            {"\n"}Run a task in a flow{"\n"}
                            {"\n"}&gt;&gt;&gt; from prefect import flow{"\n"}&gt;&gt;&gt;
                            @flow{"\n"}&gt;&gt;&gt; def my_flow():{"\n"}&gt;&gt;&gt;{"     "}
                            my_task.submit(){"\n"}
                            {"\n"}Wait for a task to finish{"\n"}
                            {"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; def my_flow():{"\n"}
                            &gt;&gt;&gt;{"     "}my_task.submit().wait(){"\n"}
                            {"\n"}Use the result from a task in a flow{"\n"}
                            {"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; def my_flow():{"\n"}
                            &gt;&gt;&gt;{"     "}print(my_task.submit().result()){"\n"}
                            &gt;&gt;&gt;{"\n"}&gt;&gt;&gt; my_flow(){"\n"}hello{"\n"}
                            {"\n"}Run an async task in an async flow{"\n"}
                            {"\n"}&gt;&gt;&gt; @task{"\n"}&gt;&gt;&gt; async def
                            my_async_task():{"\n"}&gt;&gt;&gt;{"     "}pass{"\n"}&gt;&gt;&gt;
                            {"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; async def my_flow():
                            {"\n"}&gt;&gt;&gt;{"     "}await my_async_task.submit(){"\n"}
                            {"\n"}Run a sync task in an async flow{"\n"}
                            {"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; async def my_flow():
                            {"\n"}&gt;&gt;&gt;{"     "}my_task.submit(){"\n"}
                            {"\n"}Enforce ordering between tasks that do not exchange data
                            {"\n"}&gt;&gt;&gt; @task{"\n"}&gt;&gt;&gt; def task_1():{"\n"}
                            &gt;&gt;&gt;{"     "}pass{"\n"}&gt;&gt;&gt;{"\n"}&gt;&gt;&gt;
                            @task{"\n"}&gt;&gt;&gt; def task_2():{"\n"}&gt;&gt;&gt;{"     "}
                            pass{"\n"}&gt;&gt;&gt;{"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt;
                            def my_flow():{"\n"}&gt;&gt;&gt;{"     "}x = task_1.submit(){"\n"}
                            &gt;&gt;&gt;{"\n"}&gt;&gt;&gt;{"     "}# task 2 will wait for
                            task_1 to complete{"\n"}&gt;&gt;&gt;{"     "}y =
                            task_2.submit(wait_for=[x]){"\n"}
                        </code>
                    </pre>
                </div>
            </div>
            <div id="Task.map" className="classattr">
                <input
                    id="Task.map-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">map</span>
                    <span className="signature pdoc-code multiline">
                        (
                        <span className="param">
                            {" "}
                            <span className="bp">self</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="o">*</span>
                            <span className="n">args</span>
                            <span className="p">:</span> <span className="n">Any</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">return_state</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">False</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">wait_for</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">futures</span>
                            <span className="o">.</span>
                            <span className="n">PrefectFuture</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="o">**</span>
                            <span className="n">kwargs</span>
                            <span className="p">:</span> <span className="n">Any</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt; <span className="n">Any</span>:
                        </span>
                    </span>
                    <label className="view-source-button" htmlFor="Task.map-view-source">
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#Task.map" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="Task.map-1027">
                            <a href="#Task.map-1027">
                                <span className="linenos">1027</span>
                            </a>
                            {"    "}
                            <span className="k">def</span> <span className="nf">map</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1028">
                            <a href="#Task.map-1028">
                                <span className="linenos">1028</span>
                            </a>
                            {"        "}
                            <span className="bp">self</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1029">
                            <a href="#Task.map-1029">
                                <span className="linenos">1029</span>
                            </a>
                            {"        "}
                            <span className="o">*</span>
                            <span className="n">args</span>
                            <span className="p">:</span> <span className="n">Any</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1030">
                            <a href="#Task.map-1030">
                                <span className="linenos">1030</span>
                            </a>
                            {"        "}
                            <span className="n">return_state</span>
                            <span className="p">:</span> <span className="nb">bool</span>{" "}
                            <span className="o">=</span> <span className="kc">False</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1031">
                            <a href="#Task.map-1031">
                                <span className="linenos">1031</span>
                            </a>
                            {"        "}
                            <span className="n">wait_for</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">Iterable</span>
                            <span className="p">[</span>
                            <span className="n">PrefectFuture</span>
                            <span className="p">]]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1032">
                            <a href="#Task.map-1032">
                                <span className="linenos">1032</span>
                            </a>
                            {"        "}
                            <span className="o">**</span>
                            <span className="n">kwargs</span>
                            <span className="p">:</span> <span className="n">Any</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1033">
                            <a href="#Task.map-1033">
                                <span className="linenos">1033</span>
                            </a>
                            {"    "}
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="n">Any</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1034">
                            <a href="#Task.map-1034">
                                <span className="linenos">1034</span>
                            </a>
                            <span className="w">{"        "}</span>
                            <span className="sd">"""</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1035">
                            <a href="#Task.map-1035">
                                <span className="linenos">1035</span>
                            </a>
                            <span className="sd">
                                {"        "}Submit a mapped run of the task to a worker.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1036">
                            <a href="#Task.map-1036">
                                <span className="linenos">1036</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1037">
                            <a href="#Task.map-1037">
                                <span className="linenos">1037</span>
                            </a>
                            <span className="sd">
                                {"        "}Must be called within a flow function. If writing an
                                async task, this
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1038">
                            <a href="#Task.map-1038">
                                <span className="linenos">1038</span>
                            </a>
                            <span className="sd">{"        "}call must be awaited.</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1039">
                            <a href="#Task.map-1039">
                                <span className="linenos">1039</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1040">
                            <a href="#Task.map-1040">
                                <span className="linenos">1040</span>
                            </a>
                            <span className="sd">
                                {"        "}Must be called with at least one iterable and all
                                iterables must be
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1041">
                            <a href="#Task.map-1041">
                                <span className="linenos">1041</span>
                            </a>
                            <span className="sd">
                                {"        "}the same length. Any arguments that are not iterable
                                will be treated as
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1042">
                            <a href="#Task.map-1042">
                                <span className="linenos">1042</span>
                            </a>
                            <span className="sd">
                                {"        "}a static value and each task run will receive the
                                same value.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1043">
                            <a href="#Task.map-1043">
                                <span className="linenos">1043</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1044">
                            <a href="#Task.map-1044">
                                <span className="linenos">1044</span>
                            </a>
                            <span className="sd">
                                {"        "}Will create as many task runs as the length of the
                                iterable(s) in the
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1045">
                            <a href="#Task.map-1045">
                                <span className="linenos">1045</span>
                            </a>
                            <span className="sd">
                                {"        "}backing API and submit the task runs to the flow's
                                task runner. This
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1046">
                            <a href="#Task.map-1046">
                                <span className="linenos">1046</span>
                            </a>
                            <span className="sd">
                                {"        "}call blocks if given a future as input while the
                                future is resolved. It
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1047">
                            <a href="#Task.map-1047">
                                <span className="linenos">1047</span>
                            </a>
                            <span className="sd">
                                {"        "}also blocks while the tasks are being submitted,
                                once they are
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1048">
                            <a href="#Task.map-1048">
                                <span className="linenos">1048</span>
                            </a>
                            <span className="sd">
                                {"        "}submitted, the flow function will continue
                                executing. However, note
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1049">
                            <a href="#Task.map-1049">
                                <span className="linenos">1049</span>
                            </a>
                            <span className="sd">
                                {"        "}that the `SequentialTaskRunner` does not implement
                                parallel execution
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1050">
                            <a href="#Task.map-1050">
                                <span className="linenos">1050</span>
                            </a>
                            <span className="sd">
                                {"        "}for sync tasks and they are fully resolved on
                                submission.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1051">
                            <a href="#Task.map-1051">
                                <span className="linenos">1051</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1052">
                            <a href="#Task.map-1052">
                                <span className="linenos">1052</span>
                            </a>
                            <span className="sd">{"        "}Args:</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1053">
                            <a href="#Task.map-1053">
                                <span className="linenos">1053</span>
                            </a>
                            <span className="sd">
                                {"            "}*args: Iterable and static arguments to run the
                                tasks with
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1054">
                            <a href="#Task.map-1054">
                                <span className="linenos">1054</span>
                            </a>
                            <span className="sd">
                                {"            "}return_state: Return a list of Prefect States
                                that wrap the results
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1055">
                            <a href="#Task.map-1055">
                                <span className="linenos">1055</span>
                            </a>
                            <span className="sd">{"                "}of each task run.</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1056">
                            <a href="#Task.map-1056">
                                <span className="linenos">1056</span>
                            </a>
                            <span className="sd">
                                {"            "}wait_for: Upstream task futures to wait for
                                before starting the
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1057">
                            <a href="#Task.map-1057">
                                <span className="linenos">1057</span>
                            </a>
                            <span className="sd">{"                "}task</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1058">
                            <a href="#Task.map-1058">
                                <span className="linenos">1058</span>
                            </a>
                            <span className="sd">
                                {"            "}**kwargs: Keyword iterable arguments to run the
                                task with
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1059">
                            <a href="#Task.map-1059">
                                <span className="linenos">1059</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1060">
                            <a href="#Task.map-1060">
                                <span className="linenos">1060</span>
                            </a>
                            <span className="sd">{"        "}Returns:</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1061">
                            <a href="#Task.map-1061">
                                <span className="linenos">1061</span>
                            </a>
                            <span className="sd">
                                {"            "}A list of futures allowing asynchronous access
                                to the state of the
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1062">
                            <a href="#Task.map-1062">
                                <span className="linenos">1062</span>
                            </a>
                            <span className="sd">{"            "}tasks</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1063">
                            <a href="#Task.map-1063">
                                <span className="linenos">1063</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1064">
                            <a href="#Task.map-1064">
                                <span className="linenos">1064</span>
                            </a>
                            <span className="sd">{"        "}Examples:</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1065">
                            <a href="#Task.map-1065">
                                <span className="linenos">1065</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1066">
                            <a href="#Task.map-1066">
                                <span className="linenos">1066</span>
                            </a>
                            <span className="sd">{"            "}Define a task</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1067">
                            <a href="#Task.map-1067">
                                <span className="linenos">1067</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1068">
                            <a href="#Task.map-1068">
                                <span className="linenos">1068</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; from prefect import task
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1069">
                            <a href="#Task.map-1069">
                                <span className="linenos">1069</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1070">
                            <a href="#Task.map-1070">
                                <span className="linenos">1070</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_task(x):
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1071">
                            <a href="#Task.map-1071">
                                <span className="linenos">1071</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}return x + 1
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1072">
                            <a href="#Task.map-1072">
                                <span className="linenos">1072</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1073">
                            <a href="#Task.map-1073">
                                <span className="linenos">1073</span>
                            </a>
                            <span className="sd">{"            "}Create mapped tasks</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1074">
                            <a href="#Task.map-1074">
                                <span className="linenos">1074</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1075">
                            <a href="#Task.map-1075">
                                <span className="linenos">1075</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; from prefect import flow
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1076">
                            <a href="#Task.map-1076">
                                <span className="linenos">1076</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1077">
                            <a href="#Task.map-1077">
                                <span className="linenos">1077</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1078">
                            <a href="#Task.map-1078">
                                <span className="linenos">1078</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}my_task.map([1, 2, 3])
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1079">
                            <a href="#Task.map-1079">
                                <span className="linenos">1079</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1080">
                            <a href="#Task.map-1080">
                                <span className="linenos">1080</span>
                            </a>
                            <span className="sd">
                                {"            "}Wait for all mapped tasks to finish
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1081">
                            <a href="#Task.map-1081">
                                <span className="linenos">1081</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1082">
                            <a href="#Task.map-1082">
                                <span className="linenos">1082</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1083">
                            <a href="#Task.map-1083">
                                <span className="linenos">1083</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1084">
                            <a href="#Task.map-1084">
                                <span className="linenos">1084</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}futures = my_task.map([1,
                                2, 3])
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1085">
                            <a href="#Task.map-1085">
                                <span className="linenos">1085</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}for future in futures:
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1086">
                            <a href="#Task.map-1086">
                                <span className="linenos">1086</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"         "}future.wait()
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1087">
                            <a href="#Task.map-1087">
                                <span className="linenos">1087</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}# Now all of the mapped
                                tasks have finished
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1088">
                            <a href="#Task.map-1088">
                                <span className="linenos">1088</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}my_task(10)
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1089">
                            <a href="#Task.map-1089">
                                <span className="linenos">1089</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1090">
                            <a href="#Task.map-1090">
                                <span className="linenos">1090</span>
                            </a>
                            <span className="sd">
                                {"            "}Use the result from mapped tasks in a flow
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1091">
                            <a href="#Task.map-1091">
                                <span className="linenos">1091</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1092">
                            <a href="#Task.map-1092">
                                <span className="linenos">1092</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1093">
                            <a href="#Task.map-1093">
                                <span className="linenos">1093</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1094">
                            <a href="#Task.map-1094">
                                <span className="linenos">1094</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}futures = my_task.map([1,
                                2, 3])
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1095">
                            <a href="#Task.map-1095">
                                <span className="linenos">1095</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}for future in futures:
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1096">
                            <a href="#Task.map-1096">
                                <span className="linenos">1096</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"         "}print(future.result())
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1097">
                            <a href="#Task.map-1097">
                                <span className="linenos">1097</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; my_flow()</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1098">
                            <a href="#Task.map-1098">
                                <span className="linenos">1098</span>
                            </a>
                            <span className="sd">{"            "}2</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1099">
                            <a href="#Task.map-1099">
                                <span className="linenos">1099</span>
                            </a>
                            <span className="sd">{"            "}3</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1100">
                            <a href="#Task.map-1100">
                                <span className="linenos">1100</span>
                            </a>
                            <span className="sd">{"            "}4</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1101">
                            <a href="#Task.map-1101">
                                <span className="linenos">1101</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1102">
                            <a href="#Task.map-1102">
                                <span className="linenos">1102</span>
                            </a>
                            <span className="sd">
                                {"            "}Enforce ordering between tasks that do not
                                exchange data
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1103">
                            <a href="#Task.map-1103">
                                <span className="linenos">1103</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1104">
                            <a href="#Task.map-1104">
                                <span className="linenos">1104</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def task_1(x):
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1105">
                            <a href="#Task.map-1105">
                                <span className="linenos">1105</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}pass
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1106">
                            <a href="#Task.map-1106">
                                <span className="linenos">1106</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1107">
                            <a href="#Task.map-1107">
                                <span className="linenos">1107</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1108">
                            <a href="#Task.map-1108">
                                <span className="linenos">1108</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def task_2(y):
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1109">
                            <a href="#Task.map-1109">
                                <span className="linenos">1109</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}pass
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1110">
                            <a href="#Task.map-1110">
                                <span className="linenos">1110</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1111">
                            <a href="#Task.map-1111">
                                <span className="linenos">1111</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1112">
                            <a href="#Task.map-1112">
                                <span className="linenos">1112</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1113">
                            <a href="#Task.map-1113">
                                <span className="linenos">1113</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}x = task_1.submit()
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1114">
                            <a href="#Task.map-1114">
                                <span className="linenos">1114</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1115">
                            <a href="#Task.map-1115">
                                <span className="linenos">1115</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}# task 2 will wait for
                                task_1 to complete
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1116">
                            <a href="#Task.map-1116">
                                <span className="linenos">1116</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}y = task_2.map([1, 2, 3],
                                wait_for=[x])
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1117">
                            <a href="#Task.map-1117">
                                <span className="linenos">1117</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1118">
                            <a href="#Task.map-1118">
                                <span className="linenos">1118</span>
                            </a>
                            <span className="sd">
                                {"            "}Use a non-iterable input as a constant across
                                mapped tasks
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1119">
                            <a href="#Task.map-1119">
                                <span className="linenos">1119</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1120">
                            <a href="#Task.map-1120">
                                <span className="linenos">1120</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def display(prefix, item):
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1121">
                            <a href="#Task.map-1121">
                                <span className="linenos">1121</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"    "}print(prefix, item)
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1122">
                            <a href="#Task.map-1122">
                                <span className="linenos">1122</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1123">
                            <a href="#Task.map-1123">
                                <span className="linenos">1123</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1124">
                            <a href="#Task.map-1124">
                                <span className="linenos">1124</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1125">
                            <a href="#Task.map-1125">
                                <span className="linenos">1125</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}display.map("Check it out:
                                ", [1, 2, 3])
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1126">
                            <a href="#Task.map-1126">
                                <span className="linenos">1126</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1127">
                            <a href="#Task.map-1127">
                                <span className="linenos">1127</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; my_flow()</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1128">
                            <a href="#Task.map-1128">
                                <span className="linenos">1128</span>
                            </a>
                            <span className="sd">{"            "}Check it out: 1</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1129">
                            <a href="#Task.map-1129">
                                <span className="linenos">1129</span>
                            </a>
                            <span className="sd">{"            "}Check it out: 2</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1130">
                            <a href="#Task.map-1130">
                                <span className="linenos">1130</span>
                            </a>
                            <span className="sd">{"            "}Check it out: 3</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1131">
                            <a href="#Task.map-1131">
                                <span className="linenos">1131</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1132">
                            <a href="#Task.map-1132">
                                <span className="linenos">1132</span>
                            </a>
                            <span className="sd">
                                {"            "}Use `unmapped` to treat an iterable argument as
                                a constant
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1133">
                            <a href="#Task.map-1133">
                                <span className="linenos">1133</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; from prefect import unmapped
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1134">
                            <a href="#Task.map-1134">
                                <span className="linenos">1134</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1135">
                            <a href="#Task.map-1135">
                                <span className="linenos">1135</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1136">
                            <a href="#Task.map-1136">
                                <span className="linenos">1136</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def add_n_to_items(items, n):
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1137">
                            <a href="#Task.map-1137">
                                <span className="linenos">1137</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}return [item + n for item
                                in items]
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1138">
                            <a href="#Task.map-1138">
                                <span className="linenos">1138</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1139">
                            <a href="#Task.map-1139">
                                <span className="linenos">1139</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @flow</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1140">
                            <a href="#Task.map-1140">
                                <span className="linenos">1140</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_flow():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1141">
                            <a href="#Task.map-1141">
                                <span className="linenos">1141</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}return
                                add_n_to_items.map(unmapped([10, 20]), n=[1, 2, 3])
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1142">
                            <a href="#Task.map-1142">
                                <span className="linenos">1142</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt;</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1143">
                            <a href="#Task.map-1143">
                                <span className="linenos">1143</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; my_flow()</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1144">
                            <a href="#Task.map-1144">
                                <span className="linenos">1144</span>
                            </a>
                            <span className="sd">
                                {"            "}[[11, 21], [12, 22], [13, 23]]
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1145">
                            <a href="#Task.map-1145">
                                <span className="linenos">1145</span>
                            </a>
                            <span className="sd">{"        "}"""</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1146">
                            <a href="#Task.map-1146">
                                <span className="linenos">1146</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1147">
                            <a href="#Task.map-1147">
                                <span className="linenos">1147</span>
                            </a>
                            {"        "}
                            <span className="kn">from</span>{" "}
                            <span className="nn">prefect.engine</span>{" "}
                            <span className="kn">import</span>{" "}
                            <span className="n">begin_task_map</span>
                            <span className="p">,</span>{" "}
                            <span className="n">enter_task_run_engine</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1148">
                            <a href="#Task.map-1148">
                                <span className="linenos">1148</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1149">
                            <a href="#Task.map-1149">
                                <span className="linenos">1149</span>
                            </a>
                            {"        "}
                            <span className="c1">
                                # Convert the call args/kwargs to a parameter dict; do not apply
                                defaults
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1150">
                            <a href="#Task.map-1150">
                                <span className="linenos">1150</span>
                            </a>
                            {"        "}
                            <span className="c1"># since they should not be mapped over</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1151">
                            <a href="#Task.map-1151">
                                <span className="linenos">1151</span>
                            </a>
                            {"        "}
                            <span className="n">
                                parameters
                            </span> <span className="o">=</span>{" "}
                            <span className="n">get_call_parameters</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">fn</span>
                            <span className="p">,</span> <span className="n">args</span>
                            <span className="p">,</span> <span className="n">kwargs</span>
                            <span className="p">,</span>{" "}
                            <span className="n">apply_defaults</span>
                            <span className="o">=</span>
                            <span className="kc">False</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1152">
                            <a href="#Task.map-1152">
                                <span className="linenos">1152</span>
                            </a>
                            {"        "}
                            <span className="n">return_type</span>{" "}
                            <span className="o">=</span> <span className="s2">"state"</span>{" "}
                            <span className="k">if</span>{" "}
                            <span className="n">return_state</span>{" "}
                            <span className="k">else</span>{" "}
                            <span className="s2">"future"</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1153">
                            <a href="#Task.map-1153">
                                <span className="linenos">1153</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1154">
                            <a href="#Task.map-1154">
                                <span className="linenos">1154</span>
                            </a>
                            {"        "}
                            <span className="n">task_viz_tracker</span>{" "}
                            <span className="o">=</span>{" "}
                            <span className="n">get_task_viz_tracker</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1155">
                            <a href="#Task.map-1155">
                                <span className="linenos">1155</span>
                            </a>
                            {"        "}
                            <span className="k">if</span>{" "}
                            <span className="n">task_viz_tracker</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1156">
                            <a href="#Task.map-1156">
                                <span className="linenos">1156</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>{" "}
                            <span className="n">VisualizationUnsupportedError</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1157">
                            <a href="#Task.map-1157">
                                <span className="linenos">1157</span>
                            </a>
                            {"                "}
                            <span className="s2">
                                "`task.map()` is not currently supported by `flow.visualize()`"
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1158">
                            <a href="#Task.map-1158">
                                <span className="linenos">1158</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1159">
                            <a href="#Task.map-1159">
                                <span className="linenos">1159</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1160">
                            <a href="#Task.map-1160">
                                <span className="linenos">1160</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1161">
                            <a href="#Task.map-1161">
                                <span className="linenos">1161</span>
                            </a>
                            {"            "}
                            <span className="n">
                                PREFECT_EXPERIMENTAL_ENABLE_TASK_SCHEDULING
                            </span>
                            <span className="o">.</span>
                            <span className="n">value</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1162">
                            <a href="#Task.map-1162">
                                <span className="linenos">1162</span>
                            </a>
                            {"            "}
                            <span className="ow">
                                and
                            </span> <span className="ow">not</span>{" "}
                            <span className="n">FlowRunContext</span>
                            <span className="o">.</span>
                            <span className="n">get</span>
                            <span className="p">()</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1163">
                            <a href="#Task.map-1163">
                                <span className="linenos">1163</span>
                            </a>
                            {"        "}
                            <span className="p">):</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1164">
                            <a href="#Task.map-1164">
                                <span className="linenos">1164</span>
                            </a>
                            {"            "}
                            <span className="n">
                                map_call
                            </span> <span className="o">=</span>{" "}
                            <span className="n">create_call</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1165">
                            <a href="#Task.map-1165">
                                <span className="linenos">1165</span>
                            </a>
                            {"                "}
                            <span className="n">begin_task_map</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1166">
                            <a href="#Task.map-1166">
                                <span className="linenos">1166</span>
                            </a>
                            {"                "}
                            <span className="n">task</span>
                            <span className="o">=</span>
                            <span className="bp">self</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1167">
                            <a href="#Task.map-1167">
                                <span className="linenos">1167</span>
                            </a>
                            {"                "}
                            <span className="n">parameters</span>
                            <span className="o">=</span>
                            <span className="n">parameters</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1168">
                            <a href="#Task.map-1168">
                                <span className="linenos">1168</span>
                            </a>
                            {"                "}
                            <span className="n">flow_run_context</span>
                            <span className="o">=</span>
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1169">
                            <a href="#Task.map-1169">
                                <span className="linenos">1169</span>
                            </a>
                            {"                "}
                            <span className="n">wait_for</span>
                            <span className="o">=</span>
                            <span className="n">wait_for</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1170">
                            <a href="#Task.map-1170">
                                <span className="linenos">1170</span>
                            </a>
                            {"                "}
                            <span className="n">return_type</span>
                            <span className="o">=</span>
                            <span className="n">return_type</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1171">
                            <a href="#Task.map-1171">
                                <span className="linenos">1171</span>
                            </a>
                            {"                "}
                            <span className="n">task_runner</span>
                            <span className="o">=</span>
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1172">
                            <a href="#Task.map-1172">
                                <span className="linenos">1172</span>
                            </a>
                            {"                "}
                            <span className="n">autonomous</span>
                            <span className="o">=</span>
                            <span className="kc">True</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1173">
                            <a href="#Task.map-1173">
                                <span className="linenos">1173</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1174">
                            <a href="#Task.map-1174">
                                <span className="linenos">1174</span>
                            </a>
                            {"            "}
                            <span className="k">if</span> <span className="bp">self</span>
                            <span className="o">.</span>
                            <span className="n">isasync</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1175">
                            <a href="#Task.map-1175">
                                <span className="linenos">1175</span>
                            </a>
                            {"                "}
                            <span className="k">return</span>{" "}
                            <span className="n">from_async</span>
                            <span className="o">.</span>
                            <span className="n">wait_for_call_in_loop_thread</span>
                            <span className="p">(</span>
                            <span className="n">map_call</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1176">
                            <a href="#Task.map-1176">
                                <span className="linenos">1176</span>
                            </a>
                            {"            "}
                            <span className="k">else</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1177">
                            <a href="#Task.map-1177">
                                <span className="linenos">1177</span>
                            </a>
                            {"                "}
                            <span className="k">return</span>{" "}
                            <span className="n">from_sync</span>
                            <span className="o">.</span>
                            <span className="n">wait_for_call_in_loop_thread</span>
                            <span className="p">(</span>
                            <span className="n">map_call</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1178">
                            <a href="#Task.map-1178">
                                <span className="linenos">1178</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.map-1179">
                            <a href="#Task.map-1179">
                                <span className="linenos">1179</span>
                            </a>
                            {"        "}
                            <span className="k">return</span>{" "}
                            <span className="n">enter_task_run_engine</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1180">
                            <a href="#Task.map-1180">
                                <span className="linenos">1180</span>
                            </a>
                            {"            "}
                            <span className="bp">self</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1181">
                            <a href="#Task.map-1181">
                                <span className="linenos">1181</span>
                            </a>
                            {"            "}
                            <span className="n">parameters</span>
                            <span className="o">=</span>
                            <span className="n">parameters</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1182">
                            <a href="#Task.map-1182">
                                <span className="linenos">1182</span>
                            </a>
                            {"            "}
                            <span className="n">wait_for</span>
                            <span className="o">=</span>
                            <span className="n">wait_for</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1183">
                            <a href="#Task.map-1183">
                                <span className="linenos">1183</span>
                            </a>
                            {"            "}
                            <span className="n">return_type</span>
                            <span className="o">=</span>
                            <span className="n">return_type</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1184">
                            <a href="#Task.map-1184">
                                <span className="linenos">1184</span>
                            </a>
                            {"            "}
                            <span className="n">task_runner</span>
                            <span className="o">=</span>
                            <span className="kc">None</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1185">
                            <a href="#Task.map-1185">
                                <span className="linenos">1185</span>
                            </a>
                            {"            "}
                            <span className="n">mapped</span>
                            <span className="o">=</span>
                            <span className="kc">True</span>
                            <span className="p">,</span>
                            {"\n"}
                        </span>
                        <span id="Task.map-1186">
                            <a href="#Task.map-1186">
                                <span className="linenos">1186</span>
                            </a>
                            {"        "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
                <div className="docstring">
                    <p>Submit a mapped run of the task to a worker.</p>
                    <p>
                        Must be called within a flow function. If writing an async task,
                        this call must be awaited.
                    </p>
                    <p>
                        Must be called with at least one iterable and all iterables must be
                        the same length. Any arguments that are not iterable will be treated
                        as a static value and each task run will receive the same value.
                    </p>
                    <p>
                        Will create as many task runs as the length of the iterable(s) in
                        the backing API and submit the task runs to the flow's task runner.
                        This call blocks if given a future as input while the future is
                        resolved. It also blocks while the tasks are being submitted, once
                        they are submitted, the flow function will continue executing.
                        However, note that the <code>SequentialTaskRunner</code> does not
                        implement parallel execution for sync tasks and they are fully
                        resolved on submission.
                    </p>
                    <p>
                        Args:
                        <em>
                            args: Iterable and static arguments to run the tasks with
                            return_state: Return a list of Prefect States that wrap the
                            results of each task run. wait_for: Upstream task futures to wait
                            for before starting the task *
                        </em>
                        kwargs: Keyword iterable arguments to run the task with
                    </p>
                    <p>
                        Returns: A list of futures allowing asynchronous access to the state
                        of the tasks
                    </p>
                    <p>Examples:</p>
                    <pre>
                        <code>
                            Define a task{"\n"}
                            {"\n"}&gt;&gt;&gt; from prefect import task{"\n"}&gt;&gt;&gt;
                            @task{"\n"}&gt;&gt;&gt; def my_task(x):{"\n"}&gt;&gt;&gt;{"     "}
                            return x + 1{"\n"}
                            {"\n"}Create mapped tasks{"\n"}
                            {"\n"}&gt;&gt;&gt; from prefect import flow{"\n"}&gt;&gt;&gt;
                            @flow{"\n"}&gt;&gt;&gt; def my_flow():{"\n"}&gt;&gt;&gt;{"     "}
                            my_task.map([1, 2, 3]){"\n"}
                            {"\n"}Wait for all mapped tasks to finish{"\n"}
                            {"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; def my_flow():{"\n"}
                            &gt;&gt;&gt;{"     "}futures = my_task.map([1, 2, 3]){"\n"}
                            &gt;&gt;&gt;{"     "}for future in futures:{"\n"}&gt;&gt;&gt;
                            {"         "}future.wait(){"\n"}&gt;&gt;&gt;{"     "}# Now all of
                            the mapped tasks have finished{"\n"}&gt;&gt;&gt;{"     "}
                            my_task(10){"\n"}
                            {"\n"}Use the result from mapped tasks in a flow{"\n"}
                            {"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; def my_flow():{"\n"}
                            &gt;&gt;&gt;{"     "}futures = my_task.map([1, 2, 3]){"\n"}
                            &gt;&gt;&gt;{"     "}for future in futures:{"\n"}&gt;&gt;&gt;
                            {"         "}print(future.result()){"\n"}&gt;&gt;&gt; my_flow()
                            {"\n"}2{"\n"}3{"\n"}4{"\n"}
                            {"\n"}Enforce ordering between tasks that do not exchange data
                            {"\n"}&gt;&gt;&gt; @task{"\n"}&gt;&gt;&gt; def task_1(x):{"\n"}
                            &gt;&gt;&gt;{"     "}pass{"\n"}&gt;&gt;&gt;{"\n"}&gt;&gt;&gt;
                            @task{"\n"}&gt;&gt;&gt; def task_2(y):{"\n"}&gt;&gt;&gt;{"     "}
                            pass{"\n"}&gt;&gt;&gt;{"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt;
                            def my_flow():{"\n"}&gt;&gt;&gt;{"     "}x = task_1.submit(){"\n"}
                            &gt;&gt;&gt;{"\n"}&gt;&gt;&gt;{"     "}# task 2 will wait for
                            task_1 to complete{"\n"}&gt;&gt;&gt;{"     "}y = task_2.map([1, 2,
                            3], wait_for=[x]){"\n"}
                            {"\n"}Use a non-iterable input as a constant across mapped tasks
                            {"\n"}&gt;&gt;&gt; @task{"\n"}&gt;&gt;&gt; def display(prefix,
                            item):{"\n"}&gt;&gt;&gt;{"    "}print(prefix, item){"\n"}
                            &gt;&gt;&gt;{"\n"}&gt;&gt;&gt; @flow{"\n"}&gt;&gt;&gt; def
                            my_flow():{"\n"}&gt;&gt;&gt;{"     "}display.map("Check it out: ",
                            [1, 2, 3]){"\n"}&gt;&gt;&gt;{"\n"}&gt;&gt;&gt; my_flow(){"\n"}
                            Check it out: 1{"\n"}Check it out: 2{"\n"}Check it out: 3{"\n"}
                            {"\n"}Use `unmapped` to treat an iterable argument as a constant
                            {"\n"}&gt;&gt;&gt; from prefect import unmapped{"\n"}&gt;&gt;&gt;
                            {"\n"}&gt;&gt;&gt; @task{"\n"}&gt;&gt;&gt; def
                            add_n_to_items(items, n):{"\n"}&gt;&gt;&gt;{"     "}return [item +
                            n for item in items]{"\n"}&gt;&gt;&gt;{"\n"}&gt;&gt;&gt; @flow
                            {"\n"}&gt;&gt;&gt; def my_flow():{"\n"}&gt;&gt;&gt;{"     "}return
                            add_n_to_items.map(unmapped([10, 20]), n=[1, 2, 3]){"\n"}
                            &gt;&gt;&gt;{"\n"}&gt;&gt;&gt; my_flow(){"\n"}[[11, 21], [12, 22],
                            [13, 23]]{"\n"}
                        </code>
                    </pre>
                </div>
            </div>
            <div id="Task.serve" className="classattr">
                <input
                    id="Task.serve-view-source"
                    className="view-source-toggle-state"
                    type="checkbox"
                    aria-hidden="true"
                    tabIndex={-1}
                />
                <div className="attr function">
                    <span className="def">def</span>
                    <span className="name">serve</span>
                    <span className="signature pdoc-code multiline">
                        (
                        <span className="param">
                            <span className="bp">self</span>,
                        </span>
                        <span className="param">
                            {" "}
                            <span className="n">task_runner</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">prefect</span>
                            <span className="o">.</span>
                            <span className="n">task_runners</span>
                            <span className="o">.</span>
                            <span className="n">BaseTaskRunner</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                        </span>
                        <span className="return-annotation">
                            ) -&gt;{" "}
                            <span className="n">
                                <a href="#Task">Task</a>
                            </span>
                            :
                        </span>
                    </span>
                    <label
                        className="view-source-button"
                        htmlFor="Task.serve-view-source"
                    >
                        <span>View Source</span>
                    </label>
                </div>
                <a className="headerlink" href="#Task.serve" />
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <span id="Task.serve-1188">
                            <a href="#Task.serve-1188">
                                <span className="linenos">1188</span>
                            </a>
                            {"    "}
                            <span className="k">def</span> <span className="nf">serve</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">,</span>{" "}
                            <span className="n">task_runner</span>
                            <span className="p">:</span> <span className="n">Optional</span>
                            <span className="p">[</span>
                            <span className="n">BaseTaskRunner</span>
                            <span className="p">]</span> <span className="o">=</span>{" "}
                            <span className="kc">None</span>
                            <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                            <span className="s2">"Task"</span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1189">
                            <a href="#Task.serve-1189">
                                <span className="linenos">1189</span>
                            </a>
                            <span className="w">{"        "}</span>
                            <span className="sd">
                                """Serve the task using the provided task runner. This method is
                                used to
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1190">
                            <a href="#Task.serve-1190">
                                <span className="linenos">1190</span>
                            </a>
                            <span className="sd">
                                {"        "}establish a websocket connection with the Prefect
                                server and listen for
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1191">
                            <a href="#Task.serve-1191">
                                <span className="linenos">1191</span>
                            </a>
                            <span className="sd">
                                {"        "}submitted task runs to execute.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1192">
                            <a href="#Task.serve-1192">
                                <span className="linenos">1192</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1193">
                            <a href="#Task.serve-1193">
                                <span className="linenos">1193</span>
                            </a>
                            <span className="sd">{"        "}Args:</span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1194">
                            <a href="#Task.serve-1194">
                                <span className="linenos">1194</span>
                            </a>
                            <span className="sd">
                                {"            "}task_runner: The task runner to use for serving
                                the task. If not provided,
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1195">
                            <a href="#Task.serve-1195">
                                <span className="linenos">1195</span>
                            </a>
                            <span className="sd">
                                {"                "}the default ConcurrentTaskRunner will be
                                used.
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1196">
                            <a href="#Task.serve-1196">
                                <span className="linenos">1196</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1197">
                            <a href="#Task.serve-1197">
                                <span className="linenos">1197</span>
                            </a>
                            <span className="sd">{"        "}Examples:</span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1198">
                            <a href="#Task.serve-1198">
                                <span className="linenos">1198</span>
                            </a>
                            <span className="sd">
                                {"            "}Serve a task using the default task runner
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1199">
                            <a href="#Task.serve-1199">
                                <span className="linenos">1199</span>
                            </a>
                            <span className="sd">{"            "}&gt;&gt;&gt; @task</span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1200">
                            <a href="#Task.serve-1200">
                                <span className="linenos">1200</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; def my_task():
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1201">
                            <a href="#Task.serve-1201">
                                <span className="linenos">1201</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt;{"     "}return 1
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1202">
                            <a href="#Task.serve-1202">
                                <span className="linenos">1202</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1203">
                            <a href="#Task.serve-1203">
                                <span className="linenos">1203</span>
                            </a>
                            <span className="sd">
                                {"            "}&gt;&gt;&gt; my_task.serve()
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1204">
                            <a href="#Task.serve-1204">
                                <span className="linenos">1204</span>
                            </a>
                            <span className="sd">{"        "}"""</span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1205">
                            <a href="#Task.serve-1205">
                                <span className="linenos">1205</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1206">
                            <a href="#Task.serve-1206">
                                <span className="linenos">1206</span>
                            </a>
                            {"        "}
                            <span className="k">if</span> <span className="ow">not</span>{" "}
                            <span className="n">
                                PREFECT_EXPERIMENTAL_ENABLE_TASK_SCHEDULING
                            </span>
                            <span className="p">:</span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1207">
                            <a href="#Task.serve-1207">
                                <span className="linenos">1207</span>
                            </a>
                            {"            "}
                            <span className="k">raise</span>{" "}
                            <span className="ne">ValueError</span>
                            <span className="p">(</span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1208">
                            <a href="#Task.serve-1208">
                                <span className="linenos">1208</span>
                            </a>
                            {"                "}
                            <span className="s2">
                                "Task's `serve` method is an experimental feature and must be
                                enabled with "
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1209">
                            <a href="#Task.serve-1209">
                                <span className="linenos">1209</span>
                            </a>
                            {"                "}
                            <span className="s2">
                                "`prefect config set
                                PREFECT_EXPERIMENTAL_ENABLE_TASK_SCHEDULING=True`"
                            </span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1210">
                            <a href="#Task.serve-1210">
                                <span className="linenos">1210</span>
                            </a>
                            {"            "}
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1211">
                            <a href="#Task.serve-1211">
                                <span className="linenos">1211</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1212">
                            <a href="#Task.serve-1212">
                                <span className="linenos">1212</span>
                            </a>
                            {"        "}
                            <span className="kn">from</span>{" "}
                            <span className="nn">prefect.task_server</span>{" "}
                            <span className="kn">import</span>{" "}
                            <span className="n">serve</span>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1213">
                            <a href="#Task.serve-1213">
                                <span className="linenos">1213</span>
                            </a>
                            {"\n"}
                        </span>
                        <span id="Task.serve-1214">
                            <a href="#Task.serve-1214">
                                <span className="linenos">1214</span>
                            </a>
                            {"        "}
                            <span className="n">serve</span>
                            <span className="p">(</span>
                            <span className="bp">self</span>
                            <span className="p">,</span>{" "}
                            <span className="n">task_runner</span>
                            <span className="o">=</span>
                            <span className="n">task_runner</span>
                            <span className="p">)</span>
                            {"\n"}
                        </span>
                    </pre>
                </div>
                <div className="docstring">
                    <p>
                        Serve the task using the provided task runner. This method is used
                        to establish a websocket connection with the Prefect server and
                        listen for submitted task runs to execute.
                    </p>
                    <p>
                        Args: task_runner: The task runner to use for serving the task. If
                        not provided, the default ConcurrentTaskRunner will be used.
                    </p>
                    <p>Examples: Serve a task using the default task runner</p>
                    <blockquote>
                        <blockquote>
                            <blockquote>
                                <p>@task def my_task(): return 1</p>
                                <pre>
                                    <code>&gt;&gt;&gt; my_task.serve(){"\n"}</code>
                                </pre>
                            </blockquote>
                        </blockquote>
                    </blockquote>
                </div>
            </div>
        </section>
        <section id="unmapped">
            <input
                id="unmapped-view-source"
                className="view-source-toggle-state"
                type="checkbox"
                aria-hidden="true"
                tabIndex={-1}
            />
            <div className="attr class">
                <span className="def">class</span>
                <span className="name">unmapped</span>
                <wbr />(
                <span className="base">
                    prefect.utilities.annotations.BaseAnnotation[~T]
                </span>
                ):
                <label className="view-source-button" htmlFor="unmapped-view-source">
                    <span>View Source</span>
                </label>
            </div>
            <a className="headerlink" href="#unmapped" />
            <div className="pdoc-code codehilite">
                <pre>
                    <span />
                    <span id="unmapped-34">
                        <a href="#unmapped-34">
                            <span className="linenos">34</span>
                        </a>
                        <span className="k">class</span>{" "}
                        <span className="nc">unmapped</span>
                        <span className="p">(</span>
                        <span className="n">BaseAnnotation</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">]):</span>
                        {"\n"}
                    </span>
                    <span id="unmapped-35">
                        <a href="#unmapped-35">
                            <span className="linenos">35</span>
                        </a>
                        <span className="w">{"    "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="unmapped-36">
                        <a href="#unmapped-36">
                            <span className="linenos">36</span>
                        </a>
                        <span className="sd">{"    "}Wrapper for iterables.</span>
                        {"\n"}
                    </span>
                    <span id="unmapped-37">
                        <a href="#unmapped-37">
                            <span className="linenos">37</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="unmapped-38">
                        <a href="#unmapped-38">
                            <span className="linenos">38</span>
                        </a>
                        <span className="sd">
                            {"    "}Indicates that this input should be sent as-is to all runs
                            created during a mapping
                        </span>
                        {"\n"}
                    </span>
                    <span id="unmapped-39">
                        <a href="#unmapped-39">
                            <span className="linenos">39</span>
                        </a>
                        <span className="sd">
                            {"    "}operation instead of being split.
                        </span>
                        {"\n"}
                    </span>
                    <span id="unmapped-40">
                        <a href="#unmapped-40">
                            <span className="linenos">40</span>
                        </a>
                        <span className="sd">{"    "}"""</span>
                        {"\n"}
                    </span>
                    <span id="unmapped-41">
                        <a href="#unmapped-41">
                            <span className="linenos">41</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="unmapped-42">
                        <a href="#unmapped-42">
                            <span className="linenos">42</span>
                        </a>
                        {"    "}
                        <span className="k">def</span>{" "}
                        <span className="fm">__getitem__</span>
                        <span className="p">(</span>
                        <span className="bp">self</span>
                        <span className="p">,</span> <span className="n">_</span>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">T</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="unmapped-43">
                        <a href="#unmapped-43">
                            <span className="linenos">43</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # Internally, this acts as an infinite array where all items are
                            the same value
                        </span>
                        {"\n"}
                    </span>
                    <span id="unmapped-44">
                        <a href="#unmapped-44">
                            <span className="linenos">44</span>
                        </a>
                        {"        "}
                        <span className="k">return</span> <span className="bp">self</span>
                        <span className="o">.</span>
                        <span className="n">unwrap</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                </pre>
            </div>
            <div className="docstring">
                <p>Wrapper for iterables.</p>
                <p>
                    Indicates that this input should be sent as-is to all runs created
                    during a mapping operation instead of being split.
                </p>
            </div>
            <div id="unmapped.__init__" className="classattr">
                <div className="attr function">
                    <span className="name">unmapped</span>
                    <span className="signature pdoc-code condensed">
                        (
                        <span className="param">
                            <span className="n">value</span>
                        </span>
                        )
                    </span>
                </div>
                <a className="headerlink" href="#unmapped.__init__" />
                <div className="docstring">
                    <p>Create new instance of BaseAnnotation(value,)</p>
                </div>
            </div>
            <div className="inherited">
                <h5>Inherited Members</h5>
                <dl>
                    <div>
                        <dt>prefect.utilities.annotations.BaseAnnotation</dt>
                        <dd id="unmapped.unwrap" className="function">
                            unwrap
                        </dd>
                        <dd id="unmapped.rewrap" className="function">
                            rewrap
                        </dd>
                        <dd id="unmapped.value" className="variable">
                            value
                        </dd>
                    </div>
                    <div>
                        <dt>builtins.tuple</dt>
                        <dd id="unmapped.index" className="function">
                            index
                        </dd>
                        <dd id="unmapped.count" className="function">
                            count
                        </dd>
                    </div>
                </dl>
            </div>
        </section>
        <section id="serve">
            <input
                id="serve-view-source"
                className="view-source-toggle-state"
                type="checkbox"
                aria-hidden="true"
                tabIndex={-1}
            />
            <div className="attr function">
                <div className="decorator">@sync_compatible</div>
                <span className="def">async def</span>
                <span className="name">serve</span>
                <span className="signature pdoc-code multiline">
                    (
                    <span className="param">
                        {" "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span> <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">deployments</span>
                        <span className="o">.</span>
                        <span className="n">runner</span>
                        <span className="o">.</span>
                        <span className="n">RunnerDeployment</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">pause_on_shutdown</span>
                        <span className="p">:</span> <span className="nb">bool</span>
                        <span className="o">=</span> <span className="kc">True</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">print_starting_message</span>
                        <span className="p">:</span> <span className="nb">bool</span>
                        <span className="o">=</span> <span className="kc">True</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">limit</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                    </span>
                    <span className="return-annotation">):</span>
                </span>
                <label className="view-source-button" htmlFor="serve-view-source">
                    <span>View Source</span>
                </label>
            </div>
            <a className="headerlink" href="#serve" />
            <div className="pdoc-code codehilite">
                <pre>
                    <span />
                    <span id="serve-1708">
                        <a href="#serve-1708">
                            <span className="linenos">1708</span>
                        </a>
                        <span className="nd">@sync_compatible</span>
                        {"\n"}
                    </span>
                    <span id="serve-1709">
                        <a href="#serve-1709">
                            <span className="linenos">1709</span>
                        </a>
                        <span className="k">async</span> <span className="k">def</span>{" "}
                        <span className="nf">serve</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="serve-1710">
                        <a href="#serve-1710">
                            <span className="linenos">1710</span>
                        </a>
                        {"    "}
                        <span className="o">*</span>
                        <span className="n">args</span>
                        <span className="p">:</span>{" "}
                        <span className="s2">"RunnerDeployment"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="serve-1711">
                        <a href="#serve-1711">
                            <span className="linenos">1711</span>
                        </a>
                        {"    "}
                        <span className="n">pause_on_shutdown</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="serve-1712">
                        <a href="#serve-1712">
                            <span className="linenos">1712</span>
                        </a>
                        {"    "}
                        <span className="n">print_starting_message</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="serve-1713">
                        <a href="#serve-1713">
                            <span className="linenos">1713</span>
                        </a>
                        {"    "}
                        <span className="n">limit</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="serve-1714">
                        <a href="#serve-1714">
                            <span className="linenos">1714</span>
                        </a>
                        {"    "}
                        <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="serve-1715">
                        <a href="#serve-1715">
                            <span className="linenos">1715</span>
                        </a>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="serve-1716">
                        <a href="#serve-1716">
                            <span className="linenos">1716</span>
                        </a>
                        <span className="w">{"    "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="serve-1717">
                        <a href="#serve-1717">
                            <span className="linenos">1717</span>
                        </a>
                        <span className="sd">
                            {"    "}Serve the provided list of deployments.
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1718">
                        <a href="#serve-1718">
                            <span className="linenos">1718</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1719">
                        <a href="#serve-1719">
                            <span className="linenos">1719</span>
                        </a>
                        <span className="sd">{"    "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="serve-1720">
                        <a href="#serve-1720">
                            <span className="linenos">1720</span>
                        </a>
                        <span className="sd">
                            {"        "}*args: A list of deployments to serve.
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1721">
                        <a href="#serve-1721">
                            <span className="linenos">1721</span>
                        </a>
                        <span className="sd">
                            {"        "}pause_on_shutdown: A boolean for whether or not to
                            automatically pause
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1722">
                        <a href="#serve-1722">
                            <span className="linenos">1722</span>
                        </a>
                        <span className="sd">
                            {"            "}deployment schedules on shutdown.
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1723">
                        <a href="#serve-1723">
                            <span className="linenos">1723</span>
                        </a>
                        <span className="sd">
                            {"        "}print_starting_message: Whether or not to print
                            message to the console
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1724">
                        <a href="#serve-1724">
                            <span className="linenos">1724</span>
                        </a>
                        <span className="sd">{"            "}on startup.</span>
                        {"\n"}
                    </span>
                    <span id="serve-1725">
                        <a href="#serve-1725">
                            <span className="linenos">1725</span>
                        </a>
                        <span className="sd">
                            {"        "}limit: The maximum number of runs that can be executed
                            concurrently.
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1726">
                        <a href="#serve-1726">
                            <span className="linenos">1726</span>
                        </a>
                        <span className="sd">
                            {"        "}**kwargs: Additional keyword arguments to pass to the
                            runner.
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1727">
                        <a href="#serve-1727">
                            <span className="linenos">1727</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1728">
                        <a href="#serve-1728">
                            <span className="linenos">1728</span>
                        </a>
                        <span className="sd">{"    "}Examples:</span>
                        {"\n"}
                    </span>
                    <span id="serve-1729">
                        <a href="#serve-1729">
                            <span className="linenos">1729</span>
                        </a>
                        <span className="sd">
                            {"        "}Prepare two deployments and serve them:
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1730">
                        <a href="#serve-1730">
                            <span className="linenos">1730</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1731">
                        <a href="#serve-1731">
                            <span className="linenos">1731</span>
                        </a>
                        <span className="sd">{"        "}```python</span>
                        {"\n"}
                    </span>
                    <span id="serve-1732">
                        <a href="#serve-1732">
                            <span className="linenos">1732</span>
                        </a>
                        <span className="sd">{"        "}import datetime</span>
                        {"\n"}
                    </span>
                    <span id="serve-1733">
                        <a href="#serve-1733">
                            <span className="linenos">1733</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1734">
                        <a href="#serve-1734">
                            <span className="linenos">1734</span>
                        </a>
                        <span className="sd">
                            {"        "}from prefect import flow, serve
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1735">
                        <a href="#serve-1735">
                            <span className="linenos">1735</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1736">
                        <a href="#serve-1736">
                            <span className="linenos">1736</span>
                        </a>
                        <span className="sd">{"        "}@flow</span>
                        {"\n"}
                    </span>
                    <span id="serve-1737">
                        <a href="#serve-1737">
                            <span className="linenos">1737</span>
                        </a>
                        <span className="sd">{"        "}def my_flow(name):</span>
                        {"\n"}
                    </span>
                    <span id="serve-1738">
                        <a href="#serve-1738">
                            <span className="linenos">1738</span>
                        </a>
                        <span className="sd">
                            {"            "}print(f"hello {"{"}name{"}"}")
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1739">
                        <a href="#serve-1739">
                            <span className="linenos">1739</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1740">
                        <a href="#serve-1740">
                            <span className="linenos">1740</span>
                        </a>
                        <span className="sd">{"        "}@flow</span>
                        {"\n"}
                    </span>
                    <span id="serve-1741">
                        <a href="#serve-1741">
                            <span className="linenos">1741</span>
                        </a>
                        <span className="sd">{"        "}def my_other_flow(name):</span>
                        {"\n"}
                    </span>
                    <span id="serve-1742">
                        <a href="#serve-1742">
                            <span className="linenos">1742</span>
                        </a>
                        <span className="sd">
                            {"            "}print(f"goodbye {"{"}name{"}"}")
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1743">
                        <a href="#serve-1743">
                            <span className="linenos">1743</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1744">
                        <a href="#serve-1744">
                            <span className="linenos">1744</span>
                        </a>
                        <span className="sd">{"        "}if __name__ == "__main__":</span>
                        {"\n"}
                    </span>
                    <span id="serve-1745">
                        <a href="#serve-1745">
                            <span className="linenos">1745</span>
                        </a>
                        <span className="sd">{"            "}# Run once a day</span>
                        {"\n"}
                    </span>
                    <span id="serve-1746">
                        <a href="#serve-1746">
                            <span className="linenos">1746</span>
                        </a>
                        <span className="sd">
                            {"            "}hello_deploy = my_flow.to_deployment(
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1747">
                        <a href="#serve-1747">
                            <span className="linenos">1747</span>
                        </a>
                        <span className="sd">
                            {"                "}"hello", tags=["dev"],
                            interval=datetime.timedelta(days=1)
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1748">
                        <a href="#serve-1748">
                            <span className="linenos">1748</span>
                        </a>
                        <span className="sd">{"            "})</span>
                        {"\n"}
                    </span>
                    <span id="serve-1749">
                        <a href="#serve-1749">
                            <span className="linenos">1749</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1750">
                        <a href="#serve-1750">
                            <span className="linenos">1750</span>
                        </a>
                        <span className="sd">
                            {"            "}# Run every Sunday at 4:00 AM
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1751">
                        <a href="#serve-1751">
                            <span className="linenos">1751</span>
                        </a>
                        <span className="sd">
                            {"            "}bye_deploy = my_other_flow.to_deployment(
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1752">
                        <a href="#serve-1752">
                            <span className="linenos">1752</span>
                        </a>
                        <span className="sd">
                            {"                "}"goodbye", tags=["dev"], cron="0 4 * * sun"
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1753">
                        <a href="#serve-1753">
                            <span className="linenos">1753</span>
                        </a>
                        <span className="sd">{"            "})</span>
                        {"\n"}
                    </span>
                    <span id="serve-1754">
                        <a href="#serve-1754">
                            <span className="linenos">1754</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1755">
                        <a href="#serve-1755">
                            <span className="linenos">1755</span>
                        </a>
                        <span className="sd">
                            {"            "}serve(hello_deploy, bye_deploy)
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1756">
                        <a href="#serve-1756">
                            <span className="linenos">1756</span>
                        </a>
                        <span className="sd">{"        "}```</span>
                        {"\n"}
                    </span>
                    <span id="serve-1757">
                        <a href="#serve-1757">
                            <span className="linenos">1757</span>
                        </a>
                        <span className="sd">{"    "}"""</span>
                        {"\n"}
                    </span>
                    <span id="serve-1758">
                        <a href="#serve-1758">
                            <span className="linenos">1758</span>
                        </a>
                        {"    "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">rich.console</span>{" "}
                        <span className="kn">import</span>{" "}
                        <span className="n">Console</span>
                        <span className="p">,</span> <span className="n">Group</span>
                        {"\n"}
                    </span>
                    <span id="serve-1759">
                        <a href="#serve-1759">
                            <span className="linenos">1759</span>
                        </a>
                        {"    "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">rich.table</span>{" "}
                        <span className="kn">import</span> <span className="n">Table</span>
                        {"\n"}
                    </span>
                    <span id="serve-1760">
                        <a href="#serve-1760">
                            <span className="linenos">1760</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1761">
                        <a href="#serve-1761">
                            <span className="linenos">1761</span>
                        </a>
                        {"    "}
                        <span className="kn">from</span>{" "}
                        <span className="nn">prefect.runner</span>{" "}
                        <span className="kn">import</span> <span className="n">Runner</span>
                        {"\n"}
                    </span>
                    <span id="serve-1762">
                        <a href="#serve-1762">
                            <span className="linenos">1762</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1763">
                        <a href="#serve-1763">
                            <span className="linenos">1763</span>
                        </a>
                        {"    "}
                        <span className="n">runner</span> <span className="o">=</span>{" "}
                        <span className="n">Runner</span>
                        <span className="p">(</span>
                        <span className="n">pause_on_shutdown</span>
                        <span className="o">=</span>
                        <span className="n">pause_on_shutdown</span>
                        <span className="p">,</span> <span className="n">limit</span>
                        <span className="o">=</span>
                        <span className="n">limit</span>
                        <span className="p">,</span> <span className="o">**</span>
                        <span className="n">kwargs</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="serve-1764">
                        <a href="#serve-1764">
                            <span className="linenos">1764</span>
                        </a>
                        {"    "}
                        <span className="k">
                            for
                        </span> <span className="n">deployment</span>{" "}
                        <span className="ow">in</span> <span className="n">args</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="serve-1765">
                        <a href="#serve-1765">
                            <span className="linenos">1765</span>
                        </a>
                        {"        "}
                        <span className="k">await</span> <span className="n">runner</span>
                        <span className="o">.</span>
                        <span className="n">add_deployment</span>
                        <span className="p">(</span>
                        <span className="n">deployment</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="serve-1766">
                        <a href="#serve-1766">
                            <span className="linenos">1766</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1767">
                        <a href="#serve-1767">
                            <span className="linenos">1767</span>
                        </a>
                        {"    "}
                        <span className="k">if</span>{" "}
                        <span className="n">print_starting_message</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="serve-1768">
                        <a href="#serve-1768">
                            <span className="linenos">1768</span>
                        </a>
                        {"        "}
                        <span className="n">help_message_top</span>{" "}
                        <span className="o">=</span> <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="serve-1769">
                        <a href="#serve-1769">
                            <span className="linenos">1769</span>
                        </a>
                        {"            "}
                        <span className="s2">
                            "[green]Your deployments are being served and polling for"
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1770">
                        <a href="#serve-1770">
                            <span className="linenos">1770</span>
                        </a>
                        {"            "}
                        <span className="s2">" scheduled runs!</span>
                        <span className="se">\n</span>
                        <span className="s2">[/]"</span>
                        {"\n"}
                    </span>
                    <span id="serve-1771">
                        <a href="#serve-1771">
                            <span className="linenos">1771</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="serve-1772">
                        <a href="#serve-1772">
                            <span className="linenos">1772</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1773">
                        <a href="#serve-1773">
                            <span className="linenos">1773</span>
                        </a>
                        {"        "}
                        <span className="n">table</span> <span className="o">=</span>{" "}
                        <span className="n">Table</span>
                        <span className="p">(</span>
                        <span className="n">title</span>
                        <span className="o">=</span>
                        <span className="s2">"Deployments"</span>
                        <span className="p">,</span> <span className="n">show_header</span>
                        <span className="o">=</span>
                        <span className="kc">False</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="serve-1774">
                        <a href="#serve-1774">
                            <span className="linenos">1774</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1775">
                        <a href="#serve-1775">
                            <span className="linenos">1775</span>
                        </a>
                        {"        "}
                        <span className="n">table</span>
                        <span className="o">.</span>
                        <span className="n">add_column</span>
                        <span className="p">(</span>
                        <span className="n">style</span>
                        <span className="o">=</span>
                        <span className="s2">"blue"</span>
                        <span className="p">,</span> <span className="n">no_wrap</span>
                        <span className="o">=</span>
                        <span className="kc">True</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="serve-1776">
                        <a href="#serve-1776">
                            <span className="linenos">1776</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1777">
                        <a href="#serve-1777">
                            <span className="linenos">1777</span>
                        </a>
                        {"        "}
                        <span className="k">
                            for
                        </span> <span className="n">deployment</span>{" "}
                        <span className="ow">in</span> <span className="n">args</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="serve-1778">
                        <a href="#serve-1778">
                            <span className="linenos">1778</span>
                        </a>
                        {"            "}
                        <span className="n">table</span>
                        <span className="o">.</span>
                        <span className="n">add_row</span>
                        <span className="p">(</span>
                        <span className="sa">f</span>
                        <span className="s2">"</span>
                        <span className="si">{"{"}</span>
                        <span className="n">deployment</span>
                        <span className="o">.</span>
                        <span className="n">flow_name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">/</span>
                        <span className="si">{"{"}</span>
                        <span className="n">deployment</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">"</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="serve-1779">
                        <a href="#serve-1779">
                            <span className="linenos">1779</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1780">
                        <a href="#serve-1780">
                            <span className="linenos">1780</span>
                        </a>
                        {"        "}
                        <span className="n">help_message_bottom</span>{" "}
                        <span className="o">=</span> <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="serve-1781">
                        <a href="#serve-1781">
                            <span className="linenos">1781</span>
                        </a>
                        {"            "}
                        <span className="s2">"</span>
                        <span className="se">\n</span>
                        <span className="s2">
                            To trigger any of these deployments, use the"
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1782">
                        <a href="#serve-1782">
                            <span className="linenos">1782</span>
                        </a>
                        {"            "}
                        <span className="s2">" following command:</span>
                        <span className="se">\n</span>
                        <span className="s2">[blue]</span>
                        <span className="se">\n\t</span>
                        <span className="s2">$ prefect deployment run"</span>
                        {"\n"}
                    </span>
                    <span id="serve-1783">
                        <a href="#serve-1783">
                            <span className="linenos">1783</span>
                        </a>
                        {"            "}
                        <span className="s2">" [DEPLOYMENT_NAME]</span>
                        <span className="se">\n</span>
                        <span className="s2">[/]"</span>
                        {"\n"}
                    </span>
                    <span id="serve-1784">
                        <a href="#serve-1784">
                            <span className="linenos">1784</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="serve-1785">
                        <a href="#serve-1785">
                            <span className="linenos">1785</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">PREFECT_UI_URL</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="serve-1786">
                        <a href="#serve-1786">
                            <span className="linenos">1786</span>
                        </a>
                        {"            "}
                        <span className="n">help_message_bottom</span>{" "}
                        <span className="o">+=</span> <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="serve-1787">
                        <a href="#serve-1787">
                            <span className="linenos">1787</span>
                        </a>
                        {"                "}
                        <span className="s2">"</span>
                        <span className="se">\n</span>
                        <span className="s2">
                            You can also trigger your deployments via the Prefect UI:"
                        </span>
                        {"\n"}
                    </span>
                    <span id="serve-1788">
                        <a href="#serve-1788">
                            <span className="linenos">1788</span>
                        </a>
                        {"                "}
                        <span className="sa">f</span>
                        <span className="s2">" [blue]</span>
                        <span className="si">{"{"}</span>
                        <span className="n">PREFECT_UI_URL</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">()</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">/deployments[/]</span>
                        <span className="se">\n</span>
                        <span className="s2">"</span>
                        {"\n"}
                    </span>
                    <span id="serve-1789">
                        <a href="#serve-1789">
                            <span className="linenos">1789</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="serve-1790">
                        <a href="#serve-1790">
                            <span className="linenos">1790</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1791">
                        <a href="#serve-1791">
                            <span className="linenos">1791</span>
                        </a>
                        {"        "}
                        <span className="n">console</span> <span className="o">=</span>{" "}
                        <span className="n">Console</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="serve-1792">
                        <a href="#serve-1792">
                            <span className="linenos">1792</span>
                        </a>
                        {"        "}
                        <span className="n">console</span>
                        <span className="o">.</span>
                        <span className="n">print</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="serve-1793">
                        <a href="#serve-1793">
                            <span className="linenos">1793</span>
                        </a>
                        {"            "}
                        <span className="n">Group</span>
                        <span className="p">(</span>
                        <span className="n">help_message_top</span>
                        <span className="p">,</span> <span className="n">table</span>
                        <span className="p">,</span>{" "}
                        <span className="n">help_message_bottom</span>
                        <span className="p">),</span> <span className="n">soft_wrap</span>
                        <span className="o">=</span>
                        <span className="kc">True</span>
                        {"\n"}
                    </span>
                    <span id="serve-1794">
                        <a href="#serve-1794">
                            <span className="linenos">1794</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="serve-1795">
                        <a href="#serve-1795">
                            <span className="linenos">1795</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="serve-1796">
                        <a href="#serve-1796">
                            <span className="linenos">1796</span>
                        </a>
                        {"    "}
                        <span className="k">await</span> <span className="n">runner</span>
                        <span className="o">.</span>
                        <span className="n">start</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                </pre>
            </div>
            <div className="docstring">
                <p>Serve the provided list of deployments.</p>
                <p>
                    Args:
                    <em>
                        args: A list of deployments to serve. pause_on_shutdown: A boolean
                        for whether or not to automatically pause deployment schedules on
                        shutdown. print_starting_message: Whether or not to print message to
                        the console on startup. limit: The maximum number of runs that can
                        be executed concurrently. *
                    </em>
                    kwargs: Additional keyword arguments to pass to the runner.
                </p>
                <p>Examples: Prepare two deployments and serve them:</p>
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <code>
                            <span className="kn">import</span>{" "}
                            <span className="nn">datetime</span>
                            {"\n"} <br />
                            {"\n"}
                            {"    "}
                            <span className="kn">from</span>{" "}
                            <span className="nn">prefect</span>{" "}
                            <span className="kn">import</span> <span className="n">flow</span>
                            <span className="p">,</span> <span className="n">serve</span>
                            {"\n"} <br />
                            {"\n"}
                            {"    "}
                            <span className="nd">@flow</span>
                            {"\n"}
                            {"    "}
                            <span className="k">def</span> <span className="nf">my_flow</span>
                            <span className="p">(</span>
                            <span className="n">name</span>
                            <span className="p">):</span>
                            {"\n"}
                            {"        "}
                            <span className="nb">print</span>
                            <span className="p">(</span>
                            <span className="sa">f</span>
                            <span className="s2">"hello </span>
                            <span className="si">{"{"}</span>
                            <span className="n">name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">"</span>
                            <span className="p">)</span>
                            {"\n"} <br />
                            {"\n"}
                            {"    "}
                            <span className="nd">@flow</span>
                            {"\n"}
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">my_other_flow</span>
                            <span className="p">(</span>
                            <span className="n">name</span>
                            <span className="p">):</span>
                            {"\n"}
                            {"        "}
                            <span className="nb">print</span>
                            <span className="p">(</span>
                            <span className="sa">f</span>
                            <span className="s2">"goodbye </span>
                            <span className="si">{"{"}</span>
                            <span className="n">name</span>
                            <span className="si">{"}"}</span>
                            <span className="s2">"</span>
                            <span className="p">)</span>
                            {"\n"} <br />
                            {"\n"}
                            {"    "}
                            <span className="k">
                                if
                            </span> <span className="vm">__name__</span>{" "}
                            <span className="o">==</span>{" "}
                            <span className="s2">"__main__"</span>
                            <span className="p">:</span>
                            {"\n"}
                            {"        "}
                            <span className="c1"># Run once a day</span>
                            {"\n"}
                            {"        "}
                            <span className="n">hello_deploy</span>{" "}
                            <span className="o">=</span> <span className="n">my_flow</span>
                            <span className="o">.</span>
                            <span className="n">to_deployment</span>
                            <span className="p">(</span>
                            {"\n"}
                            {"            "}
                            <span className="s2">"hello"</span>
                            <span className="p">,</span> <span className="n">tags</span>
                            <span className="o">=</span>
                            <span className="p">[</span>
                            <span className="s2">"dev"</span>
                            <span className="p">],</span> <span className="n">interval</span>
                            <span className="o">=</span>
                            <span className="n">datetime</span>
                            <span className="o">.</span>
                            <span className="n">timedelta</span>
                            <span className="p">(</span>
                            <span className="n">days</span>
                            <span className="o">=</span>
                            <span className="mi">1</span>
                            <span className="p">)</span>
                            {"\n"}
                            {"        "}
                            <span className="p">)</span>
                            {"\n"} <br />
                            {"\n"}
                            {"        "}
                            <span className="c1"># Run every Sunday at 4:00 AM</span>
                            {"\n"}
                            {"        "}
                            <span className="n">
                                bye_deploy
                            </span> <span className="o">=</span>{" "}
                            <span className="n">my_other_flow</span>
                            <span className="o">.</span>
                            <span className="n">to_deployment</span>
                            <span className="p">(</span>
                            {"\n"}
                            {"            "}
                            <span className="s2">"goodbye"</span>
                            <span className="p">,</span> <span className="n">tags</span>
                            <span className="o">=</span>
                            <span className="p">[</span>
                            <span className="s2">"dev"</span>
                            <span className="p">],</span> <span className="n">cron</span>
                            <span className="o">=</span>
                            <span className="s2">"0 4 * * sun"</span>
                            {"\n"}
                            {"        "}
                            <span className="p">)</span>
                            {"\n"} <br />
                            {"\n"}
                            {"        "}
                            <span className="n">serve</span>
                            <span className="p">(</span>
                            <span className="n">hello_deploy</span>
                            <span className="p">,</span> <span className="n">bye_deploy</span>
                            <span className="p">)</span>
                            {"\n"}
                            {"    "}
                        </code>
                    </pre>
                </div>
                <p />
            </div>
        </section>
        <section id="deploy">
            <input
                id="deploy-view-source"
                className="view-source-toggle-state"
                type="checkbox"
                aria-hidden="true"
                tabIndex={-1}
            />
            <div className="attr function">
                <div className="decorator">@sync_compatible</div>
                <span className="def">async def</span>
                <span className="name">deploy</span>
                <span className="signature pdoc-code multiline">
                    (
                    <span className="param">
                        {" "}
                        <span className="o">*</span>
                        <span className="n">deployments</span>
                        <span className="p">:</span> <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">deployments</span>
                        <span className="o">.</span>
                        <span className="n">runner</span>
                        <span className="o">.</span>
                        <span className="n">RunnerDeployment</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">work_pool_name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">image</span>
                        <span className="p">:</span> <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span> <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">deployments</span>
                        <span className="o">.</span>
                        <span className="n">runner</span>
                        <span className="o">.</span>
                        <span className="n">DeploymentImage</span>
                        <span className="p">,</span> <span className="n">NoneType</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">build</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">push</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">print_next_steps_message</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">ignore_warnings</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>
                    </span>
                    <span className="return-annotation">
                        ) -&gt; <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">uuid</span>
                        <span className="o">.</span>
                        <span className="n">UUID</span>
                        <span className="p">]</span>:
                    </span>
                </span>
                <label className="view-source-button" htmlFor="deploy-view-source">
                    <span>View Source</span>
                </label>
            </div>
            <a className="headerlink" href="#deploy" />
            <div className="pdoc-code codehilite">
                <pre>
                    <span />
                    <span id="deploy-848">
                        <a href="#deploy-848">
                            <span className="linenos"> 848</span>
                        </a>
                        <span className="nd">@sync_compatible</span>
                        {"\n"}
                    </span>
                    <span id="deploy-849">
                        <a href="#deploy-849">
                            <span className="linenos"> 849</span>
                        </a>
                        <span className="k">async</span> <span className="k">def</span>{" "}
                        <span className="nf">deploy</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-850">
                        <a href="#deploy-850">
                            <span className="linenos"> 850</span>
                        </a>
                        {"    "}
                        <span className="o">*</span>
                        <span className="n">deployments</span>
                        <span className="p">:</span>{" "}
                        <span className="n">RunnerDeployment</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-851">
                        <a href="#deploy-851">
                            <span className="linenos"> 851</span>
                        </a>
                        {"    "}
                        <span className="n">work_pool_name</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-852">
                        <a href="#deploy-852">
                            <span className="linenos"> 852</span>
                        </a>
                        {"    "}
                        <span className="n">image</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Union</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">,</span>{" "}
                        <span className="n">DeploymentImage</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-853">
                        <a href="#deploy-853">
                            <span className="linenos"> 853</span>
                        </a>
                        {"    "}
                        <span className="n">build</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-854">
                        <a href="#deploy-854">
                            <span className="linenos"> 854</span>
                        </a>
                        {"    "}
                        <span className="n">push</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-855">
                        <a href="#deploy-855">
                            <span className="linenos"> 855</span>
                        </a>
                        {"    "}
                        <span className="n">print_next_steps_message</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-856">
                        <a href="#deploy-856">
                            <span className="linenos"> 856</span>
                        </a>
                        {"    "}
                        <span className="n">ignore_warnings</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-857">
                        <a href="#deploy-857">
                            <span className="linenos"> 857</span>
                        </a>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">List</span>
                        <span className="p">[</span>
                        <span className="n">UUID</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-858">
                        <a href="#deploy-858">
                            <span className="linenos"> 858</span>
                        </a>
                        <span className="w">{"    "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="deploy-859">
                        <a href="#deploy-859">
                            <span className="linenos"> 859</span>
                        </a>
                        <span className="sd">
                            {"    "}Deploy the provided list of deployments to dynamic
                            infrastructure via a
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-860">
                        <a href="#deploy-860">
                            <span className="linenos"> 860</span>
                        </a>
                        <span className="sd">{"    "}work pool.</span>
                        {"\n"}
                    </span>
                    <span id="deploy-861">
                        <a href="#deploy-861">
                            <span className="linenos"> 861</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-862">
                        <a href="#deploy-862">
                            <span className="linenos"> 862</span>
                        </a>
                        <span className="sd">
                            {"    "}By default, calling this function will build a Docker
                            image for the deployments, push it to a
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-863">
                        <a href="#deploy-863">
                            <span className="linenos"> 863</span>
                        </a>
                        <span className="sd">
                            {"    "}registry, and create each deployment via the Prefect API
                            that will run the corresponding
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-864">
                        <a href="#deploy-864">
                            <span className="linenos"> 864</span>
                        </a>
                        <span className="sd">{"    "}flow on the given schedule.</span>
                        {"\n"}
                    </span>
                    <span id="deploy-865">
                        <a href="#deploy-865">
                            <span className="linenos"> 865</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-866">
                        <a href="#deploy-866">
                            <span className="linenos"> 866</span>
                        </a>
                        <span className="sd">
                            {"    "}If you want to use an existing image, you can pass
                            `build=False` to skip building and pushing
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-867">
                        <a href="#deploy-867">
                            <span className="linenos"> 867</span>
                        </a>
                        <span className="sd">{"    "}an image.</span>
                        {"\n"}
                    </span>
                    <span id="deploy-868">
                        <a href="#deploy-868">
                            <span className="linenos"> 868</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-869">
                        <a href="#deploy-869">
                            <span className="linenos"> 869</span>
                        </a>
                        <span className="sd">{"    "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-870">
                        <a href="#deploy-870">
                            <span className="linenos"> 870</span>
                        </a>
                        <span className="sd">
                            {"        "}*deployments: A list of deployments to deploy.
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-871">
                        <a href="#deploy-871">
                            <span className="linenos"> 871</span>
                        </a>
                        <span className="sd">
                            {"        "}work_pool_name: The name of the work pool to use for
                            these deployments. Defaults to
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-872">
                        <a href="#deploy-872">
                            <span className="linenos"> 872</span>
                        </a>
                        <span className="sd">
                            {"            "}the value of `PREFECT_DEFAULT_WORK_POOL_NAME`.
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-873">
                        <a href="#deploy-873">
                            <span className="linenos"> 873</span>
                        </a>
                        <span className="sd">
                            {"        "}image: The name of the Docker image to build,
                            including the registry and
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-874">
                        <a href="#deploy-874">
                            <span className="linenos"> 874</span>
                        </a>
                        <span className="sd">
                            {"            "}repository. Pass a DeploymentImage instance to
                            customize the Dockerfile used
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-875">
                        <a href="#deploy-875">
                            <span className="linenos"> 875</span>
                        </a>
                        <span className="sd">{"            "}and build arguments.</span>
                        {"\n"}
                    </span>
                    <span id="deploy-876">
                        <a href="#deploy-876">
                            <span className="linenos"> 876</span>
                        </a>
                        <span className="sd">
                            {"        "}build: Whether or not to build a new image for the
                            flow. If False, the provided
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-877">
                        <a href="#deploy-877">
                            <span className="linenos"> 877</span>
                        </a>
                        <span className="sd">
                            {"            "}image will be used as-is and pulled at runtime.
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-878">
                        <a href="#deploy-878">
                            <span className="linenos"> 878</span>
                        </a>
                        <span className="sd">
                            {"        "}push: Whether or not to skip pushing the built image
                            to a registry.
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-879">
                        <a href="#deploy-879">
                            <span className="linenos"> 879</span>
                        </a>
                        <span className="sd">
                            {"        "}print_next_steps_message: Whether or not to print a
                            message with next steps
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-880">
                        <a href="#deploy-880">
                            <span className="linenos"> 880</span>
                        </a>
                        <span className="sd">
                            {"            "}after deploying the deployments.
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-881">
                        <a href="#deploy-881">
                            <span className="linenos"> 881</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-882">
                        <a href="#deploy-882">
                            <span className="linenos"> 882</span>
                        </a>
                        <span className="sd">{"    "}Returns:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-883">
                        <a href="#deploy-883">
                            <span className="linenos"> 883</span>
                        </a>
                        <span className="sd">
                            {"        "}A list of deployment IDs for the created/updated
                            deployments.
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-884">
                        <a href="#deploy-884">
                            <span className="linenos"> 884</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-885">
                        <a href="#deploy-885">
                            <span className="linenos"> 885</span>
                        </a>
                        <span className="sd">{"    "}Examples:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-886">
                        <a href="#deploy-886">
                            <span className="linenos"> 886</span>
                        </a>
                        <span className="sd">
                            {"        "}Deploy a group of flows to a work pool:
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-887">
                        <a href="#deploy-887">
                            <span className="linenos"> 887</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-888">
                        <a href="#deploy-888">
                            <span className="linenos"> 888</span>
                        </a>
                        <span className="sd">{"        "}```python</span>
                        {"\n"}
                    </span>
                    <span id="deploy-889">
                        <a href="#deploy-889">
                            <span className="linenos"> 889</span>
                        </a>
                        <span className="sd">
                            {"        "}from prefect import deploy, flow
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-890">
                        <a href="#deploy-890">
                            <span className="linenos"> 890</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-891">
                        <a href="#deploy-891">
                            <span className="linenos"> 891</span>
                        </a>
                        <span className="sd">{"        "}@flow(log_prints=True)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-892">
                        <a href="#deploy-892">
                            <span className="linenos"> 892</span>
                        </a>
                        <span className="sd">{"        "}def local_flow():</span>
                        {"\n"}
                    </span>
                    <span id="deploy-893">
                        <a href="#deploy-893">
                            <span className="linenos"> 893</span>
                        </a>
                        <span className="sd">
                            {"            "}print("I'm a locally defined flow!")
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-894">
                        <a href="#deploy-894">
                            <span className="linenos"> 894</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-895">
                        <a href="#deploy-895">
                            <span className="linenos"> 895</span>
                        </a>
                        <span className="sd">{"        "}if __name__ == "__main__":</span>
                        {"\n"}
                    </span>
                    <span id="deploy-896">
                        <a href="#deploy-896">
                            <span className="linenos"> 896</span>
                        </a>
                        <span className="sd">{"            "}deploy(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-897">
                        <a href="#deploy-897">
                            <span className="linenos"> 897</span>
                        </a>
                        <span className="sd">
                            {"                "}
                            local_flow.to_deployment(name="example-deploy-local-flow"),
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-898">
                        <a href="#deploy-898">
                            <span className="linenos"> 898</span>
                        </a>
                        <span className="sd">{"                "}flow.from_source(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-899">
                        <a href="#deploy-899">
                            <span className="linenos"> 899</span>
                        </a>
                        <span className="sd">
                            {"                    "}source="https://github.com/org/repo.git",
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-900">
                        <a href="#deploy-900">
                            <span className="linenos"> 900</span>
                        </a>
                        <span className="sd">
                            {"                    "}entrypoint="flows.py:my_flow",
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-901">
                        <a href="#deploy-901">
                            <span className="linenos"> 901</span>
                        </a>
                        <span className="sd">{"                "}).to_deployment(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-902">
                        <a href="#deploy-902">
                            <span className="linenos"> 902</span>
                        </a>
                        <span className="sd">
                            {"                    "}name="example-deploy-remote-flow",
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-903">
                        <a href="#deploy-903">
                            <span className="linenos"> 903</span>
                        </a>
                        <span className="sd">{"                "}),</span>
                        {"\n"}
                    </span>
                    <span id="deploy-904">
                        <a href="#deploy-904">
                            <span className="linenos"> 904</span>
                        </a>
                        <span className="sd">
                            {"                "}work_pool_name="my-work-pool",
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-905">
                        <a href="#deploy-905">
                            <span className="linenos"> 905</span>
                        </a>
                        <span className="sd">
                            {"                "}image="my-registry/my-image:dev",
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-906">
                        <a href="#deploy-906">
                            <span className="linenos"> 906</span>
                        </a>
                        <span className="sd">{"            "})</span>
                        {"\n"}
                    </span>
                    <span id="deploy-907">
                        <a href="#deploy-907">
                            <span className="linenos"> 907</span>
                        </a>
                        <span className="sd">{"        "}```</span>
                        {"\n"}
                    </span>
                    <span id="deploy-908">
                        <a href="#deploy-908">
                            <span className="linenos"> 908</span>
                        </a>
                        <span className="sd">{"    "}"""</span>
                        {"\n"}
                    </span>
                    <span id="deploy-909">
                        <a href="#deploy-909">
                            <span className="linenos"> 909</span>
                        </a>
                        {"    "}
                        <span className="n">work_pool_name</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">work_pool_name</span>{" "}
                        <span className="ow">or</span>{" "}
                        <span className="n">PREFECT_DEFAULT_WORK_POOL_NAME</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="deploy-910">
                        <a href="#deploy-910">
                            <span className="linenos"> 910</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-911">
                        <a href="#deploy-911">
                            <span className="linenos"> 911</span>
                        </a>
                        {"    "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">image</span> <span className="ow">and</span>{" "}
                        <span className="ow">not</span> <span className="nb">all</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-912">
                        <a href="#deploy-912">
                            <span className="linenos"> 912</span>
                        </a>
                        {"        "}
                        <span className="n">d</span>
                        <span className="o">.</span>
                        <span className="n">
                            storage
                        </span> <span className="ow">or</span> <span className="n">d</span>
                        <span className="o">.</span>
                        <span className="n">entrypoint_type</span>{" "}
                        <span className="o">==</span>{" "}
                        <span className="n">EntrypointType</span>
                        <span className="o">.</span>
                        <span className="n">MODULE_PATH</span>
                        {"\n"}
                    </span>
                    <span id="deploy-913">
                        <a href="#deploy-913">
                            <span className="linenos"> 913</span>
                        </a>
                        {"        "}
                        <span className="k">for</span> <span className="n">d</span>{" "}
                        <span className="ow">in</span>{" "}
                        <span className="n">deployments</span>
                        {"\n"}
                    </span>
                    <span id="deploy-914">
                        <a href="#deploy-914">
                            <span className="linenos"> 914</span>
                        </a>
                        {"    "}
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="deploy-915">
                        <a href="#deploy-915">
                            <span className="linenos"> 915</span>
                        </a>
                        {"        "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">ValueError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-916">
                        <a href="#deploy-916">
                            <span className="linenos"> 916</span>
                        </a>
                        {"            "}
                        <span className="s2">
                            "Either an image or remote storage location must be provided when
                            deploying"
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-917">
                        <a href="#deploy-917">
                            <span className="linenos"> 917</span>
                        </a>
                        {"            "}
                        <span className="s2">" a deployment."</span>
                        {"\n"}
                    </span>
                    <span id="deploy-918">
                        <a href="#deploy-918">
                            <span className="linenos"> 918</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-919">
                        <a href="#deploy-919">
                            <span className="linenos"> 919</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-920">
                        <a href="#deploy-920">
                            <span className="linenos"> 920</span>
                        </a>
                        {"    "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">work_pool_name</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-921">
                        <a href="#deploy-921">
                            <span className="linenos"> 921</span>
                        </a>
                        {"        "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">ValueError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-922">
                        <a href="#deploy-922">
                            <span className="linenos"> 922</span>
                        </a>
                        {"            "}
                        <span className="s2">
                            "A work pool name must be provided when deploying a deployment.
                            Either"
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-923">
                        <a href="#deploy-923">
                            <span className="linenos"> 923</span>
                        </a>
                        {"            "}
                        <span className="s2">
                            " provide a work pool name when calling `deploy` or set"
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-924">
                        <a href="#deploy-924">
                            <span className="linenos"> 924</span>
                        </a>
                        {"            "}
                        <span className="s2">
                            " `PREFECT_DEFAULT_WORK_POOL_NAME` in your profile."
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-925">
                        <a href="#deploy-925">
                            <span className="linenos"> 925</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-926">
                        <a href="#deploy-926">
                            <span className="linenos"> 926</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-927">
                        <a href="#deploy-927">
                            <span className="linenos"> 927</span>
                        </a>
                        {"    "}
                        <span className="k">if</span> <span className="n">image</span>{" "}
                        <span className="ow">and</span>{" "}
                        <span className="nb">isinstance</span>
                        <span className="p">(</span>
                        <span className="n">image</span>
                        <span className="p">,</span> <span className="nb">str</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="deploy-928">
                        <a href="#deploy-928">
                            <span className="linenos"> 928</span>
                        </a>
                        {"        "}
                        <span className="n">image_name</span>
                        <span className="p">
                            ,
                        </span> <span className="n">image_tag</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">parse_image_tag</span>
                        <span className="p">(</span>
                        <span className="n">image</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-929">
                        <a href="#deploy-929">
                            <span className="linenos"> 929</span>
                        </a>
                        {"        "}
                        <span className="n">image</span> <span className="o">=</span>{" "}
                        <span className="n">DeploymentImage</span>
                        <span className="p">(</span>
                        <span className="n">name</span>
                        <span className="o">=</span>
                        <span className="n">image_name</span>
                        <span className="p">,</span> <span className="n">tag</span>
                        <span className="o">=</span>
                        <span className="n">image_tag</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-930">
                        <a href="#deploy-930">
                            <span className="linenos"> 930</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-931">
                        <a href="#deploy-931">
                            <span className="linenos"> 931</span>
                        </a>
                        {"    "}
                        <span className="k">try</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-932">
                        <a href="#deploy-932">
                            <span className="linenos"> 932</span>
                        </a>
                        {"        "}
                        <span className="k">
                            async
                        </span> <span className="k">with</span>{" "}
                        <span className="n">get_client</span>
                        <span className="p">()</span> <span className="k">as</span>{" "}
                        <span className="n">client</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-933">
                        <a href="#deploy-933">
                            <span className="linenos"> 933</span>
                        </a>
                        {"            "}
                        <span className="n">
                            work_pool
                        </span> <span className="o">=</span>{" "}
                        <span className="k">await</span> <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">read_work_pool</span>
                        <span className="p">(</span>
                        <span className="n">work_pool_name</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-934">
                        <a href="#deploy-934">
                            <span className="linenos"> 934</span>
                        </a>
                        {"    "}
                        <span className="k">except</span>{" "}
                        <span className="n">ObjectNotFound</span>{" "}
                        <span className="k">as</span> <span className="n">exc</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-935">
                        <a href="#deploy-935">
                            <span className="linenos"> 935</span>
                        </a>
                        {"        "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">ValueError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-936">
                        <a href="#deploy-936">
                            <span className="linenos"> 936</span>
                        </a>
                        {"            "}
                        <span className="sa">f</span>
                        <span className="s2">"Could not find work pool </span>
                        <span className="si">{"{"}</span>
                        <span className="n">work_pool_name</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2">. Please create it before"</span>
                        {"\n"}
                    </span>
                    <span id="deploy-937">
                        <a href="#deploy-937">
                            <span className="linenos"> 937</span>
                        </a>
                        {"            "}
                        <span className="s2">" deploying this flow."</span>
                        {"\n"}
                    </span>
                    <span id="deploy-938">
                        <a href="#deploy-938">
                            <span className="linenos"> 938</span>
                        </a>
                        {"        "}
                        <span className="p">)</span> <span className="kn">from</span>{" "}
                        <span className="nn">exc</span>
                        {"\n"}
                    </span>
                    <span id="deploy-939">
                        <a href="#deploy-939">
                            <span className="linenos"> 939</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-940">
                        <a href="#deploy-940">
                            <span className="linenos"> 940</span>
                        </a>
                        {"    "}
                        <span className="n">is_docker_based_work_pool</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">get_from_dict</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-941">
                        <a href="#deploy-941">
                            <span className="linenos"> 941</span>
                        </a>
                        {"        "}
                        <span className="n">work_pool</span>
                        <span className="o">.</span>
                        <span className="n">base_job_template</span>
                        <span className="p">,</span>{" "}
                        <span className="s2">"variables.properties.image"</span>
                        <span className="p">,</span> <span className="kc">False</span>
                        {"\n"}
                    </span>
                    <span id="deploy-942">
                        <a href="#deploy-942">
                            <span className="linenos"> 942</span>
                        </a>
                        {"    "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-943">
                        <a href="#deploy-943">
                            <span className="linenos"> 943</span>
                        </a>
                        {"    "}
                        <span className="n">is_block_based_work_pool</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">get_from_dict</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-944">
                        <a href="#deploy-944">
                            <span className="linenos"> 944</span>
                        </a>
                        {"        "}
                        <span className="n">work_pool</span>
                        <span className="o">.</span>
                        <span className="n">base_job_template</span>
                        <span className="p">,</span>{" "}
                        <span className="s2">"variables.properties.block"</span>
                        <span className="p">,</span> <span className="kc">False</span>
                        {"\n"}
                    </span>
                    <span id="deploy-945">
                        <a href="#deploy-945">
                            <span className="linenos"> 945</span>
                        </a>
                        {"    "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-946">
                        <a href="#deploy-946">
                            <span className="linenos"> 946</span>
                        </a>
                        {"    "}
                        <span className="c1">
                            # carve out an exception for block based work pools that only have
                            a block in their base job template
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-947">
                        <a href="#deploy-947">
                            <span className="linenos"> 947</span>
                        </a>
                        {"    "}
                        <span className="n">console</span> <span className="o">=</span>{" "}
                        <span className="n">Console</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="deploy-948">
                        <a href="#deploy-948">
                            <span className="linenos"> 948</span>
                        </a>
                        {"    "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">is_docker_based_work_pool</span>{" "}
                        <span className="ow">and</span> <span className="ow">not</span>{" "}
                        <span className="n">is_block_based_work_pool</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-949">
                        <a href="#deploy-949">
                            <span className="linenos"> 949</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="n">image</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-950">
                        <a href="#deploy-950">
                            <span className="linenos"> 950</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">ValueError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-951">
                        <a href="#deploy-951">
                            <span className="linenos"> 951</span>
                        </a>
                        {"                "}
                        <span className="sa">f</span>
                        <span className="s2">"Work pool </span>
                        <span className="si">{"{"}</span>
                        <span className="n">work_pool_name</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2"> does not support custom Docker images."</span>
                        {"\n"}
                    </span>
                    <span id="deploy-952">
                        <a href="#deploy-952">
                            <span className="linenos"> 952</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            " Please use a work pool with an `image` variable in its base job
                            template"
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-953">
                        <a href="#deploy-953">
                            <span className="linenos"> 953</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            " or specify a remote storage location for the flow with
                            `.from_source`."
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-954">
                        <a href="#deploy-954">
                            <span className="linenos"> 954</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            " If you are attempting to deploy a flow to a local process work
                            pool,"
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-955">
                        <a href="#deploy-955">
                            <span className="linenos"> 955</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            " consider using `flow.serve` instead. See the documentation for
                            more"
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-956">
                        <a href="#deploy-956">
                            <span className="linenos"> 956</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            " information:
                            https://docs.prefect.io/latest/concepts/flows/#serving-a-flow"
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-957">
                        <a href="#deploy-957">
                            <span className="linenos"> 957</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-958">
                        <a href="#deploy-958">
                            <span className="linenos"> 958</span>
                        </a>
                        {"        "}
                        <span className="k">elif</span> <span className="n">work_pool</span>
                        <span className="o">.</span>
                        <span className="n">type</span> <span className="o">==</span>{" "}
                        <span className="s2">"process"</span>{" "}
                        <span className="ow">and</span> <span className="ow">not</span>{" "}
                        <span className="n">ignore_warnings</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-959">
                        <a href="#deploy-959">
                            <span className="linenos"> 959</span>
                        </a>
                        {"            "}
                        <span className="n">console</span>
                        <span className="o">.</span>
                        <span className="n">print</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-960">
                        <a href="#deploy-960">
                            <span className="linenos"> 960</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            "Looks like you're deploying to a process work pool. If you're
                            creating a"
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-961">
                        <a href="#deploy-961">
                            <span className="linenos"> 961</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            " deployment for local development, calling `.serve` on your flow
                            is a great"
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-962">
                        <a href="#deploy-962">
                            <span className="linenos"> 962</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            " way to get started. See the documentation for more information:"
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-963">
                        <a href="#deploy-963">
                            <span className="linenos"> 963</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            " https://docs.prefect.io/latest/concepts/flows/#serving-a-flow. "
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-964">
                        <a href="#deploy-964">
                            <span className="linenos"> 964</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            " Set `ignore_warnings=True` to suppress this message."
                        </span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-965">
                        <a href="#deploy-965">
                            <span className="linenos"> 965</span>
                        </a>
                        {"                "}
                        <span className="n">style</span>
                        <span className="o">=</span>
                        <span className="s2">"yellow"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-966">
                        <a href="#deploy-966">
                            <span className="linenos"> 966</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-967">
                        <a href="#deploy-967">
                            <span className="linenos"> 967</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-968">
                        <a href="#deploy-968">
                            <span className="linenos"> 968</span>
                        </a>
                        {"    "}
                        <span className="n">is_managed_pool</span>{" "}
                        <span className="o">=</span> <span className="n">work_pool</span>
                        <span className="o">.</span>
                        <span className="n">is_managed_pool</span>
                        {"\n"}
                    </span>
                    <span id="deploy-969">
                        <a href="#deploy-969">
                            <span className="linenos"> 969</span>
                        </a>
                        {"    "}
                        <span className="k">if</span>{" "}
                        <span className="n">is_managed_pool</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-970">
                        <a href="#deploy-970">
                            <span className="linenos"> 970</span>
                        </a>
                        {"        "}
                        <span className="n">build</span> <span className="o">=</span>{" "}
                        <span className="kc">False</span>
                        {"\n"}
                    </span>
                    <span id="deploy-971">
                        <a href="#deploy-971">
                            <span className="linenos"> 971</span>
                        </a>
                        {"        "}
                        <span className="n">push</span> <span className="o">=</span>{" "}
                        <span className="kc">False</span>
                        {"\n"}
                    </span>
                    <span id="deploy-972">
                        <a href="#deploy-972">
                            <span className="linenos"> 972</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-973">
                        <a href="#deploy-973">
                            <span className="linenos"> 973</span>
                        </a>
                        {"    "}
                        <span className="k">if</span> <span className="n">image</span>{" "}
                        <span className="ow">and</span> <span className="n">build</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-974">
                        <a href="#deploy-974">
                            <span className="linenos"> 974</span>
                        </a>
                        {"        "}
                        <span className="k">with</span> <span className="n">Progress</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-975">
                        <a href="#deploy-975">
                            <span className="linenos"> 975</span>
                        </a>
                        {"            "}
                        <span className="n">SpinnerColumn</span>
                        <span className="p">(),</span>
                        {"\n"}
                    </span>
                    <span id="deploy-976">
                        <a href="#deploy-976">
                            <span className="linenos"> 976</span>
                        </a>
                        {"            "}
                        <span className="n">TextColumn</span>
                        <span className="p">(</span>
                        <span className="sa">f</span>
                        <span className="s2">"Building image </span>
                        <span className="si">{"{"}</span>
                        <span className="n">image</span>
                        <span className="o">.</span>
                        <span className="n">reference</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">..."</span>
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="deploy-977">
                        <a href="#deploy-977">
                            <span className="linenos"> 977</span>
                        </a>
                        {"            "}
                        <span className="n">transient</span>
                        <span className="o">=</span>
                        <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-978">
                        <a href="#deploy-978">
                            <span className="linenos"> 978</span>
                        </a>
                        {"            "}
                        <span className="n">console</span>
                        <span className="o">=</span>
                        <span className="n">console</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-979">
                        <a href="#deploy-979">
                            <span className="linenos"> 979</span>
                        </a>
                        {"        "}
                        <span className="p">)</span> <span className="k">as</span>{" "}
                        <span className="n">progress</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-980">
                        <a href="#deploy-980">
                            <span className="linenos"> 980</span>
                        </a>
                        {"            "}
                        <span className="n">docker_build_task</span>{" "}
                        <span className="o">=</span> <span className="n">progress</span>
                        <span className="o">.</span>
                        <span className="n">add_task</span>
                        <span className="p">(</span>
                        <span className="s2">"docker_build"</span>
                        <span className="p">,</span> <span className="n">total</span>
                        <span className="o">=</span>
                        <span className="mi">1</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-981">
                        <a href="#deploy-981">
                            <span className="linenos"> 981</span>
                        </a>
                        {"            "}
                        <span className="n">image</span>
                        <span className="o">.</span>
                        <span className="n">build</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="deploy-982">
                        <a href="#deploy-982">
                            <span className="linenos"> 982</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-983">
                        <a href="#deploy-983">
                            <span className="linenos"> 983</span>
                        </a>
                        {"            "}
                        <span className="n">progress</span>
                        <span className="o">.</span>
                        <span className="n">update</span>
                        <span className="p">(</span>
                        <span className="n">docker_build_task</span>
                        <span className="p">,</span> <span className="n">completed</span>
                        <span className="o">=</span>
                        <span className="mi">1</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-984">
                        <a href="#deploy-984">
                            <span className="linenos"> 984</span>
                        </a>
                        {"            "}
                        <span className="n">console</span>
                        <span className="o">.</span>
                        <span className="n">print</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-985">
                        <a href="#deploy-985">
                            <span className="linenos"> 985</span>
                        </a>
                        {"                "}
                        <span className="sa">f</span>
                        <span className="s2">"Successfully built image </span>
                        <span className="si">{"{"}</span>
                        <span className="n">image</span>
                        <span className="o">.</span>
                        <span className="n">reference</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2">"</span>
                        <span className="p">,</span> <span className="n">style</span>
                        <span className="o">=</span>
                        <span className="s2">"green"</span>
                        {"\n"}
                    </span>
                    <span id="deploy-986">
                        <a href="#deploy-986">
                            <span className="linenos"> 986</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-987">
                        <a href="#deploy-987">
                            <span className="linenos"> 987</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-988">
                        <a href="#deploy-988">
                            <span className="linenos"> 988</span>
                        </a>
                        {"    "}
                        <span className="k">if</span> <span className="n">image</span>{" "}
                        <span className="ow">and</span> <span className="n">build</span>{" "}
                        <span className="ow">and</span> <span className="n">push</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-989">
                        <a href="#deploy-989">
                            <span className="linenos"> 989</span>
                        </a>
                        {"        "}
                        <span className="k">with</span> <span className="n">Progress</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-990">
                        <a href="#deploy-990">
                            <span className="linenos"> 990</span>
                        </a>
                        {"            "}
                        <span className="n">SpinnerColumn</span>
                        <span className="p">(),</span>
                        {"\n"}
                    </span>
                    <span id="deploy-991">
                        <a href="#deploy-991">
                            <span className="linenos"> 991</span>
                        </a>
                        {"            "}
                        <span className="n">TextColumn</span>
                        <span className="p">(</span>
                        <span className="s2">"Pushing image..."</span>
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="deploy-992">
                        <a href="#deploy-992">
                            <span className="linenos"> 992</span>
                        </a>
                        {"            "}
                        <span className="n">transient</span>
                        <span className="o">=</span>
                        <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-993">
                        <a href="#deploy-993">
                            <span className="linenos"> 993</span>
                        </a>
                        {"            "}
                        <span className="n">console</span>
                        <span className="o">=</span>
                        <span className="n">console</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-994">
                        <a href="#deploy-994">
                            <span className="linenos"> 994</span>
                        </a>
                        {"        "}
                        <span className="p">)</span> <span className="k">as</span>{" "}
                        <span className="n">progress</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-995">
                        <a href="#deploy-995">
                            <span className="linenos"> 995</span>
                        </a>
                        {"            "}
                        <span className="n">docker_push_task</span>{" "}
                        <span className="o">=</span> <span className="n">progress</span>
                        <span className="o">.</span>
                        <span className="n">add_task</span>
                        <span className="p">(</span>
                        <span className="s2">"docker_push"</span>
                        <span className="p">,</span> <span className="n">total</span>
                        <span className="o">=</span>
                        <span className="mi">1</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-996">
                        <a href="#deploy-996">
                            <span className="linenos"> 996</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-997">
                        <a href="#deploy-997">
                            <span className="linenos"> 997</span>
                        </a>
                        {"            "}
                        <span className="n">image</span>
                        <span className="o">.</span>
                        <span className="n">push</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="deploy-998">
                        <a href="#deploy-998">
                            <span className="linenos"> 998</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-999">
                        <a href="#deploy-999">
                            <span className="linenos"> 999</span>
                        </a>
                        {"            "}
                        <span className="n">progress</span>
                        <span className="o">.</span>
                        <span className="n">update</span>
                        <span className="p">(</span>
                        <span className="n">docker_push_task</span>
                        <span className="p">,</span> <span className="n">completed</span>
                        <span className="o">=</span>
                        <span className="mi">1</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1000">
                        <a href="#deploy-1000">
                            <span className="linenos">1000</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-1001">
                        <a href="#deploy-1001">
                            <span className="linenos">1001</span>
                        </a>
                        {"        "}
                        <span className="n">console</span>
                        <span className="o">.</span>
                        <span className="n">print</span>
                        <span className="p">(</span>
                        <span className="sa">f</span>
                        <span className="s2">"Successfully pushed image </span>
                        <span className="si">{"{"}</span>
                        <span className="n">image</span>
                        <span className="o">.</span>
                        <span className="n">reference</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2">"</span>
                        <span className="p">,</span> <span className="n">style</span>
                        <span className="o">=</span>
                        <span className="s2">"green"</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1002">
                        <a href="#deploy-1002">
                            <span className="linenos">1002</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-1003">
                        <a href="#deploy-1003">
                            <span className="linenos">1003</span>
                        </a>
                        {"    "}
                        <span className="n">deployment_exceptions</span>{" "}
                        <span className="o">=</span> <span className="p">[]</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1004">
                        <a href="#deploy-1004">
                            <span className="linenos">1004</span>
                        </a>
                        {"    "}
                        <span className="n">deployment_ids</span>{" "}
                        <span className="o">=</span> <span className="p">[]</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1005">
                        <a href="#deploy-1005">
                            <span className="linenos">1005</span>
                        </a>
                        {"    "}
                        <span className="n">
                            image_ref
                        </span> <span className="o">=</span>{" "}
                        <span className="n">image</span>
                        <span className="o">.</span>
                        <span className="n">
                            reference
                        </span> <span className="k">if</span>{" "}
                        <span className="n">image</span> <span className="k">else</span>{" "}
                        <span className="kc">None</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1006">
                        <a href="#deploy-1006">
                            <span className="linenos">1006</span>
                        </a>
                        {"    "}
                        <span className="k">
                            for
                        </span> <span className="n">deployment</span>{" "}
                        <span className="ow">in</span> <span className="n">track</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1007">
                        <a href="#deploy-1007">
                            <span className="linenos">1007</span>
                        </a>
                        {"        "}
                        <span className="n">deployments</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1008">
                        <a href="#deploy-1008">
                            <span className="linenos">1008</span>
                        </a>
                        {"        "}
                        <span className="n">description</span>
                        <span className="o">=</span>
                        <span className="s2">"Creating/updating deployments..."</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1009">
                        <a href="#deploy-1009">
                            <span className="linenos">1009</span>
                        </a>
                        {"        "}
                        <span className="n">console</span>
                        <span className="o">=</span>
                        <span className="n">console</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1010">
                        <a href="#deploy-1010">
                            <span className="linenos">1010</span>
                        </a>
                        {"        "}
                        <span className="n">transient</span>
                        <span className="o">=</span>
                        <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1011">
                        <a href="#deploy-1011">
                            <span className="linenos">1011</span>
                        </a>
                        {"    "}
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1012">
                        <a href="#deploy-1012">
                            <span className="linenos">1012</span>
                        </a>
                        {"        "}
                        <span className="k">try</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1013">
                        <a href="#deploy-1013">
                            <span className="linenos">1013</span>
                        </a>
                        {"            "}
                        <span className="n">deployment_ids</span>
                        <span className="o">.</span>
                        <span className="n">append</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1014">
                        <a href="#deploy-1014">
                            <span className="linenos">1014</span>
                        </a>
                        {"                "}
                        <span className="k">await</span>{" "}
                        <span className="n">deployment</span>
                        <span className="o">.</span>
                        <span className="n">apply</span>
                        <span className="p">(</span>
                        <span className="n">image</span>
                        <span className="o">=</span>
                        <span className="n">image_ref</span>
                        <span className="p">,</span>{" "}
                        <span className="n">work_pool_name</span>
                        <span className="o">=</span>
                        <span className="n">work_pool_name</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1015">
                        <a href="#deploy-1015">
                            <span className="linenos">1015</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1016">
                        <a href="#deploy-1016">
                            <span className="linenos">1016</span>
                        </a>
                        {"        "}
                        <span className="k">except</span>{" "}
                        <span className="ne">Exception</span> <span className="k">as</span>{" "}
                        <span className="n">exc</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1017">
                        <a href="#deploy-1017">
                            <span className="linenos">1017</span>
                        </a>
                        {"            "}
                        <span className="k">if</span> <span className="nb">len</span>
                        <span className="p">(</span>
                        <span className="n">deployments</span>
                        <span className="p">)</span> <span className="o">==</span>{" "}
                        <span className="mi">1</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1018">
                        <a href="#deploy-1018">
                            <span className="linenos">1018</span>
                        </a>
                        {"                "}
                        <span className="k">raise</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1019">
                        <a href="#deploy-1019">
                            <span className="linenos">1019</span>
                        </a>
                        {"            "}
                        <span className="n">deployment_exceptions</span>
                        <span className="o">.</span>
                        <span className="n">append</span>
                        <span className="p">({"{"}</span>
                        <span className="s2">"deployment"</span>
                        <span className="p">:</span> <span className="n">deployment</span>
                        <span className="p">,</span> <span className="s2">"exc"</span>
                        <span className="p">:</span> <span className="n">exc</span>
                        <span className="p">{"}"})</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1020">
                        <a href="#deploy-1020">
                            <span className="linenos">1020</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-1021">
                        <a href="#deploy-1021">
                            <span className="linenos">1021</span>
                        </a>
                        {"    "}
                        <span className="k">if</span>{" "}
                        <span className="n">deployment_exceptions</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1022">
                        <a href="#deploy-1022">
                            <span className="linenos">1022</span>
                        </a>
                        {"        "}
                        <span className="n">console</span>
                        <span className="o">.</span>
                        <span className="n">print</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1023">
                        <a href="#deploy-1023">
                            <span className="linenos">1023</span>
                        </a>
                        {"            "}
                        <span className="s2">
                            "Encountered errors while creating/updating deployments:
                        </span>
                        <span className="se">\n</span>
                        <span className="s2">"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1024">
                        <a href="#deploy-1024">
                            <span className="linenos">1024</span>
                        </a>
                        {"            "}
                        <span className="n">style</span>
                        <span className="o">=</span>
                        <span className="s2">"orange_red1"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1025">
                        <a href="#deploy-1025">
                            <span className="linenos">1025</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1026">
                        <a href="#deploy-1026">
                            <span className="linenos">1026</span>
                        </a>
                        {"    "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1027">
                        <a href="#deploy-1027">
                            <span className="linenos">1027</span>
                        </a>
                        {"        "}
                        <span className="n">console</span>
                        <span className="o">.</span>
                        <span className="n">print</span>
                        <span className="p">(</span>
                        <span className="s2">
                            "Successfully created/updated all deployments!
                        </span>
                        <span className="se">\n</span>
                        <span className="s2">"</span>
                        <span className="p">,</span> <span className="n">style</span>
                        <span className="o">=</span>
                        <span className="s2">"green"</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1028">
                        <a href="#deploy-1028">
                            <span className="linenos">1028</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-1029">
                        <a href="#deploy-1029">
                            <span className="linenos">1029</span>
                        </a>
                        {"    "}
                        <span className="n">complete_failure</span>{" "}
                        <span className="o">=</span> <span className="nb">len</span>
                        <span className="p">(</span>
                        <span className="n">deployment_exceptions</span>
                        <span className="p">)</span> <span className="o">==</span>{" "}
                        <span className="nb">len</span>
                        <span className="p">(</span>
                        <span className="n">deployments</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1030">
                        <a href="#deploy-1030">
                            <span className="linenos">1030</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-1031">
                        <a href="#deploy-1031">
                            <span className="linenos">1031</span>
                        </a>
                        {"    "}
                        <span className="n">table</span> <span className="o">=</span>{" "}
                        <span className="n">Table</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1032">
                        <a href="#deploy-1032">
                            <span className="linenos">1032</span>
                        </a>
                        {"        "}
                        <span className="n">title</span>
                        <span className="o">=</span>
                        <span className="s2">"Deployments"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1033">
                        <a href="#deploy-1033">
                            <span className="linenos">1033</span>
                        </a>
                        {"        "}
                        <span className="n">show_lines</span>
                        <span className="o">=</span>
                        <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1034">
                        <a href="#deploy-1034">
                            <span className="linenos">1034</span>
                        </a>
                        {"    "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1035">
                        <a href="#deploy-1035">
                            <span className="linenos">1035</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-1036">
                        <a href="#deploy-1036">
                            <span className="linenos">1036</span>
                        </a>
                        {"    "}
                        <span className="n">table</span>
                        <span className="o">.</span>
                        <span className="n">add_column</span>
                        <span className="p">(</span>
                        <span className="n">header</span>
                        <span className="o">=</span>
                        <span className="s2">"Name"</span>
                        <span className="p">,</span> <span className="n">style</span>
                        <span className="o">=</span>
                        <span className="s2">"blue"</span>
                        <span className="p">,</span> <span className="n">no_wrap</span>
                        <span className="o">=</span>
                        <span className="kc">True</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1037">
                        <a href="#deploy-1037">
                            <span className="linenos">1037</span>
                        </a>
                        {"    "}
                        <span className="n">table</span>
                        <span className="o">.</span>
                        <span className="n">add_column</span>
                        <span className="p">(</span>
                        <span className="n">header</span>
                        <span className="o">=</span>
                        <span className="s2">"Status"</span>
                        <span className="p">,</span> <span className="n">style</span>
                        <span className="o">=</span>
                        <span className="s2">"blue"</span>
                        <span className="p">,</span> <span className="n">no_wrap</span>
                        <span className="o">=</span>
                        <span className="kc">True</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1038">
                        <a href="#deploy-1038">
                            <span className="linenos">1038</span>
                        </a>
                        {"    "}
                        <span className="n">table</span>
                        <span className="o">.</span>
                        <span className="n">add_column</span>
                        <span className="p">(</span>
                        <span className="n">header</span>
                        <span className="o">=</span>
                        <span className="s2">"Details"</span>
                        <span className="p">,</span> <span className="n">style</span>
                        <span className="o">=</span>
                        <span className="s2">"blue"</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1039">
                        <a href="#deploy-1039">
                            <span className="linenos">1039</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-1040">
                        <a href="#deploy-1040">
                            <span className="linenos">1040</span>
                        </a>
                        {"    "}
                        <span className="k">
                            for
                        </span> <span className="n">deployment</span>{" "}
                        <span className="ow">in</span>{" "}
                        <span className="n">deployments</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1041">
                        <a href="#deploy-1041">
                            <span className="linenos">1041</span>
                        </a>
                        {"        "}
                        <span className="n">errored_deployment</span>{" "}
                        <span className="o">=</span> <span className="nb">next</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1042">
                        <a href="#deploy-1042">
                            <span className="linenos">1042</span>
                        </a>
                        {"            "}
                        <span className="p">(</span>
                        <span className="n">d</span> <span className="k">for</span>{" "}
                        <span className="n">d</span> <span className="ow">in</span>{" "}
                        <span className="n">deployment_exceptions</span>{" "}
                        <span className="k">if</span> <span className="n">d</span>
                        <span className="p">[</span>
                        <span className="s2">"deployment"</span>
                        <span className="p">]</span> <span className="o">==</span>{" "}
                        <span className="n">deployment</span>
                        <span className="p">),</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1043">
                        <a href="#deploy-1043">
                            <span className="linenos">1043</span>
                        </a>
                        {"            "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1044">
                        <a href="#deploy-1044">
                            <span className="linenos">1044</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1045">
                        <a href="#deploy-1045">
                            <span className="linenos">1045</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">errored_deployment</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1046">
                        <a href="#deploy-1046">
                            <span className="linenos">1046</span>
                        </a>
                        {"            "}
                        <span className="n">table</span>
                        <span className="o">.</span>
                        <span className="n">add_row</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1047">
                        <a href="#deploy-1047">
                            <span className="linenos">1047</span>
                        </a>
                        {"                "}
                        <span className="sa">f</span>
                        <span className="s2">"</span>
                        <span className="si">{"{"}</span>
                        <span className="n">deployment</span>
                        <span className="o">.</span>
                        <span className="n">flow_name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">/</span>
                        <span className="si">{"{"}</span>
                        <span className="n">deployment</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1048">
                        <a href="#deploy-1048">
                            <span className="linenos">1048</span>
                        </a>
                        {"                "}
                        <span className="s2">"failed"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1049">
                        <a href="#deploy-1049">
                            <span className="linenos">1049</span>
                        </a>
                        {"                "}
                        <span className="nb">str</span>
                        <span className="p">(</span>
                        <span className="n">errored_deployment</span>
                        <span className="p">[</span>
                        <span className="s2">"exc"</span>
                        <span className="p">]),</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1050">
                        <a href="#deploy-1050">
                            <span className="linenos">1050</span>
                        </a>
                        {"                "}
                        <span className="n">style</span>
                        <span className="o">=</span>
                        <span className="s2">"red"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1051">
                        <a href="#deploy-1051">
                            <span className="linenos">1051</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1052">
                        <a href="#deploy-1052">
                            <span className="linenos">1052</span>
                        </a>
                        {"        "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1053">
                        <a href="#deploy-1053">
                            <span className="linenos">1053</span>
                        </a>
                        {"            "}
                        <span className="n">table</span>
                        <span className="o">.</span>
                        <span className="n">add_row</span>
                        <span className="p">(</span>
                        <span className="sa">f</span>
                        <span className="s2">"</span>
                        <span className="si">{"{"}</span>
                        <span className="n">deployment</span>
                        <span className="o">.</span>
                        <span className="n">flow_name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">/</span>
                        <span className="si">{"{"}</span>
                        <span className="n">deployment</span>
                        <span className="o">.</span>
                        <span className="n">name</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">"</span>
                        <span className="p">,</span> <span className="s2">"applied"</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1054">
                        <a href="#deploy-1054">
                            <span className="linenos">1054</span>
                        </a>
                        {"    "}
                        <span className="n">console</span>
                        <span className="o">.</span>
                        <span className="n">print</span>
                        <span className="p">(</span>
                        <span className="n">table</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1055">
                        <a href="#deploy-1055">
                            <span className="linenos">1055</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-1056">
                        <a href="#deploy-1056">
                            <span className="linenos">1056</span>
                        </a>
                        {"    "}
                        <span className="k">if</span>{" "}
                        <span className="n">print_next_steps_message</span>{" "}
                        <span className="ow">and</span> <span className="ow">not</span>{" "}
                        <span className="n">complete_failure</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1057">
                        <a href="#deploy-1057">
                            <span className="linenos">1057</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">work_pool</span>
                        <span className="o">.</span>
                        <span className="n">is_push_pool</span>{" "}
                        <span className="ow">and</span> <span className="ow">not</span>{" "}
                        <span className="n">work_pool</span>
                        <span className="o">.</span>
                        <span className="n">is_managed_pool</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1058">
                        <a href="#deploy-1058">
                            <span className="linenos">1058</span>
                        </a>
                        {"            "}
                        <span className="n">console</span>
                        <span className="o">.</span>
                        <span className="n">print</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1059">
                        <a href="#deploy-1059">
                            <span className="linenos">1059</span>
                        </a>
                        {"                "}
                        <span className="s2">"</span>
                        <span className="se">\n</span>
                        <span className="s2">
                            To execute flow runs from these deployments, start a worker in a"
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-1060">
                        <a href="#deploy-1060">
                            <span className="linenos">1060</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            " separate terminal that pulls work from the"
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-1061">
                        <a href="#deploy-1061">
                            <span className="linenos">1061</span>
                        </a>
                        {"                "}
                        <span className="sa">f</span>
                        <span className="s2">" </span>
                        <span className="si">{"{"}</span>
                        <span className="n">work_pool_name</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2"> work pool:"</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1062">
                        <a href="#deploy-1062">
                            <span className="linenos">1062</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1063">
                        <a href="#deploy-1063">
                            <span className="linenos">1063</span>
                        </a>
                        {"            "}
                        <span className="n">console</span>
                        <span className="o">.</span>
                        <span className="n">print</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1064">
                        <a href="#deploy-1064">
                            <span className="linenos">1064</span>
                        </a>
                        {"                "}
                        <span className="sa">f</span>
                        <span className="s2">"</span>
                        <span className="se">\n\t</span>
                        <span className="s2">$ prefect worker start --pool </span>
                        <span className="si">{"{"}</span>
                        <span className="n">work_pool_name</span>
                        <span className="si">!r{"}"}</span>
                        <span className="s2">"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1065">
                        <a href="#deploy-1065">
                            <span className="linenos">1065</span>
                        </a>
                        {"                "}
                        <span className="n">style</span>
                        <span className="o">=</span>
                        <span className="s2">"blue"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1066">
                        <a href="#deploy-1066">
                            <span className="linenos">1066</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1067">
                        <a href="#deploy-1067">
                            <span className="linenos">1067</span>
                        </a>
                        {"        "}
                        <span className="n">console</span>
                        <span className="o">.</span>
                        <span className="n">print</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1068">
                        <a href="#deploy-1068">
                            <span className="linenos">1068</span>
                        </a>
                        {"            "}
                        <span className="s2">"</span>
                        <span className="se">\n</span>
                        <span className="s2">
                            To trigger any of these deployments, use the"
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-1069">
                        <a href="#deploy-1069">
                            <span className="linenos">1069</span>
                        </a>
                        {"            "}
                        <span className="s2">" following command:</span>
                        <span className="se">\n</span>
                        <span className="s2">[blue]</span>
                        <span className="se">\n\t</span>
                        <span className="s2">$ prefect deployment run"</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1070">
                        <a href="#deploy-1070">
                            <span className="linenos">1070</span>
                        </a>
                        {"            "}
                        <span className="s2">" [DEPLOYMENT_NAME]</span>
                        <span className="se">\n</span>
                        <span className="s2">[/]"</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1071">
                        <a href="#deploy-1071">
                            <span className="linenos">1071</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1072">
                        <a href="#deploy-1072">
                            <span className="linenos">1072</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-1073">
                        <a href="#deploy-1073">
                            <span className="linenos">1073</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">PREFECT_UI_URL</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1074">
                        <a href="#deploy-1074">
                            <span className="linenos">1074</span>
                        </a>
                        {"            "}
                        <span className="n">console</span>
                        <span className="o">.</span>
                        <span className="n">print</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1075">
                        <a href="#deploy-1075">
                            <span className="linenos">1075</span>
                        </a>
                        {"                "}
                        <span className="s2">"</span>
                        <span className="se">\n</span>
                        <span className="s2">
                            You can also trigger your deployments via the Prefect UI:"
                        </span>
                        {"\n"}
                    </span>
                    <span id="deploy-1076">
                        <a href="#deploy-1076">
                            <span className="linenos">1076</span>
                        </a>
                        {"                "}
                        <span className="sa">f</span>
                        <span className="s2">" [blue]</span>
                        <span className="si">{"{"}</span>
                        <span className="n">PREFECT_UI_URL</span>
                        <span className="o">.</span>
                        <span className="n">value</span>
                        <span className="p">()</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">/deployments[/]</span>
                        <span className="se">\n</span>
                        <span className="s2">"</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1077">
                        <a href="#deploy-1077">
                            <span className="linenos">1077</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="deploy-1078">
                        <a href="#deploy-1078">
                            <span className="linenos">1078</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="deploy-1079">
                        <a href="#deploy-1079">
                            <span className="linenos">1079</span>
                        </a>
                        {"    "}
                        <span className="k">return</span>{" "}
                        <span className="n">deployment_ids</span>
                        {"\n"}
                    </span>
                </pre>
            </div>
            <div className="docstring">
                <p>
                    Deploy the provided list of deployments to dynamic infrastructure via
                    a work pool.
                </p>
                <p>
                    By default, calling this function will build a Docker image for the
                    deployments, push it to a registry, and create each deployment via the
                    Prefect API that will run the corresponding flow on the given
                    schedule.
                </p>
                <p>
                    If you want to use an existing image, you can pass{" "}
                    <code>build=False</code> to skip building and pushing an image.
                </p>
                <p>
                    Args: *deployments: A list of deployments to deploy. work_pool_name:
                    The name of the work pool to use for these deployments. Defaults to
                    the value of <code>PREFECT_DEFAULT_WORK_POOL_NAME</code>. image: The
                    name of the Docker image to build, including the registry and
                    repository. Pass a DeploymentImage instance to customize the
                    Dockerfile used and build arguments. build: Whether or not to build a
                    new image for the flow. If False, the provided image will be used
                    as-is and pulled at runtime. push: Whether or not to skip pushing the
                    built image to a registry. print_next_steps_message: Whether or not to
                    print a message with next steps after deploying the deployments.
                </p>
                <p>
                    Returns: A list of deployment IDs for the created/updated deployments.
                </p>
                <p>Examples: Deploy a group of flows to a work pool:</p>
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <code>
                            <span className="kn">from</span>{" "}
                            <span className="nn">prefect</span>{" "}
                            <span className="kn">import</span>{" "}
                            <span className="n">deploy</span>
                            <span className="p">,</span> <span className="n">flow</span>
                            {"\n"} <br />
                            {"\n"}
                            {"    "}
                            <span className="nd">@flow</span>
                            <span className="p">(</span>
                            <span className="n">log_prints</span>
                            <span className="o">=</span>
                            <span className="kc">True</span>
                            <span className="p">)</span>
                            {"\n"}
                            {"    "}
                            <span className="k">def</span>{" "}
                            <span className="nf">local_flow</span>
                            <span className="p">():</span>
                            {"\n"}
                            {"        "}
                            <span className="nb">print</span>
                            <span className="p">(</span>
                            <span className="s2">"I'm a locally defined flow!"</span>
                            <span className="p">)</span>
                            {"\n"} <br />
                            {"\n"}
                            {"    "}
                            <span className="k">
                                if
                            </span> <span className="vm">__name__</span>{" "}
                            <span className="o">==</span>{" "}
                            <span className="s2">"__main__"</span>
                            <span className="p">:</span>
                            {"\n"}
                            {"        "}
                            <span className="n">deploy</span>
                            <span className="p">(</span>
                            {"\n"}
                            {"            "}
                            <span className="n">local_flow</span>
                            <span className="o">.</span>
                            <span className="n">to_deployment</span>
                            <span className="p">(</span>
                            <span className="n">name</span>
                            <span className="o">=</span>
                            <span className="s2">"example-deploy-local-flow"</span>
                            <span className="p">),</span>
                            {"\n"}
                            {"            "}
                            <span className="n">flow</span>
                            <span className="o">.</span>
                            <span className="n">from_source</span>
                            <span className="p">(</span>
                            {"\n"}
                            {"                "}
                            <span className="n">source</span>
                            <span className="o">=</span>
                            <span className="s2">
                                "
                                <a href="https://github.com/org/repo.git&quot">
                                    https://github.com/org/repo.git&amp;quot
                                </a>
                                ;
                            </span>
                            <span className="p">,</span>
                            {"\n"}
                            {"                "}
                            <span className="n">entrypoint</span>
                            <span className="o">=</span>
                            <span className="s2">"flows.py:my_flow"</span>
                            <span className="p">,</span>
                            {"\n"}
                            {"            "}
                            <span className="p">)</span>
                            <span className="o">.</span>
                            <span className="n">to_deployment</span>
                            <span className="p">(</span>
                            {"\n"}
                            {"                "}
                            <span className="n">name</span>
                            <span className="o">=</span>
                            <span className="s2">"example-deploy-remote-flow"</span>
                            <span className="p">,</span>
                            {"\n"}
                            {"            "}
                            <span className="p">),</span>
                            {"\n"}
                            {"            "}
                            <span className="n">work_pool_name</span>
                            <span className="o">=</span>
                            <span className="s2">"my-work-pool"</span>
                            <span className="p">,</span>
                            {"\n"}
                            {"            "}
                            <span className="n">image</span>
                            <span className="o">=</span>
                            <span className="s2">"my-registry/my-image:dev"</span>
                            <span className="p">,</span>
                            {"\n"}
                            {"        "}
                            <span className="p">)</span>
                            {"\n"}
                            {"    "}
                        </code>
                    </pre>
                </div>
                <p />
            </div>
        </section>
        <section id="pause_flow_run">
            <input
                id="pause_flow_run-view-source"
                className="view-source-toggle-state"
                type="checkbox"
                aria-hidden="true"
                tabIndex={-1}
            />
            <div className="attr function">
                <div className="decorator">@sync_compatible</div>
                <div className="decorator">
                    @deprecated_parameter('flow_run_id', start_date='Dec 2023', help='Use
                    `suspend_flow_run` instead.')
                </div>
                <div className="decorator">
                    @deprecated_parameter('reschedule', start_date='Dec 2023', when=lambda
                    p: p is True, help='Use `suspend_flow_run` instead.')
                </div>
                <div className="decorator">
                    @experimental_parameter('wait_for_input', group='flow_run_input',
                    when=lambda y: y is not None)
                </div>
                <span className="def">def</span>
                <span className="name">pause_flow_run</span>
                <span className="signature pdoc-code multiline">
                    (
                    <span className="param">
                        {" "}
                        <span className="n">wait_for_input</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Type</span>
                        <span className="p">[</span>
                        <span className="o">~</span>
                        <span className="n">T</span>
                        <span className="p">]]</span>
                        <span className="o">=</span> <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">flow_run_id</span>
                        <span className="p">:</span> <span className="n">uuid</span>
                        <span className="o">.</span>
                        <span className="n">UUID</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">timeout</span>
                        <span className="p">:</span> <span className="nb">int</span>{" "}
                        <span className="o">=</span> <span className="mi">3600</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">poll_interval</span>
                        <span className="p">:</span> <span className="nb">int</span>{" "}
                        <span className="o">=</span> <span className="mi">10</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">reschedule</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">key</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                    </span>
                    <span className="return-annotation">
                        ) -&gt; <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="o">~</span>
                        <span className="n">T</span>
                        <span className="p">]</span>:
                    </span>
                </span>
                <label
                    className="view-source-button"
                    htmlFor="pause_flow_run-view-source"
                >
                    <span>View Source</span>
                </label>
            </div>
            <a className="headerlink" href="#pause_flow_run" />
            <div className="pdoc-code codehilite">
                <pre>
                    <span />
                    <span id="pause_flow_run-1003">
                        <a href="#pause_flow_run-1003">
                            <span className="linenos">1003</span>
                        </a>
                        <span className="nd">@sync_compatible</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1004">
                        <a href="#pause_flow_run-1004">
                            <span className="linenos">1004</span>
                        </a>
                        <span className="nd">@deprecated_parameter</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1005">
                        <a href="#pause_flow_run-1005">
                            <span className="linenos">1005</span>
                        </a>
                        {"    "}
                        <span className="s2">"flow_run_id"</span>
                        <span className="p">,</span> <span className="n">start_date</span>
                        <span className="o">=</span>
                        <span className="s2">"Dec 2023"</span>
                        <span className="p">,</span> <span className="n">help</span>
                        <span className="o">=</span>
                        <span className="s2">"Use `suspend_flow_run` instead."</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1006">
                        <a href="#pause_flow_run-1006">
                            <span className="linenos">1006</span>
                        </a>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1007">
                        <a href="#pause_flow_run-1007">
                            <span className="linenos">1007</span>
                        </a>
                        <span className="nd">@deprecated_parameter</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1008">
                        <a href="#pause_flow_run-1008">
                            <span className="linenos">1008</span>
                        </a>
                        {"    "}
                        <span className="s2">"reschedule"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1009">
                        <a href="#pause_flow_run-1009">
                            <span className="linenos">1009</span>
                        </a>
                        {"    "}
                        <span className="n">start_date</span>
                        <span className="o">=</span>
                        <span className="s2">"Dec 2023"</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1010">
                        <a href="#pause_flow_run-1010">
                            <span className="linenos">1010</span>
                        </a>
                        {"    "}
                        <span className="n">when</span>
                        <span className="o">=</span>
                        <span className="k">lambda</span> <span className="n">p</span>
                        <span className="p">:</span> <span className="n">p</span>{" "}
                        <span className="ow">is</span> <span className="kc">True</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1011">
                        <a href="#pause_flow_run-1011">
                            <span className="linenos">1011</span>
                        </a>
                        {"    "}
                        <span className="n">help</span>
                        <span className="o">=</span>
                        <span className="s2">"Use `suspend_flow_run` instead."</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1012">
                        <a href="#pause_flow_run-1012">
                            <span className="linenos">1012</span>
                        </a>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1013">
                        <a href="#pause_flow_run-1013">
                            <span className="linenos">1013</span>
                        </a>
                        <span className="nd">@experimental_parameter</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1014">
                        <a href="#pause_flow_run-1014">
                            <span className="linenos">1014</span>
                        </a>
                        {"    "}
                        <span className="s2">"wait_for_input"</span>
                        <span className="p">,</span> <span className="n">group</span>
                        <span className="o">=</span>
                        <span className="s2">"flow_run_input"</span>
                        <span className="p">,</span> <span className="n">when</span>
                        <span className="o">=</span>
                        <span className="k">lambda</span> <span className="n">y</span>
                        <span className="p">:</span> <span className="n">y</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1015">
                        <a href="#pause_flow_run-1015">
                            <span className="linenos">1015</span>
                        </a>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1016">
                        <a href="#pause_flow_run-1016">
                            <span className="linenos">1016</span>
                        </a>
                        <span className="k">async</span> <span className="k">def</span>{" "}
                        <span className="nf">pause_flow_run</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1017">
                        <a href="#pause_flow_run-1017">
                            <span className="linenos">1017</span>
                        </a>
                        {"    "}
                        <span className="n">wait_for_input</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Type</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1018">
                        <a href="#pause_flow_run-1018">
                            <span className="linenos">1018</span>
                        </a>
                        {"    "}
                        <span className="n">flow_run_id</span>
                        <span className="p">:</span> <span className="n">UUID</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1019">
                        <a href="#pause_flow_run-1019">
                            <span className="linenos">1019</span>
                        </a>
                        {"    "}
                        <span className="n">timeout</span>
                        <span className="p">:</span> <span className="nb">int</span>{" "}
                        <span className="o">=</span> <span className="mi">3600</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1020">
                        <a href="#pause_flow_run-1020">
                            <span className="linenos">1020</span>
                        </a>
                        {"    "}
                        <span className="n">poll_interval</span>
                        <span className="p">:</span> <span className="nb">int</span>{" "}
                        <span className="o">=</span> <span className="mi">10</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1021">
                        <a href="#pause_flow_run-1021">
                            <span className="linenos">1021</span>
                        </a>
                        {"    "}
                        <span className="n">reschedule</span>
                        <span className="p">:</span> <span className="nb">bool</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1022">
                        <a href="#pause_flow_run-1022">
                            <span className="linenos">1022</span>
                        </a>
                        {"    "}
                        <span className="n">key</span>
                        <span className="p">:</span> <span className="nb">str</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1023">
                        <a href="#pause_flow_run-1023">
                            <span className="linenos">1023</span>
                        </a>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1024">
                        <a href="#pause_flow_run-1024">
                            <span className="linenos">1024</span>
                        </a>
                        <span className="w">{"    "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1025">
                        <a href="#pause_flow_run-1025">
                            <span className="linenos">1025</span>
                        </a>
                        <span className="sd">
                            {"    "}Pauses the current flow run by blocking execution until
                            resumed.
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1026">
                        <a href="#pause_flow_run-1026">
                            <span className="linenos">1026</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1027">
                        <a href="#pause_flow_run-1027">
                            <span className="linenos">1027</span>
                        </a>
                        <span className="sd">
                            {"    "}When called within a flow run, execution will block and no
                            downstream tasks will
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1028">
                        <a href="#pause_flow_run-1028">
                            <span className="linenos">1028</span>
                        </a>
                        <span className="sd">
                            {"    "}run until the flow is resumed. Task runs that have already
                            started will continue
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1029">
                        <a href="#pause_flow_run-1029">
                            <span className="linenos">1029</span>
                        </a>
                        <span className="sd">
                            {"    "}running. A timeout parameter can be passed that will fail
                            the flow run if it has not
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1030">
                        <a href="#pause_flow_run-1030">
                            <span className="linenos">1030</span>
                        </a>
                        <span className="sd">
                            {"    "}been resumed within the specified time.
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1031">
                        <a href="#pause_flow_run-1031">
                            <span className="linenos">1031</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1032">
                        <a href="#pause_flow_run-1032">
                            <span className="linenos">1032</span>
                        </a>
                        <span className="sd">{"    "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1033">
                        <a href="#pause_flow_run-1033">
                            <span className="linenos">1033</span>
                        </a>
                        <span className="sd">
                            {"        "}flow_run_id: a flow run id. If supplied, this function
                            will attempt to pause
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1034">
                        <a href="#pause_flow_run-1034">
                            <span className="linenos">1034</span>
                        </a>
                        <span className="sd">
                            {"            "}the specified flow run outside of the flow run
                            process. When paused, the
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1035">
                        <a href="#pause_flow_run-1035">
                            <span className="linenos">1035</span>
                        </a>
                        <span className="sd">
                            {"            "}flow run will continue execution until the NEXT
                            task is orchestrated, at
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1036">
                        <a href="#pause_flow_run-1036">
                            <span className="linenos">1036</span>
                        </a>
                        <span className="sd">
                            {"            "}which point the flow will exit. Any tasks that
                            have already started will
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1037">
                        <a href="#pause_flow_run-1037">
                            <span className="linenos">1037</span>
                        </a>
                        <span className="sd">
                            {"            "}run until completion. When resumed, the flow run
                            will be rescheduled to
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1038">
                        <a href="#pause_flow_run-1038">
                            <span className="linenos">1038</span>
                        </a>
                        <span className="sd">
                            {"            "}finish execution. In order pause a flow run in
                            this way, the flow needs to
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1039">
                        <a href="#pause_flow_run-1039">
                            <span className="linenos">1039</span>
                        </a>
                        <span className="sd">
                            {"            "}have an associated deployment and results need to
                            be configured with the
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1040">
                        <a href="#pause_flow_run-1040">
                            <span className="linenos">1040</span>
                        </a>
                        <span className="sd">
                            {"            "}`persist_results` option.
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1041">
                        <a href="#pause_flow_run-1041">
                            <span className="linenos">1041</span>
                        </a>
                        <span className="sd">
                            {"        "}timeout: the number of seconds to wait for the flow to
                            be resumed before
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1042">
                        <a href="#pause_flow_run-1042">
                            <span className="linenos">1042</span>
                        </a>
                        <span className="sd">
                            {"            "}failing. Defaults to 1 hour (3600 seconds). If the
                            pause timeout exceeds
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1043">
                        <a href="#pause_flow_run-1043">
                            <span className="linenos">1043</span>
                        </a>
                        <span className="sd">
                            {"            "}any configured flow-level timeout, the flow might
                            fail even after resuming.
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1044">
                        <a href="#pause_flow_run-1044">
                            <span className="linenos">1044</span>
                        </a>
                        <span className="sd">
                            {"        "}poll_interval: The number of seconds between checking
                            whether the flow has been
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1045">
                        <a href="#pause_flow_run-1045">
                            <span className="linenos">1045</span>
                        </a>
                        <span className="sd">
                            {"            "}resumed. Defaults to 10 seconds.
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1046">
                        <a href="#pause_flow_run-1046">
                            <span className="linenos">1046</span>
                        </a>
                        <span className="sd">
                            {"        "}reschedule: Flag that will reschedule the flow run if
                            resumed. Instead of
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1047">
                        <a href="#pause_flow_run-1047">
                            <span className="linenos">1047</span>
                        </a>
                        <span className="sd">
                            {"            "}blocking execution, the flow will gracefully exit
                            (with no result returned)
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1048">
                        <a href="#pause_flow_run-1048">
                            <span className="linenos">1048</span>
                        </a>
                        <span className="sd">
                            {"            "}instead. To use this flag, a flow needs to have an
                            associated deployment and
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1049">
                        <a href="#pause_flow_run-1049">
                            <span className="linenos">1049</span>
                        </a>
                        <span className="sd">
                            {"            "}results need to be configured with the
                            `persist_results` option.
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1050">
                        <a href="#pause_flow_run-1050">
                            <span className="linenos">1050</span>
                        </a>
                        <span className="sd">
                            {"        "}key: An optional key to prevent calling pauses more
                            than once. This defaults to
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1051">
                        <a href="#pause_flow_run-1051">
                            <span className="linenos">1051</span>
                        </a>
                        <span className="sd">
                            {"            "}the number of pauses observed by the flow so far,
                            and prevents pauses that
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1052">
                        <a href="#pause_flow_run-1052">
                            <span className="linenos">1052</span>
                        </a>
                        <span className="sd">
                            {"            "}use the "reschedule" option from running the same
                            pause twice. A custom key
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1053">
                        <a href="#pause_flow_run-1053">
                            <span className="linenos">1053</span>
                        </a>
                        <span className="sd">
                            {"            "}can be supplied for custom pausing behavior.
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1054">
                        <a href="#pause_flow_run-1054">
                            <span className="linenos">1054</span>
                        </a>
                        <span className="sd">
                            {"        "}wait_for_input: a subclass of `RunInput` or any type
                            supported by
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1055">
                        <a href="#pause_flow_run-1055">
                            <span className="linenos">1055</span>
                        </a>
                        <span className="sd">
                            {"            "}Pydantic. If provided when the flow pauses, the
                            flow will wait for the
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1056">
                        <a href="#pause_flow_run-1056">
                            <span className="linenos">1056</span>
                        </a>
                        <span className="sd">
                            {"            "}input to be provided before resuming. If the flow
                            is resumed without
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1057">
                        <a href="#pause_flow_run-1057">
                            <span className="linenos">1057</span>
                        </a>
                        <span className="sd">
                            {"            "}providing the input, the flow will fail. If the
                            flow is resumed with the
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1058">
                        <a href="#pause_flow_run-1058">
                            <span className="linenos">1058</span>
                        </a>
                        <span className="sd">
                            {"            "}input, the flow will resume and the input will be
                            loaded and returned
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1059">
                        <a href="#pause_flow_run-1059">
                            <span className="linenos">1059</span>
                        </a>
                        <span className="sd">{"            "}from this function.</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1060">
                        <a href="#pause_flow_run-1060">
                            <span className="linenos">1060</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1061">
                        <a href="#pause_flow_run-1061">
                            <span className="linenos">1061</span>
                        </a>
                        <span className="sd">{"    "}Example:</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1062">
                        <a href="#pause_flow_run-1062">
                            <span className="linenos">1062</span>
                        </a>
                        <span className="sd">{"    "}```python</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1063">
                        <a href="#pause_flow_run-1063">
                            <span className="linenos">1063</span>
                        </a>
                        <span className="sd">{"    "}@task</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1064">
                        <a href="#pause_flow_run-1064">
                            <span className="linenos">1064</span>
                        </a>
                        <span className="sd">{"    "}def task_one():</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1065">
                        <a href="#pause_flow_run-1065">
                            <span className="linenos">1065</span>
                        </a>
                        <span className="sd">{"        "}for i in range(3):</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1066">
                        <a href="#pause_flow_run-1066">
                            <span className="linenos">1066</span>
                        </a>
                        <span className="sd">{"            "}sleep(1)</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1067">
                        <a href="#pause_flow_run-1067">
                            <span className="linenos">1067</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1068">
                        <a href="#pause_flow_run-1068">
                            <span className="linenos">1068</span>
                        </a>
                        <span className="sd">{"    "}@flow</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1069">
                        <a href="#pause_flow_run-1069">
                            <span className="linenos">1069</span>
                        </a>
                        <span className="sd">{"    "}def my_flow():</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1070">
                        <a href="#pause_flow_run-1070">
                            <span className="linenos">1070</span>
                        </a>
                        <span className="sd">
                            {"        "}terminal_state = task_one.submit(return_state=True)
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1071">
                        <a href="#pause_flow_run-1071">
                            <span className="linenos">1071</span>
                        </a>
                        <span className="sd">
                            {"        "}if terminal_state.type == StateType.COMPLETED:
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1072">
                        <a href="#pause_flow_run-1072">
                            <span className="linenos">1072</span>
                        </a>
                        <span className="sd">
                            {"            "}print("Task one succeeded! Pausing flow run..")
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1073">
                        <a href="#pause_flow_run-1073">
                            <span className="linenos">1073</span>
                        </a>
                        <span className="sd">
                            {"            "}pause_flow_run(timeout=2)
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1074">
                        <a href="#pause_flow_run-1074">
                            <span className="linenos">1074</span>
                        </a>
                        <span className="sd">{"        "}else:</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1075">
                        <a href="#pause_flow_run-1075">
                            <span className="linenos">1075</span>
                        </a>
                        <span className="sd">
                            {"            "}print("Task one failed. Skipping pause flow
                            run..")
                        </span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1076">
                        <a href="#pause_flow_run-1076">
                            <span className="linenos">1076</span>
                        </a>
                        <span className="sd">{"    "}```</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1077">
                        <a href="#pause_flow_run-1077">
                            <span className="linenos">1077</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1078">
                        <a href="#pause_flow_run-1078">
                            <span className="linenos">1078</span>
                        </a>
                        <span className="sd">{"    "}"""</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1079">
                        <a href="#pause_flow_run-1079">
                            <span className="linenos">1079</span>
                        </a>
                        {"    "}
                        <span className="k">if</span> <span className="n">flow_run_id</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1080">
                        <a href="#pause_flow_run-1080">
                            <span className="linenos">1080</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">wait_for_input</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1081">
                        <a href="#pause_flow_run-1081">
                            <span className="linenos">1081</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">RuntimeError</span>
                        <span className="p">(</span>
                        <span className="s2">
                            "Cannot wait for input when pausing out of process."
                        </span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1082">
                        <a href="#pause_flow_run-1082">
                            <span className="linenos">1082</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1083">
                        <a href="#pause_flow_run-1083">
                            <span className="linenos">1083</span>
                        </a>
                        {"        "}
                        <span className="k">
                            return
                        </span> <span className="k">await</span>{" "}
                        <span className="n">_out_of_process_pause</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1084">
                        <a href="#pause_flow_run-1084">
                            <span className="linenos">1084</span>
                        </a>
                        {"            "}
                        <span className="n">flow_run_id</span>
                        <span className="o">=</span>
                        <span className="n">flow_run_id</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1085">
                        <a href="#pause_flow_run-1085">
                            <span className="linenos">1085</span>
                        </a>
                        {"            "}
                        <span className="n">timeout</span>
                        <span className="o">=</span>
                        <span className="n">timeout</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1086">
                        <a href="#pause_flow_run-1086">
                            <span className="linenos">1086</span>
                        </a>
                        {"            "}
                        <span className="n">reschedule</span>
                        <span className="o">=</span>
                        <span className="n">reschedule</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1087">
                        <a href="#pause_flow_run-1087">
                            <span className="linenos">1087</span>
                        </a>
                        {"            "}
                        <span className="n">key</span>
                        <span className="o">=</span>
                        <span className="n">key</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1088">
                        <a href="#pause_flow_run-1088">
                            <span className="linenos">1088</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1089">
                        <a href="#pause_flow_run-1089">
                            <span className="linenos">1089</span>
                        </a>
                        {"    "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1090">
                        <a href="#pause_flow_run-1090">
                            <span className="linenos">1090</span>
                        </a>
                        {"        "}
                        <span className="k">
                            return
                        </span> <span className="k">await</span>{" "}
                        <span className="n">_in_process_pause</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1091">
                        <a href="#pause_flow_run-1091">
                            <span className="linenos">1091</span>
                        </a>
                        {"            "}
                        <span className="n">timeout</span>
                        <span className="o">=</span>
                        <span className="n">timeout</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1092">
                        <a href="#pause_flow_run-1092">
                            <span className="linenos">1092</span>
                        </a>
                        {"            "}
                        <span className="n">poll_interval</span>
                        <span className="o">=</span>
                        <span className="n">poll_interval</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1093">
                        <a href="#pause_flow_run-1093">
                            <span className="linenos">1093</span>
                        </a>
                        {"            "}
                        <span className="n">reschedule</span>
                        <span className="o">=</span>
                        <span className="n">reschedule</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1094">
                        <a href="#pause_flow_run-1094">
                            <span className="linenos">1094</span>
                        </a>
                        {"            "}
                        <span className="n">key</span>
                        <span className="o">=</span>
                        <span className="n">key</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1095">
                        <a href="#pause_flow_run-1095">
                            <span className="linenos">1095</span>
                        </a>
                        {"            "}
                        <span className="n">wait_for_input</span>
                        <span className="o">=</span>
                        <span className="n">wait_for_input</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="pause_flow_run-1096">
                        <a href="#pause_flow_run-1096">
                            <span className="linenos">1096</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                </pre>
            </div>
            <div className="docstring">
                <p>Pauses the current flow run by blocking execution until resumed.</p>
                <p>
                    When called within a flow run, execution will block and no downstream
                    tasks will run until the flow is resumed. Task runs that have already
                    started will continue running. A timeout parameter can be passed that
                    will fail the flow run if it has not been resumed within the specified
                    time.
                </p>
                <p>
                    Args: flow_run_id: a flow run id. If supplied, this function will
                    attempt to pause the specified flow run outside of the flow run
                    process. When paused, the flow run will continue execution until the
                    NEXT task is orchestrated, at which point the flow will exit. Any
                    tasks that have already started will run until completion. When
                    resumed, the flow run will be rescheduled to finish execution. In
                    order pause a flow run in this way, the flow needs to have an
                    associated deployment and results need to be configured with the
                    <code>persist_results</code> option. timeout: the number of seconds to
                    wait for the flow to be resumed before failing. Defaults to 1 hour
                    (3600 seconds). If the pause timeout exceeds any configured flow-level
                    timeout, the flow might fail even after resuming. poll_interval: The
                    number of seconds between checking whether the flow has been resumed.
                    Defaults to 10 seconds. reschedule: Flag that will reschedule the flow
                    run if resumed. Instead of blocking execution, the flow will
                    gracefully exit (with no result returned) instead. To use this flag, a
                    flow needs to have an associated deployment and results need to be
                    configured with the <code>persist_results</code> option. key: An
                    optional key to prevent calling pauses more than once. This defaults
                    to the number of pauses observed by the flow so far, and prevents
                    pauses that use the "reschedule" option from running the same pause
                    twice. A custom key can be supplied for custom pausing behavior.
                    wait_for_input: a subclass of <code>RunInput</code> or any type
                    supported by Pydantic. If provided when the flow pauses, the flow will
                    wait for the input to be provided before resuming. If the flow is
                    resumed without providing the input, the flow will fail. If the flow
                    is resumed with the input, the flow will resume and the input will be
                    loaded and returned from this function.
                </p>
                <p>Example:</p>
                <div className="pdoc-code codehilite">
                    <pre>
                        <span />
                        <code>
                            <span className="nd">@task</span>
                            {"\n"}
                            <span className="k">def</span>{" "}
                            <span className="nf">task_one</span>
                            <span className="p">():</span>
                            {"\n"}
                            {"    "}
                            <span className="k">for</span> <span className="n">i</span>{" "}
                            <span className="ow">in</span> <span className="nb">range</span>
                            <span className="p">(</span>
                            <span className="mi">3</span>
                            <span className="p">):</span>
                            {"\n"}
                            {"        "}
                            <span className="n">sleep</span>
                            <span className="p">(</span>
                            <span className="mi">1</span>
                            <span className="p">)</span>
                            {"\n"}
                            {"\n"}
                            <span className="nd">@flow</span>
                            {"\n"}
                            <span className="k">def</span> <span className="nf">my_flow</span>
                            <span className="p">():</span>
                            {"\n"}
                            {"    "}
                            <span className="n">terminal_state</span>{" "}
                            <span className="o">=</span> <span className="n">task_one</span>
                            <span className="o">.</span>
                            <span className="n">submit</span>
                            <span className="p">(</span>
                            <span className="n">return_state</span>
                            <span className="o">=</span>
                            <span className="kc">True</span>
                            <span className="p">)</span>
                            {"\n"}
                            {"    "}
                            <span className="k">if</span>{" "}
                            <span className="n">terminal_state</span>
                            <span className="o">.</span>
                            <span className="n">type</span> <span className="o">==</span>{" "}
                            <span className="n">StateType</span>
                            <span className="o">.</span>
                            <span className="n">COMPLETED</span>
                            <span className="p">:</span>
                            {"\n"}
                            {"        "}
                            <span className="nb">print</span>
                            <span className="p">(</span>
                            <span className="s2">
                                "Task one succeeded! Pausing flow run.."
                            </span>
                            <span className="p">)</span>
                            {"\n"}
                            {"        "}
                            <span className="n">pause_flow_run</span>
                            <span className="p">(</span>
                            <span className="n">timeout</span>
                            <span className="o">=</span>
                            <span className="mi">2</span>
                            <span className="p">)</span>
                            {"\n"}
                            {"    "}
                            <span className="k">else</span>
                            <span className="p">:</span>
                            {"\n"}
                            {"        "}
                            <span className="nb">print</span>
                            <span className="p">(</span>
                            <span className="s2">
                                "Task one failed. Skipping pause flow run.."
                            </span>
                            <span className="p">)</span>
                            {"\n"}
                        </code>
                    </pre>
                </div>
            </div>
        </section>
        <section id="resume_flow_run">
            <input
                id="resume_flow_run-view-source"
                className="view-source-toggle-state"
                type="checkbox"
                aria-hidden="true"
                tabIndex={-1}
            />
            <div className="attr function">
                <div className="decorator">@sync_compatible</div>
                <span className="def">async def</span>
                <span className="name">resume_flow_run</span>
                <span className="signature pdoc-code condensed">
                    (
                    <span className="param">
                        <span className="n">flow_run_id</span>,{" "}
                    </span>
                    <span className="param">
                        <span className="n">run_input</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Dict</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                    </span>
                    <span className="return-annotation">):</span>
                </span>
                <label
                    className="view-source-button"
                    htmlFor="resume_flow_run-view-source"
                >
                    <span>View Source</span>
                </label>
            </div>
            <a className="headerlink" href="#resume_flow_run" />
            <div className="pdoc-code codehilite">
                <pre>
                    <span />
                    <span id="resume_flow_run-1347">
                        <a href="#resume_flow_run-1347">
                            <span className="linenos">1347</span>
                        </a>
                        <span className="nd">@sync_compatible</span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1348">
                        <a href="#resume_flow_run-1348">
                            <span className="linenos">1348</span>
                        </a>
                        <span className="k">async</span> <span className="k">def</span>{" "}
                        <span className="nf">resume_flow_run</span>
                        <span className="p">(</span>
                        <span className="n">flow_run_id</span>
                        <span className="p">,</span> <span className="n">run_input</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Dict</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">):</span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1349">
                        <a href="#resume_flow_run-1349">
                            <span className="linenos">1349</span>
                        </a>
                        <span className="w">{"    "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1350">
                        <a href="#resume_flow_run-1350">
                            <span className="linenos">1350</span>
                        </a>
                        <span className="sd">{"    "}Resumes a paused flow.</span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1351">
                        <a href="#resume_flow_run-1351">
                            <span className="linenos">1351</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1352">
                        <a href="#resume_flow_run-1352">
                            <span className="linenos">1352</span>
                        </a>
                        <span className="sd">{"    "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1353">
                        <a href="#resume_flow_run-1353">
                            <span className="linenos">1353</span>
                        </a>
                        <span className="sd">
                            {"        "}flow_run_id: the flow_run_id to resume
                        </span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1354">
                        <a href="#resume_flow_run-1354">
                            <span className="linenos">1354</span>
                        </a>
                        <span className="sd">
                            {"        "}run_input: a dictionary of inputs to provide to the
                            flow run.
                        </span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1355">
                        <a href="#resume_flow_run-1355">
                            <span className="linenos">1355</span>
                        </a>
                        <span className="sd">{"    "}"""</span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1356">
                        <a href="#resume_flow_run-1356">
                            <span className="linenos">1356</span>
                        </a>
                        {"    "}
                        <span className="n">client</span> <span className="o">=</span>{" "}
                        <span className="n">get_client</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1357">
                        <a href="#resume_flow_run-1357">
                            <span className="linenos">1357</span>
                        </a>
                        {"    "}
                        <span className="k">
                            async
                        </span> <span className="k">with</span>{" "}
                        <span className="n">client</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1358">
                        <a href="#resume_flow_run-1358">
                            <span className="linenos">1358</span>
                        </a>
                        {"        "}
                        <span className="n">
                            flow_run
                        </span> <span className="o">=</span>{" "}
                        <span className="k">await</span> <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">read_flow_run</span>
                        <span className="p">(</span>
                        <span className="n">flow_run_id</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1359">
                        <a href="#resume_flow_run-1359">
                            <span className="linenos">1359</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1360">
                        <a href="#resume_flow_run-1360">
                            <span className="linenos">1360</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">flow_run</span>
                        <span className="o">.</span>
                        <span className="n">state</span>
                        <span className="o">.</span>
                        <span className="n">is_paused</span>
                        <span className="p">():</span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1361">
                        <a href="#resume_flow_run-1361">
                            <span className="linenos">1361</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="n">NotPausedError</span>
                        <span className="p">(</span>
                        <span className="s2">"Cannot resume a run that isn't paused!"</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1362">
                        <a href="#resume_flow_run-1362">
                            <span className="linenos">1362</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1363">
                        <a href="#resume_flow_run-1363">
                            <span className="linenos">1363</span>
                        </a>
                        {"        "}
                        <span className="n">
                            response
                        </span> <span className="o">=</span>{" "}
                        <span className="k">await</span> <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">resume_flow_run</span>
                        <span className="p">(</span>
                        <span className="n">flow_run_id</span>
                        <span className="p">,</span> <span className="n">run_input</span>
                        <span className="o">=</span>
                        <span className="n">run_input</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1364">
                        <a href="#resume_flow_run-1364">
                            <span className="linenos">1364</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1365">
                        <a href="#resume_flow_run-1365">
                            <span className="linenos">1365</span>
                        </a>
                        {"    "}
                        <span className="k">if</span> <span className="n">response</span>
                        <span className="o">.</span>
                        <span className="n">status</span> <span className="o">==</span>{" "}
                        <span className="n">SetStateStatus</span>
                        <span className="o">.</span>
                        <span className="n">REJECT</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1366">
                        <a href="#resume_flow_run-1366">
                            <span className="linenos">1366</span>
                        </a>
                        {"        "}
                        <span className="k">if</span> <span className="n">response</span>
                        <span className="o">.</span>
                        <span className="n">state</span>
                        <span className="o">.</span>
                        <span className="n">type</span> <span className="o">==</span>{" "}
                        <span className="n">StateType</span>
                        <span className="o">.</span>
                        <span className="n">FAILED</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1367">
                        <a href="#resume_flow_run-1367">
                            <span className="linenos">1367</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="n">FlowPauseTimeout</span>
                        <span className="p">(</span>
                        <span className="s2">"Flow run can no longer be resumed."</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1368">
                        <a href="#resume_flow_run-1368">
                            <span className="linenos">1368</span>
                        </a>
                        {"        "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="resume_flow_run-1369">
                        <a href="#resume_flow_run-1369">
                            <span className="linenos">1369</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">RuntimeError</span>
                        <span className="p">(</span>
                        <span className="sa">f</span>
                        <span className="s2">"Cannot resume this run: </span>
                        <span className="si">{"{"}</span>
                        <span className="n">response</span>
                        <span className="o">.</span>
                        <span className="n">details</span>
                        <span className="o">.</span>
                        <span className="n">reason</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">"</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                </pre>
            </div>
            <div className="docstring">
                <p>Resumes a paused flow.</p>
                <p>
                    Args: flow_run_id: the flow_run_id to resume run_input: a dictionary
                    of inputs to provide to the flow run.
                </p>
            </div>
        </section>
        <section id="suspend_flow_run">
            <input
                id="suspend_flow_run-view-source"
                className="view-source-toggle-state"
                type="checkbox"
                aria-hidden="true"
                tabIndex={-1}
            />
            <div className="attr function">
                <div className="decorator">@sync_compatible</div>
                <div className="decorator">@inject_client</div>
                <div className="decorator">
                    @experimental_parameter('wait_for_input', group='flow_run_input',
                    when=lambda y: y is not None)
                </div>
                <span className="def">async def</span>
                <span className="name">suspend_flow_run</span>
                <span className="signature pdoc-code multiline">
                    (
                    <span className="param">
                        {" "}
                        <span className="n">wait_for_input</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Type</span>
                        <span className="p">[</span>
                        <span className="o">~</span>
                        <span className="n">T</span>
                        <span className="p">]]</span>
                        <span className="o">=</span> <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">flow_run_id</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">uuid</span>
                        <span className="o">.</span>
                        <span className="n">UUID</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">timeout</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="mi">3600</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">key</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>,
                    </span>
                    <span className="param">
                        {" "}
                        <span className="n">client</span>
                        <span className="p">:</span> <span className="n">prefect</span>
                        <span className="o">.</span>
                        <span className="n">client</span>
                        <span className="o">.</span>
                        <span className="n">orchestration</span>
                        <span className="o">.</span>
                        <span className="n">PrefectClient</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                    </span>
                    <span className="return-annotation">
                        ) -&gt; <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="o">~</span>
                        <span className="n">T</span>
                        <span className="p">]</span>:
                    </span>
                </span>
                <label
                    className="view-source-button"
                    htmlFor="suspend_flow_run-view-source"
                >
                    <span>View Source</span>
                </label>
            </div>
            <a className="headerlink" href="#suspend_flow_run" />
            <div className="pdoc-code codehilite">
                <pre>
                    <span />
                    <span id="suspend_flow_run-1238">
                        <a href="#suspend_flow_run-1238">
                            <span className="linenos">1238</span>
                        </a>
                        <span className="nd">@sync_compatible</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1239">
                        <a href="#suspend_flow_run-1239">
                            <span className="linenos">1239</span>
                        </a>
                        <span className="nd">@inject_client</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1240">
                        <a href="#suspend_flow_run-1240">
                            <span className="linenos">1240</span>
                        </a>
                        <span className="nd">@experimental_parameter</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1241">
                        <a href="#suspend_flow_run-1241">
                            <span className="linenos">1241</span>
                        </a>
                        {"    "}
                        <span className="s2">"wait_for_input"</span>
                        <span className="p">,</span> <span className="n">group</span>
                        <span className="o">=</span>
                        <span className="s2">"flow_run_input"</span>
                        <span className="p">,</span> <span className="n">when</span>
                        <span className="o">=</span>
                        <span className="k">lambda</span> <span className="n">y</span>
                        <span className="p">:</span> <span className="n">y</span>{" "}
                        <span className="ow">is</span> <span className="ow">not</span>{" "}
                        <span className="kc">None</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1242">
                        <a href="#suspend_flow_run-1242">
                            <span className="linenos">1242</span>
                        </a>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1243">
                        <a href="#suspend_flow_run-1243">
                            <span className="linenos">1243</span>
                        </a>
                        <span className="k">async</span> <span className="k">def</span>{" "}
                        <span className="nf">suspend_flow_run</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1244">
                        <a href="#suspend_flow_run-1244">
                            <span className="linenos">1244</span>
                        </a>
                        {"    "}
                        <span className="n">wait_for_input</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">Type</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">]]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1245">
                        <a href="#suspend_flow_run-1245">
                            <span className="linenos">1245</span>
                        </a>
                        {"    "}
                        <span className="n">flow_run_id</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">UUID</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1246">
                        <a href="#suspend_flow_run-1246">
                            <span className="linenos">1246</span>
                        </a>
                        {"    "}
                        <span className="n">timeout</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">int</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="mi">3600</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1247">
                        <a href="#suspend_flow_run-1247">
                            <span className="linenos">1247</span>
                        </a>
                        {"    "}
                        <span className="n">key</span>
                        <span className="p">:</span> <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="nb">str</span>
                        <span className="p">]</span> <span className="o">=</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1248">
                        <a href="#suspend_flow_run-1248">
                            <span className="linenos">1248</span>
                        </a>
                        {"    "}
                        <span className="n">client</span>
                        <span className="p">:</span>{" "}
                        <span className="n">PrefectClient</span>{" "}
                        <span className="o">=</span> <span className="kc">None</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1249">
                        <a href="#suspend_flow_run-1249">
                            <span className="linenos">1249</span>
                        </a>
                        <span className="p">)</span> <span className="o">-&gt;</span>{" "}
                        <span className="n">Optional</span>
                        <span className="p">[</span>
                        <span className="n">T</span>
                        <span className="p">]:</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1250">
                        <a href="#suspend_flow_run-1250">
                            <span className="linenos">1250</span>
                        </a>
                        <span className="w">{"    "}</span>
                        <span className="sd">"""</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1251">
                        <a href="#suspend_flow_run-1251">
                            <span className="linenos">1251</span>
                        </a>
                        <span className="sd">
                            {"    "}Suspends a flow run by stopping code execution until
                            resumed.
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1252">
                        <a href="#suspend_flow_run-1252">
                            <span className="linenos">1252</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1253">
                        <a href="#suspend_flow_run-1253">
                            <span className="linenos">1253</span>
                        </a>
                        <span className="sd">
                            {"    "}When suspended, the flow run will continue execution until
                            the NEXT task is
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1254">
                        <a href="#suspend_flow_run-1254">
                            <span className="linenos">1254</span>
                        </a>
                        <span className="sd">
                            {"    "}orchestrated, at which point the flow will exit. Any tasks
                            that have
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1255">
                        <a href="#suspend_flow_run-1255">
                            <span className="linenos">1255</span>
                        </a>
                        <span className="sd">
                            {"    "}already started will run until completion. When resumed,
                            the flow run will
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1256">
                        <a href="#suspend_flow_run-1256">
                            <span className="linenos">1256</span>
                        </a>
                        <span className="sd">
                            {"    "}be rescheduled to finish execution. In order suspend a
                            flow run in this
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1257">
                        <a href="#suspend_flow_run-1257">
                            <span className="linenos">1257</span>
                        </a>
                        <span className="sd">
                            {"    "}way, the flow needs to have an associated deployment and
                            results need to be
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1258">
                        <a href="#suspend_flow_run-1258">
                            <span className="linenos">1258</span>
                        </a>
                        <span className="sd">
                            {"    "}configured with the `persist_results` option.
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1259">
                        <a href="#suspend_flow_run-1259">
                            <span className="linenos">1259</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1260">
                        <a href="#suspend_flow_run-1260">
                            <span className="linenos">1260</span>
                        </a>
                        <span className="sd">{"    "}Args:</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1261">
                        <a href="#suspend_flow_run-1261">
                            <span className="linenos">1261</span>
                        </a>
                        <span className="sd">
                            {"        "}flow_run_id: a flow run id. If supplied, this function
                            will attempt to
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1262">
                        <a href="#suspend_flow_run-1262">
                            <span className="linenos">1262</span>
                        </a>
                        <span className="sd">
                            {"            "}suspend the specified flow run. If not supplied
                            will attempt to
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1263">
                        <a href="#suspend_flow_run-1263">
                            <span className="linenos">1263</span>
                        </a>
                        <span className="sd">
                            {"            "}suspend the current flow run.
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1264">
                        <a href="#suspend_flow_run-1264">
                            <span className="linenos">1264</span>
                        </a>
                        <span className="sd">
                            {"        "}timeout: the number of seconds to wait for the flow to
                            be resumed before
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1265">
                        <a href="#suspend_flow_run-1265">
                            <span className="linenos">1265</span>
                        </a>
                        <span className="sd">
                            {"            "}failing. Defaults to 1 hour (3600 seconds). If the
                            pause timeout
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1266">
                        <a href="#suspend_flow_run-1266">
                            <span className="linenos">1266</span>
                        </a>
                        <span className="sd">
                            {"            "}exceeds any configured flow-level timeout, the
                            flow might fail even
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1267">
                        <a href="#suspend_flow_run-1267">
                            <span className="linenos">1267</span>
                        </a>
                        <span className="sd">{"            "}after resuming.</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1268">
                        <a href="#suspend_flow_run-1268">
                            <span className="linenos">1268</span>
                        </a>
                        <span className="sd">
                            {"        "}key: An optional key to prevent calling suspend more
                            than once. This
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1269">
                        <a href="#suspend_flow_run-1269">
                            <span className="linenos">1269</span>
                        </a>
                        <span className="sd">
                            {"            "}defaults to a random string and prevents suspends
                            from running the
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1270">
                        <a href="#suspend_flow_run-1270">
                            <span className="linenos">1270</span>
                        </a>
                        <span className="sd">
                            {"            "}same suspend twice. A custom key can be supplied
                            for custom
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1271">
                        <a href="#suspend_flow_run-1271">
                            <span className="linenos">1271</span>
                        </a>
                        <span className="sd">{"            "}suspending behavior.</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1272">
                        <a href="#suspend_flow_run-1272">
                            <span className="linenos">1272</span>
                        </a>
                        <span className="sd">
                            {"        "}wait_for_input: a subclass of `RunInput` or any type
                            supported by
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1273">
                        <a href="#suspend_flow_run-1273">
                            <span className="linenos">1273</span>
                        </a>
                        <span className="sd">
                            {"            "}Pydantic. If provided when the flow suspends, the
                            flow will remain
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1274">
                        <a href="#suspend_flow_run-1274">
                            <span className="linenos">1274</span>
                        </a>
                        <span className="sd">
                            {"            "}suspended until receiving the input before
                            resuming. If the flow is
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1275">
                        <a href="#suspend_flow_run-1275">
                            <span className="linenos">1275</span>
                        </a>
                        <span className="sd">
                            {"            "}resumed without providing the input, the flow will
                            fail. If the flow is
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1276">
                        <a href="#suspend_flow_run-1276">
                            <span className="linenos">1276</span>
                        </a>
                        <span className="sd">
                            {"            "}resumed with the input, the flow will resume and
                            the input will be
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1277">
                        <a href="#suspend_flow_run-1277">
                            <span className="linenos">1277</span>
                        </a>
                        <span className="sd">
                            {"            "}loaded and returned from this function.
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1278">
                        <a href="#suspend_flow_run-1278">
                            <span className="linenos">1278</span>
                        </a>
                        <span className="sd">{"    "}"""</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1279">
                        <a href="#suspend_flow_run-1279">
                            <span className="linenos">1279</span>
                        </a>
                        {"    "}
                        <span className="n">context</span> <span className="o">=</span>{" "}
                        <span className="n">FlowRunContext</span>
                        <span className="o">.</span>
                        <span className="n">get</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1280">
                        <a href="#suspend_flow_run-1280">
                            <span className="linenos">1280</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1281">
                        <a href="#suspend_flow_run-1281">
                            <span className="linenos">1281</span>
                        </a>
                        {"    "}
                        <span className="k">
                            if
                        </span> <span className="n">flow_run_id</span>{" "}
                        <span className="ow">is</span> <span className="kc">None</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1282">
                        <a href="#suspend_flow_run-1282">
                            <span className="linenos">1282</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">TaskRunContext</span>
                        <span className="o">.</span>
                        <span className="n">get</span>
                        <span className="p">():</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1283">
                        <a href="#suspend_flow_run-1283">
                            <span className="linenos">1283</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">RuntimeError</span>
                        <span className="p">(</span>
                        <span className="s2">"Cannot suspend task runs."</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1284">
                        <a href="#suspend_flow_run-1284">
                            <span className="linenos">1284</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1285">
                        <a href="#suspend_flow_run-1285">
                            <span className="linenos">1285</span>
                        </a>
                        {"        "}
                        <span className="k">
                            if
                        </span> <span className="n">context</span>{" "}
                        <span className="ow">is</span> <span className="kc">None</span>{" "}
                        <span className="ow">or</span> <span className="n">context</span>
                        <span className="o">.</span>
                        <span className="n">
                            flow_run
                        </span> <span className="ow">is</span>{" "}
                        <span className="kc">None</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1286">
                        <a href="#suspend_flow_run-1286">
                            <span className="linenos">1286</span>
                        </a>
                        {"            "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">RuntimeError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1287">
                        <a href="#suspend_flow_run-1287">
                            <span className="linenos">1287</span>
                        </a>
                        {"                "}
                        <span className="s2">
                            "Flow runs can only be suspended from within a flow run."
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1288">
                        <a href="#suspend_flow_run-1288">
                            <span className="linenos">1288</span>
                        </a>
                        {"            "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1289">
                        <a href="#suspend_flow_run-1289">
                            <span className="linenos">1289</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1290">
                        <a href="#suspend_flow_run-1290">
                            <span className="linenos">1290</span>
                        </a>
                        {"        "}
                        <span className="n">logger</span> <span className="o">=</span>{" "}
                        <span className="n">get_run_logger</span>
                        <span className="p">(</span>
                        <span className="n">context</span>
                        <span className="o">=</span>
                        <span className="n">context</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1291">
                        <a href="#suspend_flow_run-1291">
                            <span className="linenos">1291</span>
                        </a>
                        {"        "}
                        <span className="n">logger</span>
                        <span className="o">.</span>
                        <span className="n">info</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1292">
                        <a href="#suspend_flow_run-1292">
                            <span className="linenos">1292</span>
                        </a>
                        {"            "}
                        <span className="s2">
                            "Suspending flow run, execution will be rescheduled when this flow
                            run is"
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1293">
                        <a href="#suspend_flow_run-1293">
                            <span className="linenos">1293</span>
                        </a>
                        {"            "}
                        <span className="s2">" resumed."</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1294">
                        <a href="#suspend_flow_run-1294">
                            <span className="linenos">1294</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1295">
                        <a href="#suspend_flow_run-1295">
                            <span className="linenos">1295</span>
                        </a>
                        {"        "}
                        <span className="n">
                            flow_run_id
                        </span> <span className="o">=</span>{" "}
                        <span className="n">context</span>
                        <span className="o">.</span>
                        <span className="n">flow_run</span>
                        <span className="o">.</span>
                        <span className="n">id</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1296">
                        <a href="#suspend_flow_run-1296">
                            <span className="linenos">1296</span>
                        </a>
                        {"        "}
                        <span className="n">suspending_current_flow_run</span>{" "}
                        <span className="o">=</span> <span className="kc">True</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1297">
                        <a href="#suspend_flow_run-1297">
                            <span className="linenos">1297</span>
                        </a>
                        {"        "}
                        <span className="n">pause_counter</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">_observed_flow_pauses</span>
                        <span className="p">(</span>
                        <span className="n">context</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1298">
                        <a href="#suspend_flow_run-1298">
                            <span className="linenos">1298</span>
                        </a>
                        {"        "}
                        <span className="n">
                            pause_key
                        </span> <span className="o">=</span> <span className="n">key</span>{" "}
                        <span className="ow">or</span> <span className="nb">str</span>
                        <span className="p">(</span>
                        <span className="n">pause_counter</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1299">
                        <a href="#suspend_flow_run-1299">
                            <span className="linenos">1299</span>
                        </a>
                        {"    "}
                        <span className="k">else</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1300">
                        <a href="#suspend_flow_run-1300">
                            <span className="linenos">1300</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # Since we're suspending another flow run we need to generate a
                            pause
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1301">
                        <a href="#suspend_flow_run-1301">
                            <span className="linenos">1301</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # key that won't conflict with whatever suspends/pauses that flow
                            may
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1302">
                        <a href="#suspend_flow_run-1302">
                            <span className="linenos">1302</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # have. Since this method won't be called during that flow run
                            it's
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1303">
                        <a href="#suspend_flow_run-1303">
                            <span className="linenos">1303</span>
                        </a>
                        {"        "}
                        <span className="c1"># okay that this is non-deterministic.</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1304">
                        <a href="#suspend_flow_run-1304">
                            <span className="linenos">1304</span>
                        </a>
                        {"        "}
                        <span className="n">suspending_current_flow_run</span>{" "}
                        <span className="o">=</span> <span className="kc">False</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1305">
                        <a href="#suspend_flow_run-1305">
                            <span className="linenos">1305</span>
                        </a>
                        {"        "}
                        <span className="n">
                            pause_key
                        </span> <span className="o">=</span> <span className="n">key</span>{" "}
                        <span className="ow">or</span> <span className="nb">str</span>
                        <span className="p">(</span>
                        <span className="n">uuid4</span>
                        <span className="p">())</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1306">
                        <a href="#suspend_flow_run-1306">
                            <span className="linenos">1306</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1307">
                        <a href="#suspend_flow_run-1307">
                            <span className="linenos">1307</span>
                        </a>
                        {"    "}
                        <span className="n">proposed_state</span>{" "}
                        <span className="o">=</span> <span className="n">Suspended</span>
                        <span className="p">(</span>
                        <span className="n">timeout_seconds</span>
                        <span className="o">=</span>
                        <span className="n">timeout</span>
                        <span className="p">,</span> <span className="n">pause_key</span>
                        <span className="o">=</span>
                        <span className="n">pause_key</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1308">
                        <a href="#suspend_flow_run-1308">
                            <span className="linenos">1308</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1309">
                        <a href="#suspend_flow_run-1309">
                            <span className="linenos">1309</span>
                        </a>
                        {"    "}
                        <span className="k">if</span>{" "}
                        <span className="n">wait_for_input</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1310">
                        <a href="#suspend_flow_run-1310">
                            <span className="linenos">1310</span>
                        </a>
                        {"        "}
                        <span className="n">wait_for_input</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">run_input_subclass_from_type</span>
                        <span className="p">(</span>
                        <span className="n">wait_for_input</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1311">
                        <a href="#suspend_flow_run-1311">
                            <span className="linenos">1311</span>
                        </a>
                        {"        "}
                        <span className="n">run_input_keyset</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">keyset_from_paused_state</span>
                        <span className="p">(</span>
                        <span className="n">proposed_state</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1312">
                        <a href="#suspend_flow_run-1312">
                            <span className="linenos">1312</span>
                        </a>
                        {"        "}
                        <span className="n">proposed_state</span>
                        <span className="o">.</span>
                        <span className="n">state_details</span>
                        <span className="o">.</span>
                        <span className="n">run_input_keyset</span>{" "}
                        <span className="o">=</span>{" "}
                        <span className="n">run_input_keyset</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1313">
                        <a href="#suspend_flow_run-1313">
                            <span className="linenos">1313</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1314">
                        <a href="#suspend_flow_run-1314">
                            <span className="linenos">1314</span>
                        </a>
                        {"    "}
                        <span className="k">try</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1315">
                        <a href="#suspend_flow_run-1315">
                            <span className="linenos">1315</span>
                        </a>
                        {"        "}
                        <span className="n">state</span> <span className="o">=</span>{" "}
                        <span className="k">await</span>{" "}
                        <span className="n">propose_state</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1316">
                        <a href="#suspend_flow_run-1316">
                            <span className="linenos">1316</span>
                        </a>
                        {"            "}
                        <span className="n">client</span>
                        <span className="o">=</span>
                        <span className="n">client</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1317">
                        <a href="#suspend_flow_run-1317">
                            <span className="linenos">1317</span>
                        </a>
                        {"            "}
                        <span className="n">state</span>
                        <span className="o">=</span>
                        <span className="n">proposed_state</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1318">
                        <a href="#suspend_flow_run-1318">
                            <span className="linenos">1318</span>
                        </a>
                        {"            "}
                        <span className="n">flow_run_id</span>
                        <span className="o">=</span>
                        <span className="n">flow_run_id</span>
                        <span className="p">,</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1319">
                        <a href="#suspend_flow_run-1319">
                            <span className="linenos">1319</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1320">
                        <a href="#suspend_flow_run-1320">
                            <span className="linenos">1320</span>
                        </a>
                        {"    "}
                        <span className="k">
                            except
                        </span> <span className="n">Abort</span>{" "}
                        <span className="k">as</span> <span className="n">exc</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1321">
                        <a href="#suspend_flow_run-1321">
                            <span className="linenos">1321</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # Aborted requests mean the suspension is not allowed
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1322">
                        <a href="#suspend_flow_run-1322">
                            <span className="linenos">1322</span>
                        </a>
                        {"        "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">RuntimeError</span>
                        <span className="p">(</span>
                        <span className="sa">f</span>
                        <span className="s2">"Flow run cannot be suspended: </span>
                        <span className="si">{"{"}</span>
                        <span className="n">exc</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">"</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1323">
                        <a href="#suspend_flow_run-1323">
                            <span className="linenos">1323</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1324">
                        <a href="#suspend_flow_run-1324">
                            <span className="linenos">1324</span>
                        </a>
                        {"    "}
                        <span className="k">if</span> <span className="n">state</span>
                        <span className="o">.</span>
                        <span className="n">is_running</span>
                        <span className="p">():</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1325">
                        <a href="#suspend_flow_run-1325">
                            <span className="linenos">1325</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # The orchestrator rejected the suspended state which means that
                            this
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1326">
                        <a href="#suspend_flow_run-1326">
                            <span className="linenos">1326</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # suspend has happened before and the flow run has been resumed.
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1327">
                        <a href="#suspend_flow_run-1327">
                            <span className="linenos">1327</span>
                        </a>
                        {"        "}
                        <span className="k">if</span>{" "}
                        <span className="n">wait_for_input</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1328">
                        <a href="#suspend_flow_run-1328">
                            <span className="linenos">1328</span>
                        </a>
                        {"            "}
                        <span className="c1">
                            # The flow run wanted input, so we need to load it and return it
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1329">
                        <a href="#suspend_flow_run-1329">
                            <span className="linenos">1329</span>
                        </a>
                        {"            "}
                        <span className="c1"># to the user.</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1330">
                        <a href="#suspend_flow_run-1330">
                            <span className="linenos">1330</span>
                        </a>
                        {"            "}
                        <span className="k">
                            return
                        </span> <span className="k">await</span>{" "}
                        <span className="n">wait_for_input</span>
                        <span className="o">.</span>
                        <span className="n">load</span>
                        <span className="p">(</span>
                        <span className="n">run_input_keyset</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1331">
                        <a href="#suspend_flow_run-1331">
                            <span className="linenos">1331</span>
                        </a>
                        {"        "}
                        <span className="k">return</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1332">
                        <a href="#suspend_flow_run-1332">
                            <span className="linenos">1332</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1333">
                        <a href="#suspend_flow_run-1333">
                            <span className="linenos">1333</span>
                        </a>
                        {"    "}
                        <span className="k">if</span> <span className="ow">not</span>{" "}
                        <span className="n">state</span>
                        <span className="o">.</span>
                        <span className="n">is_paused</span>
                        <span className="p">():</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1334">
                        <a href="#suspend_flow_run-1334">
                            <span className="linenos">1334</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # If we receive anything but a PAUSED state, we are unable to
                            continue
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1335">
                        <a href="#suspend_flow_run-1335">
                            <span className="linenos">1335</span>
                        </a>
                        {"        "}
                        <span className="k">raise</span>{" "}
                        <span className="ne">RuntimeError</span>
                        <span className="p">(</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1336">
                        <a href="#suspend_flow_run-1336">
                            <span className="linenos">1336</span>
                        </a>
                        {"            "}
                        <span className="sa">f</span>
                        <span className="s2">
                            "Flow run cannot be suspended. Received unexpected state from API:{" "}
                        </span>
                        <span className="si">{"{"}</span>
                        <span className="n">state</span>
                        <span className="si">{"}"}</span>
                        <span className="s2">"</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1337">
                        <a href="#suspend_flow_run-1337">
                            <span className="linenos">1337</span>
                        </a>
                        {"        "}
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1338">
                        <a href="#suspend_flow_run-1338">
                            <span className="linenos">1338</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1339">
                        <a href="#suspend_flow_run-1339">
                            <span className="linenos">1339</span>
                        </a>
                        {"    "}
                        <span className="k">if</span>{" "}
                        <span className="n">wait_for_input</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1340">
                        <a href="#suspend_flow_run-1340">
                            <span className="linenos">1340</span>
                        </a>
                        {"        "}
                        <span className="k">await</span>{" "}
                        <span className="n">wait_for_input</span>
                        <span className="o">.</span>
                        <span className="n">save</span>
                        <span className="p">(</span>
                        <span className="n">run_input_keyset</span>
                        <span className="p">)</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1341">
                        <a href="#suspend_flow_run-1341">
                            <span className="linenos">1341</span>
                        </a>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1342">
                        <a href="#suspend_flow_run-1342">
                            <span className="linenos">1342</span>
                        </a>
                        {"    "}
                        <span className="k">if</span>{" "}
                        <span className="n">suspending_current_flow_run</span>
                        <span className="p">:</span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1343">
                        <a href="#suspend_flow_run-1343">
                            <span className="linenos">1343</span>
                        </a>
                        {"        "}
                        <span className="c1">
                            # Exit this process so the run can be resubmitted later
                        </span>
                        {"\n"}
                    </span>
                    <span id="suspend_flow_run-1344">
                        <a href="#suspend_flow_run-1344">
                            <span className="linenos">1344</span>
                        </a>
                        {"        "}
                        <span className="k">raise</span> <span className="n">Pause</span>
                        <span className="p">()</span>
                        {"\n"}
                    </span>
                </pre>
            </div>
            <div className="docstring">
                <p>Suspends a flow run by stopping code execution until resumed.</p>
                <p>
                    When suspended, the flow run will continue execution until the NEXT
                    task is orchestrated, at which point the flow will exit. Any tasks
                    that have already started will run until completion. When resumed, the
                    flow run will be rescheduled to finish execution. In order suspend a
                    flow run in this way, the flow needs to have an associated deployment
                    and results need to be configured with the{" "}
                    <code>persist_results</code> option.
                </p>
                <p>
                    Args: flow_run_id: a flow run id. If supplied, this function will
                    attempt to suspend the specified flow run. If not supplied will
                    attempt to suspend the current flow run. timeout: the number of
                    seconds to wait for the flow to be resumed before failing. Defaults to
                    1 hour (3600 seconds). If the pause timeout exceeds any configured
                    flow-level timeout, the flow might fail even after resuming. key: An
                    optional key to prevent calling suspend more than once. This defaults
                    to a random string and prevents suspends from running the same suspend
                    twice. A custom key can be supplied for custom suspending behavior.
                    wait_for_input: a subclass of <code>RunInput</code> or any type
                    supported by Pydantic. If provided when the flow suspends, the flow
                    will remain suspended until receiving the input before resuming. If
                    the flow is resumed without providing the input, the flow will fail.
                    If the flow is resumed with the input, the flow will resume and the
                    input will be loaded and returned from this function.
                </p>
            </div>
        </section>
    </main>
</>
