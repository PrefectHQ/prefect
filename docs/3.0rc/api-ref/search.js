window.pdocSearch = (function () {
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function () {
        function e(e) { if (null === e || "object" != typeof e) return e; var t = e.constructor(); for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]); return t } var t = function (e) { var n = new t.Index; return n.pipeline.add(t.trimmer, t.stopWordFilter, t.stemmer), e && e.call(n, n), n }; t.version = "0.9.5", lunr = t, t.utils = {}, t.utils.warn = function (e) { return function (t) { e.console && console.warn && console.warn(t) } }(this), t.utils.toString = function (e) { return void 0 === e || null === e ? "" : e.toString() }, t.EventEmitter = function () { this.events = {} }, t.EventEmitter.prototype.addListener = function () { var e = Array.prototype.slice.call(arguments), t = e.pop(), n = e; if ("function" != typeof t) throw new TypeError("last argument must be a function"); n.forEach(function (e) { this.hasHandler(e) || (this.events[e] = []), this.events[e].push(t) }, this) }, t.EventEmitter.prototype.removeListener = function (e, t) { if (this.hasHandler(e)) { var n = this.events[e].indexOf(t); -1 !== n && (this.events[e].splice(n, 1), 0 == this.events[e].length && delete this.events[e]) } }, t.EventEmitter.prototype.emit = function (e) { if (this.hasHandler(e)) { var t = Array.prototype.slice.call(arguments, 1); this.events[e].forEach(function (e) { e.apply(void 0, t) }, this) } }, t.EventEmitter.prototype.hasHandler = function (e) { return e in this.events }, t.tokenizer = function (e) { if (!arguments.length || null === e || void 0 === e) return []; if (Array.isArray(e)) { var n = e.filter(function (e) { return null === e || void 0 === e ? !1 : !0 }); n = n.map(function (e) { return t.utils.toString(e).toLowerCase() }); var i = []; return n.forEach(function (e) { var n = e.split(t.tokenizer.seperator); i = i.concat(n) }, this), i } return e.toString().trim().toLowerCase().split(t.tokenizer.seperator) }, t.tokenizer.defaultSeperator = /[\s\-]+/, t.tokenizer.seperator = t.tokenizer.defaultSeperator, t.tokenizer.setSeperator = function (e) { null !== e && void 0 !== e && "object" == typeof e && (t.tokenizer.seperator = e) }, t.tokenizer.resetSeperator = function () { t.tokenizer.seperator = t.tokenizer.defaultSeperator }, t.tokenizer.getSeperator = function () { return t.tokenizer.seperator }, t.Pipeline = function () { this._queue = [] }, t.Pipeline.registeredFunctions = {}, t.Pipeline.registerFunction = function (e, n) { n in t.Pipeline.registeredFunctions && t.utils.warn("Overwriting existing registered function: " + n), e.label = n, t.Pipeline.registeredFunctions[n] = e }, t.Pipeline.getRegisteredFunction = function (e) { return e in t.Pipeline.registeredFunctions != !0 ? null : t.Pipeline.registeredFunctions[e] }, t.Pipeline.warnIfFunctionNotRegistered = function (e) { var n = e.label && e.label in this.registeredFunctions; n || t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n", e) }, t.Pipeline.load = function (e) { var n = new t.Pipeline; return e.forEach(function (e) { var i = t.Pipeline.getRegisteredFunction(e); if (!i) throw new Error("Cannot load un-registered function: " + e); n.add(i) }), n }, t.Pipeline.prototype.add = function () { var e = Array.prototype.slice.call(arguments); e.forEach(function (e) { t.Pipeline.warnIfFunctionNotRegistered(e), this._queue.push(e) }, this) }, t.Pipeline.prototype.after = function (e, n) { t.Pipeline.warnIfFunctionNotRegistered(n); var i = this._queue.indexOf(e); if (-1 === i) throw new Error("Cannot find existingFn"); this._queue.splice(i + 1, 0, n) }, t.Pipeline.prototype.before = function (e, n) { t.Pipeline.warnIfFunctionNotRegistered(n); var i = this._queue.indexOf(e); if (-1 === i) throw new Error("Cannot find existingFn"); this._queue.splice(i, 0, n) }, t.Pipeline.prototype.remove = function (e) { var t = this._queue.indexOf(e); -1 !== t && this._queue.splice(t, 1) }, t.Pipeline.prototype.run = function (e) { for (var t = [], n = e.length, i = this._queue.length, o = 0; n > o; o++) { for (var r = e[o], s = 0; i > s && (r = this._queue[s](r, o, e), void 0 !== r && null !== r); s++); void 0 !== r && null !== r && t.push(r) } return t }, t.Pipeline.prototype.reset = function () { this._queue = [] }, t.Pipeline.prototype.get = function () { return this._queue }, t.Pipeline.prototype.toJSON = function () { return this._queue.map(function (e) { return t.Pipeline.warnIfFunctionNotRegistered(e), e.label }) }, t.Index = function () { this._fields = [], this._ref = "id", this.pipeline = new t.Pipeline, this.documentStore = new t.DocumentStore, this.index = {}, this.eventEmitter = new t.EventEmitter, this._idfCache = {}, this.on("add", "remove", "update", function () { this._idfCache = {} }.bind(this)) }, t.Index.prototype.on = function () { var e = Array.prototype.slice.call(arguments); return this.eventEmitter.addListener.apply(this.eventEmitter, e) }, t.Index.prototype.off = function (e, t) { return this.eventEmitter.removeListener(e, t) }, t.Index.load = function (e) { e.version !== t.version && t.utils.warn("version mismatch: current " + t.version + " importing " + e.version); var n = new this; n._fields = e.fields, n._ref = e.ref, n.documentStore = t.DocumentStore.load(e.documentStore), n.pipeline = t.Pipeline.load(e.pipeline), n.index = {}; for (var i in e.index) n.index[i] = t.InvertedIndex.load(e.index[i]); return n }, t.Index.prototype.addField = function (e) { return this._fields.push(e), this.index[e] = new t.InvertedIndex, this }, t.Index.prototype.setRef = function (e) { return this._ref = e, this }, t.Index.prototype.saveDocument = function (e) { return this.documentStore = new t.DocumentStore(e), this }, t.Index.prototype.addDoc = function (e, n) { if (e) { var n = void 0 === n ? !0 : n, i = e[this._ref]; this.documentStore.addDoc(i, e), this._fields.forEach(function (n) { var o = this.pipeline.run(t.tokenizer(e[n])); this.documentStore.addFieldLength(i, n, o.length); var r = {}; o.forEach(function (e) { e in r ? r[e] += 1 : r[e] = 1 }, this); for (var s in r) { var u = r[s]; u = Math.sqrt(u), this.index[n].addToken(s, { ref: i, tf: u }) } }, this), n && this.eventEmitter.emit("add", e, this) } }, t.Index.prototype.removeDocByRef = function (e) { if (e && this.documentStore.isDocStored() !== !1 && this.documentStore.hasDoc(e)) { var t = this.documentStore.getDoc(e); this.removeDoc(t, !1) } }, t.Index.prototype.removeDoc = function (e, n) { if (e) { var n = void 0 === n ? !0 : n, i = e[this._ref]; this.documentStore.hasDoc(i) && (this.documentStore.removeDoc(i), this._fields.forEach(function (n) { var o = this.pipeline.run(t.tokenizer(e[n])); o.forEach(function (e) { this.index[n].removeToken(e, i) }, this) }, this), n && this.eventEmitter.emit("remove", e, this)) } }, t.Index.prototype.updateDoc = function (e, t) { var t = void 0 === t ? !0 : t; this.removeDocByRef(e[this._ref], !1), this.addDoc(e, !1), t && this.eventEmitter.emit("update", e, this) }, t.Index.prototype.idf = function (e, t) { var n = "@" + t + "/" + e; if (Object.prototype.hasOwnProperty.call(this._idfCache, n)) return this._idfCache[n]; var i = this.index[t].getDocFreq(e), o = 1 + Math.log(this.documentStore.length / (i + 1)); return this._idfCache[n] = o, o }, t.Index.prototype.getFields = function () { return this._fields.slice() }, t.Index.prototype.search = function (e, n) { if (!e) return []; e = "string" == typeof e ? { any: e } : JSON.parse(JSON.stringify(e)); var i = null; null != n && (i = JSON.stringify(n)); for (var o = new t.Configuration(i, this.getFields()).get(), r = {}, s = Object.keys(e), u = 0; u < s.length; u++) { var a = s[u]; r[a] = this.pipeline.run(t.tokenizer(e[a])) } var l = {}; for (var c in o) { var d = r[c] || r.any; if (d) { var f = this.fieldSearch(d, c, o), h = o[c].boost; for (var p in f) f[p] = f[p] * h; for (var p in f) p in l ? l[p] += f[p] : l[p] = f[p] } } var v, g = []; for (var p in l) v = { ref: p, score: l[p] }, this.documentStore.hasDoc(p) && (v.doc = this.documentStore.getDoc(p)), g.push(v); return g.sort(function (e, t) { return t.score - e.score }), g }, t.Index.prototype.fieldSearch = function (e, t, n) { var i = n[t].bool, o = n[t].expand, r = n[t].boost, s = null, u = {}; return 0 !== r ? (e.forEach(function (e) { var n = [e]; 1 == o && (n = this.index[t].expandToken(e)); var r = {}; n.forEach(function (n) { var o = this.index[t].getDocs(n), a = this.idf(n, t); if (s && "AND" == i) { var l = {}; for (var c in s) c in o && (l[c] = o[c]); o = l } n == e && this.fieldSearchStats(u, n, o); for (var c in o) { var d = this.index[t].getTermFrequency(n, c), f = this.documentStore.getFieldLength(c, t), h = 1; 0 != f && (h = 1 / Math.sqrt(f)); var p = 1; n != e && (p = .15 * (1 - (n.length - e.length) / n.length)); var v = d * a * h * p; c in r ? r[c] += v : r[c] = v } }, this), s = this.mergeScores(s, r, i) }, this), s = this.coordNorm(s, u, e.length)) : void 0 }, t.Index.prototype.mergeScores = function (e, t, n) { if (!e) return t; if ("AND" == n) { var i = {}; for (var o in t) o in e && (i[o] = e[o] + t[o]); return i } for (var o in t) o in e ? e[o] += t[o] : e[o] = t[o]; return e }, t.Index.prototype.fieldSearchStats = function (e, t, n) { for (var i in n) i in e ? e[i].push(t) : e[i] = [t] }, t.Index.prototype.coordNorm = function (e, t, n) { for (var i in e) if (i in t) { var o = t[i].length; e[i] = e[i] * o / n } return e }, t.Index.prototype.toJSON = function () { var e = {}; return this._fields.forEach(function (t) { e[t] = this.index[t].toJSON() }, this), { version: t.version, fields: this._fields, ref: this._ref, documentStore: this.documentStore.toJSON(), index: e, pipeline: this.pipeline.toJSON() } }, t.Index.prototype.use = function (e) { var t = Array.prototype.slice.call(arguments, 1); t.unshift(this), e.apply(this, t) }, t.DocumentStore = function (e) { this._save = null === e || void 0 === e ? !0 : e, this.docs = {}, this.docInfo = {}, this.length = 0 }, t.DocumentStore.load = function (e) { var t = new this; return t.length = e.length, t.docs = e.docs, t.docInfo = e.docInfo, t._save = e.save, t }, t.DocumentStore.prototype.isDocStored = function () { return this._save }, t.DocumentStore.prototype.addDoc = function (t, n) { this.hasDoc(t) || this.length++, this.docs[t] = this._save === !0 ? e(n) : null }, t.DocumentStore.prototype.getDoc = function (e) { return this.hasDoc(e) === !1 ? null : this.docs[e] }, t.DocumentStore.prototype.hasDoc = function (e) { return e in this.docs }, t.DocumentStore.prototype.removeDoc = function (e) { this.hasDoc(e) && (delete this.docs[e], delete this.docInfo[e], this.length--) }, t.DocumentStore.prototype.addFieldLength = function (e, t, n) { null !== e && void 0 !== e && 0 != this.hasDoc(e) && (this.docInfo[e] || (this.docInfo[e] = {}), this.docInfo[e][t] = n) }, t.DocumentStore.prototype.updateFieldLength = function (e, t, n) { null !== e && void 0 !== e && 0 != this.hasDoc(e) && this.addFieldLength(e, t, n) }, t.DocumentStore.prototype.getFieldLength = function (e, t) { return null === e || void 0 === e ? 0 : e in this.docs && t in this.docInfo[e] ? this.docInfo[e][t] : 0 }, t.DocumentStore.prototype.toJSON = function () { return { docs: this.docs, docInfo: this.docInfo, length: this.length, save: this._save } }, t.stemmer = function () { var e = { ational: "ate", tional: "tion", enci: "ence", anci: "ance", izer: "ize", bli: "ble", alli: "al", entli: "ent", eli: "e", ousli: "ous", ization: "ize", ation: "ate", ator: "ate", alism: "al", iveness: "ive", fulness: "ful", ousness: "ous", aliti: "al", iviti: "ive", biliti: "ble", logi: "log" }, t = { icate: "ic", ative: "", alize: "al", iciti: "ic", ical: "ic", ful: "", ness: "" }, n = "[^aeiou]", i = "[aeiouy]", o = n + "[^aeiouy]*", r = i + "[aeiou]*", s = "^(" + o + ")?" + r + o, u = "^(" + o + ")?" + r + o + "(" + r + ")?$", a = "^(" + o + ")?" + r + o + r + o, l = "^(" + o + ")?" + i, c = new RegExp(s), d = new RegExp(a), f = new RegExp(u), h = new RegExp(l), p = /^(.+?)(ss|i)es$/, v = /^(.+?)([^s])s$/, g = /^(.+?)eed$/, m = /^(.+?)(ed|ing)$/, y = /.$/, S = /(at|bl|iz)$/, x = new RegExp("([^aeiouylsz])\\1$"), w = new RegExp("^" + o + i + "[^aeiouwxy]$"), I = /^(.+?[^aeiou])y$/, b = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/, E = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/, D = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/, F = /^(.+?)(s|t)(ion)$/, _ = /^(.+?)e$/, P = /ll$/, k = new RegExp("^" + o + i + "[^aeiouwxy]$"), z = function (n) { var i, o, r, s, u, a, l; if (n.length < 3) return n; if (r = n.substr(0, 1), "y" == r && (n = r.toUpperCase() + n.substr(1)), s = p, u = v, s.test(n) ? n = n.replace(s, "$1$2") : u.test(n) && (n = n.replace(u, "$1$2")), s = g, u = m, s.test(n)) { var z = s.exec(n); s = c, s.test(z[1]) && (s = y, n = n.replace(s, "")) } else if (u.test(n)) { var z = u.exec(n); i = z[1], u = h, u.test(i) && (n = i, u = S, a = x, l = w, u.test(n) ? n += "e" : a.test(n) ? (s = y, n = n.replace(s, "")) : l.test(n) && (n += "e")) } if (s = I, s.test(n)) { var z = s.exec(n); i = z[1], n = i + "i" } if (s = b, s.test(n)) { var z = s.exec(n); i = z[1], o = z[2], s = c, s.test(i) && (n = i + e[o]) } if (s = E, s.test(n)) { var z = s.exec(n); i = z[1], o = z[2], s = c, s.test(i) && (n = i + t[o]) } if (s = D, u = F, s.test(n)) { var z = s.exec(n); i = z[1], s = d, s.test(i) && (n = i) } else if (u.test(n)) { var z = u.exec(n); i = z[1] + z[2], u = d, u.test(i) && (n = i) } if (s = _, s.test(n)) { var z = s.exec(n); i = z[1], s = d, u = f, a = k, (s.test(i) || u.test(i) && !a.test(i)) && (n = i) } return s = P, u = d, s.test(n) && u.test(n) && (s = y, n = n.replace(s, "")), "y" == r && (n = r.toLowerCase() + n.substr(1)), n }; return z }(), t.Pipeline.registerFunction(t.stemmer, "stemmer"), t.stopWordFilter = function (e) { return e && t.stopWordFilter.stopWords[e] !== !0 ? e : void 0 }, t.clearStopWords = function () { t.stopWordFilter.stopWords = {} }, t.addStopWords = function (e) { null != e && Array.isArray(e) !== !1 && e.forEach(function (e) { t.stopWordFilter.stopWords[e] = !0 }, this) }, t.resetStopWords = function () { t.stopWordFilter.stopWords = t.defaultStopWords }, t.defaultStopWords = { "": !0, a: !0, able: !0, about: !0, across: !0, after: !0, all: !0, almost: !0, also: !0, am: !0, among: !0, an: !0, and: !0, any: !0, are: !0, as: !0, at: !0, be: !0, because: !0, been: !0, but: !0, by: !0, can: !0, cannot: !0, could: !0, dear: !0, did: !0, "do": !0, does: !0, either: !0, "else": !0, ever: !0, every: !0, "for": !0, from: !0, get: !0, got: !0, had: !0, has: !0, have: !0, he: !0, her: !0, hers: !0, him: !0, his: !0, how: !0, however: !0, i: !0, "if": !0, "in": !0, into: !0, is: !0, it: !0, its: !0, just: !0, least: !0, let: !0, like: !0, likely: !0, may: !0, me: !0, might: !0, most: !0, must: !0, my: !0, neither: !0, no: !0, nor: !0, not: !0, of: !0, off: !0, often: !0, on: !0, only: !0, or: !0, other: !0, our: !0, own: !0, rather: !0, said: !0, say: !0, says: !0, she: !0, should: !0, since: !0, so: !0, some: !0, than: !0, that: !0, the: !0, their: !0, them: !0, then: !0, there: !0, these: !0, they: !0, "this": !0, tis: !0, to: !0, too: !0, twas: !0, us: !0, wants: !0, was: !0, we: !0, were: !0, what: !0, when: !0, where: !0, which: !0, "while": !0, who: !0, whom: !0, why: !0, will: !0, "with": !0, would: !0, yet: !0, you: !0, your: !0 }, t.stopWordFilter.stopWords = t.defaultStopWords, t.Pipeline.registerFunction(t.stopWordFilter, "stopWordFilter"), t.trimmer = function (e) {
            if (null === e || void 0 === e) throw new Error("token should not be undefined"); return e.replace(// ^\W + /,"").replace(/ /\W + $ /, "") }, t.Pipeline.registerFunction(t.trimmer, "trimmer"), t.InvertedIndex = function () { this.root = { docs: {}, df: 0 } }, t.InvertedIndex.load = function (e) { var t = new this; return t.root = e.root, t }, t.InvertedIndex.prototype.addToken = function (e, t, n) { for (var n = n || this.root, i = 0; i <= e.length - 1;) { var o = e[i]; o in n || (n[o] = { docs: {}, df: 0 }), i += 1, n = n[o] } var r = t.ref; n.docs[r] ? n.docs[r] = { tf: t.tf } : (n.docs[r] = { tf: t.tf }, n.df += 1) }, t.InvertedIndex.prototype.hasToken = function (e) { if (!e) return !1; for (var t = this.root, n = 0; n < e.length; n++) { if (!t[e[n]]) return !1; t = t[e[n]] } return !0 }, t.InvertedIndex.prototype.getNode = function (e) { if (!e) return null; for (var t = this.root, n = 0; n < e.length; n++) { if (!t[e[n]]) return null; t = t[e[n]] } return t }, t.InvertedIndex.prototype.getDocs = function (e) { var t = this.getNode(e); return null == t ? {} : t.docs }, t.InvertedIndex.prototype.getTermFrequency = function (e, t) { var n = this.getNode(e); return null == n ? 0 : t in n.docs ? n.docs[t].tf : 0 }, t.InvertedIndex.prototype.getDocFreq = function (e) { var t = this.getNode(e); return null == t ? 0 : t.df }, t.InvertedIndex.prototype.removeToken = function (e, t) { if (e) { var n = this.getNode(e); null != n && t in n.docs && (delete n.docs[t], n.df -= 1) } }, t.InvertedIndex.prototype.expandToken = function (e, t, n) { if (null == e || "" == e) return []; var t = t || []; if (void 0 == n && (n = this.getNode(e), null == n)) return t; n.df > 0 && t.push(e); for (var i in n) "docs" !== i && "df" !== i && this.expandToken(e + i, t, n[i]); return t }, t.InvertedIndex.prototype.toJSON = function () { return { root: this.root } }, t.Configuration = function (e, n) { var e = e || ""; if (void 0 == n || null == n) throw new Error("fields should not be null"); this.config = {}; var i; try { i = JSON.parse(e), this.buildUserConfig(i, n) } catch (o) { t.utils.warn("user configuration parse failed, will use default configuration"), this.buildDefaultConfig(n) } }, t.Configuration.prototype.buildDefaultConfig = function (e) { this.reset(), e.forEach(function (e) { this.config[e] = { boost: 1, bool: "OR", expand: !1 } }, this) }, t.Configuration.prototype.buildUserConfig = function (e, n) { var i = "OR", o = !1; if (this.reset(), "bool" in e && (i = e.bool || i), "expand" in e && (o = e.expand || o), "fields" in e) for (var r in e.fields) if (n.indexOf(r) > -1) { var s = e.fields[r], u = o; void 0 != s.expand && (u = s.expand), this.config[r] = { boost: s.boost || 0 === s.boost ? s.boost : 1, bool: s.bool || i, expand: u } } else t.utils.warn("field name in user configuration not found in index instance fields"); else this.addAllFields2UserConfig(i, o, n) }, t.Configuration.prototype.addAllFields2UserConfig = function (e, t, n) { n.forEach(function (n) { this.config[n] = { boost: 1, bool: e, expand: t } }, this) }, t.Configuration.prototype.get = function () { return this.config }, t.Configuration.prototype.reset = function () { this.config = {} }, lunr.SortedSet = function () { this.length = 0, this.elements = [] }, lunr.SortedSet.load = function (e) { var t = new this; return t.elements = e, t.length = e.length, t }, lunr.SortedSet.prototype.add = function () { var e, t; for (e = 0; e < arguments.length; e++)t = arguments[e], ~this.indexOf(t) || this.elements.splice(this.locationFor(t), 0, t); this.length = this.elements.length }, lunr.SortedSet.prototype.toArray = function () { return this.elements.slice() }, lunr.SortedSet.prototype.map = function (e, t) { return this.elements.map(e, t) }, lunr.SortedSet.prototype.forEach = function (e, t) { return this.elements.forEach(e, t) }, lunr.SortedSet.prototype.indexOf = function (e) { for (var t = 0, n = this.elements.length, i = n - t, o = t + Math.floor(i / 2), r = this.elements[o]; i > 1;) { if (r === e) return o; e > r && (t = o), r > e && (n = o), i = n - t, o = t + Math.floor(i / 2), r = this.elements[o] } return r === e ? o : -1 }, lunr.SortedSet.prototype.locationFor = function (e) { for (var t = 0, n = this.elements.length, i = n - t, o = t + Math.floor(i / 2), r = this.elements[o]; i > 1;)e > r && (t = o), r > e && (n = o), i = n - t, o = t + Math.floor(i / 2), r = this.elements[o]; return r > e ? o : e > r ? o + 1 : void 0 }, lunr.SortedSet.prototype.intersect = function (e) { for (var t = new lunr.SortedSet, n = 0, i = 0, o = this.length, r = e.length, s = this.elements, u = e.elements; ;) { if (n > o - 1 || i > r - 1) break; s[n] !== u[i] ? s[n] < u[i] ? n++ : s[n] > u[i] && i++ : (t.add(s[n]), n++, i++) } return t }, lunr.SortedSet.prototype.clone = function () { var e = new lunr.SortedSet; return e.elements = this.toArray(), e.length = e.elements.length, e }, lunr.SortedSet.prototype.union = function (e) { var t, n, i; this.length >= e.length ? (t = this, n = e) : (t = e, n = this), i = t.clone(); for (var o = 0, r = n.toArray(); o < r.length; o++)i.add(r[o]); return i }, lunr.SortedSet.prototype.toJSON = function () { return this.toArray() }, function (e, t) { "function" == typeof define && define.amd ? define(t) : "object" == typeof exports ? module.exports = t() : e.elasticlunr = t() }(this, function () { return t }) }();

    /** pdoc search index */const docs = { "version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": { "docs": { "prefect": { "fullname": "prefect", "modulename": "prefect", "kind": "module", "doc": "<p></p>\n" }, "prefect.allow_failure": { "fullname": "prefect.allow_failure", "modulename": "prefect", "qualname": "allow_failure", "kind": "class", "doc": "<p>Wrapper for states or futures.</p>\n\n<p>Indicates that the upstream run for this input can be failed.</p>\n\n<p>Generally, Prefect will not allow a downstream run to start if any of its inputs\nare failed. This annotation allows you to opt into receiving a failed input\ndownstream.</p>\n\n<p>If the input is from a failed run, the attached exception will be passed to your\nfunction.</p>\n", "bases": "prefect.utilities.annotations.BaseAnnotation[~T]" }, "prefect.allow_failure.__init__": { "fullname": "prefect.allow_failure.__init__", "modulename": "prefect", "qualname": "allow_failure.__init__", "kind": "function", "doc": "<p>Create new instance of BaseAnnotation(value,)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span></span>)</span>" }, "prefect.flow": { "fullname": "prefect.flow", "modulename": "prefect", "qualname": "flow", "kind": "function", "doc": "<p>Decorator to designate a function as a Prefect workflow.</p>\n\n<p>This decorator may be used for asynchronous or synchronous functions.</p>\n\n<p>Flow parameters must be serializable by Pydantic.</p>\n\n<p>Args:\n    name: An optional name for the flow; if not provided, the name will be inferred\n        from the given function.\n    version: An optional version string for the flow; if not provided, we will\n        attempt to create a version string as a hash of the file containing the\n        wrapped function; if the file cannot be located, the version will be null.\n    flow_run_name: An optional name to distinguish runs of this flow; this name can\n        be provided as a string template with the flow's parameters as variables,\n        or a function that returns a string.\n    retries: An optional number of times to retry on flow run failure.\n    retry_delay_seconds: An optional number of seconds to wait before retrying the\n        flow after failure. This is only applicable if <code>retries</code> is nonzero.\n    task_runner: An optional task runner to use for task execution within the flow; if\n        not provided, a <code>ConcurrentTaskRunner</code> will be instantiated.\n    description: An optional string description for the flow; if not provided, the\n        description will be pulled from the docstring for the decorated function.\n    timeout_seconds: An optional number of seconds indicating a maximum runtime for\n        the flow. If the flow exceeds this runtime, it will be marked as failed.\n        Flow execution may continue until the next task is called.\n    validate_parameters: By default, parameters passed to flows are validated by\n        Pydantic. This will check that input values conform to the annotated types\n        on the function. Where possible, values will be coerced into the correct\n        type; for example, if a parameter is defined as <code>x: int</code> and \"5\" is passed,\n        it will be resolved to <code>5</code>. If set to <code>False</code>, no validation will be\n        performed on flow parameters.\n    persist_result: An optional toggle indicating whether the result of this flow\n        should be persisted to result storage. Defaults to <code>None</code>, which indicates\n        that Prefect should choose whether the result should be persisted depending on\n        the features being used.\n    result_storage: An optional block to use to persist the result of this flow.\n        This value will be used as the default for any tasks in this flow.\n        If not provided, the local file system will be used unless called as\n        a nested flow, at which point the default will be loaded from the parent flow.\n    result_serializer: An optional serializer to use to serialize the result of this\n        flow for persistence. This value will be used as the default for any tasks\n        in this flow. If not provided, the value of <code>PREFECT_RESULTS_DEFAULT_SERIALIZER</code>\n        will be used unless called as a nested flow, at which point the default will be\n        loaded from the parent flow.\n    cache_result_in_memory: An optional toggle indicating whether the cached result of\n        a running the flow should be stored in memory. Defaults to <code>True</code>.\n    log_prints: If set, <code>print</code> statements in the flow will be redirected to the\n        Prefect logger for the flow run. Defaults to <code>None</code>, which indicates that\n        the value from the parent flow should be used. If this is a parent flow,\n        the default is pulled from the <code>PREFECT_LOGGING_LOG_PRINTS</code> setting.\n    on_completion: An optional list of functions to call when the flow run is\n        completed. Each function should accept three arguments: the flow, the flow\n        run, and the final state of the flow run.\n    on_failure: An optional list of functions to call when the flow run fails. Each\n        function should accept three arguments: the flow, the flow run, and the\n        final state of the flow run.\n    on_cancellation: An optional list of functions to call when the flow run is\n        cancelled. These functions will be passed the flow, flow run, and final state.\n    on_crashed: An optional list of functions to call when the flow run crashes. Each\n        function should accept three arguments: the flow, the flow run, and the\n        final state of the flow run.\n    on_running: An optional list of functions to call when the flow run is started. Each\n        function should accept three arguments: the flow, the flow run, and the current state</p>\n\n<p>Returns:\n    A callable <code>Flow</code> object which, when called, will run the flow and return its\n    final state.</p>\n\n<p>Examples:\n    Define a simple flow</p>\n\n<pre><code>&gt;&gt;&gt; from prefect import flow\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def add(x, y):\n&gt;&gt;&gt;     return x + y\n\nDefine an async flow\n\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; async def add(x, y):\n&gt;&gt;&gt;     return x + y\n\nDefine a flow with a version and description\n\n&gt;&gt;&gt; @flow(version=\"first-flow\", description=\"This flow is empty!\")\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     pass\n\nDefine a flow with a custom name\n\n&gt;&gt;&gt; @flow(name=\"The Ultimate Flow\")\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     pass\n\nDefine a flow that submits its tasks to dask\n\n&gt;&gt;&gt; from prefect_dask.task_runners import DaskTaskRunner\n&gt;&gt;&gt;\n&gt;&gt;&gt; @flow(task_runner=DaskTaskRunner)\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     pass\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">__fn</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">flow_run_name</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">retries</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">retry_delay_seconds</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\ttask_runner: prefect.task_runners.BaseTaskRunner = &lt;class &#x27;prefect.task_runners.ConcurrentTaskRunner&#x27;&gt;,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout_seconds</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">validate_parameters</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">persist_result</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">result_storage</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">filesystems</span><span class=\"o\">.</span><span class=\"n\">WritableFileSystem</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">result_serializer</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">Serializer</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cache_result_in_memory</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">log_prints</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_completion</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">Flow</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">FlowRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">]]]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_failure</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">Flow</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">FlowRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">]]]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_cancellation</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">Flow</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">FlowRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_crashed</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">Flow</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">FlowRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_running</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">Flow</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">FlowRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def" }, "prefect.Flow": { "fullname": "prefect.Flow", "modulename": "prefect", "qualname": "Flow", "kind": "class", "doc": "<p>A Prefect workflow definition.</p>\n\n<p>!!! note\n    We recommend using the [<code>@flow</code> decorator][prefect.flows.flow] for most use-cases.</p>\n\n<p>Wraps a function with an entrypoint to the Prefect engine. To preserve the input\nand output types, we use the generic type variables <code>P</code> and <code>R</code> for \"Parameters\" and\n\"Returns\" respectively.</p>\n\n<p>Args:\n    fn: The function defining the workflow.\n    name: An optional name for the flow; if not provided, the name will be inferred\n        from the given function.\n    version: An optional version string for the flow; if not provided, we will\n        attempt to create a version string as a hash of the file containing the\n        wrapped function; if the file cannot be located, the version will be null.\n    flow_run_name: An optional name to distinguish runs of this flow; this name can\n        be provided as a string template with the flow's parameters as variables,\n        or a function that returns a string.\n    task_runner: An optional task runner to use for task execution within the flow;\n        if not provided, a <code>ConcurrentTaskRunner</code> will be used.\n    description: An optional string description for the flow; if not provided, the\n        description will be pulled from the docstring for the decorated function.\n    timeout_seconds: An optional number of seconds indicating a maximum runtime for\n        the flow. If the flow exceeds this runtime, it will be marked as failed.\n        Flow execution may continue until the next task is called.\n    validate_parameters: By default, parameters passed to flows are validated by\n        Pydantic. This will check that input values conform to the annotated types\n        on the function. Where possible, values will be coerced into the correct\n        type; for example, if a parameter is defined as <code>x: int</code> and \"5\" is passed,\n        it will be resolved to <code>5</code>. If set to <code>False</code>, no validation will be\n        performed on flow parameters.\n    retries: An optional number of times to retry on flow run failure.\n    retry_delay_seconds: An optional number of seconds to wait before retrying the\n        flow after failure. This is only applicable if <code>retries</code> is nonzero.\n    persist_result: An optional toggle indicating whether the result of this flow\n        should be persisted to result storage. Defaults to <code>None</code>, which indicates\n        that Prefect should choose whether the result should be persisted depending on\n        the features being used.\n    result_storage: An optional block to use to persist the result of this flow.\n        This value will be used as the default for any tasks in this flow.\n        If not provided, the local file system will be used unless called as\n        a nested flow, at which point the default will be loaded from the parent flow.\n    result_serializer: An optional serializer to use to serialize the result of this\n        flow for persistence. This value will be used as the default for any tasks\n        in this flow. If not provided, the value of <code>PREFECT_RESULTS_DEFAULT_SERIALIZER</code>\n        will be used unless called as a nested flow, at which point the default will be\n        loaded from the parent flow.\n    on_failure: An optional list of callables to run when the flow enters a failed state.\n    on_completion: An optional list of callables to run when the flow enters a completed state.\n    on_cancellation: An optional list of callables to run when the flow enters a cancelling state.\n    on_crashed: An optional list of callables to run when the flow enters a crashed state.\n    on_running: An optional list of callables to run when the flow enters a running state.</p>\n", "bases": "typing.Generic[~P, ~R]" }, "prefect.Flow.__init__": { "fullname": "prefect.Flow.__init__", "modulename": "prefect", "qualname": "Flow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">fn</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">P</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">flow_run_name</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">retries</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">retry_delay_seconds</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\ttask_runner: Union[Type[prefect.task_runners.BaseTaskRunner], prefect.task_runners.BaseTaskRunner] = &lt;class &#x27;prefect.task_runners.ConcurrentTaskRunner&#x27;&gt;,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout_seconds</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">validate_parameters</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">persist_result</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">result_storage</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">filesystems</span><span class=\"o\">.</span><span class=\"n\">WritableFileSystem</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">result_serializer</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">Serializer</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cache_result_in_memory</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">log_prints</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_completion</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">Flow</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">FlowRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_failure</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">Flow</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">FlowRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_cancellation</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">Flow</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">FlowRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_crashed</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">Flow</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">FlowRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_running</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">Flow</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">FlowRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>" }, "prefect.Flow.name": { "fullname": "prefect.Flow.name", "modulename": "prefect", "qualname": "Flow.name", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.flow_run_name": { "fullname": "prefect.Flow.flow_run_name", "modulename": "prefect", "qualname": "Flow.flow_run_name", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.task_runner": { "fullname": "prefect.Flow.task_runner", "modulename": "prefect", "qualname": "Flow.task_runner", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.log_prints": { "fullname": "prefect.Flow.log_prints", "modulename": "prefect", "qualname": "Flow.log_prints", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.description": { "fullname": "prefect.Flow.description", "modulename": "prefect", "qualname": "Flow.description", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.fn": { "fullname": "prefect.Flow.fn", "modulename": "prefect", "qualname": "Flow.fn", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.isasync": { "fullname": "prefect.Flow.isasync", "modulename": "prefect", "qualname": "Flow.isasync", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.version": { "fullname": "prefect.Flow.version", "modulename": "prefect", "qualname": "Flow.version", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.timeout_seconds": { "fullname": "prefect.Flow.timeout_seconds", "modulename": "prefect", "qualname": "Flow.timeout_seconds", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.retries": { "fullname": "prefect.Flow.retries", "modulename": "prefect", "qualname": "Flow.retries", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.retry_delay_seconds": { "fullname": "prefect.Flow.retry_delay_seconds", "modulename": "prefect", "qualname": "Flow.retry_delay_seconds", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.parameters": { "fullname": "prefect.Flow.parameters", "modulename": "prefect", "qualname": "Flow.parameters", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.should_validate_parameters": { "fullname": "prefect.Flow.should_validate_parameters", "modulename": "prefect", "qualname": "Flow.should_validate_parameters", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.persist_result": { "fullname": "prefect.Flow.persist_result", "modulename": "prefect", "qualname": "Flow.persist_result", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.result_storage": { "fullname": "prefect.Flow.result_storage", "modulename": "prefect", "qualname": "Flow.result_storage", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.result_serializer": { "fullname": "prefect.Flow.result_serializer", "modulename": "prefect", "qualname": "Flow.result_serializer", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.cache_result_in_memory": { "fullname": "prefect.Flow.cache_result_in_memory", "modulename": "prefect", "qualname": "Flow.cache_result_in_memory", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.on_completion": { "fullname": "prefect.Flow.on_completion", "modulename": "prefect", "qualname": "Flow.on_completion", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.on_failure": { "fullname": "prefect.Flow.on_failure", "modulename": "prefect", "qualname": "Flow.on_failure", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.on_cancellation": { "fullname": "prefect.Flow.on_cancellation", "modulename": "prefect", "qualname": "Flow.on_cancellation", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.on_crashed": { "fullname": "prefect.Flow.on_crashed", "modulename": "prefect", "qualname": "Flow.on_crashed", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.on_running": { "fullname": "prefect.Flow.on_running", "modulename": "prefect", "qualname": "Flow.on_running", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Flow.with_options": { "fullname": "prefect.Flow.with_options", "modulename": "prefect", "qualname": "Flow.with_options", "kind": "function", "doc": "<p>Create a new flow from the current object, updating provided options.</p>\n\n<p>Args:\n    name: A new name for the flow.\n    version: A new version for the flow.\n    description: A new description for the flow.\n    flow_run_name: An optional name to distinguish runs of this flow; this name\n        can be provided as a string template with the flow's parameters as variables,\n        or a function that returns a string.\n    task_runner: A new task runner for the flow.\n    timeout_seconds: A new number of seconds to fail the flow after if still\n        running.\n    validate_parameters: A new value indicating if flow calls should validate\n        given parameters.\n    retries: A new number of times to retry on flow run failure.\n    retry_delay_seconds: A new number of seconds to wait before retrying the\n        flow after failure. This is only applicable if <code>retries</code> is nonzero.\n    persist_result: A new option for enabling or disabling result persistence.\n    result_storage: A new storage type to use for results.\n    result_serializer: A new serializer to use for results.\n    cache_result_in_memory: A new value indicating if the flow's result should\n        be cached in memory.\n    on_failure: A new list of callables to run when the flow enters a failed state.\n    on_completion: A new list of callables to run when the flow enters a completed state.\n    on_cancellation: A new list of callables to run when the flow enters a cancelling state.\n    on_crashed: A new list of callables to run when the flow enters a crashed state.\n    on_running: A new list of callables to run when the flow enters a running state.</p>\n\n<p>Returns:\n    A new <code>Flow</code> instance.</p>\n\n<p>Examples:</p>\n\n<pre><code>Create a new flow from an existing flow and update the name:\n\n&gt;&gt;&gt; @flow(name=\"My flow\")\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     return 1\n&gt;&gt;&gt;\n&gt;&gt;&gt; new_flow = my_flow.with_options(name=\"My new flow\")\n\nCreate a new flow from an existing flow, update the task runner, and call\nit without an intermediate variable:\n\n&gt;&gt;&gt; from prefect.task_runners import SequentialTaskRunner\n&gt;&gt;&gt;\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow(x, y):\n&gt;&gt;&gt;     return x + y\n&gt;&gt;&gt;\n&gt;&gt;&gt; state = my_flow.with_options(task_runner=SequentialTaskRunner)(1, 3)\n&gt;&gt;&gt; assert state.result() == 4\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">retries</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">retry_delay_seconds</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">flow_run_name</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">task_runner</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">task_runners</span><span class=\"o\">.</span><span class=\"n\">BaseTaskRunner</span><span class=\"p\">],</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">task_runners</span><span class=\"o\">.</span><span class=\"n\">BaseTaskRunner</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout_seconds</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">validate_parameters</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\tpersist_result: Optional[bool] = &lt;class &#x27;prefect.utilities.annotations.NotSet&#x27;&gt;,</span><span class=\"param\">\tresult_storage: Union[prefect.filesystems.WritableFileSystem, str, NoneType] = &lt;class &#x27;prefect.utilities.annotations.NotSet&#x27;&gt;,</span><span class=\"param\">\tresult_serializer: Union[prefect.serializers.Serializer, str, NoneType] = &lt;class &#x27;prefect.utilities.annotations.NotSet&#x27;&gt;,</span><span class=\"param\">\t<span class=\"n\">cache_result_in_memory</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\tlog_prints: Optional[bool] = &lt;class &#x27;prefect.utilities.annotations.NotSet&#x27;&gt;,</span><span class=\"param\">\t<span class=\"n\">on_completion</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">Flow</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">FlowRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_failure</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">Flow</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">FlowRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_cancellation</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">Flow</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">FlowRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_crashed</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">Flow</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">FlowRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_running</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">Flow</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">FlowRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Self</span>:</span></span>", "funcdef": "def" }, "prefect.Flow.validate_parameters": { "fullname": "prefect.Flow.validate_parameters", "modulename": "prefect", "qualname": "Flow.validate_parameters", "kind": "function", "doc": "<p>Validate parameters for compatibility with the flow by attempting to cast the inputs to the\nassociated types specified by the function's type annotations.</p>\n\n<p>Returns:\n    A new dict of parameters that have been cast to the appropriate types</p>\n\n<p>Raises:\n    ParameterTypeError: if the provided parameters are not valid</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def" }, "prefect.Flow.serialize_parameters": { "fullname": "prefect.Flow.serialize_parameters", "modulename": "prefect", "qualname": "Flow.serialize_parameters", "kind": "function", "doc": "<p>Convert parameters to a serializable form.</p>\n\n<p>Uses FastAPI's <code>jsonable_encoder</code> to convert to JSON compatible objects without\nconverting everything directly to a string. This maintains basic types like\nintegers during API roundtrips.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def" }, "prefect.Flow.to_deployment": { "fullname": "prefect.Flow.to_deployment", "modulename": "prefect", "qualname": "Flow.to_deployment", "kind": "function", "doc": "<p>Creates a runner deployment object for this flow.</p>\n\n<p>Args:\n    name: The name to give the created deployment.\n    interval: An interval on which to execute the new deployment. Accepts either a number\n        or a timedelta object. If a number is given, it will be interpreted as seconds.\n    cron: A cron schedule of when to execute runs of this deployment.\n    rrule: An rrule schedule of when to execute runs of this deployment.\n    paused: Whether or not to set this deployment as paused.\n    schedules: A list of schedule objects defining when to execute runs of this deployment.\n        Used to define multiple schedules or additional scheduling options such as <code>timezone</code>.\n    schedule: A schedule object defining when to execute runs of this deployment.\n    is_schedule_active: Whether or not to set the schedule for this deployment as active. If\n        not provided when creating a deployment, the schedule will be set as active. If not\n        provided when updating a deployment, the schedule's activation will not be changed.\n    parameters: A dictionary of default parameter values to pass to runs of this deployment.\n    triggers: A list of triggers that will kick off runs of this deployment.\n    description: A description for the created deployment. Defaults to the flow's\n        description if not provided.\n    tags: A list of tags to associate with the created deployment for organizational\n        purposes.\n    version: A version for the created deployment. Defaults to the flow's version.\n    enforce_parameter_schema: Whether or not the Prefect API should enforce the\n        parameter schema for the created deployment.\n    work_pool_name: The name of the work pool to use for this deployment.\n    work_queue_name: The name of the work queue to use for this deployment's scheduled runs.\n        If not provided the default work queue for the work pool will be used.\n    job_variables: Settings used to override the values specified default base job template\n        of the chosen work pool. Refer to the base job template of the chosen work pool for\n    entrypoint_type: Type of entrypoint to use for the deployment. When using a module path\n        entrypoint, ensure that the module will be importable in the execution environment.</p>\n\n<p>Examples:\n    Prepare two deployments and serve them:\n    <div class=\"pdoc-code codehilite\">\n    <pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">prefect</span> <span class=\"kn\">import</span> <span class=\"n\">flow</span><span class=\"p\">,</span> <span class=\"n\">serve</span>\n <br />\n    <span class=\"nd\">@flow</span>\n    <span class=\"k\">def</span> <span class=\"nf\">my_flow</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;hello </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n <br />\n    <span class=\"nd\">@flow</span>\n    <span class=\"k\">def</span> <span class=\"nf\">my_other_flow</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;goodbye </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n <br />\n    <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\n        <span class=\"n\">hello_deploy</span> <span class=\"o\">=</span> <span class=\"n\">my_flow</span><span class=\"o\">.</span><span class=\"n\">to_deployment</span><span class=\"p\">(</span><span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;dev&quot;</span><span class=\"p\">])</span>\n        <span class=\"n\">bye_deploy</span> <span class=\"o\">=</span> <span class=\"n\">my_other_flow</span><span class=\"o\">.</span><span class=\"n\">to_deployment</span><span class=\"p\">(</span><span class=\"s2\">&quot;goodbye&quot;</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;dev&quot;</span><span class=\"p\">])</span>\n        <span class=\"n\">serve</span><span class=\"p\">(</span><span class=\"n\">hello_deploy</span><span class=\"p\">,</span> <span class=\"n\">bye_deploy</span><span class=\"p\">)</span>\n    </code></pre>\n    </div></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">interval</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">]],</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cron</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rrule</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">paused</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">schedules</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">MinimalDeploymentSchedule</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">IntervalSchedule</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">CronSchedule</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">RRuleSchedule</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">NoSchedule</span><span class=\"p\">]]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">schedule</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">IntervalSchedule</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">CronSchedule</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">RRuleSchedule</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">NoSchedule</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">is_schedule_active</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">triggers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">deployment_triggers</span><span class=\"o\">.</span><span class=\"n\">DeploymentEventTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">deployment_triggers</span><span class=\"o\">.</span><span class=\"n\">DeploymentMetricTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">deployment_triggers</span><span class=\"o\">.</span><span class=\"n\">DeploymentCompoundTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">deployment_triggers</span><span class=\"o\">.</span><span class=\"n\">DeploymentSequenceTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">automations</span><span class=\"o\">.</span><span class=\"n\">EventTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">automations</span><span class=\"o\">.</span><span class=\"n\">MetricTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">automations</span><span class=\"o\">.</span><span class=\"n\">CompoundTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">automations</span><span class=\"o\">.</span><span class=\"n\">SequenceTrigger</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">enforce_parameter_schema</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">work_pool_name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">work_queue_name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">job_variables</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">entrypoint_type</span><span class=\"p\">:</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">deployments</span><span class=\"o\">.</span><span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">EntrypointType</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">EntrypointType</span><span class=\"o\">.</span><span class=\"n\">FILE_PATH</span><span class=\"p\">:</span> <span class=\"s1\">&#39;file_path&#39;</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">deployments</span><span class=\"o\">.</span><span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">RunnerDeployment</span>:</span></span>", "funcdef": "def" }, "prefect.Flow.serve": { "fullname": "prefect.Flow.serve", "modulename": "prefect", "qualname": "Flow.serve", "kind": "function", "doc": "<p>Creates a deployment for this flow and starts a runner to monitor for scheduled work.</p>\n\n<p>Args:\n    name: The name to give the created deployment. Defaults to the name of the flow.\n    interval: An interval on which to execute the deployment. Accepts a number or a\n        timedelta object to create a single schedule. If a number is given, it will be\n        interpreted as seconds. Also accepts an iterable of numbers or timedelta to create\n        multiple schedules.\n    cron: A cron schedule string of when to execute runs of this deployment.\n        Also accepts an iterable of cron schedule strings to create multiple schedules.\n    rrule: An rrule schedule string of when to execute runs of this deployment.\n        Also accepts an iterable of rrule schedule strings to create multiple schedules.\n    triggers: A list of triggers that will kick off runs of this deployment.\n    paused: Whether or not to set this deployment as paused.\n    schedules: A list of schedule objects defining when to execute runs of this deployment.\n        Used to define multiple schedules or additional scheduling options like <code>timezone</code>.\n    schedule: A schedule object defining when to execute runs of this deployment. Used to\n        define additional scheduling options such as <code>timezone</code>.\n    is_schedule_active: Whether or not to set the schedule for this deployment as active. If\n        not provided when creating a deployment, the schedule will be set as active. If not\n        provided when updating a deployment, the schedule's activation will not be changed.\n    parameters: A dictionary of default parameter values to pass to runs of this deployment.\n    description: A description for the created deployment. Defaults to the flow's\n        description if not provided.\n    tags: A list of tags to associate with the created deployment for organizational\n        purposes.\n    version: A version for the created deployment. Defaults to the flow's version.\n    enforce_parameter_schema: Whether or not the Prefect API should enforce the\n        parameter schema for the created deployment.\n    pause_on_shutdown: If True, provided schedule will be paused when the serve function is stopped.\n        If False, the schedules will continue running.\n    print_starting_message: Whether or not to print the starting message when flow is served.\n    limit: The maximum number of runs that can be executed concurrently.\n    webserver: Whether or not to start a monitoring webserver for this flow.\n    entrypoint_type: Type of entrypoint to use for the deployment. When using a module path\n        entrypoint, ensure that the module will be importable in the execution environment.</p>\n\n<p>Examples:\n    Serve a flow:\n    <div class=\"pdoc-code codehilite\">\n    <pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">prefect</span> <span class=\"kn\">import</span> <span class=\"n\">flow</span>\n <br />\n    <span class=\"nd\">@flow</span>\n    <span class=\"k\">def</span> <span class=\"nf\">my_flow</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;hello </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n <br />\n    <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\n        <span class=\"n\">my_flow</span><span class=\"o\">.</span><span class=\"n\">serve</span><span class=\"p\">(</span><span class=\"s2\">&quot;example-deployment&quot;</span><span class=\"p\">)</span>\n    </code></pre>\n    </div></p>\n\n<pre><code>Serve a flow and run it every hour:\n&lt;div class=\"pdoc-code codehilite\"&gt;\n&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=\"kn\"&gt;from&lt;/span&gt; &lt;span class=\"nn\"&gt;prefect&lt;/span&gt; &lt;span class=\"kn\"&gt;import&lt;/span&gt; &lt;span class=\"n\"&gt;flow&lt;/span&gt;\n\n&lt;span class=\"nd\"&gt;@flow&lt;/span&gt;\n&lt;span class=\"k\"&gt;def&lt;/span&gt; &lt;span class=\"nf\"&gt;my_flow&lt;/span&gt;&lt;span class=\"p\"&gt;(&lt;/span&gt;&lt;span class=\"n\"&gt;name&lt;/span&gt;&lt;span class=\"p\"&gt;):&lt;/span&gt;\n    &lt;span class=\"nb\"&gt;print&lt;/span&gt;&lt;span class=\"p\"&gt;(&lt;/span&gt;&lt;span class=\"sa\"&gt;f&lt;/span&gt;&lt;span class=\"s2\"&gt;&amp;quot;hello &lt;/span&gt;&lt;span class=\"si\"&gt;{&lt;/span&gt;&lt;span class=\"n\"&gt;name&lt;/span&gt;&lt;span class=\"si\"&gt;}&lt;/span&gt;&lt;span class=\"s2\"&gt;&amp;quot;&lt;/span&gt;&lt;span class=\"p\"&gt;)&lt;/span&gt;\n\n&lt;span class=\"k\"&gt;if&lt;/span&gt; &lt;span class=\"vm\"&gt;__name__&lt;/span&gt; &lt;span class=\"o\"&gt;==&lt;/span&gt; &lt;span class=\"s2\"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class=\"p\"&gt;:&lt;/span&gt;\n    &lt;span class=\"n\"&gt;my_flow&lt;/span&gt;&lt;span class=\"o\"&gt;.&lt;/span&gt;&lt;span class=\"n\"&gt;serve&lt;/span&gt;&lt;span class=\"p\"&gt;(&lt;/span&gt;&lt;span class=\"s2\"&gt;&amp;quot;example-deployment&amp;quot;&lt;/span&gt;&lt;span class=\"p\"&gt;,&lt;/span&gt; &lt;span class=\"n\"&gt;interval&lt;/span&gt;&lt;span class=\"o\"&gt;=&lt;/span&gt;&lt;span class=\"mi\"&gt;3600&lt;/span&gt;&lt;span class=\"p\"&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">interval</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">]],</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cron</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rrule</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">paused</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">schedules</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">MinimalDeploymentSchedule</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">IntervalSchedule</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">CronSchedule</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">RRuleSchedule</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">NoSchedule</span><span class=\"p\">]]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">schedule</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">IntervalSchedule</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">CronSchedule</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">RRuleSchedule</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">NoSchedule</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">is_schedule_active</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">triggers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">deployment_triggers</span><span class=\"o\">.</span><span class=\"n\">DeploymentEventTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">deployment_triggers</span><span class=\"o\">.</span><span class=\"n\">DeploymentMetricTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">deployment_triggers</span><span class=\"o\">.</span><span class=\"n\">DeploymentCompoundTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">deployment_triggers</span><span class=\"o\">.</span><span class=\"n\">DeploymentSequenceTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">automations</span><span class=\"o\">.</span><span class=\"n\">EventTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">automations</span><span class=\"o\">.</span><span class=\"n\">MetricTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">automations</span><span class=\"o\">.</span><span class=\"n\">CompoundTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">automations</span><span class=\"o\">.</span><span class=\"n\">SequenceTrigger</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">enforce_parameter_schema</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">pause_on_shutdown</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">print_starting_message</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">webserver</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">entrypoint_type</span><span class=\"p\">:</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">deployments</span><span class=\"o\">.</span><span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">EntrypointType</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">EntrypointType</span><span class=\"o\">.</span><span class=\"n\">FILE_PATH</span><span class=\"p\">:</span> <span class=\"s1\">&#39;file_path&#39;</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def" }, "prefect.Flow.from_source": { "fullname": "prefect.Flow.from_source", "modulename": "prefect", "qualname": "Flow.from_source", "kind": "function", "doc": "<p>Loads a flow from a remote source.</p>\n\n<p>Args:\n    source: Either a URL to a git repository or a storage object.\n    entrypoint:  The path to a file containing a flow and the name of the flow function in\n        the format <code>./path/to/file.py:flow_func_name</code>.</p>\n\n<p>Returns:\n    A new <code>Flow</code> instance.</p>\n\n<p>Examples:\n    Load a flow from a public git repository:\n    <div class=\"pdoc-code codehilite\">\n    <pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">prefect</span> <span class=\"kn\">import</span> <span class=\"n\">flow</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">prefect.runner.storage</span> <span class=\"kn\">import</span> <span class=\"n\">GitRepository</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">prefect.blocks.system</span> <span class=\"kn\">import</span> <span class=\"n\">Secret</span>\n <br />\n    <span class=\"n\">my_flow</span> <span class=\"o\">=</span> <span class=\"n\">flow</span><span class=\"o\">.</span><span class=\"n\">from_source</span><span class=\"p\">(</span>\n        <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"s2\">&quot;<a href=\"https://github.com/org/repo.git&amp;quot\">https://github.com/org/repo.git&amp;quot</a>;</span><span class=\"p\">,</span>\n        <span class=\"n\">entrypoint</span><span class=\"o\">=</span><span class=\"s2\">&quot;flows.py:my_flow&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n <br />\n    <span class=\"n\">my_flow</span><span class=\"p\">()</span>\n    </code></pre>\n    </div></p>\n\n<pre><code>Load a flow from a private git repository using an access token stored in a `Secret` block:\n&lt;div class=\"pdoc-code codehilite\"&gt;\n&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=\"kn\"&gt;from&lt;/span&gt; &lt;span class=\"nn\"&gt;prefect&lt;/span&gt; &lt;span class=\"kn\"&gt;import&lt;/span&gt; &lt;span class=\"n\"&gt;flow&lt;/span&gt;\n&lt;span class=\"kn\"&gt;from&lt;/span&gt; &lt;span class=\"nn\"&gt;prefect.runner.storage&lt;/span&gt; &lt;span class=\"kn\"&gt;import&lt;/span&gt; &lt;span class=\"n\"&gt;GitRepository&lt;/span&gt;\n&lt;span class=\"kn\"&gt;from&lt;/span&gt; &lt;span class=\"nn\"&gt;prefect.blocks.system&lt;/span&gt; &lt;span class=\"kn\"&gt;import&lt;/span&gt; &lt;span class=\"n\"&gt;Secret&lt;/span&gt;\n\n&lt;span class=\"n\"&gt;my_flow&lt;/span&gt; &lt;span class=\"o\"&gt;=&lt;/span&gt; &lt;span class=\"n\"&gt;flow&lt;/span&gt;&lt;span class=\"o\"&gt;.&lt;/span&gt;&lt;span class=\"n\"&gt;from_source&lt;/span&gt;&lt;span class=\"p\"&gt;(&lt;/span&gt;\n    &lt;span class=\"n\"&gt;source&lt;/span&gt;&lt;span class=\"o\"&gt;=&lt;/span&gt;&lt;span class=\"n\"&gt;GitRepository&lt;/span&gt;&lt;span class=\"p\"&gt;(&lt;/span&gt;\n        &lt;span class=\"n\"&gt;url&lt;/span&gt;&lt;span class=\"o\"&gt;=&lt;/span&gt;&lt;span class=\"s2\"&gt;&amp;quot;https://github.com/org/repo.git&amp;quot;&lt;/span&gt;&lt;span class=\"p\"&gt;,&lt;/span&gt;\n        &lt;span class=\"n\"&gt;credentials&lt;/span&gt;&lt;span class=\"o\"&gt;=&lt;/span&gt;&lt;span class=\"p\"&gt;{&lt;/span&gt;&lt;span class=\"s2\"&gt;&amp;quot;access_token&amp;quot;&lt;/span&gt;&lt;span class=\"p\"&gt;:&lt;/span&gt; &lt;span class=\"n\"&gt;Secret&lt;/span&gt;&lt;span class=\"o\"&gt;.&lt;/span&gt;&lt;span class=\"n\"&gt;load&lt;/span&gt;&lt;span class=\"p\"&gt;(&lt;/span&gt;&lt;span class=\"s2\"&gt;&amp;quot;github-access-token&amp;quot;&lt;/span&gt;&lt;span class=\"p\"&gt;)}&lt;/span&gt;\n    &lt;span class=\"p\"&gt;),&lt;/span&gt;\n    &lt;span class=\"n\"&gt;entrypoint&lt;/span&gt;&lt;span class=\"o\"&gt;=&lt;/span&gt;&lt;span class=\"s2\"&gt;&amp;quot;flows.py:my_flow&amp;quot;&lt;/span&gt;&lt;span class=\"p\"&gt;,&lt;/span&gt;\n&lt;span class=\"p\"&gt;)&lt;/span&gt;\n\n&lt;span class=\"n\"&gt;my_flow&lt;/span&gt;&lt;span class=\"p\"&gt;()&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">F</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">source</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">RunnerStorage</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">filesystems</span><span class=\"o\">.</span><span class=\"n\">ReadableDeploymentStorage</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">entrypoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">F</span>:</span></span>", "funcdef": "def" }, "prefect.Flow.deploy": { "fullname": "prefect.Flow.deploy", "modulename": "prefect", "qualname": "Flow.deploy", "kind": "function", "doc": "<p>Deploys a flow to run on dynamic infrastructure via a work pool.</p>\n\n<p>By default, calling this method will build a Docker image for the flow, push it to a registry,\nand create a deployment via the Prefect API that will run the flow on the given schedule.</p>\n\n<p>If you want to use an existing image, you can pass <code>build=False</code> to skip building and pushing\nan image.</p>\n\n<p>Args:\n    name: The name to give the created deployment.\n    work_pool_name: The name of the work pool to use for this deployment. Defaults to\n        the value of <code>PREFECT_DEFAULT_WORK_POOL_NAME</code>.\n    image: The name of the Docker image to build, including the registry and\n        repository. Pass a DockerImage instance to customize the Dockerfile used\n        and build arguments.\n    build: Whether or not to build a new image for the flow. If False, the provided\n        image will be used as-is and pulled at runtime.\n    push: Whether or not to skip pushing the built image to a registry.\n    work_queue_name: The name of the work queue to use for this deployment's scheduled runs.\n        If not provided the default work queue for the work pool will be used.\n    job_variables: Settings used to override the values specified default base job template\n        of the chosen work pool. Refer to the base job template of the chosen work pool for\n        available settings.\n    interval: An interval on which to execute the deployment. Accepts a number or a\n        timedelta object to create a single schedule. If a number is given, it will be\n        interpreted as seconds. Also accepts an iterable of numbers or timedelta to create\n        multiple schedules.\n    cron: A cron schedule string of when to execute runs of this deployment.\n        Also accepts an iterable of cron schedule strings to create multiple schedules.\n    rrule: An rrule schedule string of when to execute runs of this deployment.\n        Also accepts an iterable of rrule schedule strings to create multiple schedules.\n    triggers: A list of triggers that will kick off runs of this deployment.\n    paused: Whether or not to set this deployment as paused.\n    schedules: A list of schedule objects defining when to execute runs of this deployment.\n        Used to define multiple schedules or additional scheduling options like <code>timezone</code>.\n    schedule: A schedule object defining when to execute runs of this deployment. Used to\n        define additional scheduling options like <code>timezone</code>.\n    is_schedule_active: Whether or not to set the schedule for this deployment as active. If\n        not provided when creating a deployment, the schedule will be set as active. If not\n        provided when updating a deployment, the schedule's activation will not be changed.\n    parameters: A dictionary of default parameter values to pass to runs of this deployment.\n    description: A description for the created deployment. Defaults to the flow's\n        description if not provided.\n    tags: A list of tags to associate with the created deployment for organizational\n        purposes.\n    version: A version for the created deployment. Defaults to the flow's version.\n    enforce_parameter_schema: Whether or not the Prefect API should enforce the\n        parameter schema for the created deployment.\n    entrypoint_type: Type of entrypoint to use for the deployment. When using a module path\n        entrypoint, ensure that the module will be importable in the execution environment.\n    print_next_steps_message: Whether or not to print a message with next steps\n        after deploying the deployments.\n    ignore_warnings: Whether or not to ignore warnings about the work pool type.</p>\n\n<p>Returns:\n    The ID of the created/updated deployment.</p>\n\n<p>Examples:\n    Deploy a local flow to a work pool:\n    <div class=\"pdoc-code codehilite\">\n    <pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">prefect</span> <span class=\"kn\">import</span> <span class=\"n\">flow</span>\n <br />\n    <span class=\"nd\">@flow</span>\n    <span class=\"k\">def</span> <span class=\"nf\">my_flow</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;hello </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n <br />\n    <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\n        <span class=\"n\">my_flow</span><span class=\"o\">.</span><span class=\"n\">deploy</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;example-deployment&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">work_pool_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-work-pool&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">image</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-repository/my-image:dev&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n    </code></pre>\n    </div></p>\n\n<pre><code>Deploy a remotely stored flow to a work pool:\n&lt;div class=\"pdoc-code codehilite\"&gt;\n&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=\"kn\"&gt;from&lt;/span&gt; &lt;span class=\"nn\"&gt;prefect&lt;/span&gt; &lt;span class=\"kn\"&gt;import&lt;/span&gt; &lt;span class=\"n\"&gt;flow&lt;/span&gt;\n\n&lt;span class=\"k\"&gt;if&lt;/span&gt; &lt;span class=\"vm\"&gt;__name__&lt;/span&gt; &lt;span class=\"o\"&gt;==&lt;/span&gt; &lt;span class=\"s2\"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class=\"p\"&gt;:&lt;/span&gt;\n    &lt;span class=\"n\"&gt;flow&lt;/span&gt;&lt;span class=\"o\"&gt;.&lt;/span&gt;&lt;span class=\"n\"&gt;from_source&lt;/span&gt;&lt;span class=\"p\"&gt;(&lt;/span&gt;\n        &lt;span class=\"n\"&gt;source&lt;/span&gt;&lt;span class=\"o\"&gt;=&lt;/span&gt;&lt;span class=\"s2\"&gt;&amp;quot;https://github.com/org/repo.git&amp;quot;&lt;/span&gt;&lt;span class=\"p\"&gt;,&lt;/span&gt;\n        &lt;span class=\"n\"&gt;entrypoint&lt;/span&gt;&lt;span class=\"o\"&gt;=&lt;/span&gt;&lt;span class=\"s2\"&gt;&amp;quot;flows.py:my_flow&amp;quot;&lt;/span&gt;&lt;span class=\"p\"&gt;,&lt;/span&gt;\n    &lt;span class=\"p\"&gt;)&lt;/span&gt;&lt;span class=\"o\"&gt;.&lt;/span&gt;&lt;span class=\"n\"&gt;deploy&lt;/span&gt;&lt;span class=\"p\"&gt;(&lt;/span&gt;\n        &lt;span class=\"s2\"&gt;&amp;quot;example-deployment&amp;quot;&lt;/span&gt;&lt;span class=\"p\"&gt;,&lt;/span&gt;\n        &lt;span class=\"n\"&gt;work_pool_name&lt;/span&gt;&lt;span class=\"o\"&gt;=&lt;/span&gt;&lt;span class=\"s2\"&gt;&amp;quot;my-work-pool&amp;quot;&lt;/span&gt;&lt;span class=\"p\"&gt;,&lt;/span&gt;\n        &lt;span class=\"n\"&gt;image&lt;/span&gt;&lt;span class=\"o\"&gt;=&lt;/span&gt;&lt;span class=\"s2\"&gt;&amp;quot;my-repository/my-image:dev&amp;quot;&lt;/span&gt;&lt;span class=\"p\"&gt;,&lt;/span&gt;\n    &lt;span class=\"p\"&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">work_pool_name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">image</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">deployments</span><span class=\"o\">.</span><span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">DockerImage</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">build</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">push</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">work_queue_name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">job_variables</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">interval</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cron</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rrule</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">paused</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">schedules</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">MinimalDeploymentSchedule</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">schedule</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">IntervalSchedule</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">CronSchedule</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">RRuleSchedule</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">schedules</span><span class=\"o\">.</span><span class=\"n\">NoSchedule</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">is_schedule_active</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">triggers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">deployment_triggers</span><span class=\"o\">.</span><span class=\"n\">DeploymentEventTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">deployment_triggers</span><span class=\"o\">.</span><span class=\"n\">DeploymentMetricTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">deployment_triggers</span><span class=\"o\">.</span><span class=\"n\">DeploymentCompoundTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">deployment_triggers</span><span class=\"o\">.</span><span class=\"n\">DeploymentSequenceTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">automations</span><span class=\"o\">.</span><span class=\"n\">EventTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">automations</span><span class=\"o\">.</span><span class=\"n\">MetricTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">automations</span><span class=\"o\">.</span><span class=\"n\">CompoundTrigger</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">automations</span><span class=\"o\">.</span><span class=\"n\">SequenceTrigger</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">enforce_parameter_schema</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">entrypoint_type</span><span class=\"p\">:</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">deployments</span><span class=\"o\">.</span><span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">EntrypointType</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">EntrypointType</span><span class=\"o\">.</span><span class=\"n\">FILE_PATH</span><span class=\"p\">:</span> <span class=\"s1\">&#39;file_path&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">print_next_steps</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_warnings</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">UUID</span>:</span></span>", "funcdef": "async def" }, "prefect.Flow.visualize": { "fullname": "prefect.Flow.visualize", "modulename": "prefect", "qualname": "Flow.visualize", "kind": "function", "doc": "<p>Generates a graphviz object representing the current flow. In IPython notebooks,\nit's rendered inline, otherwise in a new window as a PNG.</p>\n\n<p>Raises:\n    - ImportError: If <code>graphviz</code> isn't installed.\n    - GraphvizExecutableNotFoundError: If the <code>dot</code> executable isn't found.\n    - FlowVisualizationError: If the flow can't be visualized for any other reason.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def" }, "prefect.get_client": { "fullname": "prefect.get_client", "modulename": "prefect", "qualname": "get_client", "kind": "function", "doc": "<p>Retrieve a HTTP client for communicating with the Prefect REST API.</p>\n\n<p>The client must be context managed; for example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">get_client</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">hello</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<p>To return a synchronous client, pass sync_client=True:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">with</span> <span class=\"n\">get_client</span><span class=\"p\">(</span><span class=\"n\">sync_client</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">hello</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">httpx_settings</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sync_client</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">orchestration</span><span class=\"o\">.</span><span class=\"n\">PrefectClient</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">orchestration</span><span class=\"o\">.</span><span class=\"n\">SyncPrefectClient</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def" }, "prefect.get_run_logger": { "fullname": "prefect.get_run_logger", "modulename": "prefect", "qualname": "get_run_logger", "kind": "function", "doc": "<p>Get a Prefect logger for the current task run or flow run.</p>\n\n<p>The logger will be named either <code>prefect.task_runs</code> or <code>prefect.flow_runs</code>.\nContextual data about the run will be attached to the log records.</p>\n\n<p>These loggers are connected to the <code>APILogHandler</code> by default to send log records to\nthe API.</p>\n\n<p>Arguments:\n    context: A specific context may be provided as an override. By default, the\n        context is inferred from global state and this should not be needed.\n    **kwargs: Additional keyword arguments will be attached to the log records in\n        addition to the run metadata</p>\n\n<p>Raises:\n    RuntimeError: If no context can be found</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">RunContext</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">Logger</span><span class=\"p\">,</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">LoggerAdapter</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def" }, "prefect.Manifest": { "fullname": "prefect.Manifest", "modulename": "prefect", "qualname": "Manifest", "kind": "class", "doc": "<p>A JSON representation of a flow.</p>\n", "bases": "prefect._internal.pydantic._compat.BaseModel" }, "prefect.Manifest.model_config": { "fullname": "prefect.Manifest.model_config", "modulename": "prefect", "qualname": "Manifest.model_config", "kind": "variable", "doc": "<p></p>\n", "annotation": ": ClassVar[pydantic.v1.config.ConfigDict]" }, "prefect.Manifest.flow_name": { "fullname": "prefect.Manifest.flow_name", "modulename": "prefect", "qualname": "Manifest.flow_name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str" }, "prefect.Manifest.import_path": { "fullname": "prefect.Manifest.import_path", "modulename": "prefect", "qualname": "Manifest.import_path", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str" }, "prefect.Manifest.parameter_openapi_schema": { "fullname": "prefect.Manifest.parameter_openapi_schema", "modulename": "prefect", "qualname": "Manifest.parameter_openapi_schema", "kind": "variable", "doc": "<p></p>\n", "annotation": ": prefect.utilities.callables.ParameterSchema" }, "prefect.Manifest.model_fields": { "fullname": "prefect.Manifest.model_fields", "modulename": "prefect", "qualname": "Manifest.model_fields", "kind": "variable", "doc": "<p></p>\n", "annotation": ": ClassVar[Dict[str, pydantic.v1.fields.FieldInfo]]", "default_value": "{&#x27;flow_name&#x27;: ModelField(name=&#x27;flow_name&#x27;, type=str, required=True), &#x27;import_path&#x27;: ModelField(name=&#x27;import_path&#x27;, type=str, required=True), &#x27;parameter_openapi_schema&#x27;: ModelField(name=&#x27;parameter_openapi_schema&#x27;, type=ParameterSchema, required=True)}" }, "prefect.State": { "fullname": "prefect.State", "modulename": "prefect", "qualname": "State", "kind": "class", "doc": "<p>The state of a run.</p>\n", "bases": "prefect._internal.schemas.bases.ObjectBaseModel, typing.Generic[~R]" }, "prefect.State.type": { "fullname": "prefect.State.type", "modulename": "prefect", "qualname": "State.type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": prefect.client.schemas.objects.StateType" }, "prefect.State.name": { "fullname": "prefect.State.name", "modulename": "prefect", "qualname": "State.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]" }, "prefect.State.timestamp": { "fullname": "prefect.State.timestamp", "modulename": "prefect", "qualname": "State.timestamp", "kind": "variable", "doc": "<p></p>\n", "annotation": ": pendulum.datetime.DateTime" }, "prefect.State.message": { "fullname": "prefect.State.message", "modulename": "prefect", "qualname": "State.message", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]" }, "prefect.State.state_details": { "fullname": "prefect.State.state_details", "modulename": "prefect", "qualname": "State.state_details", "kind": "variable", "doc": "<p></p>\n", "annotation": ": prefect.client.schemas.objects.StateDetails" }, "prefect.State.data": { "fullname": "prefect.State.data", "modulename": "prefect", "qualname": "State.data", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[prefect.results.BaseResult[~R], prefect.deprecated.data_documents.DataDocument[~R], Any]" }, "prefect.State.result": { "fullname": "prefect.State.result", "modulename": "prefect", "qualname": "State.result", "kind": "function", "doc": "<p>Retrieve the result attached to this state.</p>\n\n<p>Args:\n    raise_on_failure: a boolean specifying whether to raise an exception\n        if the state is of type <code>FAILED</code> and the underlying data is an exception\n    fetch: a boolean specifying whether to resolve references to persisted\n        results into data. For synchronous users, this defaults to <code>True</code>.\n        For asynchronous users, this defaults to <code>False</code> for backwards\n        compatibility.</p>\n\n<p>Raises:\n    TypeError: If the state is failed but the result is not an exception.</p>\n\n<p>Returns:\n    The result of the run</p>\n\n<p>Examples:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>from prefect import flow, task\n      @task\n      def my_task(x):\n          return x</p>\n\n<pre><code>Get the result from a task future in a flow\n\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     future = my_task(\"hello\")\n&gt;&gt;&gt;     state = future.wait()\n&gt;&gt;&gt;     result = state.result()\n&gt;&gt;&gt;     print(result)\n&gt;&gt;&gt; my_flow()\nhello\n\nGet the result from a flow state\n\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     return \"hello\"\n&gt;&gt;&gt; my_flow(return_state=True).result()\nhello\n\nGet the result from a failed state\n\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     raise ValueError(\"oh no!\")\n&gt;&gt;&gt; state = my_flow(return_state=True)  # Error is wrapped in FAILED state\n&gt;&gt;&gt; state.result()  # Raises `ValueError`\n\nGet the result from a failed state without erroring\n\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     raise ValueError(\"oh no!\")\n&gt;&gt;&gt; state = my_flow(return_state=True)\n&gt;&gt;&gt; result = state.result(raise_on_failure=False)\n&gt;&gt;&gt; print(result)\nValueError(\"oh no!\")\n\n\nGet the result from a flow state in an async context\n\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; async def my_flow():\n&gt;&gt;&gt;     return \"hello\"\n&gt;&gt;&gt; state = await my_flow(return_state=True)\n&gt;&gt;&gt; await state.result()\nhello\n</code></pre>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">raise_on_failure</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">fetch</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">,</span> <span class=\"ne\">Exception</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def" }, "prefect.State.to_state_create": { "fullname": "prefect.State.to_state_create", "modulename": "prefect", "qualname": "State.to_state_create", "kind": "function", "doc": "<p>Convert this state to a <code>StateCreate</code> type which can be used to set the state of\na run in the API.</p>\n\n<p>This method will drop this state's <code>data</code> if it is not a result type. Only\nresults should be sent to the API. Other data is only available locally.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def" }, "prefect.State.default_name_from_type": { "fullname": "prefect.State.default_name_from_type", "modulename": "prefect", "qualname": "State.default_name_from_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">v</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">values</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def" }, "prefect.State.default_scheduled_start_time": { "fullname": "prefect.State.default_scheduled_start_time", "modulename": "prefect", "qualname": "State.default_scheduled_start_time", "kind": "function", "doc": "<p>TODO: This should throw an error instead of setting a default but is out of\n      scope for <a href=\"https://github.com/PrefectHQ/orion/pull/174/\">https://github.com/PrefectHQ/orion/pull/174/</a> and can be rolled\n      into work refactoring state initialization</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def" }, "prefect.State.is_scheduled": { "fullname": "prefect.State.is_scheduled", "modulename": "prefect", "qualname": "State.is_scheduled", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def" }, "prefect.State.is_pending": { "fullname": "prefect.State.is_pending", "modulename": "prefect", "qualname": "State.is_pending", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def" }, "prefect.State.is_running": { "fullname": "prefect.State.is_running", "modulename": "prefect", "qualname": "State.is_running", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def" }, "prefect.State.is_completed": { "fullname": "prefect.State.is_completed", "modulename": "prefect", "qualname": "State.is_completed", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def" }, "prefect.State.is_failed": { "fullname": "prefect.State.is_failed", "modulename": "prefect", "qualname": "State.is_failed", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def" }, "prefect.State.is_crashed": { "fullname": "prefect.State.is_crashed", "modulename": "prefect", "qualname": "State.is_crashed", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def" }, "prefect.State.is_cancelled": { "fullname": "prefect.State.is_cancelled", "modulename": "prefect", "qualname": "State.is_cancelled", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def" }, "prefect.State.is_cancelling": { "fullname": "prefect.State.is_cancelling", "modulename": "prefect", "qualname": "State.is_cancelling", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def" }, "prefect.State.is_final": { "fullname": "prefect.State.is_final", "modulename": "prefect", "qualname": "State.is_final", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def" }, "prefect.State.is_paused": { "fullname": "prefect.State.is_paused", "modulename": "prefect", "qualname": "State.is_paused", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def" }, "prefect.State.copy": { "fullname": "prefect.State.copy", "modulename": "prefect", "qualname": "State.copy", "kind": "function", "doc": "<p>Copying API models should return an object that could be inserted into the\ndatabase again. The 'timestamp' is reset using the default factory.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">update</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reset_fields</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def" }, "prefect.tags": { "fullname": "prefect.tags", "modulename": "prefect", "qualname": "tags", "kind": "function", "doc": "<p>Context manager to add tags to flow and task run calls.</p>\n\n<p>Tags are always combined with any existing tags.</p>\n\n<p>Yields:\n    The current set of tags</p>\n\n<p>Examples:</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>from prefect import tags, task, flow\n      @task\n      def my_task():\n          pass</p>\n\n<pre><code>Run a task with tags\n\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     with tags(\"a\", \"b\"):\n&gt;&gt;&gt;         my_task()  # has tags: a, b\n\nRun a flow with tags\n\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     pass\n&gt;&gt;&gt; with tags(\"a\", \"b\"):\n&gt;&gt;&gt;     my_flow()  # has tags: a, b\n\nRun a task with nested tag contexts\n\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     with tags(\"a\", \"b\"):\n&gt;&gt;&gt;         with tags(\"c\", \"d\"):\n&gt;&gt;&gt;             my_task()  # has tags: a, b, c, d\n&gt;&gt;&gt;         my_task()  # has tags: a, b\n\nInspect the current tags\n\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     with tags(\"c\", \"d\"):\n&gt;&gt;&gt;         with tags(\"e\", \"f\") as current_tags:\n&gt;&gt;&gt;              print(current_tags)\n&gt;&gt;&gt; with tags(\"a\", \"b\"):\n&gt;&gt;&gt;     my_flow()\n{\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"}\n</code></pre>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">new_tags</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Generator</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def" }, "prefect.task": { "fullname": "prefect.task", "modulename": "prefect", "qualname": "task", "kind": "function", "doc": "<p>Decorator to designate a function as a task in a Prefect workflow.</p>\n\n<p>This decorator may be used for asynchronous or synchronous functions.</p>\n\n<p>Args:\n    name: An optional name for the task; if not provided, the name will be inferred\n        from the given function.\n    description: An optional string description for the task.\n    tags: An optional set of tags to be associated with runs of this task. These\n        tags are combined with any tags defined by a <code>prefect.tags</code> context at\n        task runtime.\n    version: An optional string specifying the version of this task definition\n    cache_key_fn: An optional callable that, given the task run context and call\n        parameters, generates a string key; if the key matches a previous completed\n        state, that state result will be restored instead of running the task again.\n    cache_expiration: An optional amount of time indicating how long cached states\n        for this task should be restorable; if not provided, cached states will\n        never expire.\n    task_run_name: An optional name to distinguish runs of this task; this name can be provided\n        as a string template with the task's keyword arguments as variables,\n        or a function that returns a string.\n    retries: An optional number of times to retry on task run failure\n    retry_delay_seconds: Optionally configures how long to wait before retrying the\n        task after failure. This is only applicable if <code>retries</code> is nonzero. This\n        setting can either be a number of seconds, a list of retry delays, or a\n        callable that, given the total number of retries, generates a list of retry\n        delays. If a number of seconds, that delay will be applied to all retries.\n        If a list, each retry will wait for the corresponding delay before retrying.\n        When passing a callable or a list, the number of configured retry delays\n        cannot exceed 50.\n    retry_jitter_factor: An optional factor that defines the factor to which a retry\n        can be jittered in order to avoid a \"thundering herd\".\n    persist_result: An optional toggle indicating whether the result of this task\n        should be persisted to result storage. Defaults to <code>None</code>, which indicates\n        that Prefect should choose whether the result should be persisted depending on\n        the features being used.\n    result_storage: An optional block to use to persist the result of this task.\n        Defaults to the value set in the flow the task is called in.\n    result_storage_key: An optional key to store the result in storage at when persisted.\n        Defaults to a unique identifier.\n    result_serializer: An optional serializer to use to serialize the result of this\n        task for persistence. Defaults to the value set in the flow the task is\n        called in.\n    timeout_seconds: An optional number of seconds indicating a maximum runtime for\n        the task. If the task exceeds this runtime, it will be marked as failed.\n    log_prints: If set, <code>print</code> statements in the task will be redirected to the\n        Prefect logger for the task run. Defaults to <code>None</code>, which indicates\n        that the value from the flow should be used.\n    refresh_cache: If set, cached results for the cache key are not used.\n        Defaults to <code>None</code>, which indicates that a cached result from a previous\n        execution with matching cache key is used.\n    on_failure: An optional list of callables to run when the task enters a failed state.\n    on_completion: An optional list of callables to run when the task enters a completed state.\n    retry_condition_fn: An optional callable run when a task run returns a Failed state. Should\n        return <code>True</code> if the task should continue to its retry policy (e.g. <code>retries=3</code>), and <code>False</code> if the task\n        should end as failed. Defaults to <code>None</code>, indicating the task should always continue\n        to its retry policy.\n    viz_return_value: An optional value to return when the task dependency tree is visualized.</p>\n\n<p>Returns:\n    A callable <code>Task</code> object which, when called, will submit the task for execution.</p>\n\n<p>Examples:\n    Define a simple task</p>\n\n<pre><code>&gt;&gt;&gt; @task\n&gt;&gt;&gt; def add(x, y):\n&gt;&gt;&gt;     return x + y\n\nDefine an async task\n\n&gt;&gt;&gt; @task\n&gt;&gt;&gt; async def add(x, y):\n&gt;&gt;&gt;     return x + y\n\nDefine a task with tags and a description\n\n&gt;&gt;&gt; @task(tags={\"a\", \"b\"}, description=\"This task is empty but its my first!\")\n&gt;&gt;&gt; def my_task():\n&gt;&gt;&gt;     pass\n\nDefine a task with a custom name\n\n&gt;&gt;&gt; @task(name=\"The Ultimate Task\")\n&gt;&gt;&gt; def my_task():\n&gt;&gt;&gt;     pass\n\nDefine a task that retries 3 times with a 5 second delay between attempts\n\n&gt;&gt;&gt; from random import randint\n&gt;&gt;&gt;\n&gt;&gt;&gt; @task(retries=3, retry_delay_seconds=5)\n&gt;&gt;&gt; def my_task():\n&gt;&gt;&gt;     x = randint(0, 5)\n&gt;&gt;&gt;     if x &gt;= 3:  # Make a task that fails sometimes\n&gt;&gt;&gt;         raise ValueError(\"Retry me please!\")\n&gt;&gt;&gt;     return x\n\nDefine a task that is cached for a day based on its inputs\n\n&gt;&gt;&gt; from prefect.tasks import task_input_hash\n&gt;&gt;&gt; from datetime import timedelta\n&gt;&gt;&gt;\n&gt;&gt;&gt; @task(cache_key_fn=task_input_hash, cache_expiration=timedelta(days=1))\n&gt;&gt;&gt; def my_task():\n&gt;&gt;&gt;     return \"hello\"\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">__fn</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cache_key_fn</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">TaskRunContext</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cache_expiration</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">task_run_name</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">retries</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">retry_delay_seconds</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">retry_jitter_factor</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">persist_result</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">result_storage</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">filesystems</span><span class=\"o\">.</span><span class=\"n\">WritableFileSystem</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">result_storage_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">result_serializer</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">Serializer</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cache_result_in_memory</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">timeout_seconds</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">log_prints</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">refresh_cache</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_completion</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">Task</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">TaskRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_failure</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">Task</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">TaskRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">retry_condition_fn</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">Task</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">TaskRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">viz_return_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def" }, "prefect.Task": { "fullname": "prefect.Task", "modulename": "prefect", "qualname": "Task", "kind": "class", "doc": "<p>A Prefect task definition.</p>\n\n<p>!!! note\n    We recommend using [the <code>@task</code> decorator][prefect.tasks.task] for most use-cases.</p>\n\n<p>Wraps a function with an entrypoint to the Prefect engine. Calling this class within a flow function\ncreates a new task run.</p>\n\n<p>To preserve the input and output types, we use the generic type variables P and R for \"Parameters\" and\n\"Returns\" respectively.</p>\n\n<p>Args:\n    fn: The function defining the task.\n    name: An optional name for the task; if not provided, the name will be inferred\n        from the given function.\n    description: An optional string description for the task.\n    tags: An optional set of tags to be associated with runs of this task. These\n        tags are combined with any tags defined by a <code>prefect.tags</code> context at\n        task runtime.\n    version: An optional string specifying the version of this task definition\n    cache_key_fn: An optional callable that, given the task run context and call\n        parameters, generates a string key; if the key matches a previous completed\n        state, that state result will be restored instead of running the task again.\n    cache_expiration: An optional amount of time indicating how long cached states\n        for this task should be restorable; if not provided, cached states will\n        never expire.\n    task_run_name: An optional name to distinguish runs of this task; this name can be provided\n        as a string template with the task's keyword arguments as variables,\n        or a function that returns a string.\n    retries: An optional number of times to retry on task run failure.\n    retry_delay_seconds: Optionally configures how long to wait before retrying the\n        task after failure. This is only applicable if <code>retries</code> is nonzero. This\n        setting can either be a number of seconds, a list of retry delays, or a\n        callable that, given the total number of retries, generates a list of retry\n        delays. If a number of seconds, that delay will be applied to all retries.\n        If a list, each retry will wait for the corresponding delay before retrying.\n        When passing a callable or a list, the number of configured retry delays\n        cannot exceed 50.\n    retry_jitter_factor: An optional factor that defines the factor to which a retry\n        can be jittered in order to avoid a \"thundering herd\".\n    persist_result: An optional toggle indicating whether the result of this task\n        should be persisted to result storage. Defaults to <code>None</code>, which indicates\n        that Prefect should choose whether the result should be persisted depending on\n        the features being used.\n    result_storage: An optional block to use to persist the result of this task.\n        Defaults to the value set in the flow the task is called in.\n    result_storage_key: An optional key to store the result in storage at when persisted.\n        Defaults to a unique identifier.\n    result_serializer: An optional serializer to use to serialize the result of this\n        task for persistence. Defaults to the value set in the flow the task is\n        called in.\n    timeout_seconds: An optional number of seconds indicating a maximum runtime for\n        the task. If the task exceeds this runtime, it will be marked as failed.\n    log_prints: If set, <code>print</code> statements in the task will be redirected to the\n        Prefect logger for the task run. Defaults to <code>None</code>, which indicates\n        that the value from the flow should be used.\n    refresh_cache: If set, cached results for the cache key are not used.\n        Defaults to <code>None</code>, which indicates that a cached result from a previous\n        execution with matching cache key is used.\n    on_failure: An optional list of callables to run when the task enters a failed state.\n    on_completion: An optional list of callables to run when the task enters a completed state.\n    retry_condition_fn: An optional callable run when a task run returns a Failed state. Should\n        return <code>True</code> if the task should continue to its retry policy (e.g. <code>retries=3</code>), and <code>False</code> if the task\n        should end as failed. Defaults to <code>None</code>, indicating the task should always continue\n        to its retry policy.\n    viz_return_value: An optional value to return when the task dependency tree is visualized.</p>\n", "bases": "typing.Generic[~P, ~R]" }, "prefect.Task.__init__": { "fullname": "prefect.Task.__init__", "modulename": "prefect", "qualname": "Task.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">fn</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">P</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cache_key_fn</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">TaskRunContext</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cache_expiration</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">task_run_name</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">retries</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">retry_delay_seconds</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">retry_jitter_factor</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">persist_result</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">result_storage</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">filesystems</span><span class=\"o\">.</span><span class=\"n\">WritableFileSystem</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">result_serializer</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">Serializer</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">result_storage_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cache_result_in_memory</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">timeout_seconds</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">log_prints</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">refresh_cache</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_completion</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">Task</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">TaskRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_failure</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">Task</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">TaskRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">retry_condition_fn</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">Task</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">TaskRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">viz_return_value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>" }, "prefect.Task.description": { "fullname": "prefect.Task.description", "modulename": "prefect", "qualname": "Task.description", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.fn": { "fullname": "prefect.Task.fn", "modulename": "prefect", "qualname": "Task.fn", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.isasync": { "fullname": "prefect.Task.isasync", "modulename": "prefect", "qualname": "Task.isasync", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.task_run_name": { "fullname": "prefect.Task.task_run_name", "modulename": "prefect", "qualname": "Task.task_run_name", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.version": { "fullname": "prefect.Task.version", "modulename": "prefect", "qualname": "Task.version", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.log_prints": { "fullname": "prefect.Task.log_prints", "modulename": "prefect", "qualname": "Task.log_prints", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.tags": { "fullname": "prefect.Task.tags", "modulename": "prefect", "qualname": "Task.tags", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.cache_key_fn": { "fullname": "prefect.Task.cache_key_fn", "modulename": "prefect", "qualname": "Task.cache_key_fn", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.cache_expiration": { "fullname": "prefect.Task.cache_expiration", "modulename": "prefect", "qualname": "Task.cache_expiration", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.refresh_cache": { "fullname": "prefect.Task.refresh_cache", "modulename": "prefect", "qualname": "Task.refresh_cache", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.retries": { "fullname": "prefect.Task.retries", "modulename": "prefect", "qualname": "Task.retries", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.retry_jitter_factor": { "fullname": "prefect.Task.retry_jitter_factor", "modulename": "prefect", "qualname": "Task.retry_jitter_factor", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.persist_result": { "fullname": "prefect.Task.persist_result", "modulename": "prefect", "qualname": "Task.persist_result", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.result_storage": { "fullname": "prefect.Task.result_storage", "modulename": "prefect", "qualname": "Task.result_storage", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.result_serializer": { "fullname": "prefect.Task.result_serializer", "modulename": "prefect", "qualname": "Task.result_serializer", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.result_storage_key": { "fullname": "prefect.Task.result_storage_key", "modulename": "prefect", "qualname": "Task.result_storage_key", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.cache_result_in_memory": { "fullname": "prefect.Task.cache_result_in_memory", "modulename": "prefect", "qualname": "Task.cache_result_in_memory", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.timeout_seconds": { "fullname": "prefect.Task.timeout_seconds", "modulename": "prefect", "qualname": "Task.timeout_seconds", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.on_completion": { "fullname": "prefect.Task.on_completion", "modulename": "prefect", "qualname": "Task.on_completion", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.on_failure": { "fullname": "prefect.Task.on_failure", "modulename": "prefect", "qualname": "Task.on_failure", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.retry_condition_fn": { "fullname": "prefect.Task.retry_condition_fn", "modulename": "prefect", "qualname": "Task.retry_condition_fn", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.viz_return_value": { "fullname": "prefect.Task.viz_return_value", "modulename": "prefect", "qualname": "Task.viz_return_value", "kind": "variable", "doc": "<p></p>\n" }, "prefect.Task.with_options": { "fullname": "prefect.Task.with_options", "modulename": "prefect", "qualname": "Task.with_options", "kind": "function", "doc": "<p>Create a new task from the current object, updating provided options.</p>\n\n<p>Args:\n    name: A new name for the task.\n    description: A new description for the task.\n    tags: A new set of tags for the task. If given, existing tags are ignored,\n        not merged.\n    cache_key_fn: A new cache key function for the task.\n    cache_expiration: A new cache expiration time for the task.\n    task_run_name: An optional name to distinguish runs of this task; this name can be provided\n        as a string template with the task's keyword arguments as variables,\n        or a function that returns a string.\n    retries: A new number of times to retry on task run failure.\n    retry_delay_seconds: Optionally configures how long to wait before retrying\n        the task after failure. This is only applicable if <code>retries</code> is nonzero.\n        This setting can either be a number of seconds, a list of retry delays,\n        or a callable that, given the total number of retries, generates a list\n        of retry delays. If a number of seconds, that delay will be applied to\n        all retries. If a list, each retry will wait for the corresponding delay\n        before retrying. When passing a callable or a list, the number of\n        configured retry delays cannot exceed 50.\n    retry_jitter_factor: An optional factor that defines the factor to which a\n        retry can be jittered in order to avoid a \"thundering herd\".\n    persist_result: A new option for enabling or disabling result persistence.\n    result_storage: A new storage type to use for results.\n    result_serializer: A new serializer to use for results.\n    result_storage_key: A new key for the persisted result to be stored at.\n    timeout_seconds: A new maximum time for the task to complete in seconds.\n    log_prints: A new option for enabling or disabling redirection of <code>print</code> statements.\n    refresh_cache: A new option for enabling or disabling cache refresh.\n    on_completion: A new list of callables to run when the task enters a completed state.\n    on_failure: A new list of callables to run when the task enters a failed state.\n    retry_condition_fn: An optional callable run when a task run returns a Failed state.\n        Should return <code>True</code> if the task should continue to its retry policy, and <code>False</code>\n        if the task should end as failed. Defaults to <code>None</code>, indicating the task should\n        always continue to its retry policy.\n    viz_return_value: An optional value to return when the task dependency tree is visualized.</p>\n\n<p>Returns:\n    A new <code>Task</code> instance.</p>\n\n<p>Examples:</p>\n\n<pre><code>Create a new task from an existing task and update the name\n\n&gt;&gt;&gt; @task(name=\"My task\")\n&gt;&gt;&gt; def my_task():\n&gt;&gt;&gt;     return 1\n&gt;&gt;&gt;\n&gt;&gt;&gt; new_task = my_task.with_options(name=\"My new task\")\n\nCreate a new task from an existing task and update the retry settings\n\n&gt;&gt;&gt; from random import randint\n&gt;&gt;&gt;\n&gt;&gt;&gt; @task(retries=1, retry_delay_seconds=5)\n&gt;&gt;&gt; def my_task():\n&gt;&gt;&gt;     x = randint(0, 5)\n&gt;&gt;&gt;     if x &gt;= 3:  # Make a task that fails sometimes\n&gt;&gt;&gt;         raise ValueError(\"Retry me please!\")\n&gt;&gt;&gt;     return x\n&gt;&gt;&gt;\n&gt;&gt;&gt; new_task = my_task.with_options(retries=5, retry_delay_seconds=2)\n\nUse a task with updated options within a flow\n\n&gt;&gt;&gt; @task(name=\"My task\")\n&gt;&gt;&gt; def my_task():\n&gt;&gt;&gt;     return 1\n&gt;&gt;&gt;\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; my_flow():\n&gt;&gt;&gt;     new_task = my_task.with_options(name=\"My new task\")\n&gt;&gt;&gt;     new_task()\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cache_key_fn</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">TaskRunContext</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">task_run_name</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cache_expiration</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\tretries: Optional[int] = &lt;class &#x27;prefect.utilities.annotations.NotSet&#x27;&gt;,</span><span class=\"param\">\tretry_delay_seconds: Union[float, int, List[float], Callable[[int], List[float]]] = &lt;class &#x27;prefect.utilities.annotations.NotSet&#x27;&gt;,</span><span class=\"param\">\tretry_jitter_factor: Optional[float] = &lt;class &#x27;prefect.utilities.annotations.NotSet&#x27;&gt;,</span><span class=\"param\">\tpersist_result: Optional[bool] = &lt;class &#x27;prefect.utilities.annotations.NotSet&#x27;&gt;,</span><span class=\"param\">\tresult_storage: Union[prefect.filesystems.WritableFileSystem, str, NoneType] = &lt;class &#x27;prefect.utilities.annotations.NotSet&#x27;&gt;,</span><span class=\"param\">\tresult_serializer: Union[prefect.serializers.Serializer, str, NoneType] = &lt;class &#x27;prefect.utilities.annotations.NotSet&#x27;&gt;,</span><span class=\"param\">\tresult_storage_key: Optional[str] = &lt;class &#x27;prefect.utilities.annotations.NotSet&#x27;&gt;,</span><span class=\"param\">\t<span class=\"n\">cache_result_in_memory</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout_seconds</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\tlog_prints: Optional[bool] = &lt;class &#x27;prefect.utilities.annotations.NotSet&#x27;&gt;,</span><span class=\"param\">\trefresh_cache: Optional[bool] = &lt;class &#x27;prefect.utilities.annotations.NotSet&#x27;&gt;,</span><span class=\"param\">\t<span class=\"n\">on_completion</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">Task</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">TaskRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">]]]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">on_failure</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">Task</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">TaskRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">]]]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">retry_condition_fn</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">Task</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">TaskRun</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">viz_return_value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def" }, "prefect.Task.create_run": { "fullname": "prefect.Task.create_run", "modulename": "prefect", "qualname": "Task.create_run", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">orchestration</span><span class=\"o\">.</span><span class=\"n\">PrefectClient</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">orchestration</span><span class=\"o\">.</span><span class=\"n\">SyncPrefectClient</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">flow_run_context</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">EngineContext</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent_task_run_context</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">TaskRunContext</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">wait_for</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">futures</span><span class=\"o\">.</span><span class=\"n\">PrefectFuture</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">extra_task_inputs</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">TaskRunInput</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">TaskRun</span>:</span></span>", "funcdef": "async def" }, "prefect.Task.submit": { "fullname": "prefect.Task.submit", "modulename": "prefect", "qualname": "Task.submit", "kind": "function", "doc": "<p>Submit a run of the task to the engine.</p>\n\n<p>If writing an async task, this call must be awaited.</p>\n\n<p>If called from within a flow function,</p>\n\n<p>Will create a new task run in the backing API and submit the task to the flow's\ntask runner. This call only blocks execution while the task is being submitted,\nonce it is submitted, the flow function will continue executing. However, note\nthat the <code>SequentialTaskRunner</code> does not implement parallel execution for sync tasks\nand they are fully resolved on submission.</p>\n\n<p>Args:\n    <em>args: Arguments to run the task with\n    return_state: Return the result of the flow run wrapped in a\n        Prefect State.\n    wait_for: Upstream task futures to wait for before starting the task\n    *</em>kwargs: Keyword arguments to run the task with</p>\n\n<p>Returns:\n    If <code>return_state</code> is False a future allowing asynchronous access to\n        the state of the task\n    If <code>return_state</code> is True a future wrapped in a Prefect State allowing asynchronous access to\n        the state of the task</p>\n\n<p>Examples:</p>\n\n<pre><code>Define a task\n\n&gt;&gt;&gt; from prefect import task\n&gt;&gt;&gt; @task\n&gt;&gt;&gt; def my_task():\n&gt;&gt;&gt;     return \"hello\"\n\nRun a task in a flow\n\n&gt;&gt;&gt; from prefect import flow\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     my_task.submit()\n\nWait for a task to finish\n\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     my_task.submit().wait()\n\nUse the result from a task in a flow\n\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     print(my_task.submit().result())\n&gt;&gt;&gt;\n&gt;&gt;&gt; my_flow()\nhello\n\nRun an async task in an async flow\n\n&gt;&gt;&gt; @task\n&gt;&gt;&gt; async def my_async_task():\n&gt;&gt;&gt;     pass\n&gt;&gt;&gt;\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; async def my_flow():\n&gt;&gt;&gt;     await my_async_task.submit()\n\nRun a sync task in an async flow\n\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; async def my_flow():\n&gt;&gt;&gt;     my_task.submit()\n\nEnforce ordering between tasks that do not exchange data\n&gt;&gt;&gt; @task\n&gt;&gt;&gt; def task_1():\n&gt;&gt;&gt;     pass\n&gt;&gt;&gt;\n&gt;&gt;&gt; @task\n&gt;&gt;&gt; def task_2():\n&gt;&gt;&gt;     pass\n&gt;&gt;&gt;\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     x = task_1.submit()\n&gt;&gt;&gt;\n&gt;&gt;&gt;     # task 2 will wait for task_1 to complete\n&gt;&gt;&gt;     y = task_2.submit(wait_for=[x])\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span>,</span><span class=\"param\">\t<span class=\"n\">return_state</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">wait_for</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">futures</span><span class=\"o\">.</span><span class=\"n\">PrefectFuture</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">futures</span><span class=\"o\">.</span><span class=\"n\">PrefectFuture</span><span class=\"p\">,</span> <span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">futures</span><span class=\"o\">.</span><span class=\"n\">PrefectFuture</span><span class=\"p\">],</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">TaskRun</span><span class=\"p\">,</span> <span class=\"n\">Awaitable</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">schemas</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">TaskRun</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def" }, "prefect.Task.map": { "fullname": "prefect.Task.map", "modulename": "prefect", "qualname": "Task.map", "kind": "function", "doc": "<p>Submit a mapped run of the task to a worker.</p>\n\n<p>Must be called within a flow function. If writing an async task, this\ncall must be awaited.</p>\n\n<p>Must be called with at least one iterable and all iterables must be\nthe same length. Any arguments that are not iterable will be treated as\na static value and each task run will receive the same value.</p>\n\n<p>Will create as many task runs as the length of the iterable(s) in the\nbacking API and submit the task runs to the flow's task runner. This\ncall blocks if given a future as input while the future is resolved. It\nalso blocks while the tasks are being submitted, once they are\nsubmitted, the flow function will continue executing. However, note\nthat the <code>SequentialTaskRunner</code> does not implement parallel execution\nfor sync tasks and they are fully resolved on submission.</p>\n\n<p>Args:\n    <em>args: Iterable and static arguments to run the tasks with\n    return_state: Return a list of Prefect States that wrap the results\n        of each task run.\n    wait_for: Upstream task futures to wait for before starting the\n        task\n    *</em>kwargs: Keyword iterable arguments to run the task with</p>\n\n<p>Returns:\n    A list of futures allowing asynchronous access to the state of the\n    tasks</p>\n\n<p>Examples:</p>\n\n<pre><code>Define a task\n\n&gt;&gt;&gt; from prefect import task\n&gt;&gt;&gt; @task\n&gt;&gt;&gt; def my_task(x):\n&gt;&gt;&gt;     return x + 1\n\nCreate mapped tasks\n\n&gt;&gt;&gt; from prefect import flow\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     my_task.map([1, 2, 3])\n\nWait for all mapped tasks to finish\n\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     futures = my_task.map([1, 2, 3])\n&gt;&gt;&gt;     for future in futures:\n&gt;&gt;&gt;         future.wait()\n&gt;&gt;&gt;     # Now all of the mapped tasks have finished\n&gt;&gt;&gt;     my_task(10)\n\nUse the result from mapped tasks in a flow\n\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     futures = my_task.map([1, 2, 3])\n&gt;&gt;&gt;     for future in futures:\n&gt;&gt;&gt;         print(future.result())\n&gt;&gt;&gt; my_flow()\n2\n3\n4\n\nEnforce ordering between tasks that do not exchange data\n&gt;&gt;&gt; @task\n&gt;&gt;&gt; def task_1(x):\n&gt;&gt;&gt;     pass\n&gt;&gt;&gt;\n&gt;&gt;&gt; @task\n&gt;&gt;&gt; def task_2(y):\n&gt;&gt;&gt;     pass\n&gt;&gt;&gt;\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     x = task_1.submit()\n&gt;&gt;&gt;\n&gt;&gt;&gt;     # task 2 will wait for task_1 to complete\n&gt;&gt;&gt;     y = task_2.map([1, 2, 3], wait_for=[x])\n\nUse a non-iterable input as a constant across mapped tasks\n&gt;&gt;&gt; @task\n&gt;&gt;&gt; def display(prefix, item):\n&gt;&gt;&gt;    print(prefix, item)\n&gt;&gt;&gt;\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     display.map(\"Check it out: \", [1, 2, 3])\n&gt;&gt;&gt;\n&gt;&gt;&gt; my_flow()\nCheck it out: 1\nCheck it out: 2\nCheck it out: 3\n\nUse `unmapped` to treat an iterable argument as a constant\n&gt;&gt;&gt; from prefect import unmapped\n&gt;&gt;&gt;\n&gt;&gt;&gt; @task\n&gt;&gt;&gt; def add_n_to_items(items, n):\n&gt;&gt;&gt;     return [item + n for item in items]\n&gt;&gt;&gt;\n&gt;&gt;&gt; @flow\n&gt;&gt;&gt; def my_flow():\n&gt;&gt;&gt;     return add_n_to_items.map(unmapped([10, 20]), n=[1, 2, 3])\n&gt;&gt;&gt;\n&gt;&gt;&gt; my_flow()\n[[11, 21], [12, 22], [13, 23]]\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">Any</span>,</span><span class=\"param\">\t<span class=\"n\">return_state</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">wait_for</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">futures</span><span class=\"o\">.</span><span class=\"n\">PrefectFuture</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def" }, "prefect.Task.serve": { "fullname": "prefect.Task.serve", "modulename": "prefect", "qualname": "Task.serve", "kind": "function", "doc": "<p>Serve the task using the provided task runner. This method is used to\nestablish a websocket connection with the Prefect server and listen for\nsubmitted task runs to execute.</p>\n\n<p>Args:\n    task_runner: The task runner to use for serving the task. If not provided,\n        the default ConcurrentTaskRunner will be used.</p>\n\n<p>Examples:\n    Serve a task using the default task runner</p>\n\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <p>@task\n      def my_task():\n          return 1</p>\n\n<pre><code>&gt;&gt;&gt; my_task.serve()\n</code></pre>\n    </blockquote>\n  </blockquote>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">task_runner</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">task_runners</span><span class=\"o\">.</span><span class=\"n\">BaseTaskRunner</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">Task</span>:</span></span>", "funcdef": "def" }, "prefect.unmapped": { "fullname": "prefect.unmapped", "modulename": "prefect", "qualname": "unmapped", "kind": "class", "doc": "<p>Wrapper for iterables.</p>\n\n<p>Indicates that this input should be sent as-is to all runs created during a mapping\noperation instead of being split.</p>\n", "bases": "prefect.utilities.annotations.BaseAnnotation[~T]" }, "prefect.unmapped.__init__": { "fullname": "prefect.unmapped.__init__", "modulename": "prefect", "qualname": "unmapped.__init__", "kind": "function", "doc": "<p>Create new instance of BaseAnnotation(value,)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span></span>)</span>" }, "prefect.serve": { "fullname": "prefect.serve", "modulename": "prefect", "qualname": "serve", "kind": "function", "doc": "<p>Serve the provided list of deployments.</p>\n\n<p>Args:\n    <em>args: A list of deployments to serve.\n    pause_on_shutdown: A boolean for whether or not to automatically pause\n        deployment schedules on shutdown.\n    print_starting_message: Whether or not to print message to the console\n        on startup.\n    limit: The maximum number of runs that can be executed concurrently.\n    *</em>kwargs: Additional keyword arguments to pass to the runner.</p>\n\n<p>Examples:\n    Prepare two deployments and serve them:\n    <div class=\"pdoc-code codehilite\">\n    <pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n <br />\n    <span class=\"kn\">from</span> <span class=\"nn\">prefect</span> <span class=\"kn\">import</span> <span class=\"n\">flow</span><span class=\"p\">,</span> <span class=\"n\">serve</span>\n <br />\n    <span class=\"nd\">@flow</span>\n    <span class=\"k\">def</span> <span class=\"nf\">my_flow</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;hello </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n <br />\n    <span class=\"nd\">@flow</span>\n    <span class=\"k\">def</span> <span class=\"nf\">my_other_flow</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;goodbye </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n <br />\n    <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Run once a day</span>\n        <span class=\"n\">hello_deploy</span> <span class=\"o\">=</span> <span class=\"n\">my_flow</span><span class=\"o\">.</span><span class=\"n\">to_deployment</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;dev&quot;</span><span class=\"p\">],</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n <br />\n        <span class=\"c1\"># Run every Sunday at 4:00 AM</span>\n        <span class=\"n\">bye_deploy</span> <span class=\"o\">=</span> <span class=\"n\">my_other_flow</span><span class=\"o\">.</span><span class=\"n\">to_deployment</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;goodbye&quot;</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;dev&quot;</span><span class=\"p\">],</span> <span class=\"n\">cron</span><span class=\"o\">=</span><span class=\"s2\">&quot;0 4 * * sun&quot;</span>\n        <span class=\"p\">)</span>\n <br />\n        <span class=\"n\">serve</span><span class=\"p\">(</span><span class=\"n\">hello_deploy</span><span class=\"p\">,</span> <span class=\"n\">bye_deploy</span><span class=\"p\">)</span>\n    </code></pre>\n    </div></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">deployments</span><span class=\"o\">.</span><span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">RunnerDeployment</span>,</span><span class=\"param\">\t<span class=\"n\">pause_on_shutdown</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">print_starting_message</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">limit</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def" }, "prefect.deploy": { "fullname": "prefect.deploy", "modulename": "prefect", "qualname": "deploy", "kind": "function", "doc": "<p>Deploy the provided list of deployments to dynamic infrastructure via a\nwork pool.</p>\n\n<p>By default, calling this function will build a Docker image for the deployments, push it to a\nregistry, and create each deployment via the Prefect API that will run the corresponding\nflow on the given schedule.</p>\n\n<p>If you want to use an existing image, you can pass <code>build=False</code> to skip building and pushing\nan image.</p>\n\n<p>Args:\n    *deployments: A list of deployments to deploy.\n    work_pool_name: The name of the work pool to use for these deployments. Defaults to\n        the value of <code>PREFECT_DEFAULT_WORK_POOL_NAME</code>.\n    image: The name of the Docker image to build, including the registry and\n        repository. Pass a DockerImage instance to customize the Dockerfile used\n        and build arguments.\n    build: Whether or not to build a new image for the flow. If False, the provided\n        image will be used as-is and pulled at runtime.\n    push: Whether or not to skip pushing the built image to a registry.\n    print_next_steps_message: Whether or not to print a message with next steps\n        after deploying the deployments.</p>\n\n<p>Returns:\n    A list of deployment IDs for the created/updated deployments.</p>\n\n<p>Examples:\n    Deploy a group of flows to a work pool:\n    <div class=\"pdoc-code codehilite\">\n    <pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">prefect</span> <span class=\"kn\">import</span> <span class=\"n\">deploy</span><span class=\"p\">,</span> <span class=\"n\">flow</span>\n <br />\n    <span class=\"nd\">@flow</span><span class=\"p\">(</span><span class=\"n\">log_prints</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">local_flow</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;I&#39;m a locally defined flow!&quot;</span><span class=\"p\">)</span>\n <br />\n    <span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\n        <span class=\"n\">deploy</span><span class=\"p\">(</span>\n            <span class=\"n\">local_flow</span><span class=\"o\">.</span><span class=\"n\">to_deployment</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;example-deploy-local-flow&quot;</span><span class=\"p\">),</span>\n            <span class=\"n\">flow</span><span class=\"o\">.</span><span class=\"n\">from_source</span><span class=\"p\">(</span>\n                <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"s2\">&quot;<a href=\"https://github.com/org/repo.git&amp;quot\">https://github.com/org/repo.git&amp;quot</a>;</span><span class=\"p\">,</span>\n                <span class=\"n\">entrypoint</span><span class=\"o\">=</span><span class=\"s2\">&quot;flows.py:my_flow&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to_deployment</span><span class=\"p\">(</span>\n                <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;example-deploy-remote-flow&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">),</span>\n            <span class=\"n\">work_pool_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-work-pool&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">image</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-registry/my-image:dev&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n    </code></pre>\n    </div></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">deployments</span><span class=\"p\">:</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">deployments</span><span class=\"o\">.</span><span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">RunnerDeployment</span>,</span><span class=\"param\">\t<span class=\"n\">work_pool_name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">image</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">deployments</span><span class=\"o\">.</span><span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">DockerImage</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">build</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">push</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">print_next_steps_message</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_warnings</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">UUID</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def" }, "prefect.pause_flow_run": { "fullname": "prefect.pause_flow_run", "modulename": "prefect", "qualname": "pause_flow_run", "kind": "function", "doc": "<p>Pauses the current flow run by blocking execution until resumed.</p>\n\n<p>When called within a flow run, execution will block and no downstream tasks will\nrun until the flow is resumed. Task runs that have already started will continue\nrunning. A timeout parameter can be passed that will fail the flow run if it has not\nbeen resumed within the specified time.</p>\n\n<p>Args:\n    flow_run_id: a flow run id. If supplied, this function will attempt to pause\n        the specified flow run outside of the flow run process. When paused, the\n        flow run will continue execution until the NEXT task is orchestrated, at\n        which point the flow will exit. Any tasks that have already started will\n        run until completion. When resumed, the flow run will be rescheduled to\n        finish execution. In order pause a flow run in this way, the flow needs to\n        have an associated deployment and results need to be configured with the\n        <code>persist_results</code> option.\n    timeout: the number of seconds to wait for the flow to be resumed before\n        failing. Defaults to 1 hour (3600 seconds). If the pause timeout exceeds\n        any configured flow-level timeout, the flow might fail even after resuming.\n    poll_interval: The number of seconds between checking whether the flow has been\n        resumed. Defaults to 10 seconds.\n    reschedule: Flag that will reschedule the flow run if resumed. Instead of\n        blocking execution, the flow will gracefully exit (with no result returned)\n        instead. To use this flag, a flow needs to have an associated deployment and\n        results need to be configured with the <code>persist_results</code> option.\n    key: An optional key to prevent calling pauses more than once. This defaults to\n        the number of pauses observed by the flow so far, and prevents pauses that\n        use the \"reschedule\" option from running the same pause twice. A custom key\n        can be supplied for custom pausing behavior.\n    wait_for_input: a subclass of <code>RunInput</code> or any type supported by\n        Pydantic. If provided when the flow pauses, the flow will wait for the\n        input to be provided before resuming. If the flow is resumed without\n        providing the input, the flow will fail. If the flow is resumed with the\n        input, the flow will resume and the input will be loaded and returned\n        from this function.</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nd\">@task</span>\n<span class=\"k\">def</span> <span class=\"nf\">task_one</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@flow</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_flow</span><span class=\"p\">():</span>\n    <span class=\"n\">terminal_state</span> <span class=\"o\">=</span> <span class=\"n\">task_one</span><span class=\"o\">.</span><span class=\"n\">submit</span><span class=\"p\">(</span><span class=\"n\">return_state</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">terminal_state</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"n\">StateType</span><span class=\"o\">.</span><span class=\"n\">COMPLETED</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Task one succeeded! Pausing flow run..&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">pause_flow_run</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Task one failed. Skipping pause flow run..&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">wait_for_input</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">flow_run_id</span><span class=\"p\">:</span> <span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">UUID</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3600</span>,</span><span class=\"param\">\t<span class=\"n\">poll_interval</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">reschedule</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def" }, "prefect.resume_flow_run": { "fullname": "prefect.resume_flow_run", "modulename": "prefect", "qualname": "resume_flow_run", "kind": "function", "doc": "<p>Resumes a paused flow.</p>\n\n<p>Args:\n    flow_run_id: the flow_run_id to resume\n    run_input: a dictionary of inputs to provide to the flow run.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">flow_run_id</span>, </span><span class=\"param\"><span class=\"n\">run_input</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def" }, "prefect.suspend_flow_run": { "fullname": "prefect.suspend_flow_run", "modulename": "prefect", "qualname": "suspend_flow_run", "kind": "function", "doc": "<p>Suspends a flow run by stopping code execution until resumed.</p>\n\n<p>When suspended, the flow run will continue execution until the NEXT task is\norchestrated, at which point the flow will exit. Any tasks that have\nalready started will run until completion. When resumed, the flow run will\nbe rescheduled to finish execution. In order suspend a flow run in this\nway, the flow needs to have an associated deployment and results need to be\nconfigured with the <code>persist_results</code> option.</p>\n\n<p>Args:\n    flow_run_id: a flow run id. If supplied, this function will attempt to\n        suspend the specified flow run. If not supplied will attempt to\n        suspend the current flow run.\n    timeout: the number of seconds to wait for the flow to be resumed before\n        failing. Defaults to 1 hour (3600 seconds). If the pause timeout\n        exceeds any configured flow-level timeout, the flow might fail even\n        after resuming.\n    key: An optional key to prevent calling suspend more than once. This\n        defaults to a random string and prevents suspends from running the\n        same suspend twice. A custom key can be supplied for custom\n        suspending behavior.\n    wait_for_input: a subclass of <code>RunInput</code> or any type supported by\n        Pydantic. If provided when the flow suspends, the flow will remain\n        suspended until receiving the input before resuming. If the flow is\n        resumed without providing the input, the flow will fail. If the flow is\n        resumed with the input, the flow will resume and the input will be\n        loaded and returned from this function.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">wait_for_input</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">flow_run_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">UUID</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">3600</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">prefect</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">orchestration</span><span class=\"o\">.</span><span class=\"n\">PrefectClient</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">T</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def" } }, "docInfo": { "prefect": { "qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.allow_failure": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 74 }, "prefect.allow_failure.__init__": { "qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 9 }, "prefect.flow": { "qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 988, "bases": 0, "doc": 909 }, "prefect.Flow": { "qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 601 }, "prefect.Flow.__init__": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 995, "bases": 0, "doc": 3 }, "prefect.Flow.name": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.flow_run_name": { "qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.task_runner": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.log_prints": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.description": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.fn": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.isasync": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.version": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.timeout_seconds": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.retries": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.retry_delay_seconds": { "qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.parameters": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.should_validate_parameters": { "qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.persist_result": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.result_storage": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.result_serializer": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.cache_result_in_memory": { "qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.on_completion": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.on_failure": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.on_cancellation": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.on_crashed": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.on_running": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Flow.with_options": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 932, "bases": 0, "doc": 416 }, "prefect.Flow.validate_parameters": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 54 }, "prefect.Flow.serialize_parameters": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 41 }, "prefect.Flow.to_deployment": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 1046, "bases": 0, "doc": 628 }, "prefect.Flow.serve": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 1036, "bases": 0, "doc": 883 }, "prefect.Flow.from_source": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 95, "bases": 0, "doc": 666 }, "prefect.Flow.deploy": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 971, "bases": 0, "doc": 1149 }, "prefect.Flow.visualize": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 60 }, "prefect.get_client": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 105, "bases": 0, "doc": 132 }, "prefect.get_run_logger": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 123 }, "prefect.Manifest": { "qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 9 }, "prefect.Manifest.model_config": { "qualname": 3, "fullname": 4, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Manifest.flow_name": { "qualname": 3, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Manifest.import_path": { "qualname": 3, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Manifest.parameter_openapi_schema": { "qualname": 4, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Manifest.model_fields": { "qualname": 3, "fullname": 4, "annotation": 6, "default_value": 49, "signature": 0, "bases": 0, "doc": 3 }, "prefect.State": { "qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 8 }, "prefect.State.type": { "qualname": 2, "fullname": 3, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.State.name": { "qualname": 2, "fullname": 3, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.State.timestamp": { "qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.State.message": { "qualname": 2, "fullname": 3, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.State.state_details": { "qualname": 3, "fullname": 4, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.State.data": { "qualname": 2, "fullname": 3, "annotation": 10, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.State.result": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 73, "bases": 0, "doc": 367 }, "prefect.State.to_state_create": { "qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 60 }, "prefect.State.default_name_from_type": { "qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 3 }, "prefect.State.default_scheduled_start_time": { "qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 32 }, "prefect.State.is_scheduled": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3 }, "prefect.State.is_pending": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3 }, "prefect.State.is_running": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3 }, "prefect.State.is_completed": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3 }, "prefect.State.is_failed": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3 }, "prefect.State.is_crashed": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3 }, "prefect.State.is_cancelled": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3 }, "prefect.State.is_cancelling": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3 }, "prefect.State.is_final": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3 }, "prefect.State.is_paused": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3 }, "prefect.State.copy": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 26 }, "prefect.tags": { "qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 255 }, "prefect.task": { "qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 905, "bases": 0, "doc": 932 }, "prefect.Task": { "qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 712 }, "prefect.Task.__init__": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 968, "bases": 0, "doc": 3 }, "prefect.Task.description": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.fn": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.isasync": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.task_run_name": { "qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.version": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.log_prints": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.tags": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.cache_key_fn": { "qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.cache_expiration": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.refresh_cache": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.retries": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.retry_jitter_factor": { "qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.persist_result": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.result_storage": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.result_serializer": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.result_storage_key": { "qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.cache_result_in_memory": { "qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.timeout_seconds": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.on_completion": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.on_failure": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.retry_condition_fn": { "qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.viz_return_value": { "qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3 }, "prefect.Task.with_options": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 757, "bases": 0, "doc": 640 }, "prefect.Task.create_run": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 296, "bases": 0, "doc": 3 }, "prefect.Task.submit": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 191, "bases": 0, "doc": 479 }, "prefect.Task.map": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 99, "bases": 0, "doc": 662 }, "prefect.Task.serve": { "qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 100 }, "prefect.unmapped": { "qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 30 }, "prefect.unmapped.__init__": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 9 }, "prefect.serve": { "qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 106, "bases": 0, "doc": 420 }, "prefect.deploy": { "qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 201, "bases": 0, "doc": 487 }, "prefect.pause_flow_run": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 147, "bases": 0, "doc": 582 }, "prefect.resume_flow_run": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 32 }, "prefect.suspend_flow_run": { "qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 161, "bases": 0, "doc": 264 } }, "length": 104, "save": true }, "index": { "qualname": { "root": { "docs": { "prefect.allow_failure.__init__": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.unmapped.__init__": { "tf": 1 } }, "df": 4, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "w": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.allow_failure.__init__": { "tf": 1 } }, "df": 2 } } } } }, "f": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.allow_failure.__init__": { "tf": 1 }, "prefect.Flow.on_failure": { "tf": 1 }, "prefect.Task.on_failure": { "tf": 1 } }, "df": 4 } } }, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.State.is_failed": { "tf": 1 } }, "df": 1 } } } }, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Task.retry_jitter_factor": { "tf": 1 } }, "df": 1 } } } } }, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "w": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.name": { "tf": 1 }, "prefect.Flow.flow_run_name": { "tf": 1.4142135623730951 }, "prefect.Flow.task_runner": { "tf": 1 }, "prefect.Flow.log_prints": { "tf": 1 }, "prefect.Flow.description": { "tf": 1 }, "prefect.Flow.fn": { "tf": 1 }, "prefect.Flow.isasync": { "tf": 1 }, "prefect.Flow.version": { "tf": 1 }, "prefect.Flow.timeout_seconds": { "tf": 1 }, "prefect.Flow.retries": { "tf": 1 }, "prefect.Flow.retry_delay_seconds": { "tf": 1 }, "prefect.Flow.parameters": { "tf": 1 }, "prefect.Flow.should_validate_parameters": { "tf": 1 }, "prefect.Flow.persist_result": { "tf": 1 }, "prefect.Flow.result_storage": { "tf": 1 }, "prefect.Flow.result_serializer": { "tf": 1 }, "prefect.Flow.cache_result_in_memory": { "tf": 1 }, "prefect.Flow.on_completion": { "tf": 1 }, "prefect.Flow.on_failure": { "tf": 1 }, "prefect.Flow.on_cancellation": { "tf": 1 }, "prefect.Flow.on_crashed": { "tf": 1 }, "prefect.Flow.on_running": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.serialize_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.Flow.visualize": { "tf": 1 }, "prefect.Manifest.flow_name": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.resume_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 37 } } }, "n": { "docs": { "prefect.Flow.fn": { "tf": 1 }, "prefect.Task.fn": { "tf": 1 }, "prefect.Task.cache_key_fn": { "tf": 1 }, "prefect.Task.retry_condition_fn": { "tf": 1 } }, "df": 4 }, "r": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "m": { "docs": { "prefect.Flow.from_source": { "tf": 1 }, "prefect.State.default_name_from_type": { "tf": 1 } }, "df": 2 } } }, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Manifest.model_fields": { "tf": 1 } }, "df": 1 } } } }, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": { "prefect.State.is_final": { "tf": 1 } }, "df": 1 } } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.cache_result_in_memory": { "tf": 1 }, "prefect.Task.cache_result_in_memory": { "tf": 1 } }, "df": 2, "i": { "docs": {}, "df": 0, "t": { "docs": { "prefect.allow_failure.__init__": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.unmapped.__init__": { "tf": 1 } }, "df": 4 } } }, "s": { "docs": { "prefect.State.is_scheduled": { "tf": 1 }, "prefect.State.is_pending": { "tf": 1 }, "prefect.State.is_running": { "tf": 1 }, "prefect.State.is_completed": { "tf": 1 }, "prefect.State.is_failed": { "tf": 1 }, "prefect.State.is_crashed": { "tf": 1 }, "prefect.State.is_cancelled": { "tf": 1 }, "prefect.State.is_cancelling": { "tf": 1 }, "prefect.State.is_final": { "tf": 1 }, "prefect.State.is_paused": { "tf": 1 } }, "df": 10, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "c": { "docs": { "prefect.Flow.isasync": { "tf": 1 }, "prefect.Task.isasync": { "tf": 1 } }, "df": 2 } } } } } }, "m": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Manifest.import_path": { "tf": 1 } }, "df": 1 } } } } } }, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.name": { "tf": 1 }, "prefect.Flow.flow_run_name": { "tf": 1 }, "prefect.Manifest.flow_name": { "tf": 1 }, "prefect.State.name": { "tf": 1 }, "prefect.State.default_name_from_type": { "tf": 1 }, "prefect.Task.task_run_name": { "tf": 1 } }, "df": 6 } } } }, "r": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.flow_run_name": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.Task.task_run_name": { "tf": 1 }, "prefect.Task.create_run": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.resume_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 7, "n": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.task_runner": { "tf": 1 } }, "df": 1 } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.on_running": { "tf": 1 }, "prefect.State.is_running": { "tf": 1 } }, "df": 2 } } } } } }, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.retries": { "tf": 1 }, "prefect.Task.retries": { "tf": 1 } }, "df": 2 } } }, "y": { "docs": { "prefect.Flow.retry_delay_seconds": { "tf": 1 }, "prefect.Task.retry_jitter_factor": { "tf": 1 }, "prefect.Task.retry_condition_fn": { "tf": 1 } }, "df": 3 } }, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Task.viz_return_value": { "tf": 1 } }, "df": 1 } } } }, "s": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.persist_result": { "tf": 1 }, "prefect.Flow.result_storage": { "tf": 1 }, "prefect.Flow.result_serializer": { "tf": 1 }, "prefect.Flow.cache_result_in_memory": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.Task.persist_result": { "tf": 1 }, "prefect.Task.result_storage": { "tf": 1 }, "prefect.Task.result_serializer": { "tf": 1 }, "prefect.Task.result_storage_key": { "tf": 1 }, "prefect.Task.cache_result_in_memory": { "tf": 1 } }, "df": 10 } }, "m": { "docs": {}, "df": 0, "e": { "docs": { "prefect.resume_flow_run": { "tf": 1 } }, "df": 1 } } } }, "f": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "h": { "docs": { "prefect.Task.refresh_cache": { "tf": 1 } }, "df": 1 } } } } } } }, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "k": { "docs": { "prefect.Flow.task_runner": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.description": { "tf": 1 }, "prefect.Task.fn": { "tf": 1 }, "prefect.Task.isasync": { "tf": 1 }, "prefect.Task.task_run_name": { "tf": 1.4142135623730951 }, "prefect.Task.version": { "tf": 1 }, "prefect.Task.log_prints": { "tf": 1 }, "prefect.Task.tags": { "tf": 1 }, "prefect.Task.cache_key_fn": { "tf": 1 }, "prefect.Task.cache_expiration": { "tf": 1 }, "prefect.Task.refresh_cache": { "tf": 1 }, "prefect.Task.retries": { "tf": 1 }, "prefect.Task.retry_jitter_factor": { "tf": 1 }, "prefect.Task.persist_result": { "tf": 1 }, "prefect.Task.result_storage": { "tf": 1 }, "prefect.Task.result_serializer": { "tf": 1 }, "prefect.Task.result_storage_key": { "tf": 1 }, "prefect.Task.cache_result_in_memory": { "tf": 1 }, "prefect.Task.timeout_seconds": { "tf": 1 }, "prefect.Task.on_completion": { "tf": 1 }, "prefect.Task.on_failure": { "tf": 1 }, "prefect.Task.retry_condition_fn": { "tf": 1 }, "prefect.Task.viz_return_value": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.create_run": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.Task.serve": { "tf": 1 } }, "df": 31 } }, "g": { "docs": {}, "df": 0, "s": { "docs": { "prefect.tags": { "tf": 1 }, "prefect.Task.tags": { "tf": 1 } }, "df": 2 } } }, "i": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.default_scheduled_start_time": { "tf": 1 } }, "df": 1, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.timeout_seconds": { "tf": 1 }, "prefect.Task.timeout_seconds": { "tf": 1 } }, "df": 2 } } }, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "p": { "docs": { "prefect.State.timestamp": { "tf": 1 } }, "df": 1 } } } } } } } }, "o": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1 } }, "df": 2 }, "y": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.type": { "tf": 1 }, "prefect.State.default_name_from_type": { "tf": 1 } }, "df": 2 } } } }, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.log_prints": { "tf": 1 }, "prefect.Task.log_prints": { "tf": 1 } }, "df": 2, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.get_run_logger": { "tf": 1 } }, "df": 1 } } } } } }, "p": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.log_prints": { "tf": 1 }, "prefect.Task.log_prints": { "tf": 1 } }, "df": 2 } } } } }, "a": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Manifest.parameter_openapi_schema": { "tf": 1 } }, "df": 1, "s": { "docs": { "prefect.Flow.parameters": { "tf": 1 }, "prefect.Flow.should_validate_parameters": { "tf": 1 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 4 } } } } } } } }, "t": { "docs": {}, "df": 0, "h": { "docs": { "prefect.Manifest.import_path": { "tf": 1 } }, "df": 1 } }, "u": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1, "d": { "docs": { "prefect.State.is_paused": { "tf": 1 } }, "df": 1 } } } } }, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.persist_result": { "tf": 1 }, "prefect.Task.persist_result": { "tf": 1 } }, "df": 2 } } } } }, "n": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.State.is_pending": { "tf": 1 } }, "df": 1 } } } } } } }, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.description": { "tf": 1 }, "prefect.Task.description": { "tf": 1 } }, "df": 2 } } } } } } } } }, "l": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.retry_delay_seconds": { "tf": 1 } }, "df": 1 } } }, "p": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 } }, "df": 1 } } } } } } } }, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "s": { "docs": { "prefect.State.state_details": { "tf": 1 } }, "df": 1 } } } } }, "f": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "t": { "docs": { "prefect.State.default_name_from_type": { "tf": 1 }, "prefect.State.default_scheduled_start_time": { "tf": 1 } }, "df": 2 } } } } } }, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": { "prefect.State.data": { "tf": 1 } }, "df": 1 } } } }, "v": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.version": { "tf": 1 }, "prefect.Task.version": { "tf": 1 } }, "df": 2 } } } } } }, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.should_validate_parameters": { "tf": 1 }, "prefect.Flow.validate_parameters": { "tf": 1 } }, "df": 2 } } } } }, "u": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Task.viz_return_value": { "tf": 1 } }, "df": 1 } } } }, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "z": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.visualize": { "tf": 1 } }, "df": 1 } } } } } } }, "z": { "docs": { "prefect.Task.viz_return_value": { "tf": 1 } }, "df": 1 } } }, "s": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.timeout_seconds": { "tf": 1 }, "prefect.Flow.retry_delay_seconds": { "tf": 1 }, "prefect.Task.timeout_seconds": { "tf": 1 } }, "df": 3 } } } } }, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "z": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 1, "r": { "docs": { "prefect.Flow.result_serializer": { "tf": 1 }, "prefect.Task.result_serializer": { "tf": 1 } }, "df": 2 } } } } } } }, "v": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.Task.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 3 } } } }, "h": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.should_validate_parameters": { "tf": 1 } }, "df": 1 } } } } }, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.result_storage": { "tf": 1 }, "prefect.Task.result_storage": { "tf": 1 }, "prefect.Task.result_storage_key": { "tf": 1 } }, "df": 3 } } } } }, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State": { "tf": 1 }, "prefect.State.type": { "tf": 1 }, "prefect.State.name": { "tf": 1 }, "prefect.State.timestamp": { "tf": 1 }, "prefect.State.message": { "tf": 1 }, "prefect.State.state_details": { "tf": 1.4142135623730951 }, "prefect.State.data": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1.4142135623730951 }, "prefect.State.default_name_from_type": { "tf": 1 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.State.is_scheduled": { "tf": 1 }, "prefect.State.is_pending": { "tf": 1 }, "prefect.State.is_running": { "tf": 1 }, "prefect.State.is_completed": { "tf": 1 }, "prefect.State.is_failed": { "tf": 1 }, "prefect.State.is_crashed": { "tf": 1 }, "prefect.State.is_cancelled": { "tf": 1 }, "prefect.State.is_cancelling": { "tf": 1 }, "prefect.State.is_final": { "tf": 1 }, "prefect.State.is_paused": { "tf": 1 }, "prefect.State.copy": { "tf": 1 } }, "df": 22 } }, "r": { "docs": {}, "df": 0, "t": { "docs": { "prefect.State.default_scheduled_start_time": { "tf": 1 } }, "df": 1 } } } }, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.from_source": { "tf": 1 } }, "df": 1 } } } } }, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "a": { "docs": { "prefect.Manifest.parameter_openapi_schema": { "tf": 1 } }, "df": 1 } }, "d": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.State.is_scheduled": { "tf": 1 } }, "df": 2 } } } } } } } }, "u": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Task.submit": { "tf": 1 } }, "df": 1 } } } }, "s": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": { "prefect.suspend_flow_run": { "tf": 1 } }, "df": 1 } } } } } } }, "c": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.cache_result_in_memory": { "tf": 1 }, "prefect.Task.cache_key_fn": { "tf": 1 }, "prefect.Task.cache_expiration": { "tf": 1 }, "prefect.Task.refresh_cache": { "tf": 1 }, "prefect.Task.cache_result_in_memory": { "tf": 1 } }, "df": 5 } } }, "n": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.on_cancellation": { "tf": 1 } }, "df": 1 } } } } }, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.State.is_cancelled": { "tf": 1 } }, "df": 1 } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.State.is_cancelling": { "tf": 1 } }, "df": 1 } } } } } } } } }, "o": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.on_completion": { "tf": 1 }, "prefect.Task.on_completion": { "tf": 1 } }, "df": 2 } } }, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.State.is_completed": { "tf": 1 } }, "df": 1 } } } } } } }, "n": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Manifest.model_config": { "tf": 1 } }, "df": 1 } } }, "d": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Task.retry_condition_fn": { "tf": 1 } }, "df": 1 } } } } } } }, "p": { "docs": {}, "df": 0, "y": { "docs": { "prefect.State.copy": { "tf": 1 } }, "df": 1 } } }, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.on_crashed": { "tf": 1 }, "prefect.State.is_crashed": { "tf": 1 } }, "df": 2 } } } } }, "e": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.to_state_create": { "tf": 1 }, "prefect.Task.create_run": { "tf": 1 } }, "df": 2 } } } } }, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.get_client": { "tf": 1 } }, "df": 1 } } } } } }, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.cache_result_in_memory": { "tf": 1 }, "prefect.Task.cache_result_in_memory": { "tf": 1 } }, "df": 2 } } } }, "s": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.message": { "tf": 1 } }, "df": 1 } } } } } }, "a": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Manifest": { "tf": 1 }, "prefect.Manifest.model_config": { "tf": 1 }, "prefect.Manifest.flow_name": { "tf": 1 }, "prefect.Manifest.import_path": { "tf": 1 }, "prefect.Manifest.parameter_openapi_schema": { "tf": 1 }, "prefect.Manifest.model_fields": { "tf": 1 } }, "df": 6 } } } } } }, "p": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1 } }, "o": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": { "prefect.Manifest.model_config": { "tf": 1 }, "prefect.Manifest.model_fields": { "tf": 1 } }, "df": 2 } } } } }, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.on_completion": { "tf": 1 }, "prefect.Flow.on_failure": { "tf": 1 }, "prefect.Flow.on_cancellation": { "tf": 1 }, "prefect.Flow.on_crashed": { "tf": 1 }, "prefect.Flow.on_running": { "tf": 1 }, "prefect.Task.on_completion": { "tf": 1 }, "prefect.Task.on_failure": { "tf": 1 } }, "df": 7 }, "p": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.with_options": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 2 } } } } }, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "i": { "docs": { "prefect.Manifest.parameter_openapi_schema": { "tf": 1 } }, "df": 1 } } } } } } }, "w": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "h": { "docs": { "prefect.Flow.with_options": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 2 } } } }, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": { "prefect.get_client": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 } }, "df": 2 } } }, "k": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Task.cache_key_fn": { "tf": 1 }, "prefect.Task.result_storage_key": { "tf": 1 } }, "df": 2 } } }, "e": { "docs": {}, "df": 0, "x": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Task.cache_expiration": { "tf": 1 } }, "df": 1 } } } } } } } } } }, "j": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Task.retry_jitter_factor": { "tf": 1 } }, "df": 1 } } } } } }, "u": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.unmapped": { "tf": 1 }, "prefect.unmapped.__init__": { "tf": 1 } }, "df": 2 } } } } } } } } } }, "fullname": { "root": { "docs": { "prefect.allow_failure.__init__": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.unmapped.__init__": { "tf": 1 } }, "df": 4, "p": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": { "prefect": { "tf": 1 }, "prefect.allow_failure": { "tf": 1 }, "prefect.allow_failure.__init__": { "tf": 1 }, "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.name": { "tf": 1 }, "prefect.Flow.flow_run_name": { "tf": 1 }, "prefect.Flow.task_runner": { "tf": 1 }, "prefect.Flow.log_prints": { "tf": 1 }, "prefect.Flow.description": { "tf": 1 }, "prefect.Flow.fn": { "tf": 1 }, "prefect.Flow.isasync": { "tf": 1 }, "prefect.Flow.version": { "tf": 1 }, "prefect.Flow.timeout_seconds": { "tf": 1 }, "prefect.Flow.retries": { "tf": 1 }, "prefect.Flow.retry_delay_seconds": { "tf": 1 }, "prefect.Flow.parameters": { "tf": 1 }, "prefect.Flow.should_validate_parameters": { "tf": 1 }, "prefect.Flow.persist_result": { "tf": 1 }, "prefect.Flow.result_storage": { "tf": 1 }, "prefect.Flow.result_serializer": { "tf": 1 }, "prefect.Flow.cache_result_in_memory": { "tf": 1 }, "prefect.Flow.on_completion": { "tf": 1 }, "prefect.Flow.on_failure": { "tf": 1 }, "prefect.Flow.on_cancellation": { "tf": 1 }, "prefect.Flow.on_crashed": { "tf": 1 }, "prefect.Flow.on_running": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.serialize_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.Flow.visualize": { "tf": 1 }, "prefect.get_client": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.Manifest": { "tf": 1 }, "prefect.Manifest.model_config": { "tf": 1 }, "prefect.Manifest.flow_name": { "tf": 1 }, "prefect.Manifest.import_path": { "tf": 1 }, "prefect.Manifest.parameter_openapi_schema": { "tf": 1 }, "prefect.Manifest.model_fields": { "tf": 1 }, "prefect.State": { "tf": 1 }, "prefect.State.type": { "tf": 1 }, "prefect.State.name": { "tf": 1 }, "prefect.State.timestamp": { "tf": 1 }, "prefect.State.message": { "tf": 1 }, "prefect.State.state_details": { "tf": 1 }, "prefect.State.data": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.State.default_name_from_type": { "tf": 1 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.State.is_scheduled": { "tf": 1 }, "prefect.State.is_pending": { "tf": 1 }, "prefect.State.is_running": { "tf": 1 }, "prefect.State.is_completed": { "tf": 1 }, "prefect.State.is_failed": { "tf": 1 }, "prefect.State.is_crashed": { "tf": 1 }, "prefect.State.is_cancelled": { "tf": 1 }, "prefect.State.is_cancelling": { "tf": 1 }, "prefect.State.is_final": { "tf": 1 }, "prefect.State.is_paused": { "tf": 1 }, "prefect.State.copy": { "tf": 1 }, "prefect.tags": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.description": { "tf": 1 }, "prefect.Task.fn": { "tf": 1 }, "prefect.Task.isasync": { "tf": 1 }, "prefect.Task.task_run_name": { "tf": 1 }, "prefect.Task.version": { "tf": 1 }, "prefect.Task.log_prints": { "tf": 1 }, "prefect.Task.tags": { "tf": 1 }, "prefect.Task.cache_key_fn": { "tf": 1 }, "prefect.Task.cache_expiration": { "tf": 1 }, "prefect.Task.refresh_cache": { "tf": 1 }, "prefect.Task.retries": { "tf": 1 }, "prefect.Task.retry_jitter_factor": { "tf": 1 }, "prefect.Task.persist_result": { "tf": 1 }, "prefect.Task.result_storage": { "tf": 1 }, "prefect.Task.result_serializer": { "tf": 1 }, "prefect.Task.result_storage_key": { "tf": 1 }, "prefect.Task.cache_result_in_memory": { "tf": 1 }, "prefect.Task.timeout_seconds": { "tf": 1 }, "prefect.Task.on_completion": { "tf": 1 }, "prefect.Task.on_failure": { "tf": 1 }, "prefect.Task.retry_condition_fn": { "tf": 1 }, "prefect.Task.viz_return_value": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.create_run": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.Task.serve": { "tf": 1 }, "prefect.unmapped": { "tf": 1 }, "prefect.unmapped.__init__": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.resume_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 104 } } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.log_prints": { "tf": 1 }, "prefect.Task.log_prints": { "tf": 1 } }, "df": 2 } } } } }, "a": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Manifest.parameter_openapi_schema": { "tf": 1 } }, "df": 1, "s": { "docs": { "prefect.Flow.parameters": { "tf": 1 }, "prefect.Flow.should_validate_parameters": { "tf": 1 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 4 } } } } } } } }, "t": { "docs": {}, "df": 0, "h": { "docs": { "prefect.Manifest.import_path": { "tf": 1 } }, "df": 1 } }, "u": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1, "d": { "docs": { "prefect.State.is_paused": { "tf": 1 } }, "df": 1 } } } } }, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.persist_result": { "tf": 1 }, "prefect.Task.persist_result": { "tf": 1 } }, "df": 2 } } } } }, "n": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.State.is_pending": { "tf": 1 } }, "df": 1 } } } } } } }, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "w": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.allow_failure.__init__": { "tf": 1 } }, "df": 2 } } } } }, "f": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.allow_failure.__init__": { "tf": 1 }, "prefect.Flow.on_failure": { "tf": 1 }, "prefect.Task.on_failure": { "tf": 1 } }, "df": 4 } } }, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.State.is_failed": { "tf": 1 } }, "df": 1 } } } }, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Task.retry_jitter_factor": { "tf": 1 } }, "df": 1 } } } } }, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "w": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.name": { "tf": 1 }, "prefect.Flow.flow_run_name": { "tf": 1.4142135623730951 }, "prefect.Flow.task_runner": { "tf": 1 }, "prefect.Flow.log_prints": { "tf": 1 }, "prefect.Flow.description": { "tf": 1 }, "prefect.Flow.fn": { "tf": 1 }, "prefect.Flow.isasync": { "tf": 1 }, "prefect.Flow.version": { "tf": 1 }, "prefect.Flow.timeout_seconds": { "tf": 1 }, "prefect.Flow.retries": { "tf": 1 }, "prefect.Flow.retry_delay_seconds": { "tf": 1 }, "prefect.Flow.parameters": { "tf": 1 }, "prefect.Flow.should_validate_parameters": { "tf": 1 }, "prefect.Flow.persist_result": { "tf": 1 }, "prefect.Flow.result_storage": { "tf": 1 }, "prefect.Flow.result_serializer": { "tf": 1 }, "prefect.Flow.cache_result_in_memory": { "tf": 1 }, "prefect.Flow.on_completion": { "tf": 1 }, "prefect.Flow.on_failure": { "tf": 1 }, "prefect.Flow.on_cancellation": { "tf": 1 }, "prefect.Flow.on_crashed": { "tf": 1 }, "prefect.Flow.on_running": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.serialize_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.Flow.visualize": { "tf": 1 }, "prefect.Manifest.flow_name": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.resume_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 37 } } }, "n": { "docs": { "prefect.Flow.fn": { "tf": 1 }, "prefect.Task.fn": { "tf": 1 }, "prefect.Task.cache_key_fn": { "tf": 1 }, "prefect.Task.retry_condition_fn": { "tf": 1 } }, "df": 4 }, "r": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "m": { "docs": { "prefect.Flow.from_source": { "tf": 1 }, "prefect.State.default_name_from_type": { "tf": 1 } }, "df": 2 } } }, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Manifest.model_fields": { "tf": 1 } }, "df": 1 } } } }, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": { "prefect.State.is_final": { "tf": 1 } }, "df": 1 } } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.cache_result_in_memory": { "tf": 1 }, "prefect.Task.cache_result_in_memory": { "tf": 1 } }, "df": 2, "i": { "docs": {}, "df": 0, "t": { "docs": { "prefect.allow_failure.__init__": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.unmapped.__init__": { "tf": 1 } }, "df": 4 } } }, "s": { "docs": { "prefect.State.is_scheduled": { "tf": 1 }, "prefect.State.is_pending": { "tf": 1 }, "prefect.State.is_running": { "tf": 1 }, "prefect.State.is_completed": { "tf": 1 }, "prefect.State.is_failed": { "tf": 1 }, "prefect.State.is_crashed": { "tf": 1 }, "prefect.State.is_cancelled": { "tf": 1 }, "prefect.State.is_cancelling": { "tf": 1 }, "prefect.State.is_final": { "tf": 1 }, "prefect.State.is_paused": { "tf": 1 } }, "df": 10, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "c": { "docs": { "prefect.Flow.isasync": { "tf": 1 }, "prefect.Task.isasync": { "tf": 1 } }, "df": 2 } } } } } }, "m": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Manifest.import_path": { "tf": 1 } }, "df": 1 } } } } } }, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.name": { "tf": 1 }, "prefect.Flow.flow_run_name": { "tf": 1 }, "prefect.Manifest.flow_name": { "tf": 1 }, "prefect.State.name": { "tf": 1 }, "prefect.State.default_name_from_type": { "tf": 1 }, "prefect.Task.task_run_name": { "tf": 1 } }, "df": 6 } } } }, "r": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.flow_run_name": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.Task.task_run_name": { "tf": 1 }, "prefect.Task.create_run": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.resume_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 7, "n": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.task_runner": { "tf": 1 } }, "df": 1 } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.on_running": { "tf": 1 }, "prefect.State.is_running": { "tf": 1 } }, "df": 2 } } } } } }, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.retries": { "tf": 1 }, "prefect.Task.retries": { "tf": 1 } }, "df": 2 } } }, "y": { "docs": { "prefect.Flow.retry_delay_seconds": { "tf": 1 }, "prefect.Task.retry_jitter_factor": { "tf": 1 }, "prefect.Task.retry_condition_fn": { "tf": 1 } }, "df": 3 } }, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Task.viz_return_value": { "tf": 1 } }, "df": 1 } } } }, "s": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.persist_result": { "tf": 1 }, "prefect.Flow.result_storage": { "tf": 1 }, "prefect.Flow.result_serializer": { "tf": 1 }, "prefect.Flow.cache_result_in_memory": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.Task.persist_result": { "tf": 1 }, "prefect.Task.result_storage": { "tf": 1 }, "prefect.Task.result_serializer": { "tf": 1 }, "prefect.Task.result_storage_key": { "tf": 1 }, "prefect.Task.cache_result_in_memory": { "tf": 1 } }, "df": 10 } }, "m": { "docs": {}, "df": 0, "e": { "docs": { "prefect.resume_flow_run": { "tf": 1 } }, "df": 1 } } } }, "f": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "h": { "docs": { "prefect.Task.refresh_cache": { "tf": 1 } }, "df": 1 } } } } } } }, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "k": { "docs": { "prefect.Flow.task_runner": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.description": { "tf": 1 }, "prefect.Task.fn": { "tf": 1 }, "prefect.Task.isasync": { "tf": 1 }, "prefect.Task.task_run_name": { "tf": 1.4142135623730951 }, "prefect.Task.version": { "tf": 1 }, "prefect.Task.log_prints": { "tf": 1 }, "prefect.Task.tags": { "tf": 1 }, "prefect.Task.cache_key_fn": { "tf": 1 }, "prefect.Task.cache_expiration": { "tf": 1 }, "prefect.Task.refresh_cache": { "tf": 1 }, "prefect.Task.retries": { "tf": 1 }, "prefect.Task.retry_jitter_factor": { "tf": 1 }, "prefect.Task.persist_result": { "tf": 1 }, "prefect.Task.result_storage": { "tf": 1 }, "prefect.Task.result_serializer": { "tf": 1 }, "prefect.Task.result_storage_key": { "tf": 1 }, "prefect.Task.cache_result_in_memory": { "tf": 1 }, "prefect.Task.timeout_seconds": { "tf": 1 }, "prefect.Task.on_completion": { "tf": 1 }, "prefect.Task.on_failure": { "tf": 1 }, "prefect.Task.retry_condition_fn": { "tf": 1 }, "prefect.Task.viz_return_value": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.create_run": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.Task.serve": { "tf": 1 } }, "df": 31 } }, "g": { "docs": {}, "df": 0, "s": { "docs": { "prefect.tags": { "tf": 1 }, "prefect.Task.tags": { "tf": 1 } }, "df": 2 } } }, "i": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.default_scheduled_start_time": { "tf": 1 } }, "df": 1, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.timeout_seconds": { "tf": 1 }, "prefect.Task.timeout_seconds": { "tf": 1 } }, "df": 2 } } }, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "p": { "docs": { "prefect.State.timestamp": { "tf": 1 } }, "df": 1 } } } } } } } }, "o": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1 } }, "df": 2 }, "y": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.type": { "tf": 1 }, "prefect.State.default_name_from_type": { "tf": 1 } }, "df": 2 } } } }, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.log_prints": { "tf": 1 }, "prefect.Task.log_prints": { "tf": 1 } }, "df": 2, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.get_run_logger": { "tf": 1 } }, "df": 1 } } } } } }, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.description": { "tf": 1 }, "prefect.Task.description": { "tf": 1 } }, "df": 2 } } } } } } } } }, "l": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.retry_delay_seconds": { "tf": 1 } }, "df": 1 } } }, "p": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 } }, "df": 1 } } } } } } } }, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "s": { "docs": { "prefect.State.state_details": { "tf": 1 } }, "df": 1 } } } } }, "f": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "t": { "docs": { "prefect.State.default_name_from_type": { "tf": 1 }, "prefect.State.default_scheduled_start_time": { "tf": 1 } }, "df": 2 } } } } } }, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": { "prefect.State.data": { "tf": 1 } }, "df": 1 } } } }, "v": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.version": { "tf": 1 }, "prefect.Task.version": { "tf": 1 } }, "df": 2 } } } } } }, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.should_validate_parameters": { "tf": 1 }, "prefect.Flow.validate_parameters": { "tf": 1 } }, "df": 2 } } } } }, "u": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Task.viz_return_value": { "tf": 1 } }, "df": 1 } } } }, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "z": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.visualize": { "tf": 1 } }, "df": 1 } } } } } } }, "z": { "docs": { "prefect.Task.viz_return_value": { "tf": 1 } }, "df": 1 } } }, "s": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.timeout_seconds": { "tf": 1 }, "prefect.Flow.retry_delay_seconds": { "tf": 1 }, "prefect.Task.timeout_seconds": { "tf": 1 } }, "df": 3 } } } } }, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "z": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 1, "r": { "docs": { "prefect.Flow.result_serializer": { "tf": 1 }, "prefect.Task.result_serializer": { "tf": 1 } }, "df": 2 } } } } } } }, "v": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.Task.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 3 } } } }, "h": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.should_validate_parameters": { "tf": 1 } }, "df": 1 } } } } }, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.result_storage": { "tf": 1 }, "prefect.Task.result_storage": { "tf": 1 }, "prefect.Task.result_storage_key": { "tf": 1 } }, "df": 3 } } } } }, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State": { "tf": 1 }, "prefect.State.type": { "tf": 1 }, "prefect.State.name": { "tf": 1 }, "prefect.State.timestamp": { "tf": 1 }, "prefect.State.message": { "tf": 1 }, "prefect.State.state_details": { "tf": 1.4142135623730951 }, "prefect.State.data": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1.4142135623730951 }, "prefect.State.default_name_from_type": { "tf": 1 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.State.is_scheduled": { "tf": 1 }, "prefect.State.is_pending": { "tf": 1 }, "prefect.State.is_running": { "tf": 1 }, "prefect.State.is_completed": { "tf": 1 }, "prefect.State.is_failed": { "tf": 1 }, "prefect.State.is_crashed": { "tf": 1 }, "prefect.State.is_cancelled": { "tf": 1 }, "prefect.State.is_cancelling": { "tf": 1 }, "prefect.State.is_final": { "tf": 1 }, "prefect.State.is_paused": { "tf": 1 }, "prefect.State.copy": { "tf": 1 } }, "df": 22 } }, "r": { "docs": {}, "df": 0, "t": { "docs": { "prefect.State.default_scheduled_start_time": { "tf": 1 } }, "df": 1 } } } }, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.from_source": { "tf": 1 } }, "df": 1 } } } } }, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "a": { "docs": { "prefect.Manifest.parameter_openapi_schema": { "tf": 1 } }, "df": 1 } }, "d": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.State.is_scheduled": { "tf": 1 } }, "df": 2 } } } } } } } }, "u": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Task.submit": { "tf": 1 } }, "df": 1 } } } }, "s": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": { "prefect.suspend_flow_run": { "tf": 1 } }, "df": 1 } } } } } } }, "c": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.cache_result_in_memory": { "tf": 1 }, "prefect.Task.cache_key_fn": { "tf": 1 }, "prefect.Task.cache_expiration": { "tf": 1 }, "prefect.Task.refresh_cache": { "tf": 1 }, "prefect.Task.cache_result_in_memory": { "tf": 1 } }, "df": 5 } } }, "n": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.on_cancellation": { "tf": 1 } }, "df": 1 } } } } }, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.State.is_cancelled": { "tf": 1 } }, "df": 1 } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.State.is_cancelling": { "tf": 1 } }, "df": 1 } } } } } } } } }, "o": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.on_completion": { "tf": 1 }, "prefect.Task.on_completion": { "tf": 1 } }, "df": 2 } } }, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.State.is_completed": { "tf": 1 } }, "df": 1 } } } } } } }, "n": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Manifest.model_config": { "tf": 1 } }, "df": 1 } } }, "d": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Task.retry_condition_fn": { "tf": 1 } }, "df": 1 } } } } } } }, "p": { "docs": {}, "df": 0, "y": { "docs": { "prefect.State.copy": { "tf": 1 } }, "df": 1 } } }, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.on_crashed": { "tf": 1 }, "prefect.State.is_crashed": { "tf": 1 } }, "df": 2 } } } } }, "e": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.to_state_create": { "tf": 1 }, "prefect.Task.create_run": { "tf": 1 } }, "df": 2 } } } } }, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.get_client": { "tf": 1 } }, "df": 1 } } } } } }, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.cache_result_in_memory": { "tf": 1 }, "prefect.Task.cache_result_in_memory": { "tf": 1 } }, "df": 2 } } } }, "s": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.message": { "tf": 1 } }, "df": 1 } } } } } }, "a": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Manifest": { "tf": 1 }, "prefect.Manifest.model_config": { "tf": 1 }, "prefect.Manifest.flow_name": { "tf": 1 }, "prefect.Manifest.import_path": { "tf": 1 }, "prefect.Manifest.parameter_openapi_schema": { "tf": 1 }, "prefect.Manifest.model_fields": { "tf": 1 } }, "df": 6 } } } } } }, "p": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1 } }, "o": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": { "prefect.Manifest.model_config": { "tf": 1 }, "prefect.Manifest.model_fields": { "tf": 1 } }, "df": 2 } } } } }, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.on_completion": { "tf": 1 }, "prefect.Flow.on_failure": { "tf": 1 }, "prefect.Flow.on_cancellation": { "tf": 1 }, "prefect.Flow.on_crashed": { "tf": 1 }, "prefect.Flow.on_running": { "tf": 1 }, "prefect.Task.on_completion": { "tf": 1 }, "prefect.Task.on_failure": { "tf": 1 } }, "df": 7 }, "p": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.with_options": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 2 } } } } }, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "i": { "docs": { "prefect.Manifest.parameter_openapi_schema": { "tf": 1 } }, "df": 1 } } } } } } }, "w": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "h": { "docs": { "prefect.Flow.with_options": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 2 } } } }, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": { "prefect.get_client": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 } }, "df": 2 } } }, "k": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Task.cache_key_fn": { "tf": 1 }, "prefect.Task.result_storage_key": { "tf": 1 } }, "df": 2 } } }, "e": { "docs": {}, "df": 0, "x": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Task.cache_expiration": { "tf": 1 } }, "df": 1 } } } } } } } } } }, "j": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Task.retry_jitter_factor": { "tf": 1 } }, "df": 1 } } } } } }, "u": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.unmapped": { "tf": 1 }, "prefect.unmapped.__init__": { "tf": 1 } }, "df": 2 } } } } } } } } } }, "annotation": { "root": { "docs": { "prefect.Manifest.model_config": { "tf": 1 }, "prefect.Manifest.flow_name": { "tf": 1 }, "prefect.Manifest.import_path": { "tf": 1 }, "prefect.Manifest.parameter_openapi_schema": { "tf": 1 }, "prefect.Manifest.model_fields": { "tf": 1 }, "prefect.State.type": { "tf": 1 }, "prefect.State.name": { "tf": 1 }, "prefect.State.timestamp": { "tf": 1 }, "prefect.State.message": { "tf": 1 }, "prefect.State.state_details": { "tf": 1 }, "prefect.State.data": { "tf": 1 } }, "df": 11, "c": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "[": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "c": { "docs": { "prefect.Manifest.model_config": { "tf": 1 } }, "df": 1 } } } } } } } }, "d": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "[": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Manifest.model_fields": { "tf": 1 } }, "df": 1 } } } } } } } } } } } } } } }, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.State.type": { "tf": 1 }, "prefect.State.state_details": { "tf": 1 } }, "df": 2 } } } } }, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Manifest.model_config": { "tf": 1 } }, "df": 1, "d": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Manifest.model_config": { "tf": 1 } }, "df": 1 } } } } } } } } }, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Manifest.parameter_openapi_schema": { "tf": 1 } }, "df": 1 } } } } } } } } }, "v": { "1": { "docs": { "prefect.Manifest.model_config": { "tf": 1 }, "prefect.Manifest.model_fields": { "tf": 1 } }, "df": 2 }, "docs": {}, "df": 0 }, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Manifest.flow_name": { "tf": 1 }, "prefect.Manifest.import_path": { "tf": 1 } }, "df": 2 }, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.type": { "tf": 1 } }, "df": 1 } } } }, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "s": { "docs": { "prefect.State.state_details": { "tf": 1 } }, "df": 1 } } } } } } } } } } }, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": { "prefect.State.type": { "tf": 1 }, "prefect.State.state_details": { "tf": 1 } }, "df": 2 } } } } } } }, "p": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Manifest.parameter_openapi_schema": { "tf": 1 }, "prefect.State.type": { "tf": 1 }, "prefect.State.state_details": { "tf": 1 }, "prefect.State.data": { "tf": 1 } }, "df": 4 } } } } } }, "a": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "a": { "docs": { "prefect.Manifest.parameter_openapi_schema": { "tf": 1 } }, "df": 1 } } } } } } } } } } } } } }, "y": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "c": { "docs": { "prefect.Manifest.model_fields": { "tf": 1 } }, "df": 1 } } } } } } }, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "m": { "docs": { "prefect.State.timestamp": { "tf": 1 } }, "df": 1 } } } } } } } }, "u": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Manifest.parameter_openapi_schema": { "tf": 1 } }, "df": 1 } } } } } } } }, "n": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "[": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": { "prefect.State.data": { "tf": 1 } }, "df": 1 } } } } } } } } } } } } }, "f": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Manifest.model_fields": { "tf": 1 } }, "df": 1 }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "o": { "docs": { "prefect.Manifest.model_fields": { "tf": 1 } }, "df": 1 } } } } } } } } }, "o": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "j": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "s": { "docs": { "prefect.State.type": { "tf": 1 }, "prefect.State.state_details": { "tf": 1 } }, "df": 2 } } } } } }, "p": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "[": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": { "prefect.State.name": { "tf": 1 }, "prefect.State.message": { "tf": 1 } }, "df": 2 } } } } } } } } } } } }, "d": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.timestamp": { "tf": 1.4142135623730951 } }, "df": 1 } } } } }, "a": { "docs": { "prefect.State.data": { "tf": 1 } }, "df": 1, "d": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "[": { "docs": {}, "df": 0, "~": { "docs": {}, "df": 0, "r": { "docs": { "prefect.State.data": { "tf": 1 } }, "df": 1 } } } } } } } } } } } } } }, "e": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.State.data": { "tf": 1 } }, "df": 1 } } } } } } } } }, "o": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "s": { "docs": { "prefect.State.data": { "tf": 1 } }, "df": 1 } } } } } } } } }, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "s": { "docs": { "prefect.State.data": { "tf": 1 } }, "df": 1 } } } } } } }, "b": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "[": { "docs": {}, "df": 0, "~": { "docs": {}, "df": 0, "r": { "docs": { "prefect.State.data": { "tf": 1 } }, "df": 1 } } } } } } } } } } } } }, "a": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "y": { "docs": { "prefect.State.data": { "tf": 1 } }, "df": 1 } } } } }, "default_value": { "root": { "docs": { "prefect.Manifest.model_fields": { "tf": 2.23606797749979 } }, "df": 1, "x": { "2": { "7": { "docs": { "prefect.Manifest.model_fields": { "tf": 3.4641016151377544 } }, "df": 1 }, "docs": {}, "df": 0 }, "docs": {}, "df": 0 }, "f": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "w": { "docs": { "prefect.Manifest.model_fields": { "tf": 1.4142135623730951 } }, "df": 1 } } } }, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Manifest.model_fields": { "tf": 2.23606797749979 } }, "df": 1 } } } }, "m": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Manifest.model_fields": { "tf": 1.7320508075688772 } }, "df": 1 } } } } } } } } } }, "t": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Manifest.model_fields": { "tf": 1.7320508075688772 } }, "df": 1 } } }, "r": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Manifest.model_fields": { "tf": 1.7320508075688772 } }, "df": 1 } } } }, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Manifest.model_fields": { "tf": 1.4142135623730951 } }, "df": 1 } }, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "a": { "docs": { "prefect.Manifest.model_fields": { "tf": 1.4142135623730951 } }, "df": 1 } } } } } }, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "q": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Manifest.model_fields": { "tf": 1.7320508075688772 } }, "df": 1 } } } } } } } }, "i": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Manifest.model_fields": { "tf": 1.4142135623730951 } }, "df": 1 } } } } } }, "p": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "h": { "docs": { "prefect.Manifest.model_fields": { "tf": 1.4142135623730951 } }, "df": 1 } }, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Manifest.model_fields": { "tf": 1.4142135623730951 } }, "df": 1, "s": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "a": { "docs": { "prefect.Manifest.model_fields": { "tf": 1 } }, "df": 1 } } } } } } } } } } } } } } }, "o": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "i": { "docs": { "prefect.Manifest.model_fields": { "tf": 1.4142135623730951 } }, "df": 1 } } } } } } } } }, "signature": { "root": { "1": { "0": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1 }, "docs": {}, "df": 0 }, "3": { "6": { "0": { "0": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 }, "docs": {}, "df": 0 }, "docs": {}, "df": 0 }, "9": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 3 }, "docs": {}, "df": 0 }, "docs": { "prefect.allow_failure.__init__": { "tf": 2.8284271247461903 }, "prefect.flow": { "tf": 27.982137159266443 }, "prefect.Flow.__init__": { "tf": 28.035691537752374 }, "prefect.Flow.with_options": { "tf": 26.551836094703507 }, "prefect.Flow.validate_parameters": { "tf": 6.324555320336759 }, "prefect.Flow.serialize_parameters": { "tf": 6.324555320336759 }, "prefect.Flow.to_deployment": { "tf": 28.982753492378876 }, "prefect.Flow.serve": { "tf": 28.879058156387302 }, "prefect.Flow.from_source": { "tf": 8.888194417315589 }, "prefect.Flow.deploy": { "tf": 27.92848008753788 }, "prefect.Flow.visualize": { "tf": 4.69041575982343 }, "prefect.get_client": { "tf": 9.219544457292887 }, "prefect.get_run_logger": { "tf": 7.745966692414834 }, "prefect.State.result": { "tf": 7.745966692414834 }, "prefect.State.to_state_create": { "tf": 3.1622776601683795 }, "prefect.State.default_name_from_type": { "tf": 5.385164807134504 }, "prefect.State.default_scheduled_start_time": { "tf": 3.7416573867739413 }, "prefect.State.is_scheduled": { "tf": 3.4641016151377544 }, "prefect.State.is_pending": { "tf": 3.4641016151377544 }, "prefect.State.is_running": { "tf": 3.4641016151377544 }, "prefect.State.is_completed": { "tf": 3.4641016151377544 }, "prefect.State.is_failed": { "tf": 3.4641016151377544 }, "prefect.State.is_crashed": { "tf": 3.4641016151377544 }, "prefect.State.is_cancelled": { "tf": 3.4641016151377544 }, "prefect.State.is_cancelling": { "tf": 3.4641016151377544 }, "prefect.State.is_final": { "tf": 3.4641016151377544 }, "prefect.State.is_paused": { "tf": 3.4641016151377544 }, "prefect.State.copy": { "tf": 8.18535277187245 }, "prefect.tags": { "tf": 6 }, "prefect.task": { "tf": 26.92582403567252 }, "prefect.Task.__init__": { "tf": 27.85677655436824 }, "prefect.Task.with_options": { "tf": 22.67156809750927 }, "prefect.Task.create_run": { "tf": 15.362291495737216 }, "prefect.Task.submit": { "tf": 12.449899597988733 }, "prefect.Task.map": { "tf": 9 }, "prefect.Task.serve": { "tf": 7 }, "prefect.unmapped.__init__": { "tf": 2.8284271247461903 }, "prefect.serve": { "tf": 9.273618495495704 }, "prefect.deploy": { "tf": 12.727922061357855 }, "prefect.pause_flow_run": { "tf": 10.908712114635714 }, "prefect.resume_flow_run": { "tf": 5.385164807134504 }, "prefect.suspend_flow_run": { "tf": 11.445523142259598 } }, "df": 42, "v": { "docs": { "prefect.State.default_name_from_type": { "tf": 1 } }, "df": 1, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "e": { "docs": { "prefect.allow_failure.__init__": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.unmapped.__init__": { "tf": 1 } }, "df": 5, "s": { "docs": { "prefect.State.default_name_from_type": { "tf": 1 }, "prefect.State.default_scheduled_start_time": { "tf": 1 } }, "df": 2 } } }, "i": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 } }, "df": 3 } } } } } }, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 2 } } } } } } } }, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 } }, "df": 8 } } } } } }, "i": { "docs": {}, "df": 0, "z": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } }, "f": { "docs": { "prefect.Flow.from_source": { "tf": 1.4142135623730951 } }, "df": 1, "n": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task.__init__": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 5 }, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "w": { "docs": { "prefect.flow": { "tf": 2.449489742783178 }, "prefect.Flow.__init__": { "tf": 2.449489742783178 }, "prefect.Flow.with_options": { "tf": 2.449489742783178 }, "prefect.Task.create_run": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.resume_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 7, "r": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "n": { "docs": { "prefect.flow": { "tf": 2.23606797749979 }, "prefect.Flow.__init__": { "tf": 2.23606797749979 }, "prefect.Flow.with_options": { "tf": 2.23606797749979 } }, "df": 3 } } } }, "a": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow.__init__": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task.__init__": { "tf": 2.23606797749979 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 9 } } } }, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 3, "s": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 7 } } } } } } } } }, "e": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "s": { "docs": { "prefect.State.copy": { "tf": 1 } }, "df": 1 } } } } }, "a": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 7 } } } } }, "l": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.get_client": { "tf": 1 }, "prefect.State.copy": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 10 } } }, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } } } }, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "h": { "docs": { "prefect.State.result": { "tf": 1 } }, "df": 1 } } } }, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Task.create_run": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 5 } }, "u": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Task.create_run": { "tf": 1 }, "prefect.Task.submit": { "tf": 1.7320508075688772 }, "prefect.Task.map": { "tf": 1 } }, "df": 3 } } } } } } }, "n": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 4.123105625617661 }, "prefect.Flow.__init__": { "tf": 4 }, "prefect.Flow.with_options": { "tf": 3.872983346207417 }, "prefect.Flow.to_deployment": { "tf": 3.872983346207417 }, "prefect.Flow.serve": { "tf": 3.7416573867739413 }, "prefect.Flow.deploy": { "tf": 4 }, "prefect.get_client": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.State.copy": { "tf": 1 }, "prefect.task": { "tf": 4.69041575982343 }, "prefect.Task.__init__": { "tf": 4.47213595499958 }, "prefect.Task.with_options": { "tf": 3.4641016151377544 }, "prefect.Task.create_run": { "tf": 2.23606797749979 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.Task.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1.7320508075688772 }, "prefect.resume_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 2 } }, "df": 22, "t": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 2.8284271247461903 }, "prefect.Flow.__init__": { "tf": 3 }, "prefect.Flow.with_options": { "tf": 3 }, "prefect.Flow.to_deployment": { "tf": 2 }, "prefect.Flow.serve": { "tf": 2 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.tags": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task.__init__": { "tf": 2.6457513110645907 }, "prefect.Task.with_options": { "tf": 2.23606797749979 }, "prefect.Task.create_run": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 12 } } } } } }, "t": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.with_options": { "tf": 2 }, "prefect.Task.with_options": { "tf": 3 } }, "df": 2 } } } }, "s": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } } } }, "a": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow.__init__": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task.__init__": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1 } }, "df": 10 } } }, "e": { "docs": {}, "df": 0, "x": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } }, "w": { "docs": { "prefect.tags": { "tf": 1 } }, "df": 1 } } }, "o": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": { "prefect.flow": { "tf": 3.3166247903554 }, "prefect.Flow.__init__": { "tf": 3.1622776601683795 }, "prefect.Flow.with_options": { "tf": 2.449489742783178 }, "prefect.Flow.to_deployment": { "tf": 3.3166247903554 }, "prefect.Flow.serve": { "tf": 3.1622776601683795 }, "prefect.Flow.deploy": { "tf": 3.605551275463989 }, "prefect.get_client": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.State.copy": { "tf": 1 }, "prefect.task": { "tf": 3 }, "prefect.Task.__init__": { "tf": 4.123105625617661 }, "prefect.Task.with_options": { "tf": 2.8284271247461903 }, "prefect.Task.create_run": { "tf": 2 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.Task.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.resume_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 2.23606797749979 } }, "df": 21, "[": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "l": { "docs": { "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 } }, "df": 2 } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Task.with_options": { "tf": 1 } }, "df": 1 } } }, "f": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Task.with_options": { "tf": 1 } }, "df": 1 } } } } }, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Task.with_options": { "tf": 1 } }, "df": 1 } } } } } } } } } } }, "n": { "docs": { "prefect.flow": { "tf": 2.23606797749979 }, "prefect.Flow.__init__": { "tf": 2.23606797749979 }, "prefect.Flow.with_options": { "tf": 2.23606797749979 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task.__init__": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 1 } }, "df": 9 }, "b": { "docs": {}, "df": 0, "j": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "s": { "docs": { "prefect.flow": { "tf": 3.872983346207417 }, "prefect.Flow.__init__": { "tf": 3.872983346207417 }, "prefect.Flow.with_options": { "tf": 3.872983346207417 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.task": { "tf": 2.449489742783178 }, "prefect.Task.__init__": { "tf": 2.449489742783178 }, "prefect.Task.with_options": { "tf": 2.449489742783178 }, "prefect.Task.create_run": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1.4142135623730951 } }, "df": 11 } } } } } }, "r": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.get_client": { "tf": 1.4142135623730951 }, "prefect.Task.create_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 3 } } } } } } } } } } } } }, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": { "prefect.flow": { "tf": 2.6457513110645907 }, "prefect.Flow.__init__": { "tf": 2.6457513110645907 }, "prefect.Flow.with_options": { "tf": 2.6457513110645907 }, "prefect.Flow.validate_parameters": { "tf": 1.4142135623730951 }, "prefect.Flow.serialize_parameters": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 3.3166247903554 }, "prefect.Flow.serve": { "tf": 2.8284271247461903 }, "prefect.Flow.from_source": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 3 }, "prefect.get_client": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.copy": { "tf": 1 }, "prefect.tags": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 3.3166247903554 }, "prefect.Task.__init__": { "tf": 3.3166247903554 }, "prefect.Task.with_options": { "tf": 3 }, "prefect.Task.create_run": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 20 }, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task.__init__": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 7 } } } } }, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 2.23606797749979 }, "prefect.Flow.__init__": { "tf": 2.23606797749979 }, "prefect.Flow.with_options": { "tf": 2.23606797749979 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task.__init__": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 8 } }, "r": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 2 } } } } } }, "e": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } }, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "s": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow.__init__": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task.__init__": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 6 } } } } }, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "z": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow.__init__": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task.__init__": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 6, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6 } } } } } } } } }, "l": { "docs": {}, "df": 0, "f": { "docs": { "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.serialize_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.Flow.visualize": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.State.is_scheduled": { "tf": 1 }, "prefect.State.is_pending": { "tf": 1 }, "prefect.State.is_running": { "tf": 1 }, "prefect.State.is_completed": { "tf": 1 }, "prefect.State.is_failed": { "tf": 1 }, "prefect.State.is_crashed": { "tf": 1 }, "prefect.State.is_cancelled": { "tf": 1 }, "prefect.State.is_cancelling": { "tf": 1 }, "prefect.State.is_final": { "tf": 1 }, "prefect.State.is_paused": { "tf": 1 }, "prefect.State.copy": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.create_run": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.Task.serve": { "tf": 1 } }, "df": 25 } }, "q": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 } }, "df": 2, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } } } } } } } }, "t": { "docs": { "prefect.tags": { "tf": 1 }, "prefect.Task.create_run": { "tf": 1 } }, "df": 2, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "s": { "docs": { "prefect.get_client": { "tf": 1 } }, "df": 1 } } } } } } }, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "a": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3, "s": { "docs": { "prefect.flow": { "tf": 3.872983346207417 }, "prefect.Flow.__init__": { "tf": 3.872983346207417 }, "prefect.Flow.with_options": { "tf": 3.872983346207417 }, "prefect.Flow.to_deployment": { "tf": 4.123105625617661 }, "prefect.Flow.serve": { "tf": 4.123105625617661 }, "prefect.Flow.deploy": { "tf": 3.605551275463989 }, "prefect.task": { "tf": 2.449489742783178 }, "prefect.Task.__init__": { "tf": 2.449489742783178 }, "prefect.Task.with_options": { "tf": 2.449489742783178 }, "prefect.Task.create_run": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1.4142135623730951 } }, "df": 11 } } }, "d": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 3, "s": { "docs": { "prefect.Flow.to_deployment": { "tf": 3 }, "prefect.Flow.serve": { "tf": 3 }, "prefect.Flow.deploy": { "tf": 2.23606797749979 } }, "df": 3 } } } } } } } }, "h": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "w": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 2 } } } } } } }, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.from_source": { "tf": 1 } }, "df": 1 } } } } }, "y": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "c": { "docs": { "prefect.get_client": { "tf": 1 } }, "df": 1, "p": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.get_client": { "tf": 1 }, "prefect.Task.create_run": { "tf": 1 } }, "df": 2 } } } } } } } } } } } } } } } } }, "r": { "docs": { "prefect.Flow.__init__": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 } }, "df": 3, "u": { "docs": {}, "df": 0, "n": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.create_run": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.resume_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 10, "n": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.Task.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1.4142135623730951 } }, "df": 10, "s": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow.__init__": { "tf": 1.7320508075688772 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.serve": { "tf": 1 } }, "df": 4, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.from_source": { "tf": 1 } }, "df": 1 } } } } } } }, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 3 } } } } } } } } } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 } }, "df": 3 } } } }, "c": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "x": { "docs": {}, "df": 0, "t": { "docs": { "prefect.get_run_logger": { "tf": 1 } }, "df": 1 } } } } } } } } }, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6 } } }, "y": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task.__init__": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 } }, "df": 6 } }, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "n": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 5 } } } }, "s": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 2 }, "prefect.Flow.__init__": { "tf": 2 }, "prefect.Flow.with_options": { "tf": 2 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task.__init__": { "tf": 2.23606797749979 }, "prefect.Task.with_options": { "tf": 2.23606797749979 } }, "df": 6 } } }, "e": { "docs": {}, "df": 0, "t": { "docs": { "prefect.State.copy": { "tf": 1 } }, "df": 1 } }, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1 } } } } } } } }, "a": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.from_source": { "tf": 1 } }, "df": 1 } } } } } } } } } } } } } } } } } } } } } } }, "f": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "h": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } } } } }, "r": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3, "s": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } } } } } } }, "a": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.result": { "tf": 1 } }, "df": 1 } } } } }, "u": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.flow": { "tf": 2.23606797749979 }, "prefect.Flow.__init__": { "tf": 2.23606797749979 }, "prefect.Flow.with_options": { "tf": 2 }, "prefect.Flow.to_deployment": { "tf": 2.6457513110645907 }, "prefect.Flow.serve": { "tf": 2.6457513110645907 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 2 }, "prefect.get_client": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task.__init__": { "tf": 2.23606797749979 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.create_run": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 16, "[": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "[": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.__init__": { "tf": 1 } }, "df": 1 } } } } } } } } } } } }, "p": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 2 } } } } } } }, "f": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Task.with_options": { "tf": 1 } }, "df": 1 } } } } } } } } } }, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.with_options": { "tf": 2 }, "prefect.Task.with_options": { "tf": 3 } }, "df": 2 } } } } } } } }, "u": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 4 } } }, "p": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.copy": { "tf": 1 } }, "df": 1 } } } } } }, "c": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 2.449489742783178 }, "prefect.Flow.__init__": { "tf": 2.6457513110645907 }, "prefect.Flow.with_options": { "tf": 2.449489742783178 }, "prefect.task": { "tf": 2.449489742783178 }, "prefect.Task.__init__": { "tf": 2.6457513110645907 }, "prefect.Task.with_options": { "tf": 2.23606797749979 } }, "df": 6, "[": { "docs": {}, "df": 0, "[": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Task.with_options": { "tf": 1 } }, "df": 1 } } } } } } } } } } }, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 2 }, "prefect.Task.__init__": { "tf": 2 }, "prefect.Task.with_options": { "tf": 2 } }, "df": 6 } } }, "n": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 } }, "df": 3 } } } } } } } } } } }, "l": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 2 }, "prefect.Task.with_options": { "tf": 3 } }, "df": 4 } } }, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 3.872983346207417 }, "prefect.Flow.__init__": { "tf": 3.872983346207417 }, "prefect.Flow.with_options": { "tf": 3.872983346207417 }, "prefect.Flow.to_deployment": { "tf": 3 }, "prefect.Flow.serve": { "tf": 3 }, "prefect.Flow.deploy": { "tf": 2.23606797749979 }, "prefect.get_client": { "tf": 1.7320508075688772 }, "prefect.task": { "tf": 2.449489742783178 }, "prefect.Task.__init__": { "tf": 2.449489742783178 }, "prefect.Task.with_options": { "tf": 2.449489742783178 }, "prefect.Task.create_run": { "tf": 2.23606797749979 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 13 } } } }, "s": { "docs": { "prefect.Flow.from_source": { "tf": 1 }, "prefect.State.default_name_from_type": { "tf": 1 }, "prefect.State.default_scheduled_start_time": { "tf": 1 } }, "df": 3 } }, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "k": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 } }, "df": 2 } } } } } } } } } } } } } } } } }, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "x": { "docs": {}, "df": 0, "t": { "docs": { "prefect.get_run_logger": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.create_run": { "tf": 2 } }, "df": 5 } } } }, "d": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } } } } } }, "m": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6 } } } } } }, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } } } } } } } } }, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 } }, "df": 3 } } } } }, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3, "s": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } } } } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6, "t": { "docs": { "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow.__init__": { "tf": 1.7320508075688772 }, "prefect.Flow.with_options": { "tf": 1.7320508075688772 }, "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.task": { "tf": 2 }, "prefect.Task.__init__": { "tf": 2 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 12, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 4, "s": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } } } } } } } } }, "p": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "t": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.resume_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 3, "s": { "docs": { "prefect.Task.create_run": { "tf": 1 } }, "df": 1 } } } } }, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.create_run": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 8 } } } } } } }, "s": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 }, "m": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } }, "g": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } } }, "d": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.resume_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 3 } }, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "y": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6 } } }, "s": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 9 } } } } } } } } }, "p": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.to_deployment": { "tf": 2 }, "prefect.Flow.serve": { "tf": 2 }, "prefect.Flow.deploy": { "tf": 2 } }, "df": 3, "e": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } } } } } } }, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } } } } } } } }, "c": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } } } } } } } } } }, "s": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1.7320508075688772 } }, "df": 5, "e": { "docs": {}, "df": 0, "q": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } } } } } } } } } }, "i": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } } } } } } } } } } } }, "i": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.validate_parameters": { "tf": 1.4142135623730951 }, "prefect.Flow.serialize_parameters": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.get_client": { "tf": 1 }, "prefect.State.copy": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.create_run": { "tf": 1.4142135623730951 }, "prefect.resume_flow_run": { "tf": 1 } }, "df": 12 } } }, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6 } } } } } } } }, "t": { "docs": { "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 2, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "k": { "docs": { "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow.__init__": { "tf": 2 }, "prefect.Flow.with_options": { "tf": 1.7320508075688772 }, "prefect.task": { "tf": 2 }, "prefect.Task.__init__": { "tf": 2 }, "prefect.Task.with_options": { "tf": 2 }, "prefect.Task.create_run": { "tf": 1.4142135623730951 }, "prefect.Task.serve": { "tf": 1.7320508075688772 } }, "df": 8, "r": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "n": { "docs": { "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task.__init__": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.Task.create_run": { "tf": 1 }, "prefect.Task.submit": { "tf": 1.4142135623730951 } }, "df": 5, "c": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "x": { "docs": {}, "df": 0, "t": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.create_run": { "tf": 1 } }, "df": 4 } } } } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Task.create_run": { "tf": 1 } }, "df": 1 } } } } } } } }, "s": { "docs": { "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task.__init__": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.Task.serve": { "tf": 1 } }, "df": 4 } } }, "g": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.tags": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 7 } } }, "i": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 8 } } }, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6 } } } } } } } }, "r": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow.__init__": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.State.result": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.serve": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.7320508075688772 } }, "df": 9 } }, "i": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.to_deployment": { "tf": 2.23606797749979 }, "prefect.Flow.serve": { "tf": 2.23606797749979 }, "prefect.Flow.deploy": { "tf": 2.23606797749979 } }, "df": 3 } } } } } } }, "y": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 7 } } } }, "p": { "docs": { "prefect.Flow.__init__": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 } }, "df": 2, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 4.358898943540674 }, "prefect.Flow.__init__": { "tf": 4.358898943540674 }, "prefect.Flow.with_options": { "tf": 4.58257569495584 }, "prefect.Flow.to_deployment": { "tf": 4.358898943540674 }, "prefect.Flow.serve": { "tf": 4.242640687119285 }, "prefect.Flow.from_source": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 3.872983346207417 }, "prefect.get_client": { "tf": 1.4142135623730951 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.task": { "tf": 3.4641016151377544 }, "prefect.Task.__init__": { "tf": 3.4641016151377544 }, "prefect.Task.with_options": { "tf": 4.358898943540674 }, "prefect.Task.create_run": { "tf": 2.6457513110645907 }, "prefect.Task.submit": { "tf": 2.23606797749979 }, "prefect.Task.map": { "tf": 1 }, "prefect.Task.serve": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 19, "c": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.get_client": { "tf": 1 }, "prefect.Task.create_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 3 } } } } } }, "f": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Task.create_run": { "tf": 1 }, "prefect.Task.submit": { "tf": 1.7320508075688772 }, "prefect.Task.map": { "tf": 1 } }, "df": 3 } } } } } } } } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 4, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6 } } } } }, "a": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.serialize_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.Task.create_run": { "tf": 1 } }, "df": 9 } } } } } } }, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Task.create_run": { "tf": 1 } }, "df": 1 } } } }, "u": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 2, "d": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } }, "t": { "docs": {}, "df": 0, "h": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 3 } } }, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6 } } } } } }, "o": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "l": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 3 } }, "l": { "docs": {}, "df": 0, "l": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1 } } }, "u": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "h": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } }, "b": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "k": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.serve": { "tf": 1 } }, "df": 4 } } } } } } } } } } } } }, "o": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "l": { "docs": { "prefect.flow": { "tf": 2 }, "prefect.Flow.__init__": { "tf": 2 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 2.449489742783178 }, "prefect.Flow.deploy": { "tf": 2.6457513110645907 }, "prefect.get_client": { "tf": 1 }, "prefect.State.result": { "tf": 1.4142135623730951 }, "prefect.State.is_scheduled": { "tf": 1 }, "prefect.State.is_pending": { "tf": 1 }, "prefect.State.is_running": { "tf": 1 }, "prefect.State.is_completed": { "tf": 1 }, "prefect.State.is_failed": { "tf": 1 }, "prefect.State.is_crashed": { "tf": 1 }, "prefect.State.is_cancelled": { "tf": 1 }, "prefect.State.is_cancelling": { "tf": 1 }, "prefect.State.is_final": { "tf": 1 }, "prefect.State.is_paused": { "tf": 1 }, "prefect.State.copy": { "tf": 1 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task.__init__": { "tf": 2.23606797749979 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.serve": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 2 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 27 } } }, "u": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } } }, "l": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 2 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.Task.with_options": { "tf": 3 } }, "df": 7 }, "o": { "docs": {}, "df": 0, "g": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6, "g": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.get_run_logger": { "tf": 1.4142135623730951 } }, "df": 1 } } }, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.get_run_logger": { "tf": 1 } }, "df": 1, "a": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.get_run_logger": { "tf": 1 } }, "df": 1 } } } } } } } } } } } }, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 2.23606797749979 }, "prefect.Flow.__init__": { "tf": 2.23606797749979 }, "prefect.Flow.with_options": { "tf": 2.23606797749979 }, "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.task": { "tf": 2 }, "prefect.Task.__init__": { "tf": 2 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1 } }, "df": 10, "[": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 1 } } } } } } } }, "m": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 2 } } } } }, "x": { "2": { "7": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow.__init__": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 2.8284271247461903 }, "prefect.Task.with_options": { "tf": 4.242640687119285 } }, "df": 4 }, "docs": {}, "df": 0 }, "docs": {}, "df": 0 }, "g": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 2 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.Task.with_options": { "tf": 3 } }, "df": 7 }, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.tags": { "tf": 1 } }, "df": 1 } } } } } } } } }, "w": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "m": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6 } } } } } } } } } } } } } } } } }, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "k": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1 } }, "df": 3 } } }, "e": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.serve": { "tf": 1 } }, "df": 1 } } } } } } } }, "a": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } } } }, "i": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Task.create_run": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 5 } } } }, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "y": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6 } } } }, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } } } } } }, "s": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 3 } } } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } } } } } } } } } } } } } } } } } } } }, "a": { "docs": {}, "df": 0, "w": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1.4142135623730951 } }, "df": 3 } } } } } } } }, "n": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.with_options": { "tf": 2 }, "prefect.Task.with_options": { "tf": 3 } }, "df": 2 } } } } } } } } }, "y": { "docs": { "prefect.Flow.validate_parameters": { "tf": 1.4142135623730951 }, "prefect.Flow.serialize_parameters": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.get_client": { "tf": 1 }, "prefect.State.copy": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task.__init__": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.create_run": { "tf": 1 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1.7320508075688772 } }, "df": 11 } }, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } }, "u": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.to_deployment": { "tf": 2 }, "prefect.Flow.serve": { "tf": 2 }, "prefect.Flow.deploy": { "tf": 2 } }, "df": 3 } } } } } } } } } }, "r": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.visualize": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 4 } } } }, "e": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.to_deployment": { "tf": 2.8284271247461903 }, "prefect.Flow.serve": { "tf": 2.8284271247461903 }, "prefect.Flow.deploy": { "tf": 2.8284271247461903 } }, "df": 3 }, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } } } } } }, "n": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } }, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 4, "t": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 3 } } } } } } } } } } } }, "g": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "x": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Task.create_run": { "tf": 1 } }, "df": 1 } } } } } } } } } } } }, "x": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.State.result": { "tf": 1 } }, "df": 1 } } } } } } }, "p": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } } } } } } }, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": { "prefect.Task.create_run": { "tf": 1 } }, "df": 1 } } } } }, "q": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 2 } } } } }, "j": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "b": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 2 } }, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task.__init__": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } } } } }, "k": { "docs": {}, "df": 0, "w": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.visualize": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.default_name_from_type": { "tf": 1 }, "prefect.State.copy": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 7 } } } } }, "e": { "docs": {}, "df": 0, "y": { "docs": { "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task.__init__": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 5 } } }, "h": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "x": { "docs": { "prefect.get_client": { "tf": 1 } }, "df": 1 } } } } } } }, "bases": { "root": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.Manifest": { "tf": 1 }, "prefect.State": { "tf": 1 }, "prefect.unmapped": { "tf": 1 } }, "df": 4 } } } } } }, "y": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "c": { "docs": { "prefect.Manifest": { "tf": 1 } }, "df": 1 } } } } } } } }, "u": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.unmapped": { "tf": 1 } }, "df": 2 } } } } } } } } }, "a": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "s": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.unmapped": { "tf": 1 } }, "df": 2 } } } } } } } } } } }, "b": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "[": { "docs": {}, "df": 0, "~": { "docs": {}, "df": 0, "t": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.unmapped": { "tf": 1 } }, "df": 2 } } } } } } } } } } } } }, "m": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": { "prefect.Manifest": { "tf": 1 } }, "df": 1 } } } } }, "s": { "docs": { "prefect.State": { "tf": 1 } }, "df": 1 } } } } }, "t": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.State": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 3 } } } } } }, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "[": { "docs": {}, "df": 0, "~": { "docs": {}, "df": 0, "p": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 }, "r": { "docs": { "prefect.State": { "tf": 1 } }, "df": 1 } } } } } } } } } }, "r": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": { "prefect.Manifest": { "tf": 1 }, "prefect.State": { "tf": 1 } }, "df": 2 } } } } } } } }, "c": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Manifest": { "tf": 1 } }, "df": 1 } } } } } }, "s": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": { "prefect.State": { "tf": 1 } }, "df": 1 } } } } } } }, "o": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "j": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": { "prefect.State": { "tf": 1 } }, "df": 1 } } } } } } } } } } } } } } } } }, "doc": { "root": { "0": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 3 }, "1": { "0": { "docs": { "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 2 }, "1": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1 }, "2": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1 }, "3": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1 }, "docs": { "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.Task.submit": { "tf": 1.7320508075688772 }, "prefect.Task.map": { "tf": 3.3166247903554 }, "prefect.Task.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 9 }, "2": { "0": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1 }, "1": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1 }, "2": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1 }, "3": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1 }, "docs": { "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.submit": { "tf": 1.7320508075688772 }, "prefect.Task.map": { "tf": 3.3166247903554 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 4 }, "3": { "6": { "0": { "0": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 3 }, "docs": {}, "df": 0 }, "docs": {}, "df": 0 }, "9": { "docs": { "prefect.deploy": { "tf": 1 } }, "df": 1 }, "docs": { "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 2 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.map": { "tf": 2.8284271247461903 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 6 }, "4": { "docs": { "prefect.Flow.with_options": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 3, ":": { "0": { "0": { "docs": { "prefect.serve": { "tf": 1 } }, "df": 1 }, "docs": {}, "df": 0 }, "docs": {}, "df": 0 } }, "5": { "0": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 }, "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 } }, "df": 4 }, "docs": { "prefect": { "tf": 1.7320508075688772 }, "prefect.allow_failure": { "tf": 3.4641016151377544 }, "prefect.allow_failure.__init__": { "tf": 1.7320508075688772 }, "prefect.flow": { "tf": 7.280109889280518 }, "prefect.Flow": { "tf": 5.744562646538029 }, "prefect.Flow.__init__": { "tf": 1.7320508075688772 }, "prefect.Flow.name": { "tf": 1.7320508075688772 }, "prefect.Flow.flow_run_name": { "tf": 1.7320508075688772 }, "prefect.Flow.task_runner": { "tf": 1.7320508075688772 }, "prefect.Flow.log_prints": { "tf": 1.7320508075688772 }, "prefect.Flow.description": { "tf": 1.7320508075688772 }, "prefect.Flow.fn": { "tf": 1.7320508075688772 }, "prefect.Flow.isasync": { "tf": 1.7320508075688772 }, "prefect.Flow.version": { "tf": 1.7320508075688772 }, "prefect.Flow.timeout_seconds": { "tf": 1.7320508075688772 }, "prefect.Flow.retries": { "tf": 1.7320508075688772 }, "prefect.Flow.retry_delay_seconds": { "tf": 1.7320508075688772 }, "prefect.Flow.parameters": { "tf": 1.7320508075688772 }, "prefect.Flow.should_validate_parameters": { "tf": 1.7320508075688772 }, "prefect.Flow.persist_result": { "tf": 1.7320508075688772 }, "prefect.Flow.result_storage": { "tf": 1.7320508075688772 }, "prefect.Flow.result_serializer": { "tf": 1.7320508075688772 }, "prefect.Flow.cache_result_in_memory": { "tf": 1.7320508075688772 }, "prefect.Flow.on_completion": { "tf": 1.7320508075688772 }, "prefect.Flow.on_failure": { "tf": 1.7320508075688772 }, "prefect.Flow.on_cancellation": { "tf": 1.7320508075688772 }, "prefect.Flow.on_crashed": { "tf": 1.7320508075688772 }, "prefect.Flow.on_running": { "tf": 1.7320508075688772 }, "prefect.Flow.with_options": { "tf": 4.795831523312719 }, "prefect.Flow.validate_parameters": { "tf": 2.6457513110645907 }, "prefect.Flow.serialize_parameters": { "tf": 2.8284271247461903 }, "prefect.Flow.to_deployment": { "tf": 14.2828568570857 }, "prefect.Flow.serve": { "tf": 10.392304845413264 }, "prefect.Flow.from_source": { "tf": 10.535653752852738 }, "prefect.Flow.deploy": { "tf": 12.041594578792296 }, "prefect.Flow.visualize": { "tf": 3.1622776601683795 }, "prefect.get_client": { "tf": 9.219544457292887 }, "prefect.get_run_logger": { "tf": 4.358898943540674 }, "prefect.Manifest": { "tf": 1.7320508075688772 }, "prefect.Manifest.model_config": { "tf": 1.7320508075688772 }, "prefect.Manifest.flow_name": { "tf": 1.7320508075688772 }, "prefect.Manifest.import_path": { "tf": 1.7320508075688772 }, "prefect.Manifest.parameter_openapi_schema": { "tf": 1.7320508075688772 }, "prefect.Manifest.model_fields": { "tf": 1.7320508075688772 }, "prefect.State": { "tf": 1.7320508075688772 }, "prefect.State.type": { "tf": 1.7320508075688772 }, "prefect.State.name": { "tf": 1.7320508075688772 }, "prefect.State.timestamp": { "tf": 1.7320508075688772 }, "prefect.State.message": { "tf": 1.7320508075688772 }, "prefect.State.state_details": { "tf": 1.7320508075688772 }, "prefect.State.data": { "tf": 1.7320508075688772 }, "prefect.State.result": { "tf": 6.782329983125268 }, "prefect.State.to_state_create": { "tf": 3.1622776601683795 }, "prefect.State.default_name_from_type": { "tf": 1.7320508075688772 }, "prefect.State.default_scheduled_start_time": { "tf": 2 }, "prefect.State.is_scheduled": { "tf": 1.7320508075688772 }, "prefect.State.is_pending": { "tf": 1.7320508075688772 }, "prefect.State.is_running": { "tf": 1.7320508075688772 }, "prefect.State.is_completed": { "tf": 1.7320508075688772 }, "prefect.State.is_failed": { "tf": 1.7320508075688772 }, "prefect.State.is_crashed": { "tf": 1.7320508075688772 }, "prefect.State.is_cancelled": { "tf": 1.7320508075688772 }, "prefect.State.is_cancelling": { "tf": 1.7320508075688772 }, "prefect.State.is_final": { "tf": 1.7320508075688772 }, "prefect.State.is_paused": { "tf": 1.7320508075688772 }, "prefect.State.copy": { "tf": 1.7320508075688772 }, "prefect.tags": { "tf": 6.782329983125268 }, "prefect.task": { "tf": 7.280109889280518 }, "prefect.Task": { "tf": 6.164414002968976 }, "prefect.Task.__init__": { "tf": 1.7320508075688772 }, "prefect.Task.description": { "tf": 1.7320508075688772 }, "prefect.Task.fn": { "tf": 1.7320508075688772 }, "prefect.Task.isasync": { "tf": 1.7320508075688772 }, "prefect.Task.task_run_name": { "tf": 1.7320508075688772 }, "prefect.Task.version": { "tf": 1.7320508075688772 }, "prefect.Task.log_prints": { "tf": 1.7320508075688772 }, "prefect.Task.tags": { "tf": 1.7320508075688772 }, "prefect.Task.cache_key_fn": { "tf": 1.7320508075688772 }, "prefect.Task.cache_expiration": { "tf": 1.7320508075688772 }, "prefect.Task.refresh_cache": { "tf": 1.7320508075688772 }, "prefect.Task.retries": { "tf": 1.7320508075688772 }, "prefect.Task.retry_jitter_factor": { "tf": 1.7320508075688772 }, "prefect.Task.persist_result": { "tf": 1.7320508075688772 }, "prefect.Task.result_storage": { "tf": 1.7320508075688772 }, "prefect.Task.result_serializer": { "tf": 1.7320508075688772 }, "prefect.Task.result_storage_key": { "tf": 1.7320508075688772 }, "prefect.Task.cache_result_in_memory": { "tf": 1.7320508075688772 }, "prefect.Task.timeout_seconds": { "tf": 1.7320508075688772 }, "prefect.Task.on_completion": { "tf": 1.7320508075688772 }, "prefect.Task.on_failure": { "tf": 1.7320508075688772 }, "prefect.Task.retry_condition_fn": { "tf": 1.7320508075688772 }, "prefect.Task.viz_return_value": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 5.744562646538029 }, "prefect.Task.create_run": { "tf": 1.7320508075688772 }, "prefect.Task.submit": { "tf": 6.48074069840786 }, "prefect.Task.map": { "tf": 6.48074069840786 }, "prefect.Task.serve": { "tf": 5.385164807134504 }, "prefect.unmapped": { "tf": 2.449489742783178 }, "prefect.unmapped.__init__": { "tf": 1.7320508075688772 }, "prefect.serve": { "tf": 16.15549442140351 }, "prefect.deploy": { "tf": 14.317821063276353 }, "prefect.pause_flow_run": { "tf": 12.328828005937952 }, "prefect.resume_flow_run": { "tf": 2.449489742783178 }, "prefect.suspend_flow_run": { "tf": 3.605551275463989 } }, "df": 104, "w": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "p": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1, "p": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.unmapped": { "tf": 1 } }, "df": 2 }, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.Task.submit": { "tf": 1.4142135623730951 } }, "df": 4 } } }, "s": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } } }, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 2 } } } } } }, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "l": { "docs": { "prefect.allow_failure": { "tf": 1.4142135623730951 }, "prefect.flow": { "tf": 4.358898943540674 }, "prefect.Flow": { "tf": 4 }, "prefect.Flow.to_deployment": { "tf": 2.449489742783178 }, "prefect.Flow.serve": { "tf": 2.6457513110645907 }, "prefect.Flow.deploy": { "tf": 3 }, "prefect.get_run_logger": { "tf": 1.7320508075688772 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.task": { "tf": 2.8284271247461903 }, "prefect.Task": { "tf": 2.6457513110645907 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1.7320508075688772 }, "prefect.Task.map": { "tf": 2.23606797749979 }, "prefect.Task.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1.7320508075688772 }, "prefect.pause_flow_run": { "tf": 3.872983346207417 }, "prefect.suspend_flow_run": { "tf": 3.1622776601683795 } }, "df": 17 } }, "t": { "docs": {}, "df": 0, "h": { "docs": { "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1.7320508075688772 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.get_client": { "tf": 1.7320508075688772 }, "prefect.tags": { "tf": 3.3166247903554 }, "prefect.task": { "tf": 2.6457513110645907 }, "prefect.Task": { "tf": 2.23606797749979 }, "prefect.Task.with_options": { "tf": 2.23606797749979 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1.7320508075688772 }, "prefect.Task.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 2 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 18, "i": { "docs": {}, "df": 0, "n": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 } }, "df": 7 } }, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.serialize_parameters": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 5 } } } } }, "n": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "w": { "docs": { "prefect.Flow.visualize": { "tf": 1 } }, "df": 1 } } } } }, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "k": { "docs": { "prefect.Flow.to_deployment": { "tf": 2.8284271247461903 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 4.123105625617661 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.deploy": { "tf": 2.6457513110645907 } }, "df": 5, "f": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "w": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1 } }, "df": 3 } } } }, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1 } } } } }, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1.7320508075688772 }, "prefect.Task": { "tf": 1.4142135623730951 } }, "df": 3, "b": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.serve": { "tf": 1.4142135623730951 } }, "df": 1 } } } } }, "o": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "k": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Task.serve": { "tf": 1 } }, "df": 1 } } } } } } } }, "a": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 2.449489742783178 }, "prefect.Task.map": { "tf": 2.449489742783178 }, "prefect.pause_flow_run": { "tf": 1.7320508075688772 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 11 } }, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } }, "r": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 1 } } } } } }, "y": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } }, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 } }, "df": 2 } }, "t": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 2.23606797749979 }, "prefect.Flow.deploy": { "tf": 2.6457513110645907 }, "prefect.State.result": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.7320508075688772 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 11 } } } }, "n": { "docs": { "prefect.flow": { "tf": 2.449489742783178 }, "prefect.Flow": { "tf": 2.23606797749979 }, "prefect.Flow.with_options": { "tf": 2.23606797749979 }, "prefect.Flow.to_deployment": { "tf": 2.6457513110645907 }, "prefect.Flow.serve": { "tf": 3 }, "prefect.Flow.deploy": { "tf": 2.6457513110645907 }, "prefect.task": { "tf": 2.6457513110645907 }, "prefect.Task": { "tf": 2.449489742783178 }, "prefect.Task.with_options": { "tf": 2.23606797749979 }, "prefect.pause_flow_run": { "tf": 2 }, "prefect.suspend_flow_run": { "tf": 1.7320508075688772 } }, "df": 11 } }, "i": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "h": { "docs": { "prefect.flow": { "tf": 2.23606797749979 }, "prefect.Flow": { "tf": 1.7320508075688772 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task": { "tf": 2 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 11 } }, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1.4142135623730951 } }, "df": 2 } } } } }, "f": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.tags": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 1.4142135623730951 } }, "df": 5, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.allow_failure": { "tf": 1.4142135623730951 }, "prefect.flow": { "tf": 3.4641016151377544 }, "prefect.Flow": { "tf": 3.4641016151377544 }, "prefect.Flow.with_options": { "tf": 2.6457513110645907 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 3.3166247903554 }, "prefect.Flow.serve": { "tf": 3 }, "prefect.Flow.deploy": { "tf": 3.4641016151377544 }, "prefect.Flow.visualize": { "tf": 1 }, "prefect.get_client": { "tf": 1.4142135623730951 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.result": { "tf": 1.7320508075688772 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.task": { "tf": 3.3166247903554 }, "prefect.Task": { "tf": 3.1622776601683795 }, "prefect.Task.with_options": { "tf": 3.605551275463989 }, "prefect.Task.submit": { "tf": 2.449489742783178 }, "prefect.Task.map": { "tf": 3 }, "prefect.Task.serve": { "tf": 1.4142135623730951 }, "prefect.unmapped": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 2 }, "prefect.pause_flow_run": { "tf": 2.23606797749979 }, "prefect.suspend_flow_run": { "tf": 1.7320508075688772 } }, "df": 24, "m": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 1, "a": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.from_source": { "tf": 1 } }, "df": 1 } } } }, "u": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.visualize": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 } }, "df": 2 } } } }, "u": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.result": { "tf": 1.7320508075688772 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 2.449489742783178 } }, "df": 3, "s": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 2.449489742783178 } }, "df": 3 } } } } }, "n": { "docs": {}, "df": 0, "c": { "docs": { "prefect.Flow.from_source": { "tf": 1 } }, "df": 1, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.flow": { "tf": 3.1622776601683795 }, "prefect.Flow": { "tf": 2.6457513110645907 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task": { "tf": 2.23606797749979 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 15, "s": { "docs": { "prefect.flow": { "tf": 2.6457513110645907 }, "prefect.task": { "tf": 1 } }, "df": 2 } } } } } } }, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 2 } } } }, "a": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": { "prefect.Flow.with_options": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.7320508075688772 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 3, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.allow_failure": { "tf": 2 }, "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.State.result": { "tf": 2.23606797749979 }, "prefect.task": { "tf": 2 }, "prefect.Task": { "tf": 2 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 9 } }, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow": { "tf": 1.7320508075688772 }, "prefect.Flow.with_options": { "tf": 1.7320508075688772 }, "prefect.State.result": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 } }, "df": 7 } } }, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } } } }, "l": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.State.result": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.deploy": { "tf": 1.4142135623730951 } }, "df": 10 } } }, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "i": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 1 } } } } }, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 } }, "df": 3, "y": { "docs": { "prefect.State.copy": { "tf": 1 } }, "df": 1 } } } } }, "r": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1 } }, "r": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "m": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.flow": { "tf": 2.8284271247461903 }, "prefect.Flow": { "tf": 2 }, "prefect.Flow.with_options": { "tf": 2 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.from_source": { "tf": 3.3166247903554 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.result": { "tf": 2.449489742783178 }, "prefect.tags": { "tf": 1 }, "prefect.task": { "tf": 2.449489742783178 }, "prefect.Task": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 2 }, "prefect.Task.submit": { "tf": 2 }, "prefect.Task.map": { "tf": 2 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 20 } } }, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "w": { "docs": { "prefect.flow": { "tf": 7.937253933193772 }, "prefect.Flow": { "tf": 5.196152422706632 }, "prefect.Flow.with_options": { "tf": 5.656854249492381 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 3.1622776601683795 }, "prefect.Flow.serve": { "tf": 4 }, "prefect.Flow.from_source": { "tf": 4 }, "prefect.Flow.deploy": { "tf": 3.872983346207417 }, "prefect.Flow.visualize": { "tf": 1.4142135623730951 }, "prefect.get_run_logger": { "tf": 1.4142135623730951 }, "prefect.Manifest": { "tf": 1 }, "prefect.State.result": { "tf": 4.358898943540674 }, "prefect.tags": { "tf": 3.605551275463989 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task": { "tf": 2 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.Task.submit": { "tf": 4.69041575982343 }, "prefect.Task.map": { "tf": 4.47213595499958 }, "prefect.serve": { "tf": 2.6457513110645907 }, "prefect.deploy": { "tf": 3.3166247903554 }, "prefect.pause_flow_run": { "tf": 5.656854249492381 }, "prefect.resume_flow_run": { "tf": 2 }, "prefect.suspend_flow_run": { "tf": 4.358898943540674 } }, "df": 23, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.from_source": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1.4142135623730951 } }, "df": 5 }, "v": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "z": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.visualize": { "tf": 1 } }, "df": 1 } } } } } } } } } } } } } } } } } } } }, "a": { "docs": {}, "df": 0, "g": { "docs": { "prefect.pause_flow_run": { "tf": 1.4142135623730951 } }, "df": 1 } } }, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow": { "tf": 1.7320508075688772 }, "prefect.Flow.from_source": { "tf": 1 } }, "df": 3 } }, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": { "prefect.flow": { "tf": 2.23606797749979 } }, "df": 1 } }, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "h": { "docs": { "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 4, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1 } } } } } }, "r": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.task": { "tf": 1 } }, "df": 2 } } } }, "e": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 4 } } } } } }, "t": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "h": { "docs": { "prefect.State.result": { "tf": 1 } }, "df": 1 } } } }, "n": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 4 } }, "s": { "2": { "docs": { "prefect.Flow.serve": { "tf": 2 }, "prefect.Flow.from_source": { "tf": 2 }, "prefect.Flow.deploy": { "tf": 2.449489742783178 } }, "df": 3 }, "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.serialize_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 2 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 2 }, "prefect.Flow.visualize": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1.4142135623730951 } }, "df": 15, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 2.449489742783178 }, "prefect.Flow": { "tf": 2.23606797749979 }, "prefect.Flow.with_options": { "tf": 2.6457513110645907 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State": { "tf": 1 }, "prefect.State.result": { "tf": 4.47213595499958 }, "prefect.State.to_state_create": { "tf": 1.7320508075688772 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task": { "tf": 2.23606797749979 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.Task.submit": { "tf": 2.6457513110645907 }, "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1.7320508075688772 } }, "df": 14, "s": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1 } }, "df": 4 }, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 4 } } } } }, "c": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.to_state_create": { "tf": 1 } }, "df": 1 } } } } } }, "t": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1 } } } } }, "i": { "docs": {}, "df": 0, "c": { "docs": { "prefect.Task.map": { "tf": 1.4142135623730951 } }, "df": 1 } } }, "r": { "docs": {}, "df": 0, "t": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 } }, "df": 2, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 3 } }, "s": { "docs": { "prefect.Flow.serve": { "tf": 1 } }, "df": 1 }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 4 } } }, "u": { "docs": {}, "df": 0, "p": { "docs": { "prefect.serve": { "tf": 1 } }, "df": 1 } } } } }, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.flow": { "tf": 2.23606797749979 }, "prefect.Flow": { "tf": 2.23606797749979 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.serialize_parameters": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task": { "tf": 2.23606797749979 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 10, "s": { "docs": { "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 2 } } } } }, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.from_source": { "tf": 1.7320508075688772 }, "prefect.task": { "tf": 2 }, "prefect.Task": { "tf": 2 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 } }, "df": 7 } } }, "e": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 4 } } }, "p": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.serve": { "tf": 1 } }, "df": 1 } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.suspend_flow_run": { "tf": 1 } }, "df": 1 } } } } } }, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "l": { "docs": { "prefect.Flow.with_options": { "tf": 1 } }, "df": 1 } } }, "e": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.4142135623730951 } }, "df": 2 } } } }, "y": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "c": { "docs": { "prefect.get_client": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1 } }, "df": 3, "h": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.get_client": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.task": { "tf": 1 } }, "df": 4 } } } } } } } } }, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "m": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1.4142135623730951 } }, "df": 3 } } } } }, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "z": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 2 } } } }, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 4, "r": { "docs": { "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow": { "tf": 1.7320508075688772 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 6 } } } } } } }, "v": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 2.23606797749979 }, "prefect.Task.serve": { "tf": 1.7320508075688772 }, "prefect.serve": { "tf": 2.23606797749979 } }, "df": 4, "d": { "docs": { "prefect.Flow.serve": { "tf": 1 } }, "df": 1 }, "r": { "docs": { "prefect.Task.serve": { "tf": 1 } }, "df": 1 } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Task.serve": { "tf": 1 } }, "df": 1 } } } } }, "c": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": { "prefect.task": { "tf": 1 } }, "df": 1, "s": { "docs": { "prefect.flow": { "tf": 2 }, "prefect.Flow": { "tf": 2 }, "prefect.Flow.with_options": { "tf": 2 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.task": { "tf": 2.449489742783178 }, "prefect.Task": { "tf": 2.23606797749979 }, "prefect.Task.with_options": { "tf": 2.6457513110645907 }, "prefect.pause_flow_run": { "tf": 2 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 11 } } } }, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.from_source": { "tf": 2 } }, "df": 1 } } } }, "t": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.tags": { "tf": 1 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task": { "tf": 2.23606797749979 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 10, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 5, "s": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } } } } }, "q": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "k": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 3 } } } } } } } } } } } } } } } } } }, "n": { "docs": {}, "df": 0, "d": { "docs": { "prefect.get_run_logger": { "tf": 1 } }, "df": 1 }, "t": { "docs": { "prefect.State.to_state_create": { "tf": 1 }, "prefect.unmapped": { "tf": 1 } }, "df": 2 } } }, "h": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 3 }, "prefect.Flow": { "tf": 1.7320508075688772 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.State.copy": { "tf": 1 }, "prefect.task": { "tf": 3 }, "prefect.Task": { "tf": 3 }, "prefect.Task.with_options": { "tf": 2 }, "prefect.unmapped": { "tf": 1 } }, "df": 14 } } } }, "u": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "w": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.serve": { "tf": 1.4142135623730951 } }, "df": 2 } } } } } } }, "u": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "w": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 } }, "df": 2 } } } }, "m": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task.submit": { "tf": 3 }, "prefect.Task.map": { "tf": 1.7320508075688772 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 4, "s": { "docs": { "prefect.flow": { "tf": 1 } }, "df": 1 }, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.Task.serve": { "tf": 1 } }, "df": 3 } } } }, "s": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 2 } } } } } } }, "c": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "s": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } } } } }, "c": { "docs": {}, "df": 0, "h": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 } }, "df": 2 }, "c": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1 } } } } } } }, "n": { "docs": { "prefect.serve": { "tf": 1 } }, "df": 1, "d": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "y": { "docs": { "prefect.serve": { "tf": 1 } }, "df": 1 } } } }, "p": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1.7320508075688772 } }, "df": 2 } } } }, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } } } } } }, "s": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": { "prefect.suspend_flow_run": { "tf": 2.23606797749979 } }, "df": 1, "s": { "docs": { "prefect.suspend_flow_run": { "tf": 1.7320508075688772 } }, "df": 1 }, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 1 } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.suspend_flow_run": { "tf": 1 } }, "df": 1 } } } } } } } } }, "i": { "docs": { "prefect.Flow.serve": { "tf": 1.4142135623730951 } }, "df": 1, "m": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.task": { "tf": 1 } }, "df": 2 } } } }, "n": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 2 } } } } }, "p": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 5 } }, "c": { "docs": { "prefect.get_run_logger": { "tf": 1 } }, "df": 1 } }, "y": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.State.result": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 3 } } } } } } } }, "a": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.serve": { "tf": 8.366600265340756 }, "prefect.Flow.from_source": { "tf": 9.591663046625438 }, "prefect.Flow.deploy": { "tf": 8.602325267042627 } }, "df": 3 } }, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": { "prefect.unmapped": { "tf": 1 } }, "df": 1 } } } }, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 3 }, "prefect.Flow.serve": { "tf": 3.605551275463989 }, "prefect.Flow.deploy": { "tf": 3.605551275463989 }, "prefect.deploy": { "tf": 1 } }, "df": 4, "s": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 2.449489742783178 }, "prefect.Flow.deploy": { "tf": 2.23606797749979 }, "prefect.serve": { "tf": 1 } }, "df": 4 }, "d": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 3 } } } } } }, "m": { "docs": {}, "df": 0, "a": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 3 } } } }, "o": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.default_scheduled_start_time": { "tf": 1 } }, "df": 1 } } } }, "a": { "docs": { "prefect.Flow.serve": { "tf": 1 } }, "df": 1, "m": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 3 } } }, "o": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.from_source": { "tf": 2.449489742783178 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.4142135623730951 } }, "df": 3 } } } }, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 2 } } } } } } } }, "k": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "p": { "docs": { "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.4142135623730951 } }, "df": 2, "p": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1 } } } } } } }, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "p": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1 } } } } }, "o": { "docs": { "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.from_source": { "tf": 2.6457513110645907 }, "prefect.Flow.deploy": { "tf": 2.6457513110645907 } }, "df": 3, "r": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 2.23606797749979 }, "prefect.Flow.serve": { "tf": 2.8284271247461903 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 3.1622776601683795 }, "prefect.get_run_logger": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 2 }, "prefect.Task": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 2.449489742783178 }, "prefect.serve": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.7320508075688772 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 16, "g": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "z": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } } } } } } }, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 5, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 2 } } } } } }, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } } } } } } } } } }, "f": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.allow_failure.__init__": { "tf": 1 }, "prefect.flow": { "tf": 4.242640687119285 }, "prefect.Flow": { "tf": 3.7416573867739413 }, "prefect.Flow.with_options": { "tf": 3 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 4.123105625617661 }, "prefect.Flow.serve": { "tf": 4.242640687119285 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 4.795831523312719 }, "prefect.Manifest": { "tf": 1 }, "prefect.State": { "tf": 1 }, "prefect.State.result": { "tf": 1.4142135623730951 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.State.default_scheduled_start_time": { "tf": 1.4142135623730951 }, "prefect.tags": { "tf": 1 }, "prefect.task": { "tf": 4.358898943540674 }, "prefect.Task": { "tf": 4.358898943540674 }, "prefect.Task.with_options": { "tf": 3.4641016151377544 }, "prefect.Task.submit": { "tf": 2 }, "prefect.Task.map": { "tf": 2.6457513110645907 }, "prefect.unmapped": { "tf": 1 }, "prefect.unmapped.__init__": { "tf": 1 }, "prefect.serve": { "tf": 1.7320508075688772 }, "prefect.deploy": { "tf": 2.6457513110645907 }, "prefect.pause_flow_run": { "tf": 2.449489742783178 }, "prefect.resume_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 28, "f": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } }, "p": { "docs": {}, "df": 0, "t": { "docs": { "prefect.allow_failure": { "tf": 1 } }, "df": 1, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.with_options": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.pause_flow_run": { "tf": 1.7320508075688772 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 4, "a": { "docs": {}, "df": 0, "l": { "docs": { "prefect.flow": { "tf": 4.123105625617661 }, "prefect.Flow": { "tf": 4 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 4.242640687119285 }, "prefect.Task": { "tf": 4.242640687119285 }, "prefect.Task.with_options": { "tf": 2 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 8, "l": { "docs": {}, "df": 0, "y": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } } }, "s": { "docs": { "prefect.Flow.with_options": { "tf": 1.7320508075688772 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 2.23606797749979 } }, "df": 5 } } } } }, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.unmapped": { "tf": 1 } }, "df": 1 } } } } } } } }, "n": { "docs": { "prefect.flow": { "tf": 3 }, "prefect.Flow": { "tf": 3 }, "prefect.Flow.with_options": { "tf": 2.449489742783178 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.State.result": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task": { "tf": 2 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.serve": { "tf": 1.7320508075688772 }, "prefect.deploy": { "tf": 1 } }, "df": 14, "l": { "docs": {}, "df": 0, "y": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 } }, "df": 8 } }, "c": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 5 } }, "e": { "docs": { "prefect.Task.map": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 2 } }, "df": 2 } }, "b": { "docs": {}, "df": 0, "j": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.Flow.visualize": { "tf": 1 }, "prefect.State.copy": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 10, "s": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 4 } } } } }, "s": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1 } } } } } } }, "u": { "docs": {}, "df": 0, "t": { "docs": { "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.Task.map": { "tf": 2 } }, "df": 2, "p": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } } }, "s": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "e": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1 } } } } } }, "v": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 } }, "df": 3 } } } } } } }, "t": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.visualize": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.serve": { "tf": 1.4142135623730951 } }, "df": 4, "w": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.visualize": { "tf": 1 } }, "df": 1 } } } } } } } }, "h": { "docs": { "prefect.State.result": { "tf": 1.7320508075688772 } }, "df": 1 } }, "i": { "docs": { "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 2, "n": { "docs": { "prefect.flow": { "tf": 2.23606797749979 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.Flow.visualize": { "tf": 1.4142135623730951 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.result": { "tf": 1.7320508075688772 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.task": { "tf": 2.8284271247461903 }, "prefect.Task": { "tf": 2.6457513110645907 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 2.6457513110645907 }, "prefect.Task.map": { "tf": 2.23606797749979 }, "prefect.pause_flow_run": { "tf": 1.7320508075688772 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 18, "d": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task": { "tf": 1.7320508075688772 }, "prefect.unmapped": { "tf": 1 } }, "df": 6 } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 2 }, "prefect.Task": { "tf": 2 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6 } } } } } } } }, "p": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "t": { "docs": { "prefect.allow_failure": { "tf": 1.7320508075688772 }, "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1 }, "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.unmapped": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 2.23606797749979 }, "prefect.resume_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 2.23606797749979 } }, "df": 10, "s": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.resume_flow_run": { "tf": 1 } }, "df": 4 } } } }, "t": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 } }, "df": 2, "o": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.State.copy": { "tf": 1 } }, "df": 6 }, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.with_options": { "tf": 1 } }, "df": 1 } } } } } } }, "v": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 5 } } }, "p": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } }, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 1 } } } } } }, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": { "prefect.allow_failure.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.unmapped.__init__": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 7 } }, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 1 } }, "df": 1 } } } } } } }, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.visualize": { "tf": 1 } }, "df": 1 } } } } }, "e": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "d": { "docs": { "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.unmapped": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 } }, "df": 5 } } } }, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.State.copy": { "tf": 1 } }, "df": 1 } } } } }, "p": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": { "prefect.tags": { "tf": 1 } }, "df": 1 } } } } }, "f": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 5 } } } } }, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } } } } } } } } } }, "c": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } } } } }, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.visualize": { "tf": 1 } }, "df": 1 } } } }, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "z": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.State.default_scheduled_start_time": { "tf": 1 } }, "df": 1 } } } } } } } } } } } } }, "f": { "docs": { "prefect.allow_failure": { "tf": 1.4142135623730951 }, "prefect.flow": { "tf": 3.605551275463989 }, "prefect.Flow": { "tf": 3.3166247903554 }, "prefect.Flow.with_options": { "tf": 2 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 2.449489742783178 }, "prefect.Flow.serve": { "tf": 2.8284271247461903 }, "prefect.Flow.deploy": { "tf": 3 }, "prefect.Flow.visualize": { "tf": 1.7320508075688772 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.result": { "tf": 1.4142135623730951 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.task": { "tf": 3.4641016151377544 }, "prefect.Task": { "tf": 3.3166247903554 }, "prefect.Task.with_options": { "tf": 2.6457513110645907 }, "prefect.Task.submit": { "tf": 2 }, "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.Task.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1.7320508075688772 }, "prefect.pause_flow_run": { "tf": 2.8284271247461903 }, "prefect.suspend_flow_run": { "tf": 2.449489742783178 } }, "df": 22 }, "t": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.Flow.visualize": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 2.23606797749979 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 14, "s": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 2 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 5 }, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.Task.map": { "tf": 2.6457513110645907 } }, "df": 3, "s": { "docs": { "prefect.Task.map": { "tf": 1 }, "prefect.unmapped": { "tf": 1 } }, "df": 2 } } } } } }, "m": { "docs": { "prefect.Task.map": { "tf": 2 } }, "df": 1, "s": { "docs": { "prefect.Task.map": { "tf": 2 } }, "df": 1 } } } }, "s": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.flow": { "tf": 3.3166247903554 }, "prefect.Flow": { "tf": 2.23606797749979 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 2 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.result": { "tf": 2.23606797749979 }, "prefect.State.to_state_create": { "tf": 1.4142135623730951 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.State.copy": { "tf": 1 }, "prefect.task": { "tf": 2.8284271247461903 }, "prefect.Task": { "tf": 2.449489742783178 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.Task.submit": { "tf": 2 }, "prefect.Task.map": { "tf": 1 }, "prefect.Task.serve": { "tf": 1 }, "prefect.unmapped": { "tf": 1 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 2 }, "prefect.suspend_flow_run": { "tf": 1.7320508075688772 } }, "df": 22, "n": { "docs": { "prefect.Flow.visualize": { "tf": 1.4142135623730951 } }, "df": 1 } }, "m": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.from_source": { "tf": 2.449489742783178 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.State.result": { "tf": 1 }, "prefect.tags": { "tf": 1 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1.7320508075688772 }, "prefect.serve": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1 } }, "df": 14, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } }, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.visualize": { "tf": 1 } }, "df": 1 } } } } } } } }, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 2 } } } } } } }, "a": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.deploy": { "tf": 3.1622776601683795 }, "prefect.deploy": { "tf": 3 } }, "df": 2, ":": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "v": { "docs": { "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } } } } } }, "g": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 1, "d": { "docs": { "prefect.Task.with_options": { "tf": 1 } }, "df": 1 } } } } } }, "d": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.resume_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 4, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } } } } } } } }, "s": { "docs": { "prefect.deploy": { "tf": 1 } }, "df": 1 } }, "p": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.visualize": { "tf": 1 } }, "df": 1 } } } } } } }, "t": { "docs": { "prefect.Flow.visualize": { "tf": 1.7320508075688772 } }, "df": 1, "h": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.flow": { "tf": 2.23606797749979 }, "prefect.Flow": { "tf": 1.7320508075688772 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.State.copy": { "tf": 1 }, "prefect.task": { "tf": 3.4641016151377544 }, "prefect.Task": { "tf": 3 }, "prefect.Task.with_options": { "tf": 2.23606797749979 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 2 }, "prefect.unmapped": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 2.23606797749979 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 19 }, "n": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } }, "e": { "docs": { "prefect.allow_failure": { "tf": 1.7320508075688772 }, "prefect.flow": { "tf": 8.12403840463596 }, "prefect.Flow": { "tf": 6.708203932499369 }, "prefect.Flow.with_options": { "tf": 4 }, "prefect.Flow.validate_parameters": { "tf": 2.449489742783178 }, "prefect.Flow.to_deployment": { "tf": 5.196152422706632 }, "prefect.Flow.serve": { "tf": 4.795831523312719 }, "prefect.Flow.from_source": { "tf": 2 }, "prefect.Flow.deploy": { "tf": 6.557438524302 }, "prefect.Flow.visualize": { "tf": 1.7320508075688772 }, "prefect.get_client": { "tf": 1.4142135623730951 }, "prefect.get_run_logger": { "tf": 3 }, "prefect.State": { "tf": 1 }, "prefect.State.result": { "tf": 3.4641016151377544 }, "prefect.State.to_state_create": { "tf": 1.7320508075688772 }, "prefect.State.copy": { "tf": 1.7320508075688772 }, "prefect.tags": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 6.48074069840786 }, "prefect.Task": { "tf": 6.782329983125268 }, "prefect.Task.with_options": { "tf": 4.69041575982343 }, "prefect.Task.submit": { "tf": 4.242640687119285 }, "prefect.Task.map": { "tf": 4.47213595499958 }, "prefect.Task.serve": { "tf": 2.6457513110645907 }, "prefect.serve": { "tf": 2 }, "prefect.deploy": { "tf": 4.123105625617661 }, "prefect.pause_flow_run": { "tf": 5.916079783099616 }, "prefect.resume_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 4.795831523312719 } }, "df": 28, "s": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 5 } }, "m": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 2 }, "y": { "docs": { "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1.4142135623730951 } }, "df": 2 } }, "i": { "docs": {}, "df": 0, "s": { "docs": { "prefect.allow_failure": { "tf": 1.4142135623730951 }, "prefect.flow": { "tf": 3.872983346207417 }, "prefect.Flow": { "tf": 3.4641016151377544 }, "prefect.Flow.with_options": { "tf": 1.7320508075688772 }, "prefect.Flow.serialize_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 3.3166247903554 }, "prefect.Flow.serve": { "tf": 3.1622776601683795 }, "prefect.Flow.deploy": { "tf": 3.3166247903554 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.result": { "tf": 1.7320508075688772 }, "prefect.State.to_state_create": { "tf": 1.7320508075688772 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.task": { "tf": 3.605551275463989 }, "prefect.Task": { "tf": 3.4641016151377544 }, "prefect.Task.with_options": { "tf": 2 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.Task.serve": { "tf": 1 }, "prefect.unmapped": { "tf": 1 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 2.23606797749979 }, "prefect.suspend_flow_run": { "tf": 2 } }, "df": 22 } }, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 2 } }, "df": 1 } }, "o": { "docs": {}, "df": 0, "w": { "docs": { "prefect.State.default_scheduled_start_time": { "tf": 1 } }, "df": 1 } } }, "u": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } } } } } } } }, "o": { "docs": { "prefect.allow_failure": { "tf": 1.7320508075688772 }, "prefect.flow": { "tf": 5 }, "prefect.Flow": { "tf": 4.69041575982343 }, "prefect.Flow.with_options": { "tf": 3.3166247903554 }, "prefect.Flow.validate_parameters": { "tf": 1.7320508075688772 }, "prefect.Flow.serialize_parameters": { "tf": 2 }, "prefect.Flow.to_deployment": { "tf": 4.58257569495584 }, "prefect.Flow.serve": { "tf": 4.898979485566356 }, "prefect.Flow.from_source": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 6.164414002968976 }, "prefect.get_client": { "tf": 1 }, "prefect.get_run_logger": { "tf": 2.449489742783178 }, "prefect.State.result": { "tf": 2.449489742783178 }, "prefect.State.to_state_create": { "tf": 1.7320508075688772 }, "prefect.tags": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 5.196152422706632 }, "prefect.Task": { "tf": 5.291502622129181 }, "prefect.Task.with_options": { "tf": 4 }, "prefect.Task.submit": { "tf": 3 }, "prefect.Task.map": { "tf": 3.3166247903554 }, "prefect.Task.serve": { "tf": 1.7320508075688772 }, "prefect.unmapped": { "tf": 1 }, "prefect.serve": { "tf": 2.8284271247461903 }, "prefect.deploy": { "tf": 4 }, "prefect.pause_flow_run": { "tf": 3.7416573867739413 }, "prefect.resume_flow_run": { "tf": 1.7320508075688772 }, "prefect.suspend_flow_run": { "tf": 3.1622776601683795 } }, "df": 27, "g": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 4 } } } }, "k": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.from_source": { "tf": 1.7320508075688772 } }, "df": 1 } } }, "d": { "docs": {}, "df": 0, "o": { "docs": { "prefect.State.default_scheduled_start_time": { "tf": 1 } }, "df": 1 } }, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } } }, "e": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 8 } } } } } }, "r": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": { "prefect.pause_flow_run": { "tf": 1.4142135623730951 } }, "df": 1 } } } } } } }, "i": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 4, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "p": { "docs": { "prefect.State.copy": { "tf": 1 } }, "df": 1 } } } } }, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 2.23606797749979 }, "prefect.suspend_flow_run": { "tf": 1.7320508075688772 } }, "df": 8 } } }, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 1 } }, "df": 5 } } } } }, "z": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 3 } } } } } } }, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "k": { "docs": { "prefect.flow": { "tf": 2.449489742783178 }, "prefect.Flow": { "tf": 2 }, "prefect.Flow.with_options": { "tf": 2.23606797749979 }, "prefect.get_run_logger": { "tf": 1.4142135623730951 }, "prefect.State.result": { "tf": 2.23606797749979 }, "prefect.tags": { "tf": 3 }, "prefect.task": { "tf": 7.280109889280518 }, "prefect.Task": { "tf": 5.830951894845301 }, "prefect.Task.with_options": { "tf": 6.557438524302 }, "prefect.Task.submit": { "tf": 6 }, "prefect.Task.map": { "tf": 5.291502622129181 }, "prefect.Task.serve": { "tf": 3.3166247903554 }, "prefect.pause_flow_run": { "tf": 2.6457513110645907 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 14, "s": { "docs": { "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 3.1622776601683795 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 8 } } }, "g": { "docs": { "prefect.tags": { "tf": 1 } }, "df": 1, "s": { "docs": { "prefect.Flow.to_deployment": { "tf": 2 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.tags": { "tf": 4.58257569495584 }, "prefect.task": { "tf": 2.6457513110645907 }, "prefect.Task": { "tf": 2.23606797749979 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.serve": { "tf": 1.4142135623730951 } }, "df": 8 } } }, "y": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.State.result": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 13, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.validate_parameters": { "tf": 1.4142135623730951 }, "prefect.Flow.serialize_parameters": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 5 }, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.State.result": { "tf": 1 } }, "df": 1 } } } } } } } }, "r": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.get_client": { "tf": 1.4142135623730951 }, "prefect.State.result": { "tf": 2.23606797749979 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 10 } }, "i": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 3 } } } } } }, "e": { "docs": {}, "df": 0, "e": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 }, "a": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1 } } } } } }, "w": { "docs": {}, "df": 0, "o": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 2 }, "i": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } } } }, "u": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "m": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 3 } } } } } }, "d": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 5 } } }, "e": { "docs": { "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 2, "d": { "docs": { "prefect.Task.with_options": { "tf": 1 } }, "df": 1 } } } } } }, "s": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow": { "tf": 2.23606797749979 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 2 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 2 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1.7320508075688772 }, "prefect.Task.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 } }, "df": 14, "d": { "docs": { "prefect.flow": { "tf": 2.6457513110645907 }, "prefect.Flow": { "tf": 2.449489742783178 }, "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 2.449489742783178 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task": { "tf": 2 }, "prefect.Task.serve": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.4142135623730951 } }, "df": 10 }, "s": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 1 }, "r": { "docs": {}, "df": 0, "s": { "docs": { "prefect.State.result": { "tf": 1.4142135623730951 } }, "df": 1 } } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.State.copy": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.serve": { "tf": 1.4142135623730951 } }, "df": 8 } } } }, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 2 }, "prefect.suspend_flow_run": { "tf": 2 } }, "df": 4 } } }, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "s": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 } }, "df": 2 } } } }, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.State.result": { "tf": 1 } }, "df": 1 } } } } } } } }, "i": { "docs": {}, "df": 0, "q": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "e": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } } } }, "m": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Task.map": { "tf": 1.7320508075688772 } }, "df": 1 } } } } } } }, "l": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.task": { "tf": 1 } }, "df": 2 } } } } } } }, "r": { "docs": {}, "df": 0, "l": { "docs": { "prefect.Flow.from_source": { "tf": 1.4142135623730951 } }, "df": 1 } } }, "r": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2, "u": { "docs": {}, "df": 0, "n": { "docs": { "prefect.allow_failure": { "tf": 1.7320508075688772 }, "prefect.flow": { "tf": 4.123105625617661 }, "prefect.Flow": { "tf": 2.6457513110645907 }, "prefect.Flow.with_options": { "tf": 2.6457513110645907 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.get_run_logger": { "tf": 2 }, "prefect.State": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.tags": { "tf": 2 }, "prefect.task": { "tf": 2.8284271247461903 }, "prefect.Task": { "tf": 3 }, "prefect.Task.with_options": { "tf": 2.449489742783178 }, "prefect.Task.submit": { "tf": 2.8284271247461903 }, "prefect.Task.map": { "tf": 2.23606797749979 }, "prefect.serve": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 4 }, "prefect.resume_flow_run": { "tf": 2 }, "prefect.suspend_flow_run": { "tf": 3 } }, "df": 21, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 2.6457513110645907 }, "prefect.Flow.serve": { "tf": 2.6457513110645907 }, "prefect.Flow.deploy": { "tf": 2.6457513110645907 }, "prefect.get_run_logger": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.Task.serve": { "tf": 1 }, "prefect.unmapped": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 15 }, "n": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 2 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.Task.serve": { "tf": 2 }, "prefect.serve": { "tf": 1 } }, "df": 10, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 } }, "df": 2 } } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 8 } } } }, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task": { "tf": 1.7320508075688772 }, "prefect.deploy": { "tf": 1 } }, "df": 6, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.get_run_logger": { "tf": 1 } }, "df": 1 } } } } } } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "t": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } } } } } }, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } }, "e": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1 } } } }, "o": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } } } } }, "r": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "s": { "docs": { "prefect.get_run_logger": { "tf": 1.7320508075688772 } }, "df": 1 } } } } }, "t": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "n": { "docs": { "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.get_client": { "tf": 1 }, "prefect.State.result": { "tf": 2.6457513110645907 }, "prefect.State.copy": { "tf": 1 }, "prefect.task": { "tf": 2.6457513110645907 }, "prefect.Task": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 2.449489742783178 }, "prefect.Task.submit": { "tf": 2.23606797749979 }, "prefect.Task.map": { "tf": 2.23606797749979 }, "prefect.Task.serve": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 12, "s": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 13 }, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } } } }, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 2.6457513110645907 }, "prefect.Task": { "tf": 2.23606797749979 }, "prefect.Task.with_options": { "tf": 2.449489742783178 } }, "df": 6 }, "v": { "docs": {}, "df": 0, "e": { "docs": { "prefect.get_client": { "tf": 1 }, "prefect.State.result": { "tf": 1 } }, "df": 2 } } } }, "y": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 3.605551275463989 }, "prefect.Task": { "tf": 3.3166247903554 }, "prefect.Task.with_options": { "tf": 3.872983346207417 } }, "df": 6, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 6 } } } } } }, "s": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.result": { "tf": 1 } }, "df": 1, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1.4142135623730951 } }, "df": 4 } } } } }, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 3.1622776601683795 }, "prefect.Flow": { "tf": 2.8284271247461903 }, "prefect.Flow.with_options": { "tf": 2.6457513110645907 }, "prefect.State.result": { "tf": 4.123105625617661 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.task": { "tf": 3.4641016151377544 }, "prefect.Task": { "tf": 3.4641016151377544 }, "prefect.Task.with_options": { "tf": 2.449489742783178 }, "prefect.Task.submit": { "tf": 1.7320508075688772 }, "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 11, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.State.result": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 2 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 11 } } }, "m": { "docs": {}, "df": 0, "e": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.resume_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 3, "d": { "docs": { "prefect.pause_flow_run": { "tf": 3 }, "prefect.suspend_flow_run": { "tf": 2.23606797749979 } }, "df": 2 }, "s": { "docs": { "prefect.resume_flow_run": { "tf": 1 } }, "df": 1 } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 2 } } } } }, "p": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } } } } } } } } }, "t": { "docs": { "prefect.get_client": { "tf": 1 } }, "df": 1, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } }, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } } } } } } }, "e": { "docs": {}, "df": 0, "t": { "docs": { "prefect.State.copy": { "tf": 1 } }, "df": 1 } }, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.pause_flow_run": { "tf": 1.7320508075688772 } }, "df": 1, "d": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } } } } } } } }, "d": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 3 } }, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Task.with_options": { "tf": 1 } }, "df": 1 } } } } } } } } }, "f": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 2, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.State.result": { "tf": 1 } }, "df": 1 } } } } } } }, "a": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.State.default_scheduled_start_time": { "tf": 1 } }, "df": 1 } } } } } } } }, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "h": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 3 } } } } }, "m": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.from_source": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2, "l": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.deploy": { "tf": 1 } }, "df": 1 } } } } }, "a": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": { "prefect.suspend_flow_run": { "tf": 1 } }, "df": 1 } } } }, "p": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.from_source": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 3, "/": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 1 } } } } } } } } } }, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.visualize": { "tf": 1 } }, "df": 1 } } }, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Manifest": { "tf": 1 } }, "df": 1 } } } } } } } } } } } }, "g": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.deploy": { "tf": 1.7320508075688772 } }, "df": 2, "/": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "y": { "docs": { "prefect.deploy": { "tf": 1 } }, "df": 1 } } } } } } } } }, "n": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.visualize": { "tf": 1 } }, "df": 1 } } } } } }, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.visualize": { "tf": 1 } }, "df": 1 } } } } }, "a": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.result": { "tf": 2.23606797749979 }, "prefect.task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3, "s": { "docs": { "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.visualize": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.result": { "tf": 1.4142135623730951 } }, "df": 4 } } } }, "n": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "m": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 3 } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 2 } } } }, "g": { "docs": {}, "df": 0, "e": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1 } } } }, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 1 } } } } } } } }, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.State.default_scheduled_start_time": { "tf": 1 } }, "df": 1 } } } } }, "r": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 } }, "df": 3 } } } } }, "c": { "docs": { "prefect.tags": { "tf": 2 } }, "df": 1, "a": { "docs": {}, "df": 0, "n": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.Flow.visualize": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 17, "n": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 5 } } }, "c": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 } }, "df": 3 } } } } }, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 1 } }, "df": 1 } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 } }, "df": 2 } } } } } } } }, "l": { "docs": {}, "df": 0, "l": { "docs": { "prefect.flow": { "tf": 2.23606797749979 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1.4142135623730951 } }, "df": 6, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 2 }, "prefect.Flow": { "tf": 1.7320508075688772 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 7 } }, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task": { "tf": 2 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 } }, "df": 4, "s": { "docs": { "prefect.Flow": { "tf": 2.23606797749979 }, "prefect.Flow.with_options": { "tf": 2.23606797749979 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 5 } } } } }, "s": { "docs": { "prefect.Flow.with_options": { "tf": 1 }, "prefect.tags": { "tf": 1 } }, "df": 2 }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 5 } } } } }, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 2.6457513110645907 }, "prefect.Task": { "tf": 2.23606797749979 }, "prefect.Task.with_options": { "tf": 2.449489742783178 } }, "df": 5, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task": { "tf": 2 } }, "df": 4 } } } }, "s": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } }, "t": { "docs": { "prefect.Flow.validate_parameters": { "tf": 1.4142135623730951 } }, "df": 1 } } }, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.allow_failure.__init__": { "tf": 1 }, "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 2 }, "prefect.Flow.deploy": { "tf": 2.23606797749979 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.unmapped.__init__": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 11, "s": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 3 }, "d": { "docs": { "prefect.Flow.to_deployment": { "tf": 2.23606797749979 }, "prefect.Flow.serve": { "tf": 2.23606797749979 }, "prefect.Flow.deploy": { "tf": 2.23606797749979 }, "prefect.unmapped": { "tf": 1 } }, "df": 4, "/": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } } } } } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } }, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.from_source": { "tf": 1 } }, "df": 1 } } } } } } } } }, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 } }, "df": 3 }, "s": { "docs": { "prefect.flow": { "tf": 1 } }, "df": 1 } } } } }, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.serve": { "tf": 1 } }, "df": 4 } } }, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 } }, "df": 3 } } } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 10 } } } }, "e": { "docs": {}, "df": 0, "x": { "docs": {}, "df": 0, "t": { "docs": { "prefect.get_client": { "tf": 1 }, "prefect.get_run_logger": { "tf": 2 }, "prefect.State.result": { "tf": 1 }, "prefect.tags": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 } }, "df": 6, "u": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": { "prefect.get_run_logger": { "tf": 1 } }, "df": 1 } } }, "s": { "docs": { "prefect.tags": { "tf": 1 } }, "df": 1 } } } } }, "c": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "k": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Task.serve": { "tf": 1 } }, "df": 3 } } } } } } } } } }, "l": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 2 } } } } } } } } }, "f": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "m": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 } }, "df": 2 } } }, "i": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 }, "d": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.7320508075688772 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 5 } } } } } } }, "v": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1.4142135623730951 }, "prefect.State.to_state_create": { "tf": 1 } }, "df": 2, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 1 } } } } } } }, "n": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.get_run_logger": { "tf": 1 } }, "df": 1 } }, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Task.serve": { "tf": 1 } }, "df": 1 } } } } } } }, "d": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } } } } }, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Task.map": { "tf": 1.4142135623730951 } }, "df": 1 } } } }, "o": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.serve": { "tf": 1 } }, "df": 1 } } } } }, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 } }, "df": 2 } } } } }, "r": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 } }, "df": 2 } }, "s": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 4 } } } } } } } } } } }, "m": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 8 } } }, "e": { "docs": { "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 3, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 7 } } } } }, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.State.result": { "tf": 1 } }, "df": 2 } } } } }, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 1 } } } } } } }, "/": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "/": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "o": { "docs": { "prefect.Flow.from_source": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 3 } } } } } } } }, "p": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "q": { "docs": {}, "df": 0, "/": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "/": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "/": { "1": { "7": { "4": { "docs": { "prefect.State.default_scheduled_start_time": { "tf": 1 } }, "df": 1 }, "docs": {}, "df": 0 }, "docs": {}, "df": 0 }, "docs": {}, "df": 0 } } } } } } } } } } } } } } } } } } } } } }, "m": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.get_client": { "tf": 1 } }, "df": 1 } } } } } } } } } }, "b": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.tags": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 3 } } } } } }, "d": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.from_source": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 4, "h": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } } }, "p": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.State.copy": { "tf": 1 } }, "df": 1 } } } } }, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "d": { "docs": { "prefect.State.copy": { "tf": 1 } }, "df": 1 } } } }, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "k": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Task.map": { "tf": 2 } }, "df": 3, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1 } } } } } }, "o": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 4 } } }, "s": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 2 } } } }, "a": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } }, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.visualize": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.tags": { "tf": 2 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 8 } } } } }, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "m": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 4, "i": { "docs": {}, "df": 0, "z": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } } } } } }, "l": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.serve": { "tf": 5.916079783099616 }, "prefect.Flow.from_source": { "tf": 6.782329983125268 }, "prefect.Flow.deploy": { "tf": 6.082762530298219 }, "prefect.Task": { "tf": 1 } }, "df": 4 } } }, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.get_client": { "tf": 3.3166247903554 } }, "df": 1 } } } } } }, "b": { "docs": { "prefect.tags": { "tf": 3 }, "prefect.task": { "tf": 1 } }, "df": 2, "e": { "docs": { "prefect.allow_failure": { "tf": 1.4142135623730951 }, "prefect.flow": { "tf": 4.898979485566356 }, "prefect.Flow": { "tf": 4.242640687119285 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 2.23606797749979 }, "prefect.Flow.serve": { "tf": 2.449489742783178 }, "prefect.Flow.deploy": { "tf": 2.449489742783178 }, "prefect.Flow.visualize": { "tf": 1 }, "prefect.get_client": { "tf": 1 }, "prefect.get_run_logger": { "tf": 2.449489742783178 }, "prefect.State.to_state_create": { "tf": 1.4142135623730951 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.State.copy": { "tf": 1 }, "prefect.task": { "tf": 3.7416573867739413 }, "prefect.Task": { "tf": 3.605551275463989 }, "prefect.Task.with_options": { "tf": 2.23606797749979 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 2.23606797749979 }, "prefect.Task.serve": { "tf": 1 }, "prefect.unmapped": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 2.8284271247461903 }, "prefect.suspend_flow_run": { "tf": 2.23606797749979 } }, "df": 24, "f": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 10 } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.unmapped": { "tf": 1 } }, "df": 7 } } }, "e": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 } }, "df": 2 } }, "t": { "docs": {}, "df": 0, "w": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 4 } } } } }, "h": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } } } } } }, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 2, "a": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.allow_failure.__init__": { "tf": 1 }, "prefect.unmapped.__init__": { "tf": 1 } }, "df": 2 } } } } } } } } } }, "d": { "docs": { "prefect.task": { "tf": 1 } }, "df": 1 } }, "i": { "docs": {}, "df": 0, "c": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 1 } } }, "c": { "docs": {}, "df": 0, "k": { "docs": {}, "df": 0, "w": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "s": { "docs": { "prefect.State.result": { "tf": 1 } }, "df": 1 } } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 2 } } } } } }, "y": { "docs": { "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.validate_parameters": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.7320508075688772 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 10, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 1.4142135623730951 } }, "df": 2 } }, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "k": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 6, "s": { "docs": { "prefect.Flow.from_source": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1.4142135623730951 } }, "df": 3 }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.pause_flow_run": { "tf": 1.4142135623730951 } }, "df": 1 } } } } } } }, "u": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.deploy": { "tf": 2.449489742783178 }, "prefect.deploy": { "tf": 2.449489742783178 } }, "df": 2, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } }, "t": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } }, "t": { "docs": { "prefect.State.result": { "tf": 1 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.task": { "tf": 1 } }, "df": 3 } }, "o": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "n": { "docs": { "prefect.State.result": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 1 } }, "df": 2 } } } } } } }, "g": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "y": { "docs": { "prefect.allow_failure": { "tf": 1 } }, "df": 1 } } }, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.visualize": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 4 } } } }, "i": { "docs": {}, "df": 0, "c": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } } } } }, "t": { "docs": { "prefect.get_client": { "tf": 1.4142135623730951 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.result": { "tf": 2.23606797749979 } }, "df": 3 } }, "i": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3, "n": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 11 } } }, "t": { "docs": { "prefect.Flow.from_source": { "tf": 2.23606797749979 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 3, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.from_source": { "tf": 1.7320508075688772 } }, "df": 1 } } } } } } } } } }, "h": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "b": { "docs": { "prefect.Flow.from_source": { "tf": 1 } }, "df": 1 } } } } }, "t": { "docs": { "prefect.flow": { "tf": 7.3484692283495345 }, "prefect.Flow.with_options": { "tf": 6.244997998398398 }, "prefect.Flow.serve": { "tf": 8.717797887081348 }, "prefect.Flow.from_source": { "tf": 9.899494936611665 }, "prefect.Flow.deploy": { "tf": 8.94427190999916 }, "prefect.State.result": { "tf": 9 }, "prefect.tags": { "tf": 8.12403840463596 }, "prefect.task": { "tf": 8.888194417315589 }, "prefect.Task.with_options": { "tf": 8.366600265340756 }, "prefect.Task.submit": { "tf": 10.954451150103322 }, "prefect.Task.map": { "tf": 12.84523257866513 }, "prefect.Task.serve": { "tf": 1.7320508075688772 } }, "df": 12 }, "o": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 1.4142135623730951 } }, "df": 2 } } } } } }, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "z": { "docs": { "prefect.Flow.visualize": { "tf": 1.4142135623730951 } }, "df": 1, "e": { "docs": {}, "df": 0, "x": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.visualize": { "tf": 1 } }, "df": 1 } } } } } } } } } } } } } } } } } } } } } } } } } } } }, "c": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "y": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1 } } } } } } } }, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "p": { "docs": { "prefect.deploy": { "tf": 1 } }, "df": 1 } } } }, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": { "prefect.get_run_logger": { "tf": 1 } }, "df": 1 } } } } } }, "p": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Flow.serve": { "tf": 2.8284271247461903 }, "prefect.Flow.from_source": { "tf": 3.3166247903554 }, "prefect.Flow.deploy": { "tf": 3.1622776601683795 }, "prefect.Task": { "tf": 1 } }, "df": 5, "r": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.from_source": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 3, "f": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.flow": { "tf": 2.6457513110645907 }, "prefect.Flow": { "tf": 2 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.from_source": { "tf": 2.449489742783178 }, "prefect.Flow.deploy": { "tf": 2.23606797749979 }, "prefect.get_client": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1.7320508075688772 }, "prefect.State.result": { "tf": 1 }, "prefect.tags": { "tf": 1 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task": { "tf": 2.23606797749979 }, "prefect.Task.submit": { "tf": 2 }, "prefect.Task.map": { "tf": 2 }, "prefect.Task.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1.7320508075688772 } }, "df": 19 } } }, "i": { "docs": {}, "df": 0, "x": { "docs": { "prefect.Task.map": { "tf": 1.4142135623730951 } }, "df": 1 } } }, "s": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } } } } }, "p": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 2 } } } }, "v": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "s": { "docs": { "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 } }, "df": 2 } } } }, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2, "s": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } } } } }, "o": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "e": { "docs": { "prefect.resume_flow_run": { "tf": 1 } }, "df": 1, "d": { "docs": { "prefect.flow": { "tf": 2.6457513110645907 }, "prefect.Flow": { "tf": 2.6457513110645907 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 2 }, "prefect.Flow.serve": { "tf": 2 }, "prefect.Flow.deploy": { "tf": 2.23606797749979 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.serve": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 16 } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } } } } }, "c": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "s": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1 } } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 2 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.State.result": { "tf": 1.4142135623730951 }, "prefect.tags": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 2 }, "prefect.deploy": { "tf": 1.7320508075688772 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 } }, "df": 14, "s": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 5 } } }, "v": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.from_source": { "tf": 1 } }, "df": 1 } } } } } }, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "s": { "docs": { "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.get_client": { "tf": 1 }, "prefect.tags": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1.7320508075688772 }, "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1.4142135623730951 } }, "df": 11, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 4 } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } } } }, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 6, "s": { "docs": { "prefect.flow": { "tf": 2.23606797749979 }, "prefect.Flow": { "tf": 2.23606797749979 }, "prefect.Flow.with_options": { "tf": 1.7320508075688772 }, "prefect.Flow.validate_parameters": { "tf": 1.7320508075688772 }, "prefect.Flow.serialize_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1.4142135623730951 } }, "df": 10 }, "t": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.validate_parameters": { "tf": 1 } }, "df": 1 } } } } } } } } } } } } } }, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": { "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 2 } } } } }, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 2 }, "prefect.Flow": { "tf": 1.4142135623730951 } }, "df": 2 } } } }, "u": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.serve": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 2.449489742783178 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 4, "d": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.resume_flow_run": { "tf": 1 } }, "df": 5 }, "s": { "docs": { "prefect.pause_flow_run": { "tf": 2.23606797749979 } }, "df": 1 } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.pause_flow_run": { "tf": 1.4142135623730951 } }, "df": 1 } } } } }, "t": { "docs": {}, "df": 0, "h": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 4, "/": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "/": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.from_source": { "tf": 1 } }, "df": 1 } } } } } } } } } } }, "y": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "c": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 4 } } } } } }, ":": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "w": { "docs": { "prefect.Flow.from_source": { "tf": 1 } }, "df": 1 } } } }, "m": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.from_source": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 3 } } } }, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 4 } } } }, "r": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } }, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "c": { "docs": { "prefect.Flow.from_source": { "tf": 1 } }, "df": 1 } } } }, "s": { "docs": {}, "df": 0, "h": { "docs": { "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.4142135623730951 } }, "df": 2, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.4142135623730951 } }, "df": 2 } } } } } }, "o": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 } }, "df": 2 } } } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 4 } } }, "o": { "docs": {}, "df": 0, "l": { "docs": { "prefect.Flow.to_deployment": { "tf": 2.23606797749979 }, "prefect.Flow.deploy": { "tf": 3.7416573867739413 }, "prefect.deploy": { "tf": 2.6457513110645907 } }, "df": 3 } }, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "y": { "docs": { "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 3 } } }, "l": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1 } } }, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 } }, "df": 2 } } } } } }, "s": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 8, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.State.result": { "tf": 1 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6 }, "n": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6 } } } } } } } } } }, "d": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "c": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } }, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.visualize": { "tf": 1 } }, "df": 1 } }, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 2 } } } } } }, "n": { "docs": { "prefect.Flow.serve": { "tf": 2.449489742783178 }, "prefect.Flow.from_source": { "tf": 3.7416573867739413 }, "prefect.Flow.deploy": { "tf": 2.8284271247461903 }, "prefect.Task.map": { "tf": 2.23606797749979 } }, "df": 4, "o": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.result": { "tf": 1.7320508075688772 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 } }, "df": 5, "t": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.flow": { "tf": 2.449489742783178 }, "prefect.Flow": { "tf": 2.449489742783178 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 2.8284271247461903 }, "prefect.Flow.serve": { "tf": 3 }, "prefect.Flow.deploy": { "tf": 3.4641016151377544 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1.7320508075688772 }, "prefect.Task.serve": { "tf": 1 }, "prefect.serve": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.7320508075688772 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 20, "e": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 4, "b": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "k": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.visualize": { "tf": 1 } }, "df": 1 } } } } } } }, "n": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1, "z": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "o": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6 } } } }, "e": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1 }, "prefect.task": { "tf": 2 }, "prefect.Task": { "tf": 2 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 5 } }, "w": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1 } }, "e": { "docs": {}, "df": 0, "w": { "docs": { "prefect.allow_failure.__init__": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 4.795831523312719 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.Flow.visualize": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 5 }, "prefect.Task.submit": { "tf": 1 }, "prefect.unmapped.__init__": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 12 }, "x": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 6 } }, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.get_run_logger": { "tf": 1 } }, "df": 1 } }, "s": { "docs": { "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } }, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.tags": { "tf": 1 } }, "df": 1 } } } }, "v": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } } } }, "a": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 2.8284271247461903 }, "prefect.Flow": { "tf": 2.449489742783178 }, "prefect.Flow.with_options": { "tf": 2.8284271247461903 }, "prefect.Flow.to_deployment": { "tf": 3.3166247903554 }, "prefect.Flow.serve": { "tf": 3 }, "prefect.Flow.from_source": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 3.7416573867739413 }, "prefect.task": { "tf": 2.8284271247461903 }, "prefect.Task": { "tf": 2.449489742783178 }, "prefect.Task.with_options": { "tf": 3.1622776601683795 }, "prefect.serve": { "tf": 2.23606797749979 }, "prefect.deploy": { "tf": 2.8284271247461903 } }, "df": 12, "d": { "docs": { "prefect.get_run_logger": { "tf": 1 } }, "df": 1 } } } }, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "l": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 } }, "df": 2 } }, "m": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow": { "tf": 1.7320508075688772 }, "prefect.Flow.with_options": { "tf": 1.7320508075688772 }, "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 2.449489742783178 }, "prefect.Task": { "tf": 2.449489742783178 }, "prefect.Task.with_options": { "tf": 2.23606797749979 }, "prefect.serve": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.7320508075688772 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 12, "s": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 2 } } } } } }, "n": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 }, "d": { "docs": { "prefect.Flow.serve": { "tf": 1 } }, "df": 1 }, "f": { "docs": { "prefect.Flow.serve": { "tf": 1 } }, "df": 1 }, "b": { "docs": { "prefect.Flow.serve": { "tf": 1 } }, "df": 1 } }, "a": { "docs": { "prefect.allow_failure": { "tf": 1.7320508075688772 }, "prefect.flow": { "tf": 4.58257569495584 }, "prefect.Flow": { "tf": 4.123105625617661 }, "prefect.Flow.with_options": { "tf": 5.385164807134504 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Flow.serialize_parameters": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 3.872983346207417 }, "prefect.Flow.serve": { "tf": 4.47213595499958 }, "prefect.Flow.from_source": { "tf": 3.605551275463989 }, "prefect.Flow.deploy": { "tf": 5.291502622129181 }, "prefect.Flow.visualize": { "tf": 1.7320508075688772 }, "prefect.get_client": { "tf": 1.4142135623730951 }, "prefect.get_run_logger": { "tf": 1.4142135623730951 }, "prefect.Manifest": { "tf": 1.4142135623730951 }, "prefect.State": { "tf": 1 }, "prefect.State.result": { "tf": 2.8284271247461903 }, "prefect.State.to_state_create": { "tf": 1.7320508075688772 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.tags": { "tf": 3.4641016151377544 }, "prefect.task": { "tf": 6.244997998398398 }, "prefect.Task": { "tf": 5.291502622129181 }, "prefect.Task.with_options": { "tf": 6.244997998398398 }, "prefect.Task.submit": { "tf": 3.7416573867739413 }, "prefect.Task.map": { "tf": 3.4641016151377544 }, "prefect.Task.serve": { "tf": 1.4142135623730951 }, "prefect.unmapped": { "tf": 1 }, "prefect.serve": { "tf": 1.7320508075688772 }, "prefect.deploy": { "tf": 3.4641016151377544 }, "prefect.pause_flow_run": { "tf": 2.6457513110645907 }, "prefect.resume_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 2.449489742783178 } }, "df": 31, "l": { "docs": {}, "df": 0, "l": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.map": { "tf": 1.7320508075688772 }, "prefect.unmapped": { "tf": 1 } }, "df": 5, "o": { "docs": {}, "df": 0, "w": { "docs": { "prefect.allow_failure": { "tf": 1 } }, "df": 1, "s": { "docs": { "prefect.allow_failure": { "tf": 1 } }, "df": 1 }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1 } }, "df": 2 } } } } } }, "s": { "docs": {}, "df": 0, "o": { "docs": { "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.Task.map": { "tf": 1 } }, "df": 3 } }, "w": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "s": { "docs": { "prefect.tags": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 4 } } } }, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "y": { "docs": { "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } } } } }, "n": { "docs": { "prefect.flow": { "tf": 4.242640687119285 }, "prefect.Flow": { "tf": 4.123105625617661 }, "prefect.Flow.with_options": { "tf": 2 }, "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 2.23606797749979 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 2.6457513110645907 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.result": { "tf": 2 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.State.copy": { "tf": 1 }, "prefect.task": { "tf": 4.358898943540674 }, "prefect.Task": { "tf": 4.358898943540674 }, "prefect.Task.with_options": { "tf": 2.449489742783178 }, "prefect.Task.submit": { "tf": 2 }, "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1.7320508075688772 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 19, "y": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.visualize": { "tf": 1 }, "prefect.tags": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.7320508075688772 }, "prefect.suspend_flow_run": { "tf": 1.7320508075688772 } }, "df": 10 }, "n": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.allow_failure": { "tf": 1 } }, "df": 1, "s": { "docs": { "prefect.Flow.validate_parameters": { "tf": 1 } }, "df": 1 } } } }, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 } }, "df": 2 } } } } } } }, "d": { "docs": { "prefect.flow": { "tf": 2.8284271247461903 }, "prefect.Flow": { "tf": 2 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 2.23606797749979 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.tags": { "tf": 1 }, "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task": { "tf": 2.23606797749979 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 2.23606797749979 }, "prefect.Task.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 2.23606797749979 }, "prefect.pause_flow_run": { "tf": 2.449489742783178 }, "prefect.suspend_flow_run": { "tf": 2 } }, "df": 21 } }, "r": { "docs": {}, "df": 0, "e": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.tags": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 2 } }, "df": 11 }, "g": { "docs": {}, "df": 0, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.Task.serve": { "tf": 1 }, "prefect.serve": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.resume_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 19 }, "u": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1, "s": { "docs": { "prefect.flow": { "tf": 2 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1.7320508075688772 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 10 } } } } } } } }, "t": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 11, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1.4142135623730951 }, "prefect.State.result": { "tf": 1 } }, "df": 3 } } } } }, "e": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 4, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.validate_parameters": { "tf": 1 } }, "df": 1 } } }, "s": { "docs": { "prefect.task": { "tf": 1 } }, "df": 1 } } } } } } }, "s": { "docs": { "prefect.flow": { "tf": 3.1622776601683795 }, "prefect.Flow": { "tf": 3 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 2.23606797749979 }, "prefect.Flow.serve": { "tf": 2.23606797749979 }, "prefect.Flow.deploy": { "tf": 2.23606797749979 }, "prefect.Flow.visualize": { "tf": 1 }, "prefect.get_client": { "tf": 1.4142135623730951 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.tags": { "tf": 1 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task": { "tf": 2 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.Task.map": { "tf": 2.449489742783178 }, "prefect.unmapped": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 16, "y": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "c": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.get_client": { "tf": 1 }, "prefect.State.result": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 3 }, "prefect.Task.map": { "tf": 1 } }, "df": 6, "h": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1 } }, "df": 5 } } } } } } } } } }, "s": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.with_options": { "tf": 1 } }, "df": 1 } } }, "o": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3, "d": { "docs": { "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 5 } } } } } } } } }, "f": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 10 } } } }, "p": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6 } } } } }, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } } }, "r": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.validate_parameters": { "tf": 1 } }, "df": 1 } } } } } } } } }, "i": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.get_client": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1.4142135623730951 }, "prefect.State.copy": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 11, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.get_run_logger": { "tf": 1 } }, "df": 1 } } } } } } } } } } } }, "c": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 2 } }, "df": 1, "s": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 2 }, "prefect.Flow.deploy": { "tf": 2 } }, "df": 3 } } }, "s": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.from_source": { "tf": 1.7320508075688772 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1 } }, "df": 3 } } } }, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 } }, "df": 3 }, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } } }, "r": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1 } } } } }, "d": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.tags": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1.4142135623730951 } }, "df": 4, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.get_run_logger": { "tf": 1 } }, "df": 1, "a": { "docs": {}, "df": 0, "l": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 5 } } } } } } } } }, "m": { "docs": { "prefect.serve": { "tf": 1 } }, "df": 1, "p": { "docs": { "prefect.Flow.serve": { "tf": 2.449489742783178 }, "prefect.Flow.from_source": { "tf": 3 }, "prefect.Flow.deploy": { "tf": 3.4641016151377544 }, "prefect.deploy": { "tf": 1 } }, "df": 4 }, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } } } } }, "v": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1 } }, "df": 2 } } } } } } }, "o": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "d": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } } }, "b": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 } }, "df": 2 } } } }, "w": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": { "prefect.get_client": { "tf": 1 }, "prefect.State.result": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1 } }, "df": 3, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 2 } } } } } }, "g": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": { "prefect.State.copy": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 3 } } } }, "u": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "y": { "docs": { "prefect.serve": { "tf": 1 } }, "df": 1 } } } } } } } } } } } } }, "d": { "docs": { "prefect.tags": { "tf": 2 } }, "df": 1, "o": { "docs": { "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 2, "w": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "m": { "docs": { "prefect.allow_failure": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 2 } } } } } } } }, "c": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 } }, "df": 2 } } } } } }, "k": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.4142135623730951 } }, "df": 2, "f": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } } } } } }, "t": { "docs": { "prefect.Flow.visualize": { "tf": 1 } }, "df": 1 }, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 2 } } }, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1.4142135623730951 } }, "df": 2, "]": { "docs": {}, "df": 0, "[": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "f": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } } } } } } } } } } }, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 } }, "df": 2 } } } } } } }, "s": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.task": { "tf": 1 } }, "df": 2 } } } } } }, "c": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.flow": { "tf": 2.23606797749979 }, "prefect.Flow": { "tf": 1.7320508075688772 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.task": { "tf": 2 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 9 } } } } } } } } }, "l": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "y": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 2.23606797749979 } }, "df": 6, "s": { "docs": { "prefect.task": { "tf": 1.7320508075688772 }, "prefect.Task": { "tf": 1.7320508075688772 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 } }, "df": 3 } } } }, "f": { "docs": { "prefect.flow": { "tf": 2.23606797749979 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.State.result": { "tf": 2.449489742783178 }, "prefect.tags": { "tf": 2.23606797749979 }, "prefect.task": { "tf": 2.449489742783178 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.Task.submit": { "tf": 3.1622776601683795 }, "prefect.Task.map": { "tf": 3.3166247903554 }, "prefect.Task.serve": { "tf": 1 }, "prefect.serve": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 } }, "df": 15, "a": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 2.6457513110645907 }, "prefect.Flow": { "tf": 2.449489742783178 }, "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 2.23606797749979 }, "prefect.get_run_logger": { "tf": 1.4142135623730951 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.State.copy": { "tf": 1 }, "prefect.Task.serve": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.4142135623730951 } }, "df": 10, "s": { "docs": { "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.State.result": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 2.6457513110645907 }, "prefect.Task": { "tf": 2.6457513110645907 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.deploy": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1.7320508075688772 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 12 } } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 2.23606797749979 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 2.449489742783178 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 7, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 5 }, "s": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } }, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1.4142135623730951 } }, "df": 3 } } } }, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1 } }, "df": 5 } } } } } }, "p": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 4 } } }, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "y": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } } } } } }, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.to_deployment": { "tf": 2 }, "prefect.Flow.deploy": { "tf": 2 }, "prefect.serve": { "tf": 2 }, "prefect.deploy": { "tf": 2.6457513110645907 } }, "df": 4, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.to_deployment": { "tf": 4.69041575982343 }, "prefect.Flow.serve": { "tf": 4.47213595499958 }, "prefect.Flow.deploy": { "tf": 4.795831523312719 }, "prefect.serve": { "tf": 1.7320508075688772 }, "prefect.deploy": { "tf": 2 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 7, "s": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.serve": { "tf": 1.7320508075688772 }, "prefect.deploy": { "tf": 2.6457513110645907 } }, "df": 4 }, "i": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } } } } } } }, "s": { "docs": { "prefect.Flow.deploy": { "tf": 1 } }, "df": 1 }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } } } } }, "v": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 1.4142135623730951 } }, "df": 2 } }, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "h": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6 } } } } } } } }, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.with_options": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 } }, "df": 2 } } } } } }, "p": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Task.map": { "tf": 1.4142135623730951 } }, "df": 1 } } } } }, "c": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.validate_parameters": { "tf": 1 } }, "df": 1, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.resume_flow_run": { "tf": 1 } }, "df": 4 } } } } } } } }, "r": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 1 } } } } } }, "v": { "docs": { "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.from_source": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 3 } }, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "k": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 } }, "df": 1, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "k": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 } }, "df": 1 } } } } } } } } } } } }, "t": { "docs": {}, "df": 0, "a": { "docs": { "prefect.get_run_logger": { "tf": 1 }, "prefect.State.result": { "tf": 1.4142135623730951 }, "prefect.State.to_state_create": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 5, "b": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": { "prefect.State.copy": { "tf": 1 } }, "df": 1 } } } } }, "e": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": { "prefect.task": { "tf": 1 }, "prefect.serve": { "tf": 1.4142135623730951 } }, "df": 2 } } } } } }, "y": { "docs": { "prefect.task": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 2, "s": { "docs": { "prefect.task": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 2 } } }, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 }, "prefect.unmapped": { "tf": 1 } }, "df": 2 } } } } }, "y": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "c": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } } } }, "r": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "p": { "docs": { "prefect.State.to_state_create": { "tf": 1 } }, "df": 1 } } } }, "y": { "docs": { "prefect.flow": { "tf": 2 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 2 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1.4142135623730951 } }, "df": 5, "o": { "docs": {}, "df": 0, "u": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.4142135623730951 } }, "df": 3, "r": { "docs": { "prefect.allow_failure": { "tf": 1 } }, "df": 1 } } }, "i": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "s": { "docs": { "prefect.tags": { "tf": 1 } }, "df": 1 } } } } } }, "e": { "docs": { "prefect.tags": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 3, "x": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.allow_failure": { "tf": 1 }, "prefect.State.result": { "tf": 1.7320508075688772 } }, "df": 2 } } } } }, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 6 } } } }, "h": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 2 } } } } } }, "e": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 2.23606797749979 }, "prefect.suspend_flow_run": { "tf": 1.7320508075688772 } }, "df": 11 } }, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 2 } } }, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 2.23606797749979 }, "prefect.Flow.serve": { "tf": 2.23606797749979 }, "prefect.Flow.deploy": { "tf": 2.23606797749979 }, "prefect.Task.serve": { "tf": 1 } }, "df": 4, "d": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 2 } }, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.visualize": { "tf": 1 } }, "df": 1 } } } } } } } }, "a": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.get_client": { "tf": 1 }, "prefect.deploy": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 7, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.State.result": { "tf": 1 }, "prefect.tags": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.Task.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 15 } } } } } }, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.tags": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.deploy": { "tf": 1 } }, "df": 5 } } } } }, "t": { "docs": { "prefect.pause_flow_run": { "tf": 1.4142135623730951 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } }, "p": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 3 } } } } }, "e": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } } } } }, "a": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "h": { "docs": { "prefect.flow": { "tf": 2 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1 } }, "df": 6 } } }, "m": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "y": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.task": { "tf": 1 } }, "df": 2 } } } }, "n": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "y": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.from_source": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 2 }, "prefect.Task": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 7 } } } } } } }, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow": { "tf": 2.23606797749979 }, "prefect.Flow.with_options": { "tf": 2.23606797749979 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 } }, "df": 5 } } } }, "g": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 } }, "df": 3 } } } }, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.with_options": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 } }, "df": 2 } } } } } }, "c": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 1 } } } } }, "f": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 5 } } } } }, "s": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } }, "v": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } } } } } } } }, "d": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } }, "v": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "y": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 2, "t": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 1 } } } } } } }, "n": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } }, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.from_source": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 6 } } } } }, "r": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.State.result": { "tf": 1 }, "prefect.State.default_scheduled_start_time": { "tf": 1 } }, "df": 2, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.State.result": { "tf": 1 } }, "df": 1 } } } } } } }, "s": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "h": { "docs": { "prefect.Task.serve": { "tf": 1 } }, "df": 1 } } } } } } } }, "l": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "e": { "docs": { "prefect.pause_flow_run": { "tf": 1 } }, "df": 1 } } } }, "v": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "e": { "docs": { "prefect.allow_failure.__init__": { "tf": 1 }, "prefect.flow": { "tf": 2 }, "prefect.Flow": { "tf": 1.7320508075688772 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task": { "tf": 2.23606797749979 }, "prefect.Task.with_options": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.unmapped.__init__": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 11, "s": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 5 }, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.State.result": { "tf": 2 }, "prefect.task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } } } } } }, "i": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.validate_parameters": { "tf": 1 } }, "df": 1, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.validate_parameters": { "tf": 1 } }, "df": 4, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 } }, "df": 2 } }, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 } }, "df": 2 } } } } } } } }, "r": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.with_options": { "tf": 1 } }, "df": 1, "s": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1 }, "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 8 } } } } } } } }, "e": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.flow": { "tf": 2.449489742783178 }, "prefect.Flow": { "tf": 2 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 } }, "df": 8 } } } } } }, "m": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 2 }, "i": { "docs": {}, "df": 0, "a": { "docs": { "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.4142135623730951 } }, "df": 2 }, "s": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "z": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.visualize": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 4 } } } } } } } }, "z": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } }, "m": { "docs": { "prefect.deploy": { "tf": 1 } }, "df": 1, "a": { "docs": {}, "df": 0, "y": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1 }, "prefect.task": { "tf": 1 } }, "df": 4 }, "x": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "m": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "m": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 7 } } } } }, "r": { "docs": {}, "df": 0, "k": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 4 } } } }, "i": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 5, "t": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "s": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 1 } } } } } } }, "n": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.get_client": { "tf": 1 } }, "df": 1 }, "r": { "docs": { "prefect.tags": { "tf": 1 } }, "df": 1 } } } }, "y": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1 } }, "t": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "s": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } } } } } }, "k": { "docs": {}, "df": 0, "e": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 2 } }, "p": { "docs": { "prefect.Task.map": { "tf": 2.449489742783178 } }, "df": 1, "p": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Task.map": { "tf": 2.449489742783178 } }, "df": 1 } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.unmapped": { "tf": 1 } }, "df": 1 } } } } } }, "u": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.get_client": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 2 } }, "df": 4 } }, "l": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "p": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 2 }, "prefect.Flow.deploy": { "tf": 2 } }, "df": 3 } } } } } } }, "e": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 2, "m": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "y": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 } }, "df": 2 } } } }, "s": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.4142135623730951 } }, "df": 4 } } } } }, "t": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.deploy": { "tf": 1 }, "prefect.State.to_state_create": { "tf": 1 }, "prefect.Task.serve": { "tf": 1 } }, "df": 3 } } }, "a": { "docs": {}, "df": 0, "d": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "a": { "docs": { "prefect.get_run_logger": { "tf": 1 } }, "df": 1 } } } } } }, "r": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Task.with_options": { "tf": 1 } }, "df": 1 } } } } }, "y": { "docs": { "prefect.flow": { "tf": 1.7320508075688772 }, "prefect.Flow.with_options": { "tf": 2.449489742783178 }, "prefect.Flow.to_deployment": { "tf": 2 }, "prefect.Flow.serve": { "tf": 2 }, "prefect.Flow.from_source": { "tf": 2 }, "prefect.Flow.deploy": { "tf": 2.449489742783178 }, "prefect.State.result": { "tf": 3.4641016151377544 }, "prefect.tags": { "tf": 3.1622776601683795 }, "prefect.task": { "tf": 2.23606797749979 }, "prefect.Task.with_options": { "tf": 3.3166247903554 }, "prefect.Task.submit": { "tf": 3.7416573867739413 }, "prefect.Task.map": { "tf": 3.7416573867739413 }, "prefect.Task.serve": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 2 }, "prefect.deploy": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1 } }, "df": 16 }, "o": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 2 } }, "d": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.4142135623730951 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 3 } } }, "e": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "s": { "docs": { "prefect.State.copy": { "tf": 1 } }, "df": 1 } } } }, "n": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.serve": { "tf": 1 } }, "df": 1, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.Flow.serve": { "tf": 1 } }, "df": 1 } } } } } } } }, "r": { "docs": {}, "df": 0, "e": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } }, "i": { "docs": { "prefect.Flow.serve": { "tf": 1 } }, "df": 1, "g": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "t": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } } } }, "h": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": { "prefect.tags": { "tf": 2 }, "prefect.pause_flow_run": { "tf": 1.4142135623730951 } }, "df": 2, "h": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.task": { "tf": 1.4142135623730951 } }, "df": 3 } }, "v": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.validate_parameters": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 2 }, "prefect.suspend_flow_run": { "tf": 1.4142135623730951 } }, "df": 4 } } }, "e": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "o": { "docs": { "prefect.Flow.to_deployment": { "tf": 2 }, "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.get_client": { "tf": 1.4142135623730951 }, "prefect.State.result": { "tf": 2.449489742783178 }, "prefect.task": { "tf": 1 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 2 } }, "df": 8 } } }, "r": { "docs": {}, "df": 0, "d": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } }, "o": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 3 } }, "w": { "docs": { "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3, "e": { "docs": {}, "df": 0, "v": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 } }, "df": 2 } } } } } }, "t": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "p": { "docs": { "prefect.get_client": { "tf": 1 } }, "df": 1, "s": { "docs": {}, "df": 0, ":": { "docs": {}, "df": 0, "/": { "docs": {}, "df": 0, "/": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "h": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "b": { "docs": { "prefect.Flow.from_source": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.State.default_scheduled_start_time": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 4 } } } } } } } } } } } } } }, "l": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 } }, "df": 2 } } }, "l": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 }, "prefect.deploy": { "tf": 1.7320508075688772 } }, "df": 4, "l": { "docs": {}, "df": 0, "y": { "docs": { "prefect.State.to_state_create": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 2 } } } } }, "a": { "docs": {}, "df": 0, "d": { "docs": { "prefect.Flow.from_source": { "tf": 1.7320508075688772 } }, "df": 1, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.Flow": { "tf": 1.4142135623730951 }, "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 4 } }, "s": { "docs": { "prefect.Flow.from_source": { "tf": 1 } }, "df": 1 } } }, "g": { "docs": { "prefect.flow": { "tf": 1.4142135623730951 }, "prefect.get_run_logger": { "tf": 1.7320508075688772 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.deploy": { "tf": 1 } }, "df": 6, "g": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.flow": { "tf": 1 }, "prefect.get_run_logger": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 } }, "df": 4, "s": { "docs": { "prefect.get_run_logger": { "tf": 1 } }, "df": 1 } } }, "i": { "docs": {}, "df": 0, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.flow": { "tf": 1 } }, "df": 1 } } } } }, "n": { "docs": {}, "df": 0, "g": { "docs": { "prefect.task": { "tf": 1.4142135623730951 }, "prefect.Task": { "tf": 1.4142135623730951 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } }, "i": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": { "prefect.flow": { "tf": 2.23606797749979 }, "prefect.Flow": { "tf": 2.23606797749979 }, "prefect.Flow.with_options": { "tf": 2.23606797749979 }, "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.serve": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 }, "prefect.task": { "tf": 2.449489742783178 }, "prefect.Task": { "tf": 2.449489742783178 }, "prefect.Task.with_options": { "tf": 2.449489742783178 }, "prefect.Task.map": { "tf": 1.4142135623730951 }, "prefect.serve": { "tf": 1.4142135623730951 }, "prefect.deploy": { "tf": 1.7320508075688772 } }, "df": 12, "e": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Task.serve": { "tf": 1 } }, "df": 1 } } } }, "k": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 3 } }, "m": { "docs": {}, "df": 0, "i": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.serve": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 2 } } } }, "t": { "docs": { "prefect.Flow.serve": { "tf": 8.717797887081348 }, "prefect.Flow.from_source": { "tf": 9.899494936611665 }, "prefect.Flow.deploy": { "tf": 8.94427190999916 } }, "df": 3 }, "e": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Task.map": { "tf": 1 } }, "df": 1 } } }, "n": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "h": { "docs": { "prefect.Task.map": { "tf": 1.4142135623730951 } }, "df": 1 } } } }, "v": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "l": { "docs": { "prefect.pause_flow_run": { "tf": 1 }, "prefect.suspend_flow_run": { "tf": 1 } }, "df": 2 } } } } }, "x": { "docs": { "prefect.flow": { "tf": 2.23606797749979 }, "prefect.Flow": { "tf": 1 }, "prefect.Flow.with_options": { "tf": 1.4142135623730951 }, "prefect.State.result": { "tf": 1.4142135623730951 }, "prefect.task": { "tf": 2.6457513110645907 }, "prefect.Task.with_options": { "tf": 1.7320508075688772 }, "prefect.Task.submit": { "tf": 1.4142135623730951 }, "prefect.Task.map": { "tf": 2.23606797749979 } }, "df": 8 }, "j": { "docs": {}, "df": 0, "s": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "n": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 }, "prefect.Manifest": { "tf": 1 } }, "df": 2, "a": { "docs": {}, "df": 0, "b": { "docs": {}, "df": 0, "l": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.serialize_parameters": { "tf": 1 } }, "df": 1 } } } } } } }, "o": { "docs": {}, "df": 0, "b": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 } }, "df": 2 } }, "i": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "t": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "r": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3, "e": { "docs": {}, "df": 0, "d": { "docs": { "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 } }, "df": 3 } } } } } } } }, "k": { "docs": { "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 2, "i": { "docs": {}, "df": 0, "c": { "docs": {}, "df": 0, "k": { "docs": { "prefect.Flow.to_deployment": { "tf": 1 }, "prefect.Flow.serve": { "tf": 1 }, "prefect.Flow.deploy": { "tf": 1 } }, "df": 3 } } }, "n": { "docs": { "prefect.Flow.serve": { "tf": 1.4142135623730951 }, "prefect.Flow.from_source": { "tf": 2.449489742783178 }, "prefect.Flow.deploy": { "tf": 1.4142135623730951 } }, "df": 3 }, "w": { "docs": {}, "df": 0, "a": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "g": { "docs": {}, "df": 0, "s": { "docs": { "prefect.get_run_logger": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 4 } } } } }, "e": { "docs": {}, "df": 0, "y": { "docs": { "prefect.task": { "tf": 2.8284271247461903 }, "prefect.Task": { "tf": 2.6457513110645907 }, "prefect.Task.with_options": { "tf": 2 }, "prefect.pause_flow_run": { "tf": 1.7320508075688772 }, "prefect.suspend_flow_run": { "tf": 1.7320508075688772 } }, "df": 5, "w": { "docs": {}, "df": 0, "o": { "docs": {}, "df": 0, "r": { "docs": {}, "df": 0, "d": { "docs": { "prefect.get_run_logger": { "tf": 1 }, "prefect.task": { "tf": 1 }, "prefect.Task": { "tf": 1 }, "prefect.Task.with_options": { "tf": 1 }, "prefect.Task.submit": { "tf": 1 }, "prefect.Task.map": { "tf": 1 }, "prefect.serve": { "tf": 1 } }, "df": 7 } } } } } } }, "q": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "e": { "docs": {}, "df": 0, "u": { "docs": {}, "df": 0, "e": { "docs": { "prefect.Flow.to_deployment": { "tf": 1.7320508075688772 }, "prefect.Flow.deploy": { "tf": 1.7320508075688772 } }, "df": 2 } } }, "o": { "docs": {}, "df": 0, "t": { "docs": { "prefect.Flow.to_deployment": { "tf": 3.7416573867739413 }, "prefect.Flow.serve": { "tf": 3.4641016151377544 }, "prefect.Flow.from_source": { "tf": 3.4641016151377544 }, "prefect.Flow.deploy": { "tf": 4.69041575982343 }, "prefect.serve": { "tf": 4 }, "prefect.deploy": { "tf": 4 }, "prefect.pause_flow_run": { "tf": 2 } }, "df": 7 } } } } } } }, "pipeline": ["trimmer"], "_isPrebuiltIndex": true };

            // mirrored in build-search-index.js (part 1)
            // Also split on html tags. this is a cheap heuristic, but good enough.
            elasticlunr.tokenizer.setSeperator(//[\s\-.;& _'"=,()]+|<[^>]*>/);

                let searchIndex;
            if (docs._isPrebuiltIndex) {
                console.info("using precompiled search index");
                searchIndex = elasticlunr.Index.load(docs);
            } else {
                console.time("building search index");
                // mirrored in build-search-index.js (part 2)
                searchIndex = elasticlunr(function () {
                    this.pipeline.remove(elasticlunr.stemmer);
                    this.pipeline.remove(elasticlunr.stopWordFilter);
                    this.addField("qualname");
                    this.addField("fullname");
                    this.addField("annotation");
                    this.addField("default_value");
                    this.addField("signature");
                    this.addField("bases");
                    this.addField("doc");
                    this.setRef("fullname");
                });
                for (let doc of docs) {
                    searchIndex.addDoc(doc);
                }
                console.timeEnd("building search index");
            }

            return (term) => searchIndex.search(term, {
                fields: {
                    qualname: { boost: 4 },
                    fullname: { boost: 2 },
                    annotation: { boost: 2 },
                    default_value: { boost: 2 },
                    signature: { boost: 2 },
                    bases: { boost: 2 },
                    doc: { boost: 1 },
                },
                expand: true
            });
        }) ();